
experiment3_cpu2.elf:     file format elf32-littlenios2
experiment3_cpu2.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00008140

Program Header:
    LOAD off    0x00001000 vaddr 0x00008000 paddr 0x00008000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00008020 paddr 0x00008020 align 2**12
         filesz 0x00001148 memsz 0x00001148 flags r-x
    LOAD off    0x00002168 vaddr 0x00009168 paddr 0x00009310 align 2**12
         filesz 0x000001a8 memsz 0x000001a8 flags rw-
    LOAD off    0x000024b8 vaddr 0x000094b8 paddr 0x000094b8 align 2**12
         filesz 0x00000000 memsz 0x00000120 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00008000  00008000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000120  00008020  00008020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00000f3c  00008140  00008140  00001140  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000000ec  0000907c  0000907c  0000207c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       000001a8  00009168  00009310  00002168  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000120  000094b8  000094b8  000024b8  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  00002310  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 000003b8  00000000  00000000  00002338  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 00000831  00000000  00000000  000026f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0000535d  00000000  00000000  00002f21  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00001c5f  00000000  00000000  0000827e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00004980  00000000  00000000  00009edd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00000618  00000000  00000000  0000e860  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000153b  00000000  00000000  0000ee78  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00000f97  00000000  00000000  000103b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  0001134c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000000d8  00000000  00000000  00011360  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00012cf6  2**0
                  CONTENTS, READONLY
 18 .cpu          00000004  00000000  00000000  00012cf9  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00012cfd  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00012cfe  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000004  00000000  00000000  00012cff  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000004  00000000  00000000  00012d03  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000004  00000000  00000000  00012d07  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000b  00000000  00000000  00012d0b  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000077  00000000  00000000  00012d16  2**0
                  CONTENTS, READONLY
 26 .sopcinfo     00087a8f  00000000  00000000  00012d8d  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00008000 l    d  .entry	00000000 .entry
00008020 l    d  .exceptions	00000000 .exceptions
00008140 l    d  .text	00000000 .text
0000907c l    d  .rodata	00000000 .rodata
00009168 l    d  .rwdata	00000000 .rwdata
000094b8 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00008178 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 experiment3_cpu2.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 fvwrite_small_dev.c
00000000 l    df *ABS*	00000000 impure.c
00009168 l     O .rwdata	000000e0 impure_data
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_load.c
000087dc l     F .text	00000020 alt_load_section
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_write.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
00009248 l     O .rwdata	00000010 message_buffer_mutex
00009258 l     O .rwdata	0000002c cpu2_character_lcd_0
00000000 l    df *ABS*	00000000 altera_avalon_mutex.c
00008aa4 l     F .text	00000028 alt_mutex_trylock
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00008bb4 l     F .text	0000003c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_character_lcd.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
00008e44 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 memcmp.c
00008868 g     F .text	0000002c alt_main
00008544 g     F .text	00000090 _puts_r
000094d8 g     O .bss	00000100 alt_irq
00008204 g     F .text	000000e4 calc_output_Y_CPU2
00009310 g       *ABS*	00000000 __flash_rwdata_start
00008c78 g     F .text	00000010 alt_up_character_lcd_send_cmd
00100000 g       *ABS*	00000000 __alt_mem_message_buffer_ram
00008b60 g     F .text	00000004 altera_avalon_mutex_trylock
00000000  w      *UND*	00000000 __errno
00008bf0 g     F .text	00000018 get_DDRAM_addr
00008000 g     F .entry	0000000c __reset
00008a5c g     F .text	00000028 altera_avalon_mutex_is_mine
00008020 g       *ABS*	00000000 __flash_exceptions_start
000094bc g     O .bss	00000004 errno
000094c8 g     O .bss	00000004 alt_argv
000112dc g       *ABS*	00000000 _gp
000092ac g     O .rwdata	00000030 alt_fd_list
00008ebc g     F .text	00000070 alt_find_dev
00008c48 g     F .text	00000020 alt_up_character_lcd_write_fd
000085d4 g     F .text	00000014 puts
00009308 g     O .rwdata	00000004 alt_max_fd
0000873c g     F .text	000000a0 alt_irq_register
00008a4c g     F .text	00000010 altera_avalon_mutex_first_lock
000092e0 g     O .rwdata	00000004 _global_impure_ptr
000095d8 g       *ABS*	00000000 __bss_end
00008fcc g     F .text	0000006c alt_iic_isr_register
000088c8 g     F .text	000000ac alt_tick
0000817c g     F .text	00000088 custom_sprintf
00008f30 g     F .text	00000018 alt_ic_irq_enabled
00008894 g     F .text	00000034 alt_alarm_stop
000094c0 g     O .bss	00000004 alt_irq_active
000080ec g     F .exceptions	00000054 alt_irq_handler
00009284 g     O .rwdata	00000028 alt_dev_null
00008acc g     F .text	00000058 altera_avalon_mutex_open
00008c88 g     F .text	00000008 alt_up_character_lcd_cursor_blink_on
00008e40 g     F .text	00000004 alt_dcache_flush_all
00009310 g       *ABS*	00000000 __ram_rwdata_end
00009300 g     O .rwdata	00000008 alt_dev_list
00008974 g     F .text	00000040 write
000092f0 g     O .rwdata	00000008 alt_mutex_list
00009168 g       *ABS*	00000000 __ram_rodata_end
000095d8 g       *ABS*	00000000 end
00010000 g       *ABS*	00000000 __alt_stack_pointer
00008b64 g     F .text	00000050 alt_avalon_timer_sc_init
00008c24 g     F .text	00000024 alt_up_character_lcd_write
00008140 g     F .text	0000003c _start
000094d0 g     O .bss	00000004 _alt_tick_rate
000094d4 g     O .bss	00000004 _alt_nticks
000089b4 g     F .text	00000074 alt_sys_init
00008cfc g     F .text	00000070 alt_up_character_lcd_shift_display
00008a84 g     F .text	00000020 altera_avalon_mutex_unlock
00008c98 g     F .text	00000064 alt_up_character_lcd_erase_pos
0000850c g     F .text	00000038 __mulsi3
00009168 g       *ABS*	00000000 __ram_rwdata_start
0000907c g       *ABS*	00000000 __ram_rodata_start
00009040 g     F .text	0000003c memcmp
000095d8 g       *ABS*	00000000 __alt_stack_base
00008e4c g     F .text	00000070 alt_dev_llist_insert
00008608 g     F .text	000000bc __sfvwrite_small_dev
000094b8 g       *ABS*	00000000 __bss_start
000082e8 g     F .text	0000017c main
000094cc g     O .bss	00000004 alt_envp
00008d6c g     F .text	00000070 alt_up_character_lcd_shift_cursor
00008b24 g     F .text	0000003c altera_avalon_mutex_lock
0000930c g     O .rwdata	00000004 alt_errno
000094b8 g     O .bss	00000004 PB2_press
00008e34 g     F .text	0000000c alt_up_character_lcd_open_dev
00008464 g     F .text	000000a8 handle_cpu2_button_interrupts
00008c68 g     F .text	00000010 alt_up_character_lcd_init
0000907c g       *ABS*	00000000 __flash_rodata_start
00008a28 g     F .text	00000020 alt_irq_init
00008c90 g     F .text	00000008 alt_up_character_lcd_cursor_off
000086c4 g     F .text	00000078 _write_r
00008000 g       *ABS*	00000000 __alt_mem_cpu2_onchip_ram
000092dc g     O .rwdata	00000004 _impure_ptr
000094c4 g     O .bss	00000004 alt_argc
00008020 g       .exceptions	00000000 alt_irq_entry
000092f8 g     O .rwdata	00000008 alt_fs_list
00008020 g       *ABS*	00000000 __ram_exceptions_start
00008fc8 g     F .text	00000004 alt_ic_isr_register
00009310 g       *ABS*	00000000 _edata
000095d8 g       *ABS*	00000000 _end
00008140 g       *ABS*	00000000 __ram_exceptions_end
00008f88 g     F .text	00000040 alt_ic_irq_disable
00009038 g     F .text	00000008 altera_nios2_qsys_irq_init
0000800c g       .entry	00000000 exit
00010000 g       *ABS*	00000000 __alt_data_end
00008020 g     F .exceptions	00000000 alt_exception
00008c08 g     F .text	0000001c alt_up_character_lcd_string
0000800c g       .entry	00000000 _exit
000085e8 g     F .text	00000020 strlen
00008f2c g     F .text	00000004 alt_icache_flush_all
00008ddc g     F .text	00000058 alt_up_character_lcd_set_cursor_pos
000092e4 g     O .rwdata	00000004 alt_priority_mask
00008f48 g     F .text	00000040 alt_ic_irq_enable
00008a48 g     F .text	00000004 altera_avalon_mutex_close
000092e8 g     O .rwdata	00000008 alt_alarm_list
000087fc g     F .text	0000006c alt_load



Disassembly of section .entry:

00008000 <__reset>:
    8000:	00400034 	movhi	at,0
    8004:	08605014 	ori	at,at,33088
    8008:	0800683a 	jmp	at

0000800c <_exit>:
	...

Disassembly of section .exceptions:

00008020 <alt_exception>:
    8020:	deffed04 	addi	sp,sp,-76
    8024:	dfc00015 	stw	ra,0(sp)
    8028:	d8400215 	stw	at,8(sp)
    802c:	d8800315 	stw	r2,12(sp)
    8030:	d8c00415 	stw	r3,16(sp)
    8034:	d9000515 	stw	r4,20(sp)
    8038:	d9400615 	stw	r5,24(sp)
    803c:	d9800715 	stw	r6,28(sp)
    8040:	d9c00815 	stw	r7,32(sp)
    8044:	000b307a 	rdctl	r5,estatus
    8048:	da000915 	stw	r8,36(sp)
    804c:	da400a15 	stw	r9,40(sp)
    8050:	da800b15 	stw	r10,44(sp)
    8054:	dac00c15 	stw	r11,48(sp)
    8058:	db000d15 	stw	r12,52(sp)
    805c:	db400e15 	stw	r13,56(sp)
    8060:	db800f15 	stw	r14,60(sp)
    8064:	dbc01015 	stw	r15,64(sp)
    8068:	d9401115 	stw	r5,68(sp)
    806c:	ebffff04 	addi	r15,ea,-4
    8070:	dbc01215 	stw	r15,72(sp)
    8074:	0009313a 	rdctl	r4,ipending
    8078:	2880004c 	andi	r2,r5,1
    807c:	10000326 	beq	r2,zero,808c <alt_exception+0x6c>
    8080:	20000226 	beq	r4,zero,808c <alt_exception+0x6c>
    8084:	00080ec0 	call	80ec <alt_irq_handler>
    8088:	00000306 	br	8098 <alt_exception+0x78>
    808c:	df401215 	stw	ea,72(sp)
    8090:	e8bfff17 	ldw	r2,-4(ea)
    8094:	003da03a 	break	0
    8098:	d9401117 	ldw	r5,68(sp)
    809c:	df401217 	ldw	ea,72(sp)
    80a0:	dfc00017 	ldw	ra,0(sp)
    80a4:	2801707a 	wrctl	estatus,r5
    80a8:	d8400217 	ldw	at,8(sp)
    80ac:	d8800317 	ldw	r2,12(sp)
    80b0:	d8c00417 	ldw	r3,16(sp)
    80b4:	d9000517 	ldw	r4,20(sp)
    80b8:	d9400617 	ldw	r5,24(sp)
    80bc:	d9800717 	ldw	r6,28(sp)
    80c0:	d9c00817 	ldw	r7,32(sp)
    80c4:	da000917 	ldw	r8,36(sp)
    80c8:	da400a17 	ldw	r9,40(sp)
    80cc:	da800b17 	ldw	r10,44(sp)
    80d0:	dac00c17 	ldw	r11,48(sp)
    80d4:	db000d17 	ldw	r12,52(sp)
    80d8:	db400e17 	ldw	r13,56(sp)
    80dc:	db800f17 	ldw	r14,60(sp)
    80e0:	dbc01017 	ldw	r15,64(sp)
    80e4:	dec01304 	addi	sp,sp,76
    80e8:	ef80083a 	eret

000080ec <alt_irq_handler>:
    80ec:	deffff04 	addi	sp,sp,-4
    80f0:	dfc00015 	stw	ra,0(sp)
    80f4:	0009313a 	rdctl	r4,ipending
    80f8:	00c00044 	movi	r3,1
    80fc:	01400074 	movhi	r5,1
    8100:	29653604 	addi	r5,r5,-27432
    8104:	20c4703a 	and	r2,r4,r3
    8108:	18c7883a 	add	r3,r3,r3
    810c:	10000726 	beq	r2,zero,812c <alt_irq_handler+0x40>
    8110:	29000117 	ldw	r4,4(r5)
    8114:	28800017 	ldw	r2,0(r5)
    8118:	103ee83a 	callr	r2
    811c:	0005313a 	rdctl	r2,ipending
    8120:	10000426 	beq	r2,zero,8134 <alt_irq_handler+0x48>
    8124:	1009883a 	mov	r4,r2
    8128:	003ff306 	br	80f8 <alt_irq_handler+0xc>
    812c:	29400204 	addi	r5,r5,8
    8130:	003ff406 	br	8104 <alt_irq_handler+0x18>
    8134:	dfc00017 	ldw	ra,0(sp)
    8138:	dec00104 	addi	sp,sp,4
    813c:	f800283a 	ret

Disassembly of section .text:

00008140 <_start>:
    8140:	06c00074 	movhi	sp,1
    8144:	dec00014 	ori	sp,sp,0
    8148:	06800074 	movhi	gp,1
    814c:	d684b714 	ori	gp,gp,4828
    8150:	00800034 	movhi	r2,0
    8154:	10a52e14 	ori	r2,r2,38072
    8158:	00c00034 	movhi	r3,0
    815c:	18e57614 	ori	r3,r3,38360
    8160:	10c00326 	beq	r2,r3,8170 <_start+0x30>
    8164:	10000015 	stw	zero,0(r2)
    8168:	10800104 	addi	r2,r2,4
    816c:	10fffd36 	bltu	r2,r3,8164 <_start+0x24>
    8170:	00087fc0 	call	87fc <alt_load>
    8174:	00088680 	call	8868 <alt_main>

00008178 <alt_after_alt_main>:
    8178:	003fff06 	br	8178 <alt_after_alt_main>

0000817c <custom_sprintf>:
	IOWR(CPU2_PB_BUTTON_I_BASE, 3, 0x0);
}

// custom sprintf function for small code size
// This is because we only have 32KB memory for CPU2
void custom_sprintf(char *buffer, int cpuid, int count) {
    817c:	01c00074 	movhi	r7,1
    8180:	39e41f04 	addi	r7,r7,-28548
    8184:	2007883a 	mov	r3,r4
    8188:	3a000444 	addi	r8,r7,17
	int pos, i;

	for (i = 0; i < 17; i++)
		buffer[i] = "Message from CPU "[i];
    818c:	38800003 	ldbu	r2,0(r7)
    8190:	39c00044 	addi	r7,r7,1
    8194:	18800005 	stb	r2,0(r3)
    8198:	18c00044 	addi	r3,r3,1
// custom sprintf function for small code size
// This is because we only have 32KB memory for CPU2
void custom_sprintf(char *buffer, int cpuid, int count) {
	int pos, i;

	for (i = 0; i < 17; i++)
    819c:	3a3ffb1e 	bne	r7,r8,818c <custom_sprintf+0x10>
		buffer[i] = "Message from CPU "[i];
	pos = i;
	buffer[pos++] = "0123"[cpuid];
    81a0:	00800074 	movhi	r2,1
    81a4:	10a42804 	addi	r2,r2,-28512
    81a8:	2885883a 	add	r2,r5,r2
    81ac:	10800003 	ldbu	r2,0(r2)
    81b0:	01c00074 	movhi	r7,1
    81b4:	39e42404 	addi	r7,r7,-28528
    81b8:	2007883a 	mov	r3,r4
    81bc:	39400404 	addi	r5,r7,16
    81c0:	20800445 	stb	r2,17(r4)
    81c4:	00000206 	br	81d0 <custom_sprintf+0x54>
	for (i = pos; i < pos + 15; i++)
		buffer[i] = ". Number sent: "[i - pos];
    81c8:	38bfffc3 	ldbu	r2,-1(r7)
    81cc:	18800445 	stb	r2,17(r3)
    81d0:	39c00044 	addi	r7,r7,1
    81d4:	18c00044 	addi	r3,r3,1

	for (i = 0; i < 17; i++)
		buffer[i] = "Message from CPU "[i];
	pos = i;
	buffer[pos++] = "0123"[cpuid];
	for (i = pos; i < pos + 15; i++)
    81d8:	397ffb1e 	bne	r7,r5,81c8 <custom_sprintf+0x4c>
		buffer[i] = ". Number sent: "[i - pos];
	pos = i;
	buffer[pos++] = "0123456789ABCDEF"[count & 0xF];
    81dc:	00c00074 	movhi	r3,1
    81e0:	18e42a04 	addi	r3,r3,-28504
    81e4:	308003cc 	andi	r2,r6,15
    81e8:	10c5883a 	add	r2,r2,r3
    81ec:	10c00003 	ldbu	r3,0(r2)
	buffer[pos++] = '\n';
    81f0:	00800284 	movi	r2,10
    81f4:	20800885 	stb	r2,34(r4)
	pos = i;
	buffer[pos++] = "0123"[cpuid];
	for (i = pos; i < pos + 15; i++)
		buffer[i] = ". Number sent: "[i - pos];
	pos = i;
	buffer[pos++] = "0123456789ABCDEF"[count & 0xF];
    81f8:	20c00845 	stb	r3,33(r4)
	buffer[pos++] = '\n';
	buffer[pos] = '\0';
    81fc:	200008c5 	stb	zero,35(r4)
}
    8200:	f800283a 	ret

00008204 <calc_output_Y_CPU2>:
//	vector_Y_i++;
//}

void calc_output_Y_CPU2(short int values[5][70], short int columns[5][70],
		short int row_nz_count[5], short int input_vector_X[1000],
		alt_32 result_Y[5]) {
    8204:	defff604 	addi	sp,sp,-40
    8208:	dc000015 	stw	r16,0(sp)
    820c:	dc000a17 	ldw	r16,40(sp)
    8210:	df000815 	stw	fp,32(sp)
    8214:	ddc00715 	stw	r23,28(sp)
    8218:	dd800615 	stw	r22,24(sp)
    821c:	dcc00315 	stw	r19,12(sp)
    8220:	dc400115 	stw	r17,4(sp)
    8224:	dfc00915 	stw	ra,36(sp)
    8228:	dd400515 	stw	r21,20(sp)
    822c:	dd000415 	stw	r20,16(sp)
    8230:	dc800215 	stw	r18,8(sp)
    8234:	2039883a 	mov	fp,r4
    8238:	282f883a 	mov	r23,r5
    823c:	382d883a 	mov	r22,r7
    8240:	3023883a 	mov	r17,r6
    8244:	0027883a 	mov	r19,zero

	short int column;
	short int value;

	for (i = 0; i < 5; i++) {
		this_row_NZ_count = row_nz_count[i];
    8248:	8d40000b 	ldhu	r21,0(r17)
    824c:	0029883a 	mov	r20,zero
    8250:	0025883a 	mov	r18,zero
    8254:	00000a06 	br	8280 <calc_output_Y_CPU2+0x7c>
		val_i = 0;
		for (j = 0; j < this_row_NZ_count; j++) {

			column = columns[i][col_i++];
			value = values[i][val_i++];
			result_Y[i] += value * input_vector_X[column];
    8258:	2080000f 	ldh	r2,0(r4)
    825c:	1900000f 	ldh	r4,0(r3)

	for (i = 0; i < 5; i++) {
		this_row_NZ_count = row_nz_count[i];
		col_i = 0;
		val_i = 0;
		for (j = 0; j < this_row_NZ_count; j++) {
    8260:	a5000044 	addi	r20,r20,1

			column = columns[i][col_i++];
			value = values[i][val_i++];
			result_Y[i] += value * input_vector_X[column];
    8264:	1085883a 	add	r2,r2,r2
    8268:	1585883a 	add	r2,r2,r22
    826c:	1140000f 	ldh	r5,0(r2)
    8270:	000850c0 	call	850c <__mulsi3>
    8274:	80c00017 	ldw	r3,0(r16)
    8278:	1887883a 	add	r3,r3,r2
    827c:	80c00015 	stw	r3,0(r16)
    8280:	bcc5883a 	add	r2,r23,r19
    8284:	1489883a 	add	r4,r2,r18
    8288:	e4c5883a 	add	r2,fp,r19
    828c:	1487883a 	add	r3,r2,r18

	for (i = 0; i < 5; i++) {
		this_row_NZ_count = row_nz_count[i];
		col_i = 0;
		val_i = 0;
		for (j = 0; j < this_row_NZ_count; j++) {
    8290:	a8bfffcc 	andi	r2,r21,65535
    8294:	10a0001c 	xori	r2,r2,32768
    8298:	10a00004 	addi	r2,r2,-32768
    829c:	94800084 	addi	r18,r18,2
    82a0:	a0bfed16 	blt	r20,r2,8258 <calc_output_Y_CPU2+0x54>
    82a4:	9cc02304 	addi	r19,r19,140
	int val_i = 0;

	short int column;
	short int value;

	for (i = 0; i < 5; i++) {
    82a8:	0080af04 	movi	r2,700
		this_row_NZ_count = row_nz_count[i];
		col_i = 0;
		val_i = 0;
		for (j = 0; j < this_row_NZ_count; j++) {
    82ac:	8c400084 	addi	r17,r17,2
    82b0:	84000104 	addi	r16,r16,4
	int val_i = 0;

	short int column;
	short int value;

	for (i = 0; i < 5; i++) {
    82b4:	98bfe41e 	bne	r19,r2,8248 <calc_output_Y_CPU2+0x44>
			result_Y[i] += value * input_vector_X[column];
		}

	}

}
    82b8:	dfc00917 	ldw	ra,36(sp)
    82bc:	df000817 	ldw	fp,32(sp)
    82c0:	ddc00717 	ldw	r23,28(sp)
    82c4:	dd800617 	ldw	r22,24(sp)
    82c8:	dd400517 	ldw	r21,20(sp)
    82cc:	dd000417 	ldw	r20,16(sp)
    82d0:	dcc00317 	ldw	r19,12(sp)
    82d4:	dc800217 	ldw	r18,8(sp)
    82d8:	dc400117 	ldw	r17,4(sp)
    82dc:	dc000017 	ldw	r16,0(sp)
    82e0:	dec00a04 	addi	sp,sp,40
    82e4:	f800283a 	ret

000082e8 <main>:

// The main function
int main() {
    82e8:	defff704 	addi	sp,sp,-36
	//int col_i = 0;
	//int val_i = 0;

	message_buffer_struct *message;
	PB2_press=0;
	IOWR(CPU2_PB_BUTTON_I_BASE, 2, 0x3);
    82ec:	00c000c4 	movi	r3,3
    82f0:	00800074 	movhi	r2,1
    82f4:	10842204 	addi	r2,r2,4232
	}

}

// The main function
int main() {
    82f8:	dfc00815 	stw	ra,32(sp)
    82fc:	ddc00715 	stw	r23,28(sp)
    8300:	dd800615 	stw	r22,24(sp)
    8304:	dd400515 	stw	r21,20(sp)
    8308:	dd000415 	stw	r20,16(sp)
    830c:	dcc00315 	stw	r19,12(sp)
    8310:	dc800215 	stw	r18,8(sp)
    8314:	dc400115 	stw	r17,4(sp)
    8318:	dc000015 	stw	r16,0(sp)
	int switches;
	//int col_i = 0;
	//int val_i = 0;

	message_buffer_struct *message;
	PB2_press=0;
    831c:	d0207715 	stw	zero,-32292(gp)
	IOWR(CPU2_PB_BUTTON_I_BASE, 2, 0x3);
    8320:	10c00035 	stwio	r3,0(r2)
	IOWR(CPU2_PB_BUTTON_I_BASE, 3, 0x0);
    8324:	10800104 	addi	r2,r2,4
    8328:	10000035 	stwio	zero,0(r2)
	alt_irq_register(CPU2_PB_BUTTON_I_IRQ, (void *) NULL,
    832c:	01800074 	movhi	r6,1
    8330:	31a11904 	addi	r6,r6,-31644
    8334:	000b883a 	mov	r5,zero
    8338:	01000044 	movi	r4,1
    833c:	000873c0 	call	873c <alt_irq_register>
			(void*) handle_cpu2_button_interrupts);

	lcd_0 = alt_up_character_lcd_open_dev(CPU2_CHARACTER_LCD_0_NAME);
    8340:	01000074 	movhi	r4,1
    8344:	21242f04 	addi	r4,r4,-28484
    8348:	0008e340 	call	8e34 <alt_up_character_lcd_open_dev>

	alt_up_character_lcd_init(lcd_0);
    834c:	1009883a 	mov	r4,r2
	IOWR(CPU2_PB_BUTTON_I_BASE, 2, 0x3);
	IOWR(CPU2_PB_BUTTON_I_BASE, 3, 0x0);
	alt_irq_register(CPU2_PB_BUTTON_I_IRQ, (void *) NULL,
			(void*) handle_cpu2_button_interrupts);

	lcd_0 = alt_up_character_lcd_open_dev(CPU2_CHARACTER_LCD_0_NAME);
    8350:	1021883a 	mov	r16,r2

	alt_up_character_lcd_init(lcd_0);
    8354:	0008c680 	call	8c68 <alt_up_character_lcd_init>

	alt_up_character_lcd_string(lcd_0, "COE4DS4 Winter18");
    8358:	01400074 	movhi	r5,1
    835c:	29643604 	addi	r5,r5,-28456
    8360:	8009883a 	mov	r4,r16
    8364:	0008c080 	call	8c08 <alt_up_character_lcd_string>

	alt_up_character_lcd_set_cursor_pos(lcd_0, 0, 1);
    8368:	01800044 	movi	r6,1
    836c:	8009883a 	mov	r4,r16
    8370:	000b883a 	mov	r5,zero
    8374:	0008ddc0 	call	8ddc <alt_up_character_lcd_set_cursor_pos>

	alt_up_character_lcd_string(lcd_0, "Lab7     exp.  3");
    8378:	8009883a 	mov	r4,r16
    837c:	01400074 	movhi	r5,1
    8380:	29643b04 	addi	r5,r5,-28436
    8384:	0008c080 	call	8c08 <alt_up_character_lcd_string>

	// Reading switches 7-0 for CPU2
	switches = IORD(CPU2_SWITCH_I_BASE, 0);
    8388:	00800074 	movhi	r2,1
    838c:	10841c04 	addi	r2,r2,4208
    8390:	10800037 	ldwio	r2,0(r2)

	// Get our processor ID (add 1 so it matches the cpu name in SOPC Builder)
	NIOS2_READ_CPUID(id);
    8394:	0005317a 	rdctl	r2,cpuid
	message = (message_buffer_struct*) MESSAGE_BUFFER_BASE;

	// Okay, now we'll open the real mutex
	// It's not actually a mutex to share the jtag_uart, but to share a message
	// buffer which CPU1 is responsible for reading and printing to the jtag_uart.
	mutex = altera_avalon_mutex_open(MESSAGE_BUFFER_MUTEX_NAME);
    8398:	01000074 	movhi	r4,1
    839c:	21244004 	addi	r4,r4,-28416
    83a0:	0008acc0 	call	8acc <altera_avalon_mutex_open>
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    83a4:	00800074 	movhi	r2,1
    83a8:	10a53504 	addi	r2,r2,-27436
    83ac:	10800017 	ldw	r2,0(r2)

	while (1) {
		//if (mutex)


		if (PB2_press > 0) {
    83b0:	d0a07717 	ldw	r2,-32292(gp)
    83b4:	0080020e 	bge	zero,r2,83c0 <main+0xd8>
			message->PB2_flag = CPU2_READY;
    83b8:	00c00044 	movi	r3,1
    83bc:	00000106 	br	83c4 <main+0xdc>
		}else{
			message->PB2_flag = CPU2_NOT_READY;
    83c0:	00c00084 	movi	r3,2
    83c4:	00800434 	movhi	r2,16
		}

		//altera_avalon_mutex_unlock(mutex);

		if (message->state_flag == CALCULATE_THIS) {
    83c8:	01000434 	movhi	r4,16


		if (PB2_press > 0) {
			message->PB2_flag = CPU2_READY;
		}else{
			message->PB2_flag = CPU2_NOT_READY;
    83cc:	10c0008d 	sth	r3,2(r2)
		}

		//altera_avalon_mutex_unlock(mutex);

		if (message->state_flag == CALCULATE_THIS) {
    83d0:	20c0000f 	ldh	r3,0(r4)
    83d4:	008000c4 	movi	r2,3
    83d8:	18bff51e 	bne	r3,r2,83b0 <main+0xc8>
    83dc:	2029883a 	mov	r20,r4
    83e0:	002d883a 	mov	r22,zero
    83e4:	0027883a 	mov	r19,zero
    83e8:	05400434 	movhi	r21,16
    83ec:	ad415f84 	addi	r21,r21,1406
			//calc_output_Y_CPU2(short int values[5][70],short int columns[5][70],short int row_nz_count[5],short int input_vector_X[1000],alt_32 result_Y[5]) {
			//calc_output_Y_CPU2(message->values,message->columns,message->row_nz_count,message->input_vector_X,message->five_values_result_Y);


			for (i = 0; i < 5; i++) {
				this_row_NZ_count = message->row_nz_count[i];
    83f0:	adc0000f 	ldh	r23,0(r21)
    83f4:	9cc7883a 	add	r3,r19,r19
    83f8:	00800434 	movhi	r2,16
    83fc:	18a3883a 	add	r17,r3,r2
    8400:	0025883a 	mov	r18,zero
    8404:	00000c06 	br	8438 <main+0x150>
				for (j = 0; j < this_row_NZ_count; j++) {

					column = message->columns[i][j];
					value = message->values[i][j];
					//if (mutex)
					message->five_values_result_Y[i] += value*(message->input_vector_X[column]);
    8408:	8880b00f 	ldh	r2,704(r17)
    840c:	00c00434 	movhi	r3,16
    8410:	8900010f 	ldh	r4,4(r17)
    8414:	1085883a 	add	r2,r2,r2
    8418:	10c5883a 	add	r2,r2,r3
    841c:	1141620f 	ldh	r5,1416(r2)
    8420:	a4035617 	ldw	r16,3416(r20)
    8424:	94800044 	addi	r18,r18,1
    8428:	000850c0 	call	850c <__mulsi3>
    842c:	80a1883a 	add	r16,r16,r2
    8430:	8c400084 	addi	r17,r17,2
    8434:	a4035615 	stw	r16,3416(r20)

			for (i = 0; i < 5; i++) {
				this_row_NZ_count = message->row_nz_count[i];
				//col_i = 0;
				//val_i = 0;
				for (j = 0; j < this_row_NZ_count; j++) {
    8438:	95fff316 	blt	r18,r23,8408 <main+0x120>
    843c:	b5800044 	addi	r22,r22,1

			//calc_output_Y_CPU2(short int values[5][70],short int columns[5][70],short int row_nz_count[5],short int input_vector_X[1000],alt_32 result_Y[5]) {
			//calc_output_Y_CPU2(message->values,message->columns,message->row_nz_count,message->input_vector_X,message->five_values_result_Y);


			for (i = 0; i < 5; i++) {
    8440:	00800144 	movi	r2,5
    8444:	ad400084 	addi	r21,r21,2
    8448:	9cc01184 	addi	r19,r19,70
    844c:	a5000104 	addi	r20,r20,4
    8450:	b0bfe71e 	bne	r22,r2,83f0 <main+0x108>
//
//						Y_result[row_i + i] += vector_X[column] * value;


			}
			message->state_flag = THIS_SUBCALCULATION_DONE;
    8454:	00c00104 	movi	r3,4
    8458:	00800434 	movhi	r2,16
    845c:	10c0000d 	sth	r3,0(r2)
    8460:	003fd306 	br	83b0 <main+0xc8>

00008464 <handle_cpu2_button_interrupts>:




// Global functions
void handle_cpu2_button_interrupts(void *lcd_0) {
    8464:	defffd04 	addi	sp,sp,-12
    8468:	dc400115 	stw	r17,4(sp)
    846c:	dfc00215 	stw	ra,8(sp)
    8470:	dc000015 	stw	r16,0(sp)
    8474:	2023883a 	mov	r17,r4
	// alt_up_character_lcd_set_cursor_pos((alt_up_character_lcd_dev *)lcd_0, 0, 0);
	// alt_up_character_lcd_string((alt_up_character_lcd_dev *)lcd_0, "CPU2 PB pressed!");

	switch (IORD(CPU2_PB_BUTTON_I_BASE, 3)) {
    8478:	00800074 	movhi	r2,1
    847c:	10842304 	addi	r2,r2,4236
    8480:	14000037 	ldwio	r16,0(r2)
    8484:	00800044 	movi	r2,1
	case 1:
		printf("CPU2 PB2 pressed\n");
    8488:	01000074 	movhi	r4,1
    848c:	21244704 	addi	r4,r4,-28388
// Global functions
void handle_cpu2_button_interrupts(void *lcd_0) {
	// alt_up_character_lcd_set_cursor_pos((alt_up_character_lcd_dev *)lcd_0, 0, 0);
	// alt_up_character_lcd_string((alt_up_character_lcd_dev *)lcd_0, "CPU2 PB pressed!");

	switch (IORD(CPU2_PB_BUTTON_I_BASE, 3)) {
    8490:	80800326 	beq	r16,r2,84a0 <handle_cpu2_button_interrupts+0x3c>
    8494:	00800084 	movi	r2,2
    8498:	8080141e 	bne	r16,r2,84ec <handle_cpu2_button_interrupts+0x88>
    849c:	00000c06 	br	84d0 <handle_cpu2_button_interrupts+0x6c>
	case 1:
		printf("CPU2 PB2 pressed\n");
    84a0:	00085d40 	call	85d4 <puts>
		IOWR(CPU2_LED_GREEN_O_BASE, 0, 1);
    84a4:	00800074 	movhi	r2,1
    84a8:	10841804 	addi	r2,r2,4192
    84ac:	14000035 	stwio	r16,0(r2)
		alt_up_character_lcd_string((alt_up_character_lcd_dev *)lcd_0, "CPU12PB0 pressed");
    84b0:	8809883a 	mov	r4,r17
    84b4:	01400074 	movhi	r5,1
    84b8:	29644c04 	addi	r5,r5,-28368
    84bc:	0008c080 	call	8c08 <alt_up_character_lcd_string>
		PB2_press++;
    84c0:	d0a07717 	ldw	r2,-32292(gp)
    84c4:	1405883a 	add	r2,r2,r16
    84c8:	d0a07715 	stw	r2,-32292(gp)
    84cc:	00000706 	br	84ec <handle_cpu2_button_interrupts+0x88>
		break;
	case 2:
		printf("CPU2 PB3 pressed\n");
    84d0:	01000074 	movhi	r4,1
    84d4:	21245104 	addi	r4,r4,-28348
    84d8:	00085d40 	call	85d4 <puts>
		IOWR(CPU2_LED_GREEN_O_BASE, 0, 4);
    84dc:	00c00104 	movi	r3,4
    84e0:	00800074 	movhi	r2,1
    84e4:	10841804 	addi	r2,r2,4192
    84e8:	10c00035 	stwio	r3,0(r2)

		 //case 1:  break;
		// case 2: alt_up_character_lcd_string((alt_up_character_lcd_dev *)lcd_0, "CPU12PB1 pressed"); break;
	}

	IOWR(CPU2_PB_BUTTON_I_BASE, 3, 0x0);
    84ec:	00800074 	movhi	r2,1
    84f0:	10842304 	addi	r2,r2,4236
    84f4:	10000035 	stwio	zero,0(r2)
}
    84f8:	dfc00217 	ldw	ra,8(sp)
    84fc:	dc400117 	ldw	r17,4(sp)
    8500:	dc000017 	ldw	r16,0(sp)
    8504:	dec00304 	addi	sp,sp,12
    8508:	f800283a 	ret

0000850c <__mulsi3>:
    850c:	20000a26 	beq	r4,zero,8538 <__mulsi3+0x2c>
    8510:	0007883a 	mov	r3,zero
    8514:	2080004c 	andi	r2,r4,1
    8518:	1005003a 	cmpeq	r2,r2,zero
    851c:	2008d07a 	srli	r4,r4,1
    8520:	1000011e 	bne	r2,zero,8528 <__mulsi3+0x1c>
    8524:	1947883a 	add	r3,r3,r5
    8528:	294b883a 	add	r5,r5,r5
    852c:	203ff91e 	bne	r4,zero,8514 <__mulsi3+0x8>
    8530:	1805883a 	mov	r2,r3
    8534:	f800283a 	ret
    8538:	0007883a 	mov	r3,zero
    853c:	1805883a 	mov	r2,r3
    8540:	f800283a 	ret

00008544 <_puts_r>:
    8544:	defffd04 	addi	sp,sp,-12
    8548:	dc000015 	stw	r16,0(sp)
    854c:	2021883a 	mov	r16,r4
    8550:	2809883a 	mov	r4,r5
    8554:	dfc00215 	stw	ra,8(sp)
    8558:	dc400115 	stw	r17,4(sp)
    855c:	2823883a 	mov	r17,r5
    8560:	00085e80 	call	85e8 <strlen>
    8564:	80c00217 	ldw	r3,8(r16)
    8568:	02000074 	movhi	r8,1
    856c:	42218204 	addi	r8,r8,-31224
    8570:	880d883a 	mov	r6,r17
    8574:	100f883a 	mov	r7,r2
    8578:	8009883a 	mov	r4,r16
    857c:	180b883a 	mov	r5,r3
    8580:	1a000115 	stw	r8,4(r3)
    8584:	403ee83a 	callr	r8
    8588:	047fffc4 	movi	r17,-1
    858c:	8009883a 	mov	r4,r16
    8590:	01800074 	movhi	r6,1
    8594:	31a45604 	addi	r6,r6,-28328
    8598:	01c00044 	movi	r7,1
    859c:	1440071e 	bne	r2,r17,85bc <_puts_r+0x78>
    85a0:	00ffffc4 	movi	r3,-1
    85a4:	1805883a 	mov	r2,r3
    85a8:	dfc00217 	ldw	ra,8(sp)
    85ac:	dc400117 	ldw	r17,4(sp)
    85b0:	dc000017 	ldw	r16,0(sp)
    85b4:	dec00304 	addi	sp,sp,12
    85b8:	f800283a 	ret
    85bc:	81400217 	ldw	r5,8(r16)
    85c0:	28c00117 	ldw	r3,4(r5)
    85c4:	183ee83a 	callr	r3
    85c8:	0007883a 	mov	r3,zero
    85cc:	147ff51e 	bne	r2,r17,85a4 <_puts_r+0x60>
    85d0:	003ff306 	br	85a0 <_puts_r+0x5c>

000085d4 <puts>:
    85d4:	00800074 	movhi	r2,1
    85d8:	10a4b704 	addi	r2,r2,-27940
    85dc:	200b883a 	mov	r5,r4
    85e0:	11000017 	ldw	r4,0(r2)
    85e4:	00085441 	jmpi	8544 <_puts_r>

000085e8 <strlen>:
    85e8:	20800007 	ldb	r2,0(r4)
    85ec:	10000526 	beq	r2,zero,8604 <strlen+0x1c>
    85f0:	2007883a 	mov	r3,r4
    85f4:	18c00044 	addi	r3,r3,1
    85f8:	18800007 	ldb	r2,0(r3)
    85fc:	103ffd1e 	bne	r2,zero,85f4 <strlen+0xc>
    8600:	1905c83a 	sub	r2,r3,r4
    8604:	f800283a 	ret

00008608 <__sfvwrite_small_dev>:
    8608:	2880000b 	ldhu	r2,0(r5)
    860c:	defffa04 	addi	sp,sp,-24
    8610:	dcc00315 	stw	r19,12(sp)
    8614:	1080020c 	andi	r2,r2,8
    8618:	dc800215 	stw	r18,8(sp)
    861c:	dc400115 	stw	r17,4(sp)
    8620:	dfc00515 	stw	ra,20(sp)
    8624:	dd000415 	stw	r20,16(sp)
    8628:	dc000015 	stw	r16,0(sp)
    862c:	2825883a 	mov	r18,r5
    8630:	2027883a 	mov	r19,r4
    8634:	3023883a 	mov	r17,r6
    8638:	10002026 	beq	r2,zero,86bc <__sfvwrite_small_dev+0xb4>
    863c:	2940008f 	ldh	r5,2(r5)
    8640:	28000f16 	blt	r5,zero,8680 <__sfvwrite_small_dev+0x78>
    8644:	01c01b0e 	bge	zero,r7,86b4 <__sfvwrite_small_dev+0xac>
    8648:	3821883a 	mov	r16,r7
    864c:	05010004 	movi	r20,1024
    8650:	00000206 	br	865c <__sfvwrite_small_dev+0x54>
    8654:	0400170e 	bge	zero,r16,86b4 <__sfvwrite_small_dev+0xac>
    8658:	9140008f 	ldh	r5,2(r18)
    865c:	880d883a 	mov	r6,r17
    8660:	9809883a 	mov	r4,r19
    8664:	800f883a 	mov	r7,r16
    8668:	a400010e 	bge	r20,r16,8670 <__sfvwrite_small_dev+0x68>
    866c:	01c10004 	movi	r7,1024
    8670:	00086c40 	call	86c4 <_write_r>
    8674:	88a3883a 	add	r17,r17,r2
    8678:	80a1c83a 	sub	r16,r16,r2
    867c:	00bff516 	blt	zero,r2,8654 <__sfvwrite_small_dev+0x4c>
    8680:	9080000b 	ldhu	r2,0(r18)
    8684:	00ffffc4 	movi	r3,-1
    8688:	10801014 	ori	r2,r2,64
    868c:	9080000d 	sth	r2,0(r18)
    8690:	1805883a 	mov	r2,r3
    8694:	dfc00517 	ldw	ra,20(sp)
    8698:	dd000417 	ldw	r20,16(sp)
    869c:	dcc00317 	ldw	r19,12(sp)
    86a0:	dc800217 	ldw	r18,8(sp)
    86a4:	dc400117 	ldw	r17,4(sp)
    86a8:	dc000017 	ldw	r16,0(sp)
    86ac:	dec00604 	addi	sp,sp,24
    86b0:	f800283a 	ret
    86b4:	0007883a 	mov	r3,zero
    86b8:	003ff506 	br	8690 <__sfvwrite_small_dev+0x88>
    86bc:	00ffffc4 	movi	r3,-1
    86c0:	003ff306 	br	8690 <__sfvwrite_small_dev+0x88>

000086c4 <_write_r>:
    86c4:	defffd04 	addi	sp,sp,-12
    86c8:	dc000015 	stw	r16,0(sp)
    86cc:	04000074 	movhi	r16,1
    86d0:	84252f04 	addi	r16,r16,-27460
    86d4:	dc400115 	stw	r17,4(sp)
    86d8:	80000015 	stw	zero,0(r16)
    86dc:	2023883a 	mov	r17,r4
    86e0:	2809883a 	mov	r4,r5
    86e4:	300b883a 	mov	r5,r6
    86e8:	380d883a 	mov	r6,r7
    86ec:	dfc00215 	stw	ra,8(sp)
    86f0:	00089740 	call	8974 <write>
    86f4:	1007883a 	mov	r3,r2
    86f8:	00bfffc4 	movi	r2,-1
    86fc:	18800626 	beq	r3,r2,8718 <_write_r+0x54>
    8700:	1805883a 	mov	r2,r3
    8704:	dfc00217 	ldw	ra,8(sp)
    8708:	dc400117 	ldw	r17,4(sp)
    870c:	dc000017 	ldw	r16,0(sp)
    8710:	dec00304 	addi	sp,sp,12
    8714:	f800283a 	ret
    8718:	80800017 	ldw	r2,0(r16)
    871c:	103ff826 	beq	r2,zero,8700 <_write_r+0x3c>
    8720:	88800015 	stw	r2,0(r17)
    8724:	1805883a 	mov	r2,r3
    8728:	dfc00217 	ldw	ra,8(sp)
    872c:	dc400117 	ldw	r17,4(sp)
    8730:	dc000017 	ldw	r16,0(sp)
    8734:	dec00304 	addi	sp,sp,12
    8738:	f800283a 	ret

0000873c <alt_irq_register>:
    873c:	008007c4 	movi	r2,31
    8740:	200f883a 	mov	r7,r4
    8744:	00fffa84 	movi	r3,-22
    8748:	11002236 	bltu	r2,r4,87d4 <alt_irq_register+0x98>
    874c:	0015303a 	rdctl	r10,status
    8750:	027fff84 	movi	r9,-2
    8754:	5244703a 	and	r2,r10,r9
    8758:	1001703a 	wrctl	status,r2
    875c:	200490fa 	slli	r2,r4,3
    8760:	00c00074 	movhi	r3,1
    8764:	18e53604 	addi	r3,r3,-27432
    8768:	02000074 	movhi	r8,1
    876c:	42253004 	addi	r8,r8,-27456
    8770:	10c5883a 	add	r2,r2,r3
    8774:	11400115 	stw	r5,4(r2)
    8778:	11800015 	stw	r6,0(r2)
    877c:	30000826 	beq	r6,zero,87a0 <alt_irq_register+0x64>
    8780:	0009303a 	rdctl	r4,status
    8784:	2244703a 	and	r2,r4,r9
    8788:	1001703a 	wrctl	status,r2
    878c:	00c00044 	movi	r3,1
    8790:	19c6983a 	sll	r3,r3,r7
    8794:	40800017 	ldw	r2,0(r8)
    8798:	10c4b03a 	or	r2,r2,r3
    879c:	00000706 	br	87bc <alt_irq_register+0x80>
    87a0:	0009303a 	rdctl	r4,status
    87a4:	2244703a 	and	r2,r4,r9
    87a8:	1001703a 	wrctl	status,r2
    87ac:	00ffff84 	movi	r3,-2
    87b0:	19c6183a 	rol	r3,r3,r7
    87b4:	40800017 	ldw	r2,0(r8)
    87b8:	10c4703a 	and	r2,r2,r3
    87bc:	40800015 	stw	r2,0(r8)
    87c0:	40800017 	ldw	r2,0(r8)
    87c4:	100170fa 	wrctl	ienable,r2
    87c8:	2001703a 	wrctl	status,r4
    87cc:	5001703a 	wrctl	status,r10
    87d0:	0007883a 	mov	r3,zero
    87d4:	1805883a 	mov	r2,r3
    87d8:	f800283a 	ret

000087dc <alt_load_section>:
    87dc:	2900051e 	bne	r5,r4,87f4 <alt_load_section+0x18>
    87e0:	f800283a 	ret
    87e4:	20800017 	ldw	r2,0(r4)
    87e8:	21000104 	addi	r4,r4,4
    87ec:	28800015 	stw	r2,0(r5)
    87f0:	29400104 	addi	r5,r5,4
    87f4:	29bffb1e 	bne	r5,r6,87e4 <alt_load_section+0x8>
    87f8:	f800283a 	ret

000087fc <alt_load>:
    87fc:	deffff04 	addi	sp,sp,-4
    8800:	01000074 	movhi	r4,1
    8804:	2124c404 	addi	r4,r4,-27888
    8808:	01400074 	movhi	r5,1
    880c:	29645a04 	addi	r5,r5,-28312
    8810:	01800074 	movhi	r6,1
    8814:	31a4c404 	addi	r6,r6,-27888
    8818:	dfc00015 	stw	ra,0(sp)
    881c:	00087dc0 	call	87dc <alt_load_section>
    8820:	01000074 	movhi	r4,1
    8824:	21200804 	addi	r4,r4,-32736
    8828:	01400074 	movhi	r5,1
    882c:	29600804 	addi	r5,r5,-32736
    8830:	01800074 	movhi	r6,1
    8834:	31a05004 	addi	r6,r6,-32448
    8838:	00087dc0 	call	87dc <alt_load_section>
    883c:	01000074 	movhi	r4,1
    8840:	21241f04 	addi	r4,r4,-28548
    8844:	01400074 	movhi	r5,1
    8848:	29641f04 	addi	r5,r5,-28548
    884c:	01800074 	movhi	r6,1
    8850:	31a45a04 	addi	r6,r6,-28312
    8854:	00087dc0 	call	87dc <alt_load_section>
    8858:	0008e400 	call	8e40 <alt_dcache_flush_all>
    885c:	dfc00017 	ldw	ra,0(sp)
    8860:	dec00104 	addi	sp,sp,4
    8864:	0008f2c1 	jmpi	8f2c <alt_icache_flush_all>

00008868 <alt_main>:
    8868:	deffff04 	addi	sp,sp,-4
    886c:	0009883a 	mov	r4,zero
    8870:	dfc00015 	stw	ra,0(sp)
    8874:	0008a280 	call	8a28 <alt_irq_init>
    8878:	00089b40 	call	89b4 <alt_sys_init>
    887c:	d1207a17 	ldw	r4,-32280(gp)
    8880:	d1607b17 	ldw	r5,-32276(gp)
    8884:	d1a07c17 	ldw	r6,-32272(gp)
    8888:	dfc00017 	ldw	ra,0(sp)
    888c:	dec00104 	addi	sp,sp,4
    8890:	00082e81 	jmpi	82e8 <main>

00008894 <alt_alarm_stop>:
    8894:	000b303a 	rdctl	r5,status
    8898:	00bfff84 	movi	r2,-2
    889c:	2884703a 	and	r2,r5,r2
    88a0:	1001703a 	wrctl	status,r2
    88a4:	20c00017 	ldw	r3,0(r4)
    88a8:	20800117 	ldw	r2,4(r4)
    88ac:	18800115 	stw	r2,4(r3)
    88b0:	20800117 	ldw	r2,4(r4)
    88b4:	21000115 	stw	r4,4(r4)
    88b8:	10c00015 	stw	r3,0(r2)
    88bc:	21000015 	stw	r4,0(r4)
    88c0:	2801703a 	wrctl	status,r5
    88c4:	f800283a 	ret

000088c8 <alt_tick>:
    88c8:	defffd04 	addi	sp,sp,-12
    88cc:	d0a07e17 	ldw	r2,-32264(gp)
    88d0:	dc000015 	stw	r16,0(sp)
    88d4:	d4200317 	ldw	r16,-32756(gp)
    88d8:	10800044 	addi	r2,r2,1
    88dc:	dfc00215 	stw	ra,8(sp)
    88e0:	dc400115 	stw	r17,4(sp)
    88e4:	d0a07e15 	stw	r2,-32264(gp)
    88e8:	00001b06 	br	8958 <alt_tick+0x90>
    88ec:	80800403 	ldbu	r2,16(r16)
    88f0:	84400017 	ldw	r17,0(r16)
    88f4:	10000326 	beq	r2,zero,8904 <alt_tick+0x3c>
    88f8:	d0a07e17 	ldw	r2,-32264(gp)
    88fc:	1000011e 	bne	r2,zero,8904 <alt_tick+0x3c>
    8900:	80000405 	stb	zero,16(r16)
    8904:	d0e07e17 	ldw	r3,-32264(gp)
    8908:	80800217 	ldw	r2,8(r16)
    890c:	18801136 	bltu	r3,r2,8954 <alt_tick+0x8c>
    8910:	80800403 	ldbu	r2,16(r16)
    8914:	10000f1e 	bne	r2,zero,8954 <alt_tick+0x8c>
    8918:	81000517 	ldw	r4,20(r16)
    891c:	80800317 	ldw	r2,12(r16)
    8920:	103ee83a 	callr	r2
    8924:	1009883a 	mov	r4,r2
    8928:	1000031e 	bne	r2,zero,8938 <alt_tick+0x70>
    892c:	8009883a 	mov	r4,r16
    8930:	00088940 	call	8894 <alt_alarm_stop>
    8934:	00000706 	br	8954 <alt_tick+0x8c>
    8938:	80800217 	ldw	r2,8(r16)
    893c:	d0e07e17 	ldw	r3,-32264(gp)
    8940:	1105883a 	add	r2,r2,r4
    8944:	80800215 	stw	r2,8(r16)
    8948:	10c0022e 	bgeu	r2,r3,8954 <alt_tick+0x8c>
    894c:	00800044 	movi	r2,1
    8950:	80800405 	stb	r2,16(r16)
    8954:	8821883a 	mov	r16,r17
    8958:	d0a00304 	addi	r2,gp,-32756
    895c:	80bfe31e 	bne	r16,r2,88ec <alt_tick+0x24>
    8960:	dfc00217 	ldw	ra,8(sp)
    8964:	dc400117 	ldw	r17,4(sp)
    8968:	dc000017 	ldw	r16,0(sp)
    896c:	dec00304 	addi	sp,sp,12
    8970:	f800283a 	ret

00008974 <write>:
    8974:	deffff04 	addi	sp,sp,-4
    8978:	dfc00015 	stw	ra,0(sp)
    897c:	00800074 	movhi	r2,1
    8980:	10a4c304 	addi	r2,r2,-27892
    8984:	10800017 	ldw	r2,0(r2)
    8988:	00c00074 	movhi	r3,1
    898c:	18e52f04 	addi	r3,r3,-27460
    8990:	10000226 	beq	r2,zero,899c <write+0x28>
    8994:	103ee83a 	callr	r2
    8998:	1007883a 	mov	r3,r2
    899c:	00801444 	movi	r2,81
    89a0:	18800015 	stw	r2,0(r3)
    89a4:	00bfffc4 	movi	r2,-1
    89a8:	dfc00017 	ldw	ra,0(sp)
    89ac:	dec00104 	addi	sp,sp,4
    89b0:	f800283a 	ret

000089b4 <alt_sys_init>:
    89b4:	defffe04 	addi	sp,sp,-8
    89b8:	000d883a 	mov	r6,zero
    89bc:	01c01904 	movi	r7,100
    89c0:	01000074 	movhi	r4,1
    89c4:	21041004 	addi	r4,r4,4160
    89c8:	000b883a 	mov	r5,zero
    89cc:	dfc00115 	stw	ra,4(sp)
    89d0:	dc000015 	stw	r16,0(sp)
    89d4:	0008b640 	call	8b64 <alt_avalon_timer_sc_init>
    89d8:	01000074 	movhi	r4,1
    89dc:	21249204 	addi	r4,r4,-28088
    89e0:	01400074 	movhi	r5,1
    89e4:	2964bc04 	addi	r5,r5,-27920
    89e8:	0008e4c0 	call	8e4c <alt_dev_llist_insert>
    89ec:	00800044 	movi	r2,1
    89f0:	00c00074 	movhi	r3,1
    89f4:	18c40004 	addi	r3,r3,4096
    89f8:	18800035 	stwio	r2,0(r3)
    89fc:	04000074 	movhi	r16,1
    8a00:	84249604 	addi	r16,r16,-28072
    8a04:	8009883a 	mov	r4,r16
    8a08:	0008c680 	call	8c68 <alt_up_character_lcd_init>
    8a0c:	01400074 	movhi	r5,1
    8a10:	2964c004 	addi	r5,r5,-27904
    8a14:	8009883a 	mov	r4,r16
    8a18:	dfc00117 	ldw	ra,4(sp)
    8a1c:	dc000017 	ldw	r16,0(sp)
    8a20:	dec00204 	addi	sp,sp,8
    8a24:	0008e4c1 	jmpi	8e4c <alt_dev_llist_insert>

00008a28 <alt_irq_init>:
    8a28:	deffff04 	addi	sp,sp,-4
    8a2c:	dfc00015 	stw	ra,0(sp)
    8a30:	00090380 	call	9038 <altera_nios2_qsys_irq_init>
    8a34:	00800044 	movi	r2,1
    8a38:	1001703a 	wrctl	status,r2
    8a3c:	dfc00017 	ldw	ra,0(sp)
    8a40:	dec00104 	addi	sp,sp,4
    8a44:	f800283a 	ret

00008a48 <altera_avalon_mutex_close>:
    8a48:	f800283a 	ret

00008a4c <altera_avalon_mutex_first_lock>:
    8a4c:	20800317 	ldw	r2,12(r4)
    8a50:	10800137 	ldwio	r2,4(r2)
    8a54:	1080004c 	andi	r2,r2,1
    8a58:	f800283a 	ret

00008a5c <altera_avalon_mutex_is_mine>:
    8a5c:	000b317a 	rdctl	r5,cpuid
    8a60:	20800317 	ldw	r2,12(r4)
    8a64:	10800037 	ldwio	r2,0(r2)
    8a68:	0009883a 	mov	r4,zero
    8a6c:	1006d43a 	srli	r3,r2,16
    8a70:	10bfffcc 	andi	r2,r2,65535
    8a74:	1940011e 	bne	r3,r5,8a7c <altera_avalon_mutex_is_mine+0x20>
    8a78:	1008c03a 	cmpne	r4,r2,zero
    8a7c:	2005883a 	mov	r2,r4
    8a80:	f800283a 	ret

00008a84 <altera_avalon_mutex_unlock>:
    8a84:	0007317a 	rdctl	r3,cpuid
    8a88:	21400317 	ldw	r5,12(r4)
    8a8c:	00800044 	movi	r2,1
    8a90:	28800135 	stwio	r2,4(r5)
    8a94:	20800317 	ldw	r2,12(r4)
    8a98:	1806943a 	slli	r3,r3,16
    8a9c:	10c00035 	stwio	r3,0(r2)
    8aa0:	f800283a 	ret

00008aa4 <alt_mutex_trylock>:
    8aa4:	0007317a 	rdctl	r3,cpuid
    8aa8:	1806943a 	slli	r3,r3,16
    8aac:	20800317 	ldw	r2,12(r4)
    8ab0:	1946b03a 	or	r3,r3,r5
    8ab4:	10c00035 	stwio	r3,0(r2)
    8ab8:	20800317 	ldw	r2,12(r4)
    8abc:	10800037 	ldwio	r2,0(r2)
    8ac0:	10c4c03a 	cmpne	r2,r2,r3
    8ac4:	0085c83a 	sub	r2,zero,r2
    8ac8:	f800283a 	ret

00008acc <altera_avalon_mutex_open>:
    8acc:	defffe04 	addi	sp,sp,-8
    8ad0:	d1600504 	addi	r5,gp,-32748
    8ad4:	dc000015 	stw	r16,0(sp)
    8ad8:	dfc00115 	stw	ra,4(sp)
    8adc:	0008ebc0 	call	8ebc <alt_find_dev>
    8ae0:	1021883a 	mov	r16,r2
    8ae4:	10000a1e 	bne	r2,zero,8b10 <altera_avalon_mutex_open+0x44>
    8ae8:	00800074 	movhi	r2,1
    8aec:	10a4c304 	addi	r2,r2,-27892
    8af0:	10800017 	ldw	r2,0(r2)
    8af4:	00c00074 	movhi	r3,1
    8af8:	18e52f04 	addi	r3,r3,-27460
    8afc:	10000226 	beq	r2,zero,8b08 <altera_avalon_mutex_open+0x3c>
    8b00:	103ee83a 	callr	r2
    8b04:	1007883a 	mov	r3,r2
    8b08:	008004c4 	movi	r2,19
    8b0c:	18800015 	stw	r2,0(r3)
    8b10:	8005883a 	mov	r2,r16
    8b14:	dfc00117 	ldw	ra,4(sp)
    8b18:	dc000017 	ldw	r16,0(sp)
    8b1c:	dec00204 	addi	sp,sp,8
    8b20:	f800283a 	ret

00008b24 <altera_avalon_mutex_lock>:
    8b24:	defffd04 	addi	sp,sp,-12
    8b28:	dc400115 	stw	r17,4(sp)
    8b2c:	dc000015 	stw	r16,0(sp)
    8b30:	dfc00215 	stw	ra,8(sp)
    8b34:	2023883a 	mov	r17,r4
    8b38:	2821883a 	mov	r16,r5
    8b3c:	8809883a 	mov	r4,r17
    8b40:	800b883a 	mov	r5,r16
    8b44:	0008aa40 	call	8aa4 <alt_mutex_trylock>
    8b48:	103ffc1e 	bne	r2,zero,8b3c <altera_avalon_mutex_lock+0x18>
    8b4c:	dfc00217 	ldw	ra,8(sp)
    8b50:	dc400117 	ldw	r17,4(sp)
    8b54:	dc000017 	ldw	r16,0(sp)
    8b58:	dec00304 	addi	sp,sp,12
    8b5c:	f800283a 	ret

00008b60 <altera_avalon_mutex_trylock>:
    8b60:	0008aa41 	jmpi	8aa4 <alt_mutex_trylock>

00008b64 <alt_avalon_timer_sc_init>:
    8b64:	02000074 	movhi	r8,1
    8b68:	42253404 	addi	r8,r8,-27440
    8b6c:	40800017 	ldw	r2,0(r8)
    8b70:	defffe04 	addi	sp,sp,-8
    8b74:	3807883a 	mov	r3,r7
    8b78:	dfc00115 	stw	ra,4(sp)
    8b7c:	200f883a 	mov	r7,r4
    8b80:	1000011e 	bne	r2,zero,8b88 <alt_avalon_timer_sc_init+0x24>
    8b84:	40c00015 	stw	r3,0(r8)
    8b88:	008001c4 	movi	r2,7
    8b8c:	38800135 	stwio	r2,4(r7)
    8b90:	2809883a 	mov	r4,r5
    8b94:	300b883a 	mov	r5,r6
    8b98:	01800074 	movhi	r6,1
    8b9c:	31a2ed04 	addi	r6,r6,-29772
    8ba0:	d8000015 	stw	zero,0(sp)
    8ba4:	0008fc80 	call	8fc8 <alt_ic_isr_register>
    8ba8:	dfc00117 	ldw	ra,4(sp)
    8bac:	dec00204 	addi	sp,sp,8
    8bb0:	f800283a 	ret

00008bb4 <alt_avalon_timer_sc_irq>:
    8bb4:	defffe04 	addi	sp,sp,-8
    8bb8:	dfc00115 	stw	ra,4(sp)
    8bbc:	dc000015 	stw	r16,0(sp)
    8bc0:	20000035 	stwio	zero,0(r4)
    8bc4:	20800137 	ldwio	r2,4(r4)
    8bc8:	0021303a 	rdctl	r16,status
    8bcc:	00bfff84 	movi	r2,-2
    8bd0:	8084703a 	and	r2,r16,r2
    8bd4:	1001703a 	wrctl	status,r2
    8bd8:	00088c80 	call	88c8 <alt_tick>
    8bdc:	8001703a 	wrctl	status,r16
    8be0:	dfc00117 	ldw	ra,4(sp)
    8be4:	dc000017 	ldw	r16,0(sp)
    8be8:	dec00204 	addi	sp,sp,8
    8bec:	f800283a 	ret

00008bf0 <get_DDRAM_addr>:
    8bf0:	2005883a 	mov	r2,r4
    8bf4:	28000126 	beq	r5,zero,8bfc <get_DDRAM_addr+0xc>
    8bf8:	20801014 	ori	r2,r4,64
    8bfc:	10803fcc 	andi	r2,r2,255
    8c00:	10802014 	ori	r2,r2,128
    8c04:	f800283a 	ret

00008c08 <alt_up_character_lcd_string>:
    8c08:	00000306 	br	8c18 <alt_up_character_lcd_string+0x10>
    8c0c:	20800a17 	ldw	r2,40(r4)
    8c10:	10c00065 	stbio	r3,1(r2)
    8c14:	29400044 	addi	r5,r5,1
    8c18:	28c00007 	ldb	r3,0(r5)
    8c1c:	183ffb1e 	bne	r3,zero,8c0c <alt_up_character_lcd_string+0x4>
    8c20:	f800283a 	ret

00008c24 <alt_up_character_lcd_write>:
    8c24:	000f883a 	mov	r7,zero
    8c28:	00000406 	br	8c3c <alt_up_character_lcd_write+0x18>
    8c2c:	10c00007 	ldb	r3,0(r2)
    8c30:	20800a17 	ldw	r2,40(r4)
    8c34:	10c00065 	stbio	r3,1(r2)
    8c38:	39c00044 	addi	r7,r7,1
    8c3c:	29c5883a 	add	r2,r5,r7
    8c40:	39bffa1e 	bne	r7,r6,8c2c <alt_up_character_lcd_write+0x8>
    8c44:	f800283a 	ret

00008c48 <alt_up_character_lcd_write_fd>:
    8c48:	21000017 	ldw	r4,0(r4)
    8c4c:	deffff04 	addi	sp,sp,-4
    8c50:	dfc00015 	stw	ra,0(sp)
    8c54:	0008c240 	call	8c24 <alt_up_character_lcd_write>
    8c58:	0005883a 	mov	r2,zero
    8c5c:	dfc00017 	ldw	ra,0(sp)
    8c60:	dec00104 	addi	sp,sp,4
    8c64:	f800283a 	ret

00008c68 <alt_up_character_lcd_init>:
    8c68:	20c00a17 	ldw	r3,40(r4)
    8c6c:	00800044 	movi	r2,1
    8c70:	18800025 	stbio	r2,0(r3)
    8c74:	f800283a 	ret

00008c78 <alt_up_character_lcd_send_cmd>:
    8c78:	20800a17 	ldw	r2,40(r4)
    8c7c:	29403fcc 	andi	r5,r5,255
    8c80:	11400025 	stbio	r5,0(r2)
    8c84:	f800283a 	ret

00008c88 <alt_up_character_lcd_cursor_blink_on>:
    8c88:	014003c4 	movi	r5,15
    8c8c:	0008c781 	jmpi	8c78 <alt_up_character_lcd_send_cmd>

00008c90 <alt_up_character_lcd_cursor_off>:
    8c90:	01400304 	movi	r5,12
    8c94:	0008c781 	jmpi	8c78 <alt_up_character_lcd_send_cmd>

00008c98 <alt_up_character_lcd_erase_pos>:
    8c98:	defffe04 	addi	sp,sp,-8
    8c9c:	008009c4 	movi	r2,39
    8ca0:	dc000015 	stw	r16,0(sp)
    8ca4:	dfc00115 	stw	ra,4(sp)
    8ca8:	2807883a 	mov	r3,r5
    8cac:	2021883a 	mov	r16,r4
    8cb0:	11400d36 	bltu	r2,r5,8ce8 <alt_up_character_lcd_erase_pos+0x50>
    8cb4:	00800044 	movi	r2,1
    8cb8:	300b883a 	mov	r5,r6
    8cbc:	1809883a 	mov	r4,r3
    8cc0:	11800936 	bltu	r2,r6,8ce8 <alt_up_character_lcd_erase_pos+0x50>
    8cc4:	0008bf00 	call	8bf0 <get_DDRAM_addr>
    8cc8:	11403fcc 	andi	r5,r2,255
    8ccc:	8009883a 	mov	r4,r16
    8cd0:	0008c780 	call	8c78 <alt_up_character_lcd_send_cmd>
    8cd4:	80c00a17 	ldw	r3,40(r16)
    8cd8:	00800084 	movi	r2,2
    8cdc:	18800065 	stbio	r2,1(r3)
    8ce0:	0005883a 	mov	r2,zero
    8ce4:	00000106 	br	8cec <alt_up_character_lcd_erase_pos+0x54>
    8ce8:	00bfffc4 	movi	r2,-1
    8cec:	dfc00117 	ldw	ra,4(sp)
    8cf0:	dc000017 	ldw	r16,0(sp)
    8cf4:	dec00204 	addi	sp,sp,8
    8cf8:	f800283a 	ret

00008cfc <alt_up_character_lcd_shift_display>:
    8cfc:	defffc04 	addi	sp,sp,-16
    8d00:	dc400115 	stw	r17,4(sp)
    8d04:	dfc00315 	stw	ra,12(sp)
    8d08:	dc800215 	stw	r18,8(sp)
    8d0c:	dc000015 	stw	r16,0(sp)
    8d10:	2023883a 	mov	r17,r4
    8d14:	28000f26 	beq	r5,zero,8d54 <alt_up_character_lcd_shift_display+0x58>
    8d18:	01400216 	blt	zero,r5,8d24 <alt_up_character_lcd_shift_display+0x28>
    8d1c:	04800604 	movi	r18,24
    8d20:	00000106 	br	8d28 <alt_up_character_lcd_shift_display+0x2c>
    8d24:	04800704 	movi	r18,28
    8d28:	2800010e 	bge	r5,zero,8d30 <alt_up_character_lcd_shift_display+0x34>
    8d2c:	014bc83a 	sub	r5,zero,r5
    8d30:	2821883a 	mov	r16,r5
    8d34:	00000106 	br	8d3c <alt_up_character_lcd_shift_display+0x40>
    8d38:	0008c780 	call	8c78 <alt_up_character_lcd_send_cmd>
    8d3c:	843fffc4 	addi	r16,r16,-1
    8d40:	80c03fcc 	andi	r3,r16,255
    8d44:	00803fc4 	movi	r2,255
    8d48:	8809883a 	mov	r4,r17
    8d4c:	91403fcc 	andi	r5,r18,255
    8d50:	18bff91e 	bne	r3,r2,8d38 <alt_up_character_lcd_shift_display+0x3c>
    8d54:	dfc00317 	ldw	ra,12(sp)
    8d58:	dc800217 	ldw	r18,8(sp)
    8d5c:	dc400117 	ldw	r17,4(sp)
    8d60:	dc000017 	ldw	r16,0(sp)
    8d64:	dec00404 	addi	sp,sp,16
    8d68:	f800283a 	ret

00008d6c <alt_up_character_lcd_shift_cursor>:
    8d6c:	defffc04 	addi	sp,sp,-16
    8d70:	dc400115 	stw	r17,4(sp)
    8d74:	dfc00315 	stw	ra,12(sp)
    8d78:	dc800215 	stw	r18,8(sp)
    8d7c:	dc000015 	stw	r16,0(sp)
    8d80:	2023883a 	mov	r17,r4
    8d84:	28000f26 	beq	r5,zero,8dc4 <alt_up_character_lcd_shift_cursor+0x58>
    8d88:	01400216 	blt	zero,r5,8d94 <alt_up_character_lcd_shift_cursor+0x28>
    8d8c:	04800404 	movi	r18,16
    8d90:	00000106 	br	8d98 <alt_up_character_lcd_shift_cursor+0x2c>
    8d94:	04800504 	movi	r18,20
    8d98:	2800010e 	bge	r5,zero,8da0 <alt_up_character_lcd_shift_cursor+0x34>
    8d9c:	014bc83a 	sub	r5,zero,r5
    8da0:	2821883a 	mov	r16,r5
    8da4:	00000106 	br	8dac <alt_up_character_lcd_shift_cursor+0x40>
    8da8:	0008c780 	call	8c78 <alt_up_character_lcd_send_cmd>
    8dac:	843fffc4 	addi	r16,r16,-1
    8db0:	80c03fcc 	andi	r3,r16,255
    8db4:	00803fc4 	movi	r2,255
    8db8:	8809883a 	mov	r4,r17
    8dbc:	91403fcc 	andi	r5,r18,255
    8dc0:	18bff91e 	bne	r3,r2,8da8 <alt_up_character_lcd_shift_cursor+0x3c>
    8dc4:	dfc00317 	ldw	ra,12(sp)
    8dc8:	dc800217 	ldw	r18,8(sp)
    8dcc:	dc400117 	ldw	r17,4(sp)
    8dd0:	dc000017 	ldw	r16,0(sp)
    8dd4:	dec00404 	addi	sp,sp,16
    8dd8:	f800283a 	ret

00008ddc <alt_up_character_lcd_set_cursor_pos>:
    8ddc:	defffe04 	addi	sp,sp,-8
    8de0:	008009c4 	movi	r2,39
    8de4:	dc000015 	stw	r16,0(sp)
    8de8:	dfc00115 	stw	ra,4(sp)
    8dec:	2807883a 	mov	r3,r5
    8df0:	2021883a 	mov	r16,r4
    8df4:	11400a36 	bltu	r2,r5,8e20 <alt_up_character_lcd_set_cursor_pos+0x44>
    8df8:	00800044 	movi	r2,1
    8dfc:	300b883a 	mov	r5,r6
    8e00:	1809883a 	mov	r4,r3
    8e04:	11800636 	bltu	r2,r6,8e20 <alt_up_character_lcd_set_cursor_pos+0x44>
    8e08:	0008bf00 	call	8bf0 <get_DDRAM_addr>
    8e0c:	11403fcc 	andi	r5,r2,255
    8e10:	8009883a 	mov	r4,r16
    8e14:	0008c780 	call	8c78 <alt_up_character_lcd_send_cmd>
    8e18:	0005883a 	mov	r2,zero
    8e1c:	00000106 	br	8e24 <alt_up_character_lcd_set_cursor_pos+0x48>
    8e20:	00bfffc4 	movi	r2,-1
    8e24:	dfc00117 	ldw	ra,4(sp)
    8e28:	dc000017 	ldw	r16,0(sp)
    8e2c:	dec00204 	addi	sp,sp,8
    8e30:	f800283a 	ret

00008e34 <alt_up_character_lcd_open_dev>:
    8e34:	01400074 	movhi	r5,1
    8e38:	2964c004 	addi	r5,r5,-27904
    8e3c:	0008ebc1 	jmpi	8ebc <alt_find_dev>

00008e40 <alt_dcache_flush_all>:
    8e40:	f800283a 	ret

00008e44 <alt_dev_null_write>:
    8e44:	3005883a 	mov	r2,r6
    8e48:	f800283a 	ret

00008e4c <alt_dev_llist_insert>:
    8e4c:	deffff04 	addi	sp,sp,-4
    8e50:	dfc00015 	stw	ra,0(sp)
    8e54:	20000326 	beq	r4,zero,8e64 <alt_dev_llist_insert+0x18>
    8e58:	20800217 	ldw	r2,8(r4)
    8e5c:	000d883a 	mov	r6,zero
    8e60:	10000c1e 	bne	r2,zero,8e94 <alt_dev_llist_insert+0x48>
    8e64:	00800074 	movhi	r2,1
    8e68:	10a4c304 	addi	r2,r2,-27892
    8e6c:	10800017 	ldw	r2,0(r2)
    8e70:	00c00074 	movhi	r3,1
    8e74:	18e52f04 	addi	r3,r3,-27460
    8e78:	10000226 	beq	r2,zero,8e84 <alt_dev_llist_insert+0x38>
    8e7c:	103ee83a 	callr	r2
    8e80:	1007883a 	mov	r3,r2
    8e84:	00800584 	movi	r2,22
    8e88:	01bffa84 	movi	r6,-22
    8e8c:	18800015 	stw	r2,0(r3)
    8e90:	00000606 	br	8eac <alt_dev_llist_insert+0x60>
    8e94:	28800017 	ldw	r2,0(r5)
    8e98:	21400115 	stw	r5,4(r4)
    8e9c:	20800015 	stw	r2,0(r4)
    8ea0:	28800017 	ldw	r2,0(r5)
    8ea4:	29000015 	stw	r4,0(r5)
    8ea8:	11000115 	stw	r4,4(r2)
    8eac:	3005883a 	mov	r2,r6
    8eb0:	dfc00017 	ldw	ra,0(sp)
    8eb4:	dec00104 	addi	sp,sp,4
    8eb8:	f800283a 	ret

00008ebc <alt_find_dev>:
    8ebc:	defffb04 	addi	sp,sp,-20
    8ec0:	dcc00315 	stw	r19,12(sp)
    8ec4:	dc800215 	stw	r18,8(sp)
    8ec8:	dc400115 	stw	r17,4(sp)
    8ecc:	dc000015 	stw	r16,0(sp)
    8ed0:	dfc00415 	stw	ra,16(sp)
    8ed4:	2c000017 	ldw	r16,0(r5)
    8ed8:	2823883a 	mov	r17,r5
    8edc:	2027883a 	mov	r19,r4
    8ee0:	00085e80 	call	85e8 <strlen>
    8ee4:	14800044 	addi	r18,r2,1
    8ee8:	00000406 	br	8efc <alt_find_dev+0x40>
    8eec:	81000217 	ldw	r4,8(r16)
    8ef0:	00090400 	call	9040 <memcmp>
    8ef4:	10000526 	beq	r2,zero,8f0c <alt_find_dev+0x50>
    8ef8:	84000017 	ldw	r16,0(r16)
    8efc:	980b883a 	mov	r5,r19
    8f00:	900d883a 	mov	r6,r18
    8f04:	847ff91e 	bne	r16,r17,8eec <alt_find_dev+0x30>
    8f08:	0021883a 	mov	r16,zero
    8f0c:	8005883a 	mov	r2,r16
    8f10:	dfc00417 	ldw	ra,16(sp)
    8f14:	dcc00317 	ldw	r19,12(sp)
    8f18:	dc800217 	ldw	r18,8(sp)
    8f1c:	dc400117 	ldw	r17,4(sp)
    8f20:	dc000017 	ldw	r16,0(sp)
    8f24:	dec00504 	addi	sp,sp,20
    8f28:	f800283a 	ret

00008f2c <alt_icache_flush_all>:
    8f2c:	f800283a 	ret

00008f30 <alt_ic_irq_enabled>:
    8f30:	000530fa 	rdctl	r2,ienable
    8f34:	00c00044 	movi	r3,1
    8f38:	1946983a 	sll	r3,r3,r5
    8f3c:	10c4703a 	and	r2,r2,r3
    8f40:	1004c03a 	cmpne	r2,r2,zero
    8f44:	f800283a 	ret

00008f48 <alt_ic_irq_enable>:
    8f48:	000d303a 	rdctl	r6,status
    8f4c:	00bfff84 	movi	r2,-2
    8f50:	3084703a 	and	r2,r6,r2
    8f54:	1001703a 	wrctl	status,r2
    8f58:	01000074 	movhi	r4,1
    8f5c:	21253004 	addi	r4,r4,-27456
    8f60:	00c00044 	movi	r3,1
    8f64:	20800017 	ldw	r2,0(r4)
    8f68:	1946983a 	sll	r3,r3,r5
    8f6c:	10c4b03a 	or	r2,r2,r3
    8f70:	20800015 	stw	r2,0(r4)
    8f74:	20800017 	ldw	r2,0(r4)
    8f78:	100170fa 	wrctl	ienable,r2
    8f7c:	3001703a 	wrctl	status,r6
    8f80:	0005883a 	mov	r2,zero
    8f84:	f800283a 	ret

00008f88 <alt_ic_irq_disable>:
    8f88:	000d303a 	rdctl	r6,status
    8f8c:	00bfff84 	movi	r2,-2
    8f90:	3084703a 	and	r2,r6,r2
    8f94:	1001703a 	wrctl	status,r2
    8f98:	01000074 	movhi	r4,1
    8f9c:	21253004 	addi	r4,r4,-27456
    8fa0:	00ffff84 	movi	r3,-2
    8fa4:	20800017 	ldw	r2,0(r4)
    8fa8:	1946183a 	rol	r3,r3,r5
    8fac:	10c4703a 	and	r2,r2,r3
    8fb0:	20800015 	stw	r2,0(r4)
    8fb4:	20800017 	ldw	r2,0(r4)
    8fb8:	100170fa 	wrctl	ienable,r2
    8fbc:	3001703a 	wrctl	status,r6
    8fc0:	0005883a 	mov	r2,zero
    8fc4:	f800283a 	ret

00008fc8 <alt_ic_isr_register>:
    8fc8:	0008fcc1 	jmpi	8fcc <alt_iic_isr_register>

00008fcc <alt_iic_isr_register>:
    8fcc:	defffe04 	addi	sp,sp,-8
    8fd0:	008007c4 	movi	r2,31
    8fd4:	dfc00115 	stw	ra,4(sp)
    8fd8:	dc000015 	stw	r16,0(sp)
    8fdc:	00fffa84 	movi	r3,-22
    8fe0:	11401016 	blt	r2,r5,9024 <alt_iic_isr_register+0x58>
    8fe4:	0021303a 	rdctl	r16,status
    8fe8:	00bfff84 	movi	r2,-2
    8fec:	8084703a 	and	r2,r16,r2
    8ff0:	1001703a 	wrctl	status,r2
    8ff4:	280490fa 	slli	r2,r5,3
    8ff8:	00c00074 	movhi	r3,1
    8ffc:	18e53604 	addi	r3,r3,-27432
    9000:	10c5883a 	add	r2,r2,r3
    9004:	11c00115 	stw	r7,4(r2)
    9008:	11800015 	stw	r6,0(r2)
    900c:	30000226 	beq	r6,zero,9018 <alt_iic_isr_register+0x4c>
    9010:	0008f480 	call	8f48 <alt_ic_irq_enable>
    9014:	00000106 	br	901c <alt_iic_isr_register+0x50>
    9018:	0008f880 	call	8f88 <alt_ic_irq_disable>
    901c:	1007883a 	mov	r3,r2
    9020:	8001703a 	wrctl	status,r16
    9024:	1805883a 	mov	r2,r3
    9028:	dfc00117 	ldw	ra,4(sp)
    902c:	dc000017 	ldw	r16,0(sp)
    9030:	dec00204 	addi	sp,sp,8
    9034:	f800283a 	ret

00009038 <altera_nios2_qsys_irq_init>:
    9038:	000170fa 	wrctl	ienable,zero
    903c:	f800283a 	ret

00009040 <memcmp>:
    9040:	31ffffc4 	addi	r7,r6,-1
    9044:	3000061e 	bne	r6,zero,9060 <memcmp+0x20>
    9048:	00000a06 	br	9074 <memcmp+0x34>
    904c:	39ffffc4 	addi	r7,r7,-1
    9050:	00bfffc4 	movi	r2,-1
    9054:	21000044 	addi	r4,r4,1
    9058:	29400044 	addi	r5,r5,1
    905c:	38800526 	beq	r7,r2,9074 <memcmp+0x34>
    9060:	20c00003 	ldbu	r3,0(r4)
    9064:	28800003 	ldbu	r2,0(r5)
    9068:	18bff826 	beq	r3,r2,904c <memcmp+0xc>
    906c:	1885c83a 	sub	r2,r3,r2
    9070:	f800283a 	ret
    9074:	0005883a 	mov	r2,zero
    9078:	f800283a 	ret
