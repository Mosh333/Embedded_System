// Copyright by Adam Kinsman, Henry Ko and Nicola Nicolici
// Developed for the Embedded Systems course (COE4DS4)
// Department of Electrical and Computer Engineering
// McMaster University
// Ontario, Canada

#include "define.h"

alt_u16 disp_seven_seg(alt_u8 val) {
    switch (val) {
        case  0 : return 0x40;
        case  1 : return 0x79;
        case  2 : return 0x24;
        case  3 : return 0x30;
        case  4 : return 0x19;
        case  5 : return 0x12;
        case  6 : return 0x02;
        case  7 : return 0x78;
        case  8 : return 0x00;
        case  9 : return 0x18;
        case 10 : return 0x08;
        case 11 : return 0x03;
        case 12 : return 0x46;
        case 13 : return 0x21;
        case 14 : return 0x06;
        case 15 : return 0x0e;
        default : return 0x7f;
    }
}

int main()
{
	int i;
	elevator_struct elevator;

	elevator.motion = 0;
	elevator.current_floor = 0;
	elevator.next_floor = 0;
	for(i=0;i<12;i++){
		elevator.request_queue[i] = 0;
	}
	elevator.door_close_ready = 0;
	elevator.keep_door_open = 0;
	elevator.door_open_time = 0;
	elevator.floor_travel_time = 0;


	printf("Start main...\n");

	init_button_irq();
	printf("PB initialized...\n");

	init_counter_0_irq();
	printf("Counter IRQ 0 initialized...\n");

	init_counter_1_irq();
	printf("Counter IRQ 1 initialized...\n");


	init_switches_irq();
	printf("Switches IRQ initialized...\n");

	IOWR(LED_GREEN_O_BASE, 0, 0x0);
	IOWR(LED_RED_O_BASE, 0, 0x0);

	printf("Switch value: %X\n", IORD(SWITCH_I_BASE, 0));


	printf("The address location of Seven Segment Peripheral is: %x\n", SEVEN_SEGMENT_N_O_0_BASE);
	IOWR(SEVEN_SEGMENT_N_O_0_BASE, 0, 0xF);


	while(1){
		elevator_sim();
	}


	//return 0;
}
