
experiment2.elf:     file format elf32-littlenios2
experiment2.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000801bc

Program Header:
    LOAD off    0x00001000 vaddr 0x00080000 paddr 0x00080000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00080020 paddr 0x00080020 align 2**12
         filesz 0x00020ce4 memsz 0x00020ce4 flags r-x
    LOAD off    0x00021d04 vaddr 0x000a0d04 paddr 0x000a2818 align 2**12
         filesz 0x00001b14 memsz 0x00001b14 flags rw-
    LOAD off    0x0002432c vaddr 0x000a432c paddr 0x000a432c align 2**12
         filesz 0x00000000 memsz 0x000136f8 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00080000  00080000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000019c  00080020  00080020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001fe10  000801bc  000801bc  000011bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000d38  0009ffcc  0009ffcc  00020fcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b14  000a0d04  000a2818  00021d04  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000136f8  000a432c  000a432c  0002432c  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  00023818  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00000f78  00000000  00000000  00023840  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 00002b4f  00000000  00000000  000247b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000396b1  00000000  00000000  00027307  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000a744  00000000  00000000  000609b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00021bd5  00000000  00000000  0006b0fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002d8c  00000000  00000000  0008ccd4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00002963  00000000  00000000  0008fa60  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000e108  00000000  00000000  000923c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  000a04cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000009f8  00000000  00000000  000a04e0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000006  00000000  00000000  000a66f6  2**0
                  CONTENTS, READONLY
 18 .cpu          00000005  00000000  00000000  000a66fc  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000a6701  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000a6702  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  000a6703  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  000a670e  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  000a6719  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000b  00000000  00000000  000a6724  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000033  00000000  00000000  000a672f  2**0
                  CONTENTS, READONLY
 26 .sopcinfo     000505eb  00000000  00000000  000a6762  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00080000 l    d  .entry	00000000 .entry
00080020 l    d  .exceptions	00000000 .exceptions
000801bc l    d  .text	00000000 .text
0009ffcc l    d  .rodata	00000000 .rodata
000a0d04 l    d  .rwdata	00000000 .rwdata
000a432c l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
000801f4 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 PB_button.c
00000000 l    df *ABS*	00000000 SD_card_controller.c
00000000 l    df *ABS*	00000000 alt_ucosii_simple_error_check.c
00000000 l    df *ABS*	00000000 experiment2.c
00000000 l    df *ABS*	00000000 tasks.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00088564 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 impure.c
000a0d04 l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00088acc l     F .text	00000058 __sprint_r
000a0902 l     O .rodata	00000010 blanks.3452
000a08f2 l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0008ab48 l     F .text	00000244 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0008c570 l     F .text	00000058 std
0008c67c l     F .text	00000008 __fp_lock
0008c684 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 locale.c
000a2768 l     O .rwdata	00000004 charset
000a0934 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000a0a7c l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 dp-bit.c
00090d68 l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
0009264c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
000926ac l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
000927b0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00092a94 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
00092b74 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00092cd4 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_read.c
00092f20 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000a2790 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
000931d8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_env_lock.c
000a2794 l     O .rwdata	00000004 lockid
000a43cc l     O .bss	00000004 locks
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
000a2798 l     O .rwdata	00000004 lockid
000a43d4 l     O .bss	00000004 locks
00000000 l    df *ABS*	00000000 os_core.c
00094c10 l     F .text	00000044 OS_InitMisc
00094c54 l     F .text	0000006c OS_InitRdyList
00094db8 l     F .text	000000e0 OS_InitTCBList
00094b34 l     F .text	000000dc OS_InitEventList
00094cc0 l     F .text	0000007c OS_InitTaskIdle
00094d3c l     F .text	0000007c OS_InitTaskStat
0009502c l     F .text	00000070 OS_SchedNew
00000000 l    df *ABS*	00000000 os_dbg.c
00000000 l    df *ABS*	00000000 os_flag.c
00096f4c l     F .text	00000110 OS_FlagTaskRdy
00096ca4 l     F .text	000001c4 OS_FlagBlock
00000000 l    df *ABS*	00000000 os_mbox.c
00000000 l    df *ABS*	00000000 os_mem.c
00000000 l    df *ABS*	00000000 os_mutex.c
00099780 l     F .text	000001c8 OSMutex_RdyAtPrio
00000000 l    df *ABS*	00000000 os_q.c
00000000 l    df *ABS*	00000000 os_sem.c
00000000 l    df *ABS*	00000000 os_task.c
00000000 l    df *ABS*	00000000 os_time.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
000a16c0 l     O .rwdata	0000106c jtag_uart_0
000a272c l     O .rwdata	0000002c SD_CARD_0
0009d8e4 l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0009db9c l     F .text	000002c4 altera_avalon_jtag_uart_irq
0009de60 l     F .text	00000114 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0009e678 l     F .text	00000070 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0009e99c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0009edac l     F .text	000000d8 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
0009eefc l     F .text	000000f8 alt_file_locked
0009f180 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000040 l       *ABS*	00000000 OSCtxSw_SWITCH_PC
00000000 l    df *ABS*	00000000 os_cpu_c.c
00000014 l       *ABS*	00000000 OSTCBNext_OFFSET
00000032 l       *ABS*	00000000 OSTCBPrio_OFFSET
00000000 l       *ABS*	00000000 OSTCBStkPtr_OFFSET
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0009fd3c l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
0009fef0 l     F .text	00000040 alt_sim_halt
000a4334 g     O .bss	00000004 aux_status_register
000888ac g     F .text	0000001c putchar
000a4358 g     O .bss	00000004 MemoryPartition
0008e360 g     F .text	00000094 _mprec_log10
000a27e6 g     O .rwdata	00000002 OSTaskNameSize
0008e44c g     F .text	00000088 __any_on
0008ff3c g     F .text	00000070 _isatty_r
000a0a54 g     O .rodata	00000028 __mprec_tinytens
00092d34 g     F .text	000000c8 alt_main
000a6344 g     O .bss	0000006c compute_Y_tcb
000888d0 g     F .text	000000a0 _puts_r
000b7794 g     O .bss	00000100 alt_irq
0008ffac g     F .text	00000078 _lseek_r
000984cc g     F .text	000000d4 OS_MemInit
000a435c g     O .bss	00000004 SDWriteQueueB
000a2818 g       *ABS*	00000000 __flash_rwdata_start
0009d7d4 g     F .text	00000064 OSTimeSet
000a63b0 g     O .bss	00002000 compute_Y_stk
000a4360 g     O .bss	00000004 GMailbox
00091888 g     F .text	00000088 __eqdf2
000807a8 g     F .text	00000158 Check_for_Master_Boot_Record
0009378c g     F .text	000006b4 OSEventPendMulti
000b7a24 g       *ABS*	00000000 __alt_heap_start
0009f788 g     F .text	00000020 OSTaskCreateHook
000a4364 g     O .bss	00000004 SDMutex
00088834 g     F .text	00000044 printf
000a27be g     O .rwdata	00000002 OSMboxEn
00093e94 g     F .text	0000007c OSIntEnter
0008f8a8 g     F .text	00000068 __sseek
0008c5d8 g     F .text	000000a4 __sinit
0008faa8 g     F .text	00000130 __swbuf_r
000a27ce g     O .rwdata	00000002 OSQEn
0008d2e4 g     F .text	00000084 _setlocale_r
0008c6d8 g     F .text	0000009c __sfmoreglue
00093448 g     F .text	000000d0 __malloc_unlock
0009f7e4 g     F .text	0000001c OSTaskStatHook
000a43dc g     O .bss	00000001 OSLockNesting
000a4350 g     O .bss	00000004 current_sector_modified
000802c4 g     F .text	00000044 KEY3_Pressed
000a280c g     O .rwdata	00000002 OSDataSize
000a43dd g     O .bss	00000001 OSRunning
00084d7c g     F .text	00000184 SD_presence_detect_task
000a4368 g     O .bss	00000004 SDCardFlag
0008dddc g     F .text	000000e0 memmove
0009f81c g     F .text	0000001c OSInitHookBegin
000a2804 g     O .rwdata	00000002 OSTmrSize
0008c6c8 g     F .text	00000010 _cleanup
0008e4d4 g     F .text	000000bc _Balloc
000804ec g     F .text	00000050 Save_Modified_Sector
000a43e0 g     O .bss	00000004 OSIdleCtr
000837f4 g     F .text	00000090 sd_card_set_attributes
00082ef8 g     F .text	0000004c sd_card_is_Present
00091998 g     F .text	00000088 __gtdf2
0009f454 g       .text	00000000 OSStartTsk
00000000  w      *UND*	00000000 __errno
00095360 g     F .text	000002e0 OS_TCBInit
000a436c g     O .bss	00000004 YImageWidthMailbox
00080000 g     F .entry	0000000c __reset
000a434c g     O .bss	00000004 fat_partition_size_in_512_byte_sectors
000a280a g     O .rwdata	00000002 OSTmrWheelTblSize
00080020 g       *ABS*	00000000 __flash_exceptions_start
000a27aa g     O .rwdata	00000002 OSEventSize
000a43e4 g     O .bss	00000001 OSPrioHighRdy
0008fec8 g     F .text	00000074 _fstat_r
0009f7a8 g     F .text	00000020 OSTaskDelHook
000a43b4 g     O .bss	00000004 errno
0009f434 g       .text	00000000 OSStartHighRdy
0009bf8c g     F .text	00000200 OSTaskCreateExt
0008496c g     F .text	0000003c initialize_task
000967c0 g     F .text	00000068 OSFlagPendGetFlagsRdy
000a27ea g     O .rwdata	00000002 OSTaskStatStkSize
000957cc g     F .text	00000334 OSFlagAccept
00099fb0 g     F .text	000000c8 OSQFlush
00099948 g     F .text	00000154 OSQAccept
000a43c4 g     O .bss	00000004 alt_argv
000aa758 g       *ABS*	00000000 _gp
0009bdb8 g     F .text	000001d4 OSTaskCreate
000a4344 g     O .bss	00000004 command_argument_register
0009b844 g     F .text	00000574 OSTaskChangePrio
000a43d8 g     O .bss	00000004 alt_heapsem
00095640 g     F .text	0000018c OSDebugInit
0009c18c g     F .text	0000040c OSTaskDel
000985a0 g     F .text	000001d8 OSMutexAccept
000a1540 g     O .rwdata	00000180 alt_fd_list
000b4570 g     O .bss	00000370 OSFlagTbl
000888c8 g     F .text	00000008 _putchar_r
00094910 g     F .text	000000b8 OS_EventTaskRemove
0008278c g     F .text	0000011c find_first_empty_record_in_root_directory
0009f890 g     F .text	00000094 alt_find_dev
0008dd3c g     F .text	000000a0 memcpy
000a27d4 g     O .rwdata	00000002 OSRdyTblSize
0008c6bc g     F .text	0000000c _cleanup_r
00091b30 g     F .text	000000f8 __floatsidf
0009ee84 g     F .text	00000078 alt_io_redirect
00091aa8 g     F .text	00000088 __ltdf2
0009ffcc g       *ABS*	00000000 __DTOR_END__
00084aa0 g     F .text	00000258 init_OS_data_structs
00088970 g     F .text	00000014 puts
000a4370 g     O .bss	00000004 YImageHeightMailbox
00093518 g     F .text	00000130 OSEventNameGet
000a27b8 g     O .rwdata	00000002 OSFlagMax
000823bc g     F .text	00000194 find_first_empty_cluster
00098ce4 g     F .text	00000690 OSMutexPend
0008e2b0 g     F .text	000000b0 __ratio
00093f10 g     F .text	00000100 OSIntExit
000a27f2 g     O .rwdata	00000002 OSTCBSize
000a43e5 g     O .bss	00000001 OSPrioCur
0009e0dc g     F .text	000002c0 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
00088878 g     F .text	00000034 _printf_r
000886a0 g     F .text	00000008 __udivsi3
000929d0 g     F .text	000000c4 isatty
000a27d8 g     O .rwdata	00000002 OSStkWidth
000a0964 g     O .rodata	000000c8 __mprec_tens
000a27cc g     O .rwdata	00000002 OSPtrSize
0008d2c0 g     F .text	00000008 __locale_charset
000a27ac g     O .rwdata	00000002 OSEventTblSize
0009f3a8 g       .text	00000000 OSCtxSw
000a43a8 g     O .bss	00000004 __malloc_top_pad
000a43e8 g     O .bss	00000004 OSTCBList
000a43b8 g     O .bss	00000004 alt_fd_list_lock
000a2764 g     O .rwdata	00000004 __mb_cur_max
00082f44 g     F .text	0000008c sd_card_is_FAT16
0008d2c8 g     F .text	0000000c _localeconv_r
0008ec38 g     F .text	0000003c __i2b
0008cca4 g     F .text	0000049c __sfvwrite_r
00081698 g     F .text	000000c0 get_dir_divider_location
000a83b0 g     O .bss	0000006c process_Y_tcb
000b48e0 g     O .bss	00000c30 OSMemTbl
000a43ec g     O .bss	00000001 OSTickStepState
0008f830 g     F .text	00000070 _sbrk_r
00081338 g     F .text	000000d0 filename_to_upper_case
000a27d0 g     O .rwdata	00000002 OSQMax
0009897c g     F .text	00000368 OSMutexDel
000b5510 g     O .bss	00000800 OSTaskStatStk
000980b4 g     F .text	0000010c OSMemNameGet
00080900 g     F .text	000001c8 Read_File_Record_At_Offset
000876bc g     F .text	00000964 compute_Y_task
000a27b0 g     O .rwdata	00000002 OSFlagEn
00090024 g     F .text	00000078 _read_r
000a27f6 g     O .rwdata	00000002 OSTimeTickHookEn
0009705c g     F .text	000000ac OS_FlagUnlink
0009a514 g     F .text	00000180 OSQPost
00083910 g     F .text	00000370 sd_card_read
000a1104 g     O .rwdata	0000000c __lc_ctype
000a2784 g     O .rwdata	00000004 alt_max_fd
00094eec g     F .text	0000006c OS_MemCopy
00094f58 g     F .text	000000d4 OS_Sched
0009234c g     F .text	00000138 __unpack_d
0008fda4 g     F .text	00000110 _fclose_r
00081f58 g     F .text	00000464 find_file_in_directory
00097fb0 g     F .text	00000104 OSMemGet
00083884 g     F .text	0000008c sd_card_get_attributes
00097c64 g     F .text	00000130 OSMboxQuery
0009c8c0 g     F .text	000001c4 OSTaskNameSet
0008c53c g     F .text	00000034 fflush
000a43ac g     O .bss	00000004 __malloc_max_sbrked_mem
000a43f0 g     O .bss	00000004 OSCtxSwCtr
0009f800 g     F .text	0000001c OSTimeTickHook
00092810 g     F .text	000001c0 alt_irq_register
000a27ba g     O .rwdata	00000002 OSFlagNameSize
000949c8 g     F .text	00000104 OS_EventTaskRemoveMulti
000911f8 g     F .text	00000074 __adddf3
000947bc g     F .text	00000154 OS_EventTaskWaitMulti
0008e190 g     F .text	00000120 __b2d
000a27d2 g     O .rwdata	00000002 OSQSize
00090708 g     F .text	00000660 __umoddi3
00092be0 g     F .text	000000f4 lseek
0009b0f0 g     F .text	0000027c OSSemPend
000a2760 g     O .rwdata	00000004 _global_impure_ptr
000a841c g     O .bss	00000010 PBSemaphore
00081a44 g     F .text	00000514 get_home_directory_cluster_for_file
0008f1cc g     F .text	000005f4 _realloc_r
000a27bc g     O .rwdata	00000002 OSLowestPrio
000b7a24 g       *ABS*	00000000 __bss_end
0009ecb4 g     F .text	000000f8 alt_iic_isr_register
0009f870 g     F .text	00000020 OSTCBInitHook
000a2802 g     O .rwdata	00000002 OSTmrCfgTicksPerSec
0009f278 g     F .text	00000110 alt_tick
000979a4 g     F .text	00000134 OSMboxPost
0009009c g     F .text	0000066c __udivdi3
000a27a4 g     O .rwdata	00000002 OSEventEn
000a0a2c g     O .rodata	00000028 __mprec_bigtens
0008eec0 g     F .text	00000120 __s2b
000a27fe g     O .rwdata	00000002 OSTmrCfgNameSize
00091d00 g     F .text	00000194 __floatunsidf
0008e0b0 g     F .text	00000060 __mcmp
000a4354 g     O .bss	00000004 current_sector_index
0008c6a4 g     F .text	00000018 __fp_lock_all
0009ec6c g     F .text	00000048 alt_ic_irq_enabled
00096e68 g     F .text	000000e4 OS_FlagInit
0009f1e0 g     F .text	00000098 alt_alarm_stop
000806d0 g     F .text	000000d8 mark_cluster
000a27e0 g     O .rwdata	00000002 OSTaskIdleStkSize
000a43bc g     O .bss	00000004 alt_irq_active
0009ac7c g     F .text	000000c0 OSSemAccept
000982e0 g     F .text	000000f0 OSMemPut
00097d94 g     F .text	0000021c OSMemCreate
000a43f4 g     O .bss	00000004 OSIdleCtrMax
000800ec g     F .exceptions	000000d0 alt_irq_handler
000a1518 g     O .rwdata	00000028 alt_dev_null
000a27f4 g     O .rwdata	00000002 OSTicksPerSec
00080280 g     F .text	00000044 KEY2_Pressed
000828a8 g     F .text	000001b8 convert_filename_to_name_extension
0009f3a8 g       .text	00000000 OSIntCtxSw
0009e8cc g     F .text	0000001c alt_dcache_flush_all
0008df7c g     F .text	00000070 __hi0bits
000a4330 g     O .bss	00000004 is_sd_card_formated_as_FAT16
00091c28 g     F .text	000000d8 __fixdfsi
00088320 g     F .text	00000244 task_launcher
00086af4 g     F .text	00000bc8 SD_write_task
00082550 g     F .text	0000023c find_first_empty_record_in_a_subdirectory
000a842c g     O .bss	00002000 SD_presence_detect_stk
000a43f8 g     O .bss	00000004 OSTCBFreeList
000a2818 g       *ABS*	00000000 __ram_rwdata_end
0009b36c g     F .text	0000017c OSSemPendAbort
000a49c4 g     O .bss	00000200 ReadQueue
000a277c g     O .rwdata	00000008 alt_dev_list
000a4374 g     O .bss	00000004 WriteImageHeightMailbox
000930b4 g     F .text	00000124 write
0008f0e4 g     F .text	000000e8 _putc_r
000a27f8 g     O .rwdata	00000002 OSVersionNbr
000a0d04 g       *ABS*	00000000 __ram_rodata_end
000926d8 g     F .text	000000d8 fstat
000886e8 g     F .text	0000002c fprintf
000a4378 g     O .bss	00000004 RMailbox
000a27a0 g     O .rwdata	00000004 OSEndiannessTest
0008eda0 g     F .text	00000120 __pow5mult
000a439c g     O .bss	00000004 __nlocale_changed
000886a8 g     F .text	00000008 __umodsi3
000a27b2 g     O .rwdata	00000002 OSFlagGrpSize
000b7a24 g       *ABS*	00000000 end
0009da64 g     F .text	00000138 altera_avalon_jtag_uart_init
000951d0 g     F .text	000000c8 OS_TaskStat
000a437c g     O .bss	00000004 SDWriteQueueR
0009ffc8 g       *ABS*	00000000 __CTOR_LIST__
00100000 g       *ABS*	00000000 __alt_stack_pointer
0009e6e8 g     F .text	00000090 alt_avalon_timer_sc_init
00091fb8 g     F .text	00000080 __clzsi2
0009e39c g     F .text	000002dc altera_avalon_jtag_uart_write
0008c5c8 g     F .text	00000004 __sfp_lock_acquire
0008dc58 g     F .text	000000e4 memchr
00094e98 g     F .text	00000054 OS_MemClr
00088b24 g     F .text	00001ec4 ___vfprintf_internal_r
0009f478 g     F .text	00000310 OSTaskStkInit
000889f8 g     F .text	00000060 _sprintf_r
0008c990 g     F .text	00000314 _free_r
00094518 g     F .text	00000194 OS_EventTaskRdy
0009fd40 g     F .text	000001b0 __call_exitprocs
000a43fc g     O .bss	00000001 OSCPUUsage
000a4bc4 g     O .bss	00000200 WriteQueueR
000a43a0 g     O .bss	00000004 __mlocale_changed
000a2770 g     O .rwdata	00000004 __malloc_sbrk_base
000801bc g     F .text	0000003c _start
000a442c g     O .bss	00000004 _alt_tick_rate
0009a078 g     F .text	00000320 OSQPend
0009d284 g     F .text	0000014c OSTimeDly
0008e898 g     F .text	0000014c __lshift
000a4430 g     O .bss	00000004 _alt_nticks
00092dfc g     F .text	00000124 read
0009d86c g     F .text	00000078 alt_sys_init
0009fc08 g     F .text	00000134 __register_exitproc
000a43fd g     O .bss	00000001 OSTaskCtr
0009d3d0 g     F .text	00000190 OSTimeDlyHMSM
0008e9e4 g     F .text	00000254 __multiply
000a4dc4 g     O .bss	00001180 line_buf
0009df74 g     F .text	00000074 altera_avalon_jtag_uart_close
000886b0 g     F .text	00000038 __mulsi3
000a0d04 g       *ABS*	00000000 __ram_rwdata_start
0009ffcc g       *ABS*	00000000 __ram_rodata_start
000a4434 g     O .bss	00000028 __malloc_current_mallinfo
000a27a6 g     O .rwdata	00000002 OSEventMax
0008e590 g     F .text	0000017c __d2b
0009b4e8 g     F .text	00000128 OSSemPost
000aa42c g     O .bss	00002000 process_Y_stk
0008023c g     F .text	00000044 KEY1_Pressed
000a432c g     O .bss	00000004 initialized
0009409c g     F .text	000000e4 OSSchedUnlock
000ac42c g     O .bss	00002000 SD_read_stk
0009d91c g     F .text	00000058 altera_avalon_jtag_uart_read_fd
0009fa44 g     F .text	00000104 alt_get_fd
000a4400 g     O .bss	00000004 OSMemFreeList
000941f0 g     F .text	000000ac OSStatInit
000a445c g     O .bss	00000014 search_data
00096bd0 g     F .text	000000d4 OSFlagQuery
00092484 g     F .text	000000c8 __fpcmp_parts_d
000a27dc g     O .rwdata	00000002 OSTaskCreateExtEn
0008fd34 g     F .text	00000070 _close_r
000a4380 g     O .bss	00000004 BMailbox
0009fb94 g     F .text	00000074 memcmp
000944fc g     F .text	0000001c OS_Dummy
0009d9cc g     F .text	00000048 altera_avalon_jtag_uart_close_fd
000b7a24 g       *ABS*	00000000 __alt_stack_base
0009da14 g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
00088748 g     F .text	000000ac _fwrite_r
00082fd0 g     F .text	000000d4 sd_card_find_first
0008aa0c g     F .text	0000013c __swsetup_r
000b5d10 g     O .bss	000001e0 OSQTbl
00091630 g     F .text	00000258 __divdf3
0008c774 g     F .text	000000f0 __sfp
000a4470 g     O .bss	00000054 boot_sector_data
0008e3f4 g     F .text	00000058 __copybits
000a1110 g     O .rwdata	00000408 __malloc_av_
0008c5d4 g     F .text	00000004 __sinit_lock_release
000a4404 g     O .bss	00000004 OSTCBHighRdy
0009126c g     F .text	000003c4 __muldf3
0008f98c g     F .text	00000060 __sread
000a4408 g     O .bss	00000004 OSQFreeList
0009f924 g     F .text	00000120 alt_find_file
0009e8e8 g     F .text	000000b4 alt_dev_llist_insert
00093340 g     F .text	00000108 __malloc_lock
00088714 g     F .text	00000034 _fprintf_r
00092ff8 g     F .text	000000bc sbrk
00093648 g     F .text	00000144 OSEventNameSet
0008c340 g     F .text	000001fc _fflush_r
0008fc6c g     F .text	000000c8 _calloc_r
000a440c g     O .bss	00000001 OSRdyGrp
000a432c g       *ABS*	00000000 __bss_start
0008debc g     F .text	00000098 memset
000849a8 g     F .text	000000f8 main
000a43c8 g     O .bss	00000004 alt_envp
000a43b0 g     O .bss	00000004 __malloc_max_total_mem
000a4384 g     O .bss	00000004 ReadImageHeightMailbox
0009d974 g     F .text	00000058 altera_avalon_jtag_uart_write_fd
0008fbd8 g     F .text	0000001c __swbuf
000a4388 g     O .bss	00000004 SDReadQueue
000a0bbc g     O .rodata	00000100 OSUnMapTbl
000a27d6 g     O .rwdata	00000002 OSSemEn
00080430 g     F .text	000000bc Write_Sector_Data
00096828 g     F .text	000003a8 OSFlagPost
0008f8a0 g     F .text	00000008 __sclose
00084488 g     F .text	000004e4 alt_ucosii_simple_error_handler
00100000 g       *ABS*	00000000 __alt_heap_limit
0008feb4 g     F .text	00000014 fclose
000946ac g     F .text	00000110 OS_EventTaskWait
00095298 g     F .text	000000c8 OS_TaskStatStkChk
000b7894 g     O .bss	00000190 _atexit0
0009c598 g     F .text	00000170 OSTaskDelReq
0008ad8c g     F .text	000015b4 _dtoa_r
0008d518 g     F .text	00000740 _malloc_r
000ae42c g     O .bss	0000006c SD_read_tcb
00098778 g     F .text	00000204 OSMutexCreate
000a2788 g     O .rwdata	00000004 alt_errno
00094180 g     F .text	00000070 OSStart
000932e4 g     F .text	0000005c __env_unlock
0008d208 g     F .text	000000b8 _fwalk
0009ca84 g     F .text	00000218 OSTaskResume
000983d0 g     F .text	000000fc OSMemQuery
000a27e8 g     O .rwdata	00000002 OSTaskStatEn
000a27c2 g     O .rwdata	00000002 OSMemMax
0009a694 g     F .text	00000188 OSQPostFront
0008efe0 g     F .text	00000104 putc
000885e0 g     F .text	00000060 __divsi3
000a440d g     O .bss	00000003 OSRdyTbl
000a279c g     O .rwdata	00000002 OSDebugEn
000a0a88 g     O .rodata	00000014 __thenan_df
0008c864 g     F .text	0000012c _malloc_trim_r
0009ffcc g       *ABS*	00000000 __CTOR_END__
000a27b4 g     O .rwdata	00000002 OSFlagNodeSize
000a4338 g     O .bss	00000004 status_register
000a27fc g     O .rwdata	00000002 OSTmrCfgMax
0008f9ec g     F .text	000000bc strcmp
000a4340 g     O .bss	00000004 command_register
00099a9c g     F .text	00000214 OSQCreate
0009c708 g     F .text	000001b8 OSTaskNameGet
0009ffcc g       *ABS*	00000000 __flash_rodata_start
0009a81c g     F .text	00000234 OSQPostOpt
0009429c g     F .text	00000240 OSTimeTick
000a27e4 g     O .rwdata	00000002 OSTaskMax
0009ffcc g       *ABS*	00000000 __DTOR_LIST__
0009ad3c g     F .text	00000114 OSSemCreate
000a2808 g     O .rwdata	00000002 OSTmrWheelSize
000995d8 g     F .text	000001a8 OSMutexQuery
00091910 g     F .text	00000088 __nedf2
000a27de g     O .rwdata	00000002 OSTaskDelEn
00080000 g       *ABS*	00000000 __alt_mem_sram_0
0009b610 g     F .text	00000130 OSSemQuery
00099cb0 g     F .text	00000300 OSQDel
0009a398 g     F .text	0000017c OSQPendAbort
0009d838 g     F .text	00000034 alt_irq_init
00092f80 g     F .text	00000078 alt_release_fd
0008062c g     F .text	000000a4 get_cluster_flag
000803dc g     F .text	00000054 init_button_irq
00088984 g     F .text	00000074 sprintf
000a0a9c g     O .rodata	00000100 __clz_tab
00080ac8 g     F .text	000001f8 Write_File_Record_At_Offset
000a43a4 g     O .bss	00000004 _PathLocale
000ae498 g     O .bss	00002000 SD_write_stk
00083c80 g     F .text	000005f0 sd_card_write
0009fb48 g     F .text	00000014 atexit
0008fbf4 g     F .text	00000078 _write_r
00094010 g     F .text	0000008c OSSchedLock
0008d368 g     F .text	0000001c setlocale
00088020 g     F .text	00000300 process_Y_task
00095b00 g     F .text	0000013c OSFlagCreate
00080cc0 g     F .text	00000554 Check_for_DOS_FAT
00082a60 g     F .text	000002ec create_file
00084cf8 g     F .text	00000084 init_create_tasks
000a275c g     O .rwdata	00000004 _impure_ptr
000a433c g     O .bss	00000004 CSD_register_w0
000a43c0 g     O .bss	00000004 alt_argc
0009ea60 g     F .text	00000064 _do_dtors
000a27ae g     O .rwdata	00000002 OSEventMultiEn
00084f00 g     F .text	00001bf4 SD_read_task
00095c3c g     F .text	000002a8 OSFlagDel
000a4410 g     O .bss	00000004 OSEventFreeList
00097828 g     F .text	0000017c OSMboxPendAbort
00080020 g       .exceptions	00000000 alt_irq_entry
0008e110 g     F .text	00000080 __ulp
0008f7c0 g     F .text	00000040 __isinfd
000a27fa g     O .rwdata	00000002 OSTmrEn
0009617c g     F .text	00000644 OSFlagPend
0008c68c g     F .text	00000018 __fp_unlock_all
000a2774 g     O .rwdata	00000008 alt_fs_list
00084444 g     F .text	00000044 alt_ucosii_check_return_code
00081408 g     F .text	00000290 check_file_name_for_FAT16_compliance
0009509c g     F .text	00000080 OS_StrCopy
000a5f44 g     O .bss	00000200 WriteQueueG
000a27c4 g     O .rwdata	00000002 OSMemNameSize
0009f838 g     F .text	0000001c OSInitHookEnd
00080020 g       *ABS*	00000000 __ram_exceptions_start
000a27f0 g     O .rwdata	00000002 OSTCBPrioTblMax
0008d2d4 g     F .text	00000010 localeconv
000a27ec g     O .rwdata	00000002 OSTaskStatStkChkEn
000971ac g     F .text	00000114 OSMboxCreate
0009eae0 g     F .text	00000050 alt_ic_isr_register
000a27c0 g     O .rwdata	00000002 OSMemEn
000887f4 g     F .text	00000040 fwrite
000a4348 g     O .bss	00000004 fat_partition_offset_in_512_byte_sectors
000a27ca g     O .rwdata	00000002 OSMutexEn
000a2818 g       *ABS*	00000000 _edata
000801f8 g     F .text	00000044 KEY0_Pressed
000b7a24 g       *ABS*	00000000 _end
000a44c4 g     O .bss	00000500 active_files
000a4414 g     O .bss	00000001 OSIntNesting
000a6144 g     O .bss	00000200 WriteQueueB
000801bc g       *ABS*	00000000 __ram_exceptions_end
00082d4c g     F .text	00000154 copy_file_record_name_to_string
0009dfe8 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0009d560 g     F .text	00000210 OSTimeDlyResume
00081214 g     F .text	00000124 Look_for_FAT16
00096028 g     F .text	00000154 OSFlagNameSet
00097560 g     F .text	000002c8 OSMboxPend
0009cc9c g     F .text	000001fc OSTaskStkChk
0009ebcc g     F .text	000000a0 alt_ic_irq_disable
000a27c6 g     O .rwdata	00000002 OSMemSize
0008f910 g     F .text	0000007c __swrite
000a276c g     O .rwdata	00000004 __malloc_trim_threshold
0009f388 g     F .text	00000020 altera_nios2_qsys_irq_init
000a4418 g     O .bss	00000004 OSTCBCur
0009fb5c g     F .text	00000038 exit
00099374 g     F .text	00000264 OSMutexPost
000a438c g     O .bss	00000004 WriteImageWidthMailbox
000a27c8 g     O .rwdata	00000002 OSMemTblSize
0008d140 g     F .text	000000c8 _fwalk_reent
0008e70c g     F .text	0000018c __mdiff
00088640 g     F .text	00000060 __modsi3
0008053c g     F .text	000000f0 Read_Sector_Data
00097108 g     F .text	000000a4 OSMboxAccept
00100000 g       *ABS*	00000000 __alt_data_end
00080020 g     F .exceptions	00000000 alt_exception
00082ea0 g     F .text	00000058 sd_card_open_dev
0008c5cc g     F .text	00000004 __sfp_lock_release
00093e40 g     F .text	00000054 OSInit
000a4390 g     O .bss	00000004 SDWriteQueueG
0009d0c4 g     F .text	00000144 OSTaskQuery
0009abd0 g     F .text	000000ac OS_QInit
0009511c g     F .text	00000058 OS_StrLen
000b0498 g     O .bss	0000006c SD_presence_detect_tcb
000981c0 g     F .text	00000120 OSMemNameSet
000a2758 g     O .rwdata	00000004 performance_name
000a27e2 g     O .rwdata	00000002 OSTaskProfileEn
000a441c g     O .bss	00000004 OSTime
000b0504 g     O .bss	00002000 initialize_task_stk
000b5ef0 g     O .bss	00000800 OSTaskIdleStk
0009ff30 g     F .text	0000002c _exit
0008f800 g     F .text	00000030 __isnand
00097ad8 g     F .text	0000018c OSMboxPostOpt
0009e778 g     F .text	00000154 alt_alarm_start
00095ee4 g     F .text	00000144 OSFlagNameGet
0009d770 g     F .text	00000064 OSTimeGet
00091e94 g     F .text	00000124 __muldi3
0008d384 g     F .text	00000194 __smakebuf_r
00088a58 g     F .text	00000074 strlen
0009f7c8 g     F .text	0000001c OSTaskSwHook
0009eff4 g     F .text	0000018c open
000b66f0 g     O .bss	00000b40 OSEventTbl
00091a20 g     F .text	00000088 __gedf2
000b7230 g     O .bss	00000510 OSTCBTbl
0009b740 g     F .text	00000104 OSSemSet
0009eac4 g     F .text	0000001c alt_icache_flush_all
000a4394 g     O .bss	00000004 YMailbox
000a4398 g     O .bss	00000004 ReadImageWidthMailbox
000a278c g     O .rwdata	00000004 alt_priority_mask
000830a4 g     F .text	000003a8 sd_card_find_next
0009ae50 g     F .text	000002a0 OSSemDel
000a4420 g     O .bss	00000004 OSFlagFreeList
0009eb30 g     F .text	0000009c alt_ic_irq_enable
000a27a8 g     O .rwdata	00000002 OSEventNameSize
000972c0 g     F .text	000002a0 OSMboxDel
0008a9e8 g     F .text	00000024 __vfprintf_internal
000a4424 g     O .bss	00000001 OSStatRdy
000b7740 g     O .bss	00000054 OSTCBPrioTbl
00093238 g     F .text	000000ac __env_lock
000a27ee g     O .rwdata	00000002 OSTaskSwHookEn
00091178 g     F .text	00000080 __subdf3
000b2504 g     O .bss	0000006c SD_write_tcb
00084270 g     F .text	000001d4 sd_card_fclose
0008dfec g     F .text	000000c4 __lo0bits
000a2810 g     O .rwdata	00000008 alt_alarm_list
000b2570 g     O .bss	00002000 task_launcher_stk
000a27b6 g     O .rwdata	00000002 OSFlagWidth
0009e9fc g     F .text	00000064 _do_ctors
00080308 g     F .text	000000d4 handle_button_interrupts
0009254c g     F .text	00000100 close
000a43d0 g     O .bss	00000004 alt_envsem
000a4428 g     O .bss	00000004 OSIdleCtrRun
000944dc g     F .text	00000020 OSVersion
000a2800 g     O .rwdata	00000002 OSTmrCfgWheelSize
00092af4 g     F .text	00000080 alt_load
0009d208 g     F .text	0000007c OS_TaskStkClr
00092038 g     F .text	00000314 __pack_d
000a27da g     O .rwdata	00000002 OSTaskCreateEn
00081758 g     F .text	000002ec match_file_record_to_name_ext
00094acc g     F .text	00000068 OS_EventWaitListInit
0009f854 g     F .text	0000001c OSTaskIdleHook
00000000  w      *UND*	00000000 free
0008c5d0 g     F .text	00000004 __sinit_lock_acquire
0008ec74 g     F .text	0000012c __multadd
0009ce98 g     F .text	0000022c OSTaskSuspend
0008df54 g     F .text	00000028 _Bfree
0008344c g     F .text	000003a8 sd_card_fopen
00095174 g     F .text	0000005c OS_TaskIdle
000a2806 g     O .rwdata	00000002 OSTmrTblSize
0009aa50 g     F .text	00000180 OSQQuery



Disassembly of section .entry:

00080000 <__reset>:
   80000:	00400234 	movhi	at,8
   80004:	08406f14 	ori	at,at,444
   80008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00080020 <alt_exception>:
   80020:	deffed04 	addi	sp,sp,-76
   80024:	dfc00015 	stw	ra,0(sp)
   80028:	d8400215 	stw	at,8(sp)
   8002c:	d8800315 	stw	r2,12(sp)
   80030:	d8c00415 	stw	r3,16(sp)
   80034:	d9000515 	stw	r4,20(sp)
   80038:	d9400615 	stw	r5,24(sp)
   8003c:	d9800715 	stw	r6,28(sp)
   80040:	d9c00815 	stw	r7,32(sp)
   80044:	000b307a 	rdctl	r5,estatus
   80048:	da000915 	stw	r8,36(sp)
   8004c:	da400a15 	stw	r9,40(sp)
   80050:	da800b15 	stw	r10,44(sp)
   80054:	dac00c15 	stw	r11,48(sp)
   80058:	db000d15 	stw	r12,52(sp)
   8005c:	db400e15 	stw	r13,56(sp)
   80060:	db800f15 	stw	r14,60(sp)
   80064:	dbc01015 	stw	r15,64(sp)
   80068:	d9401115 	stw	r5,68(sp)
   8006c:	ebffff04 	addi	r15,ea,-4
   80070:	dbc01215 	stw	r15,72(sp)
   80074:	0009313a 	rdctl	r4,ipending
   80078:	2880004c 	andi	r2,r5,1
   8007c:	10000326 	beq	r2,zero,8008c <alt_exception+0x6c>
   80080:	20000226 	beq	r4,zero,8008c <alt_exception+0x6c>
   80084:	00800ec0 	call	800ec <alt_irq_handler>
   80088:	00000306 	br	80098 <alt_exception+0x78>
   8008c:	df401215 	stw	ea,72(sp)
   80090:	e8bfff17 	ldw	r2,-4(ea)
   80094:	003da03a 	break	0
   80098:	d9401117 	ldw	r5,68(sp)
   8009c:	df401217 	ldw	ea,72(sp)
   800a0:	dfc00017 	ldw	ra,0(sp)
   800a4:	2801707a 	wrctl	estatus,r5
   800a8:	d8400217 	ldw	at,8(sp)
   800ac:	d8800317 	ldw	r2,12(sp)
   800b0:	d8c00417 	ldw	r3,16(sp)
   800b4:	d9000517 	ldw	r4,20(sp)
   800b8:	d9400617 	ldw	r5,24(sp)
   800bc:	d9800717 	ldw	r6,28(sp)
   800c0:	d9c00817 	ldw	r7,32(sp)
   800c4:	da000917 	ldw	r8,36(sp)
   800c8:	da400a17 	ldw	r9,40(sp)
   800cc:	da800b17 	ldw	r10,44(sp)
   800d0:	dac00c17 	ldw	r11,48(sp)
   800d4:	db000d17 	ldw	r12,52(sp)
   800d8:	db400e17 	ldw	r13,56(sp)
   800dc:	db800f17 	ldw	r14,60(sp)
   800e0:	dbc01017 	ldw	r15,64(sp)
   800e4:	dec01304 	addi	sp,sp,76
   800e8:	ef80083a 	eret

000800ec <alt_irq_handler>:
   800ec:	defff904 	addi	sp,sp,-28
   800f0:	dfc00615 	stw	ra,24(sp)
   800f4:	df000515 	stw	fp,20(sp)
   800f8:	df000504 	addi	fp,sp,20
   800fc:	0093e940 	call	93e94 <OSIntEnter>
   80100:	0005313a 	rdctl	r2,ipending
   80104:	e0bffc15 	stw	r2,-16(fp)
   80108:	e0bffc17 	ldw	r2,-16(fp)
   8010c:	e0bfff15 	stw	r2,-4(fp)
   80110:	e03ffd15 	stw	zero,-12(fp)
   80114:	00800044 	movi	r2,1
   80118:	e0bffe15 	stw	r2,-8(fp)
   8011c:	e0ffff17 	ldw	r3,-4(fp)
   80120:	e0bffe17 	ldw	r2,-8(fp)
   80124:	1884703a 	and	r2,r3,r2
   80128:	1005003a 	cmpeq	r2,r2,zero
   8012c:	1000161e 	bne	r2,zero,80188 <alt_irq_handler+0x9c>
   80130:	e0bffd17 	ldw	r2,-12(fp)
   80134:	00c002f4 	movhi	r3,11
   80138:	18dde504 	addi	r3,r3,30612
   8013c:	100490fa 	slli	r2,r2,3
   80140:	10c5883a 	add	r2,r2,r3
   80144:	11400017 	ldw	r5,0(r2)
   80148:	e0bffd17 	ldw	r2,-12(fp)
   8014c:	00c002f4 	movhi	r3,11
   80150:	18dde504 	addi	r3,r3,30612
   80154:	100490fa 	slli	r2,r2,3
   80158:	10c5883a 	add	r2,r2,r3
   8015c:	10800104 	addi	r2,r2,4
   80160:	11000017 	ldw	r4,0(r2)
   80164:	283ee83a 	callr	r5
   80168:	0005313a 	rdctl	r2,ipending
   8016c:	e0bffb15 	stw	r2,-20(fp)
   80170:	e0bffb17 	ldw	r2,-20(fp)
   80174:	e0bfff15 	stw	r2,-4(fp)
   80178:	e0bfff17 	ldw	r2,-4(fp)
   8017c:	1004c03a 	cmpne	r2,r2,zero
   80180:	103fe31e 	bne	r2,zero,80110 <alt_irq_handler+0x24>
   80184:	00000706 	br	801a4 <alt_irq_handler+0xb8>
   80188:	e0bffe17 	ldw	r2,-8(fp)
   8018c:	1085883a 	add	r2,r2,r2
   80190:	e0bffe15 	stw	r2,-8(fp)
   80194:	e0bffd17 	ldw	r2,-12(fp)
   80198:	10800044 	addi	r2,r2,1
   8019c:	e0bffd15 	stw	r2,-12(fp)
   801a0:	003fde06 	br	8011c <alt_irq_handler+0x30>
   801a4:	0093f100 	call	93f10 <OSIntExit>
   801a8:	e037883a 	mov	sp,fp
   801ac:	dfc00117 	ldw	ra,4(sp)
   801b0:	df000017 	ldw	fp,0(sp)
   801b4:	dec00204 	addi	sp,sp,8
   801b8:	f800283a 	ret

Disassembly of section .text:

000801bc <_start>:
   801bc:	06c00434 	movhi	sp,16
   801c0:	dec00014 	ori	sp,sp,0
   801c4:	068002b4 	movhi	gp,10
   801c8:	d6a9d614 	ori	gp,gp,42840
   801cc:	008002b4 	movhi	r2,10
   801d0:	1090cb14 	ori	r2,r2,17196
   801d4:	00c002f4 	movhi	r3,11
   801d8:	18de8914 	ori	r3,r3,31268
   801dc:	10c00326 	beq	r2,r3,801ec <_start+0x30>
   801e0:	10000015 	stw	zero,0(r2)
   801e4:	10800104 	addi	r2,r2,4
   801e8:	10fffd36 	bltu	r2,r3,801e0 <_start+0x24>
   801ec:	0092af40 	call	92af4 <alt_load>
   801f0:	0092d340 	call	92d34 <alt_main>

000801f4 <alt_after_alt_main>:
   801f4:	003fff06 	br	801f4 <alt_after_alt_main>

000801f8 <KEY0_Pressed>:
   801f8:	defffd04 	addi	sp,sp,-12
   801fc:	dfc00215 	stw	ra,8(sp)
   80200:	df000115 	stw	fp,4(sp)
   80204:	df000104 	addi	fp,sp,4
   80208:	e03fff05 	stb	zero,-4(fp)
   8020c:	008002f4 	movhi	r2,11
   80210:	10a10704 	addi	r2,r2,-31716
   80214:	11000017 	ldw	r4,0(r2)
   80218:	009b4e80 	call	9b4e8 <OSSemPost>
   8021c:	e0bfff05 	stb	r2,-4(fp)
   80220:	e13fff03 	ldbu	r4,-4(fp)
   80224:	00844440 	call	84444 <alt_ucosii_check_return_code>
   80228:	e037883a 	mov	sp,fp
   8022c:	dfc00117 	ldw	ra,4(sp)
   80230:	df000017 	ldw	fp,0(sp)
   80234:	dec00204 	addi	sp,sp,8
   80238:	f800283a 	ret

0008023c <KEY1_Pressed>:
   8023c:	defffd04 	addi	sp,sp,-12
   80240:	dfc00215 	stw	ra,8(sp)
   80244:	df000115 	stw	fp,4(sp)
   80248:	df000104 	addi	fp,sp,4
   8024c:	e03fff05 	stb	zero,-4(fp)
   80250:	008002f4 	movhi	r2,11
   80254:	10a10704 	addi	r2,r2,-31716
   80258:	11000117 	ldw	r4,4(r2)
   8025c:	009b4e80 	call	9b4e8 <OSSemPost>
   80260:	e0bfff05 	stb	r2,-4(fp)
   80264:	e13fff03 	ldbu	r4,-4(fp)
   80268:	00844440 	call	84444 <alt_ucosii_check_return_code>
   8026c:	e037883a 	mov	sp,fp
   80270:	dfc00117 	ldw	ra,4(sp)
   80274:	df000017 	ldw	fp,0(sp)
   80278:	dec00204 	addi	sp,sp,8
   8027c:	f800283a 	ret

00080280 <KEY2_Pressed>:
   80280:	defffd04 	addi	sp,sp,-12
   80284:	dfc00215 	stw	ra,8(sp)
   80288:	df000115 	stw	fp,4(sp)
   8028c:	df000104 	addi	fp,sp,4
   80290:	e03fff05 	stb	zero,-4(fp)
   80294:	008002f4 	movhi	r2,11
   80298:	10a10704 	addi	r2,r2,-31716
   8029c:	11000217 	ldw	r4,8(r2)
   802a0:	009b4e80 	call	9b4e8 <OSSemPost>
   802a4:	e0bfff05 	stb	r2,-4(fp)
   802a8:	e13fff03 	ldbu	r4,-4(fp)
   802ac:	00844440 	call	84444 <alt_ucosii_check_return_code>
   802b0:	e037883a 	mov	sp,fp
   802b4:	dfc00117 	ldw	ra,4(sp)
   802b8:	df000017 	ldw	fp,0(sp)
   802bc:	dec00204 	addi	sp,sp,8
   802c0:	f800283a 	ret

000802c4 <KEY3_Pressed>:
   802c4:	defffd04 	addi	sp,sp,-12
   802c8:	dfc00215 	stw	ra,8(sp)
   802cc:	df000115 	stw	fp,4(sp)
   802d0:	df000104 	addi	fp,sp,4
   802d4:	e03fff05 	stb	zero,-4(fp)
   802d8:	008002f4 	movhi	r2,11
   802dc:	10a10704 	addi	r2,r2,-31716
   802e0:	11000317 	ldw	r4,12(r2)
   802e4:	009b4e80 	call	9b4e8 <OSSemPost>
   802e8:	e0bfff05 	stb	r2,-4(fp)
   802ec:	e13fff03 	ldbu	r4,-4(fp)
   802f0:	00844440 	call	84444 <alt_ucosii_check_return_code>
   802f4:	e037883a 	mov	sp,fp
   802f8:	dfc00117 	ldw	ra,4(sp)
   802fc:	df000017 	ldw	fp,0(sp)
   80300:	dec00204 	addi	sp,sp,8
   80304:	f800283a 	ret

00080308 <handle_button_interrupts>:
   80308:	defffd04 	addi	sp,sp,-12
   8030c:	dfc00215 	stw	ra,8(sp)
   80310:	df000115 	stw	fp,4(sp)
   80314:	df000104 	addi	fp,sp,4
   80318:	0093e940 	call	93e94 <OSIntEnter>
   8031c:	00800434 	movhi	r2,16
   80320:	10852304 	addi	r2,r2,5260
   80324:	11000037 	ldwio	r4,0(r2)
   80328:	00800434 	movhi	r2,16
   8032c:	10852304 	addi	r2,r2,5260
   80330:	11400037 	ldwio	r5,0(r2)
   80334:	00886b00 	call	886b0 <__mulsi3>
   80338:	1007883a 	mov	r3,r2
   8033c:	00800434 	movhi	r2,16
   80340:	10851804 	addi	r2,r2,5216
   80344:	10c00035 	stwio	r3,0(r2)
   80348:	00800434 	movhi	r2,16
   8034c:	10852304 	addi	r2,r2,5260
   80350:	10800037 	ldwio	r2,0(r2)
   80354:	e0bfff15 	stw	r2,-4(fp)
   80358:	e0ffff17 	ldw	r3,-4(fp)
   8035c:	188000a0 	cmpeqi	r2,r3,2
   80360:	1000101e 	bne	r2,zero,803a4 <handle_button_interrupts+0x9c>
   80364:	e0ffff17 	ldw	r3,-4(fp)
   80368:	188000c8 	cmpgei	r2,r3,3
   8036c:	1000041e 	bne	r2,zero,80380 <handle_button_interrupts+0x78>
   80370:	e0ffff17 	ldw	r3,-4(fp)
   80374:	18800060 	cmpeqi	r2,r3,1
   80378:	1000081e 	bne	r2,zero,8039c <handle_button_interrupts+0x94>
   8037c:	00000e06 	br	803b8 <handle_button_interrupts+0xb0>
   80380:	e0ffff17 	ldw	r3,-4(fp)
   80384:	18800120 	cmpeqi	r2,r3,4
   80388:	1000081e 	bne	r2,zero,803ac <handle_button_interrupts+0xa4>
   8038c:	e0ffff17 	ldw	r3,-4(fp)
   80390:	18800220 	cmpeqi	r2,r3,8
   80394:	1000071e 	bne	r2,zero,803b4 <handle_button_interrupts+0xac>
   80398:	00000706 	br	803b8 <handle_button_interrupts+0xb0>
   8039c:	00801f80 	call	801f8 <KEY0_Pressed>
   803a0:	00000506 	br	803b8 <handle_button_interrupts+0xb0>
   803a4:	008023c0 	call	8023c <KEY1_Pressed>
   803a8:	00000306 	br	803b8 <handle_button_interrupts+0xb0>
   803ac:	00802800 	call	80280 <KEY2_Pressed>
   803b0:	00000106 	br	803b8 <handle_button_interrupts+0xb0>
   803b4:	00802c40 	call	802c4 <KEY3_Pressed>
   803b8:	00800434 	movhi	r2,16
   803bc:	10852304 	addi	r2,r2,5260
   803c0:	10000035 	stwio	zero,0(r2)
   803c4:	0093f100 	call	93f10 <OSIntExit>
   803c8:	e037883a 	mov	sp,fp
   803cc:	dfc00117 	ldw	ra,4(sp)
   803d0:	df000017 	ldw	fp,0(sp)
   803d4:	dec00204 	addi	sp,sp,8
   803d8:	f800283a 	ret

000803dc <init_button_irq>:
   803dc:	defffe04 	addi	sp,sp,-8
   803e0:	dfc00115 	stw	ra,4(sp)
   803e4:	df000015 	stw	fp,0(sp)
   803e8:	d839883a 	mov	fp,sp
   803ec:	00800434 	movhi	r2,16
   803f0:	10852204 	addi	r2,r2,5256
   803f4:	00c003c4 	movi	r3,15
   803f8:	10c00035 	stwio	r3,0(r2)
   803fc:	00800434 	movhi	r2,16
   80400:	10852304 	addi	r2,r2,5260
   80404:	10000035 	stwio	zero,0(r2)
   80408:	01000084 	movi	r4,2
   8040c:	000b883a 	mov	r5,zero
   80410:	01800234 	movhi	r6,8
   80414:	3180c204 	addi	r6,r6,776
   80418:	00928100 	call	92810 <alt_irq_register>
   8041c:	e037883a 	mov	sp,fp
   80420:	dfc00117 	ldw	ra,4(sp)
   80424:	df000017 	ldw	fp,0(sp)
   80428:	dec00204 	addi	sp,sp,8
   8042c:	f800283a 	ret

00080430 <Write_Sector_Data>:
///////////////////////////////////////////////////////////////////////////

        
bool Write_Sector_Data(int sector_index, int partition_offset)
// This function writes a sector at the specified address on the SD Card.
{
   80430:	defffa04 	addi	sp,sp,-24
   80434:	dfc00515 	stw	ra,20(sp)
   80438:	df000415 	stw	fp,16(sp)
   8043c:	df000404 	addi	fp,sp,16
   80440:	e13ffe15 	stw	r4,-8(fp)
   80444:	e17fff15 	stw	r5,-4(fp)
    bool result = false;
   80448:	e03ffd15 	stw	zero,-12(fp)
    
    if (sd_card_is_Present())
   8044c:	0082ef80 	call	82ef8 <sd_card_is_Present>
   80450:	1005003a 	cmpeq	r2,r2,zero
   80454:	10001f1e 	bne	r2,zero,804d4 <Write_Sector_Data+0xa4>
    {
        short int reg_state = 0xff;
   80458:	00803fc4 	movi	r2,255
   8045c:	e0bffc0d 	sth	r2,-16(fp)

		/* Multiply sector offset by sector size to get the address. Sector size is 512. Also,
         * the SD card reads data in 512 byte chunks, so the address must be a multiple of 512. */
        *command_argument_register = (sector_index + partition_offset)*512;
   80460:	d126fb17 	ldw	r4,-25620(gp)
   80464:	e0fffe17 	ldw	r3,-8(fp)
   80468:	e0bfff17 	ldw	r2,-4(fp)
   8046c:	1885883a 	add	r2,r3,r2
   80470:	1004927a 	slli	r2,r2,9
   80474:	20800015 	stw	r2,0(r4)
        *command_register = CMD_WRITE_BLOCK;
   80478:	d0e6fa17 	ldw	r3,-25624(gp)
   8047c:	00800604 	movi	r2,24
   80480:	1880000d 	sth	r2,0(r3)
        do {
            reg_state = *aux_status_register;
   80484:	d0a6f717 	ldw	r2,-25636(gp)
   80488:	1080000b 	ldhu	r2,0(r2)
   8048c:	e0bffc0d 	sth	r2,-16(fp)
        } while ((reg_state & 0x04)!=0);
   80490:	e0bffc0b 	ldhu	r2,-16(fp)
   80494:	10bfffcc 	andi	r2,r2,65535
   80498:	1080010c 	andi	r2,r2,4
   8049c:	1004c03a 	cmpne	r2,r2,zero
   804a0:	103ff81e 	bne	r2,zero,80484 <Write_Sector_Data+0x54>
        // Make sure the request did not time out.
        if ((reg_state & 0x10) == 0)
   804a4:	e0bffc0b 	ldhu	r2,-16(fp)
   804a8:	10bfffcc 	andi	r2,r2,65535
   804ac:	1080040c 	andi	r2,r2,16
   804b0:	1004c03a 	cmpne	r2,r2,zero
   804b4:	1000071e 	bne	r2,zero,804d4 <Write_Sector_Data+0xa4>
        {
            result = true;
   804b8:	00800044 	movi	r2,1
   804bc:	e0bffd15 	stw	r2,-12(fp)
            current_sector_modified = false;
   804c0:	d026fe15 	stw	zero,-25608(gp)
            current_sector_index = sector_index+partition_offset;
   804c4:	e0fffe17 	ldw	r3,-8(fp)
   804c8:	e0bfff17 	ldw	r2,-4(fp)
   804cc:	1885883a 	add	r2,r3,r2
   804d0:	d0a6ff15 	stw	r2,-25604(gp)
        }
    }
    return result;
   804d4:	e0bffd17 	ldw	r2,-12(fp)
}
   804d8:	e037883a 	mov	sp,fp
   804dc:	dfc00117 	ldw	ra,4(sp)
   804e0:	df000017 	ldw	fp,0(sp)
   804e4:	dec00204 	addi	sp,sp,8
   804e8:	f800283a 	ret

000804ec <Save_Modified_Sector>:


bool Save_Modified_Sector()
// If the sector has been modified, then save it to the SD Card.
{
   804ec:	defffd04 	addi	sp,sp,-12
   804f0:	dfc00215 	stw	ra,8(sp)
   804f4:	df000115 	stw	fp,4(sp)
   804f8:	df000104 	addi	fp,sp,4
    bool result = true;
   804fc:	00800044 	movi	r2,1
   80500:	e0bfff15 	stw	r2,-4(fp)
    if (current_sector_modified)
   80504:	d0a6fe17 	ldw	r2,-25608(gp)
   80508:	1005003a 	cmpeq	r2,r2,zero
   8050c:	1000051e 	bne	r2,zero,80524 <Save_Modified_Sector+0x38>
    {
        result = Write_Sector_Data(current_sector_index, 0);
   80510:	d0a6ff17 	ldw	r2,-25604(gp)
   80514:	1009883a 	mov	r4,r2
   80518:	000b883a 	mov	r5,zero
   8051c:	00804300 	call	80430 <Write_Sector_Data>
   80520:	e0bfff15 	stw	r2,-4(fp)
    }
    return result;
   80524:	e0bfff17 	ldw	r2,-4(fp)
}
   80528:	e037883a 	mov	sp,fp
   8052c:	dfc00117 	ldw	ra,4(sp)
   80530:	df000017 	ldw	fp,0(sp)
   80534:	dec00204 	addi	sp,sp,8
   80538:	f800283a 	ret

0008053c <Read_Sector_Data>:


bool Read_Sector_Data(int sector_index, int partition_offset)
// This function reads a sector at the specified address on the SD Card.
{
   8053c:	defff904 	addi	sp,sp,-28
   80540:	dfc00615 	stw	ra,24(sp)
   80544:	df000515 	stw	fp,20(sp)
   80548:	df000504 	addi	fp,sp,20
   8054c:	e13ffd15 	stw	r4,-12(fp)
   80550:	e17ffe15 	stw	r5,-8(fp)
	bool result = false;
   80554:	e03ffc15 	stw	zero,-16(fp)
    
	if (sd_card_is_Present())
   80558:	0082ef80 	call	82ef8 <sd_card_is_Present>
   8055c:	1005003a 	cmpeq	r2,r2,zero
   80560:	10002a1e 	bne	r2,zero,8060c <Read_Sector_Data+0xd0>
	{
		short int reg_state = 0xff;
   80564:	00803fc4 	movi	r2,255
   80568:	e0bffb0d 	sth	r2,-20(fp)
        
        /* Write data to the SD card if the current buffer is out of date. */
        if (current_sector_modified)
   8056c:	d0a6fe17 	ldw	r2,-25608(gp)
   80570:	1005003a 	cmpeq	r2,r2,zero
   80574:	1000081e 	bne	r2,zero,80598 <Read_Sector_Data+0x5c>
        {
            if (Write_Sector_Data(current_sector_index, 0) == false)
   80578:	d0a6ff17 	ldw	r2,-25604(gp)
   8057c:	1009883a 	mov	r4,r2
   80580:	000b883a 	mov	r5,zero
   80584:	00804300 	call	80430 <Write_Sector_Data>
   80588:	1004c03a 	cmpne	r2,r2,zero
   8058c:	1000021e 	bne	r2,zero,80598 <Read_Sector_Data+0x5c>
            {
                return false;
   80590:	e03fff15 	stw	zero,-4(fp)
   80594:	00001f06 	br	80614 <Read_Sector_Data+0xd8>
            }
        }
		/* Multiply sector offset by sector size to get the address. Sector size is 512. Also,
		 * the SD card reads data in 512 byte chunks, so the address must be a multiple of 512. */
		*command_argument_register = (sector_index + partition_offset)*512;
   80598:	d126fb17 	ldw	r4,-25620(gp)
   8059c:	e0fffd17 	ldw	r3,-12(fp)
   805a0:	e0bffe17 	ldw	r2,-8(fp)
   805a4:	1885883a 	add	r2,r3,r2
   805a8:	1004927a 	slli	r2,r2,9
   805ac:	20800015 	stw	r2,0(r4)
		*command_register = CMD_READ_BLOCK;
   805b0:	d0e6fa17 	ldw	r3,-25624(gp)
   805b4:	00800444 	movi	r2,17
   805b8:	1880000d 	sth	r2,0(r3)
		do {
			reg_state = *aux_status_register;
   805bc:	d0a6f717 	ldw	r2,-25636(gp)
   805c0:	1080000b 	ldhu	r2,0(r2)
   805c4:	e0bffb0d 	sth	r2,-20(fp)
		} while ((reg_state & 0x04)!=0);
   805c8:	e0bffb0b 	ldhu	r2,-20(fp)
   805cc:	10bfffcc 	andi	r2,r2,65535
   805d0:	1080010c 	andi	r2,r2,4
   805d4:	1004c03a 	cmpne	r2,r2,zero
   805d8:	103ff81e 	bne	r2,zero,805bc <Read_Sector_Data+0x80>
		// Make sure the request did not time out.
		if ((reg_state & 0x10) == 0)
   805dc:	e0bffb0b 	ldhu	r2,-20(fp)
   805e0:	10bfffcc 	andi	r2,r2,65535
   805e4:	1080040c 	andi	r2,r2,16
   805e8:	1004c03a 	cmpne	r2,r2,zero
   805ec:	1000071e 	bne	r2,zero,8060c <Read_Sector_Data+0xd0>
		{
			result = true;
   805f0:	00800044 	movi	r2,1
   805f4:	e0bffc15 	stw	r2,-16(fp)
            current_sector_modified = false;
   805f8:	d026fe15 	stw	zero,-25608(gp)
            current_sector_index = sector_index+partition_offset;
   805fc:	e0fffd17 	ldw	r3,-12(fp)
   80600:	e0bffe17 	ldw	r2,-8(fp)
   80604:	1885883a 	add	r2,r3,r2
   80608:	d0a6ff15 	stw	r2,-25604(gp)
		}
	}
	return result;
   8060c:	e0bffc17 	ldw	r2,-16(fp)
   80610:	e0bfff15 	stw	r2,-4(fp)
   80614:	e0bfff17 	ldw	r2,-4(fp)
}
   80618:	e037883a 	mov	sp,fp
   8061c:	dfc00117 	ldw	ra,4(sp)
   80620:	df000017 	ldw	fp,0(sp)
   80624:	dec00204 	addi	sp,sp,8
   80628:	f800283a 	ret

0008062c <get_cluster_flag>:


bool get_cluster_flag(unsigned int cluster_index, unsigned short int *flag)
// Read a cluster flag.
{
   8062c:	defffa04 	addi	sp,sp,-24
   80630:	dfc00515 	stw	ra,20(sp)
   80634:	df000415 	stw	fp,16(sp)
   80638:	df000404 	addi	fp,sp,16
   8063c:	e13ffd15 	stw	r4,-12(fp)
   80640:	e17ffe15 	stw	r5,-8(fp)
    unsigned int sector_index = (cluster_index / 256) + fat_partition_offset_in_512_byte_sectors;
   80644:	e0bffd17 	ldw	r2,-12(fp)
   80648:	1006d23a 	srli	r3,r2,8
   8064c:	d0a6fc17 	ldw	r2,-25616(gp)
   80650:	1885883a 	add	r2,r3,r2
   80654:	e0bffc15 	stw	r2,-16(fp)
    
    sector_index  = sector_index + boot_sector_data.first_fat_sector_offset;
   80658:	008002b4 	movhi	r2,10
   8065c:	10911c04 	addi	r2,r2,17520
   80660:	10c01117 	ldw	r3,68(r2)
   80664:	e0bffc17 	ldw	r2,-16(fp)
   80668:	10c5883a 	add	r2,r2,r3
   8066c:	e0bffc15 	stw	r2,-16(fp)
     
    if (sector_index != current_sector_index)
   80670:	d0e6ff17 	ldw	r3,-25604(gp)
   80674:	e0bffc17 	ldw	r2,-16(fp)
   80678:	10c00726 	beq	r2,r3,80698 <get_cluster_flag+0x6c>
    {
        if (Read_Sector_Data(sector_index, 0) == false)
   8067c:	e13ffc17 	ldw	r4,-16(fp)
   80680:	000b883a 	mov	r5,zero
   80684:	008053c0 	call	8053c <Read_Sector_Data>
   80688:	1004c03a 	cmpne	r2,r2,zero
   8068c:	1000021e 	bne	r2,zero,80698 <get_cluster_flag+0x6c>
        {
            return false;
   80690:	e03fff15 	stw	zero,-4(fp)
   80694:	00000806 	br	806b8 <get_cluster_flag+0x8c>
        }
    }
    *flag = (*((volatile unsigned short int *) SD_CARD_BUFFER(SD_CARD_0_BASE, 2*(cluster_index % 256))));
   80698:	e0bffd17 	ldw	r2,-12(fp)
   8069c:	10803fcc 	andi	r2,r2,255
   806a0:	1085883a 	add	r2,r2,r2
   806a4:	10c0000b 	ldhu	r3,0(r2)
   806a8:	e0bffe17 	ldw	r2,-8(fp)
   806ac:	10c0000d 	sth	r3,0(r2)
    return true;
   806b0:	00800044 	movi	r2,1
   806b4:	e0bfff15 	stw	r2,-4(fp)
   806b8:	e0bfff17 	ldw	r2,-4(fp)
}
   806bc:	e037883a 	mov	sp,fp
   806c0:	dfc00117 	ldw	ra,4(sp)
   806c4:	df000017 	ldw	fp,0(sp)
   806c8:	dec00204 	addi	sp,sp,8
   806cc:	f800283a 	ret

000806d0 <mark_cluster>:


bool mark_cluster(unsigned int cluster_index, short int flag, bool first_fat)
// Place a marker on the specified cluster in a given FAT.
{
   806d0:	defff904 	addi	sp,sp,-28
   806d4:	dfc00615 	stw	ra,24(sp)
   806d8:	df000515 	stw	fp,20(sp)
   806dc:	df000504 	addi	fp,sp,20
   806e0:	e13ffc15 	stw	r4,-16(fp)
   806e4:	e1bffe15 	stw	r6,-8(fp)
   806e8:	e17ffd0d 	sth	r5,-12(fp)
    unsigned int sector_index = (cluster_index / 256) +  fat_partition_offset_in_512_byte_sectors;
   806ec:	e0bffc17 	ldw	r2,-16(fp)
   806f0:	1006d23a 	srli	r3,r2,8
   806f4:	d0a6fc17 	ldw	r2,-25616(gp)
   806f8:	1885883a 	add	r2,r3,r2
   806fc:	e0bffb15 	stw	r2,-20(fp)
    
    if (first_fat)
   80700:	e0bffe17 	ldw	r2,-8(fp)
   80704:	1005003a 	cmpeq	r2,r2,zero
   80708:	1000071e 	bne	r2,zero,80728 <mark_cluster+0x58>
    {
        sector_index  = sector_index + boot_sector_data.first_fat_sector_offset;
   8070c:	008002b4 	movhi	r2,10
   80710:	10911c04 	addi	r2,r2,17520
   80714:	10c01117 	ldw	r3,68(r2)
   80718:	e0bffb17 	ldw	r2,-20(fp)
   8071c:	10c5883a 	add	r2,r2,r3
   80720:	e0bffb15 	stw	r2,-20(fp)
   80724:	00000606 	br	80740 <mark_cluster+0x70>
    }
    else
    {
        sector_index  = sector_index + boot_sector_data.second_fat_sector_offset;
   80728:	008002b4 	movhi	r2,10
   8072c:	10911c04 	addi	r2,r2,17520
   80730:	10c01217 	ldw	r3,72(r2)
   80734:	e0bffb17 	ldw	r2,-20(fp)
   80738:	10c5883a 	add	r2,r2,r3
   8073c:	e0bffb15 	stw	r2,-20(fp)
    }
     
    if (sector_index != current_sector_index)
   80740:	d0e6ff17 	ldw	r3,-25604(gp)
   80744:	e0bffb17 	ldw	r2,-20(fp)
   80748:	10c00726 	beq	r2,r3,80768 <mark_cluster+0x98>
    {
        if (Read_Sector_Data(sector_index, 0) == false)
   8074c:	e13ffb17 	ldw	r4,-20(fp)
   80750:	000b883a 	mov	r5,zero
   80754:	008053c0 	call	8053c <Read_Sector_Data>
   80758:	1004c03a 	cmpne	r2,r2,zero
   8075c:	1000021e 	bne	r2,zero,80768 <mark_cluster+0x98>
        {
            return false;
   80760:	e03fff15 	stw	zero,-4(fp)
   80764:	00000a06 	br	80790 <mark_cluster+0xc0>
        }
    }
    (*((volatile short int *) SD_CARD_BUFFER(SD_CARD_0_BASE, 2*(cluster_index % 256)))) = flag;
   80768:	e0bffc17 	ldw	r2,-16(fp)
   8076c:	10803fcc 	andi	r2,r2,255
   80770:	1085883a 	add	r2,r2,r2
   80774:	1007883a 	mov	r3,r2
   80778:	e0bffd0b 	ldhu	r2,-12(fp)
   8077c:	1880000d 	sth	r2,0(r3)
    current_sector_modified = true;
   80780:	00800044 	movi	r2,1
   80784:	d0a6fe15 	stw	r2,-25608(gp)
    return true;
   80788:	00800044 	movi	r2,1
   8078c:	e0bfff15 	stw	r2,-4(fp)
   80790:	e0bfff17 	ldw	r2,-4(fp)
}
   80794:	e037883a 	mov	sp,fp
   80798:	dfc00117 	ldw	ra,4(sp)
   8079c:	df000017 	ldw	fp,0(sp)
   807a0:	dec00204 	addi	sp,sp,8
   807a4:	f800283a 	ret

000807a8 <Check_for_Master_Boot_Record>:

bool Check_for_Master_Boot_Record(void)
// This function reads the first 512 bytes on the SD Card. This data should
// contain the Master Boot Record. If it does, then print
// relevant information and return true. Otherwise, return false. 
{
   807a8:	defff704 	addi	sp,sp,-36
   807ac:	dfc00815 	stw	ra,32(sp)
   807b0:	df000715 	stw	fp,28(sp)
   807b4:	df000704 	addi	fp,sp,28
	bool result = false;
   807b8:	e03fff15 	stw	zero,-4(fp)
	int index;
	int end, offset, partition_size;

	/* Load the first 512 bytes of data from SD card. */
	if (Read_Sector_Data(0, 0))
   807bc:	0009883a 	mov	r4,zero
   807c0:	000b883a 	mov	r5,zero
   807c4:	008053c0 	call	8053c <Read_Sector_Data>
   807c8:	1005003a 	cmpeq	r2,r2,zero
   807cc:	1000461e 	bne	r2,zero,808e8 <Check_for_Master_Boot_Record+0x140>
	{
		end =  (*((volatile short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, 0x1fe)));
   807d0:	00807f84 	movi	r2,510
   807d4:	1080000b 	ldhu	r2,0(r2)
   807d8:	10bfffcc 	andi	r2,r2,65535
   807dc:	10a0001c 	xori	r2,r2,32768
   807e0:	10a00004 	addi	r2,r2,-32768
   807e4:	e0bffd15 	stw	r2,-12(fp)

		// Check if the end of the sector contains an end string 0xaa55.
		if ((end & 0x0000ffff) == 0x0000aa55)
   807e8:	e0bffd17 	ldw	r2,-12(fp)
   807ec:	10ffffcc 	andi	r3,r2,65535
   807f0:	00aa9554 	movui	r2,43605
   807f4:	18803c1e 	bne	r3,r2,808e8 <Check_for_Master_Boot_Record+0x140>
		{
			// Check four partition entries and see if any are valid
			for (index = 0; index < 4; index++)
   807f8:	e03ffe15 	stw	zero,-8(fp)
   807fc:	00003706 	br	808dc <Check_for_Master_Boot_Record+0x134>
			{
				int partition_data_offset = (index * 16) + 0x01be;
   80800:	e0bffe17 	ldw	r2,-8(fp)
   80804:	1004913a 	slli	r2,r2,4
   80808:	10806f84 	addi	r2,r2,446
   8080c:	e0bffa15 	stw	r2,-24(fp)
				char type;
		        
				// Read Partition type
				type = (*((volatile unsigned char *)SD_CARD_BUFFER(SD_CARD_0_BASE, partition_data_offset + 0x04)));
   80810:	e0bffa17 	ldw	r2,-24(fp)
   80814:	10800104 	addi	r2,r2,4
   80818:	10800003 	ldbu	r2,0(r2)
   8081c:	e0bff905 	stb	r2,-28(fp)

				// Check if this is an FAT parition
				if ((type == 1) || (type == 4) || (type == 6) || (type == 14))
   80820:	e0bff907 	ldb	r2,-28(fp)
   80824:	10800060 	cmpeqi	r2,r2,1
   80828:	1000091e 	bne	r2,zero,80850 <Check_for_Master_Boot_Record+0xa8>
   8082c:	e0bff907 	ldb	r2,-28(fp)
   80830:	10800120 	cmpeqi	r2,r2,4
   80834:	1000061e 	bne	r2,zero,80850 <Check_for_Master_Boot_Record+0xa8>
   80838:	e0bff907 	ldb	r2,-28(fp)
   8083c:	108001a0 	cmpeqi	r2,r2,6
   80840:	1000031e 	bne	r2,zero,80850 <Check_for_Master_Boot_Record+0xa8>
   80844:	e0bff907 	ldb	r2,-28(fp)
   80848:	10800398 	cmpnei	r2,r2,14
   8084c:	1000201e 	bne	r2,zero,808d0 <Check_for_Master_Boot_Record+0x128>
				{
					// Get partition offset and size.
					offset = ((*((unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, partition_data_offset + 0x0A))) << 16) | (*((unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, partition_data_offset + 0x08)));
   80850:	e0bffa17 	ldw	r2,-24(fp)
   80854:	10800284 	addi	r2,r2,10
   80858:	1080000b 	ldhu	r2,0(r2)
   8085c:	10bfffcc 	andi	r2,r2,65535
   80860:	1006943a 	slli	r3,r2,16
   80864:	e0bffa17 	ldw	r2,-24(fp)
   80868:	10800204 	addi	r2,r2,8
   8086c:	1080000b 	ldhu	r2,0(r2)
   80870:	10bfffcc 	andi	r2,r2,65535
   80874:	1884b03a 	or	r2,r3,r2
   80878:	e0bffc15 	stw	r2,-16(fp)
					partition_size = ((*((unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, partition_data_offset + 0x0E))) << 16) | (*((unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, partition_data_offset + 0x0C)));
   8087c:	e0bffa17 	ldw	r2,-24(fp)
   80880:	10800384 	addi	r2,r2,14
   80884:	1080000b 	ldhu	r2,0(r2)
   80888:	10bfffcc 	andi	r2,r2,65535
   8088c:	1006943a 	slli	r3,r2,16
   80890:	e0bffa17 	ldw	r2,-24(fp)
   80894:	10800304 	addi	r2,r2,12
   80898:	1080000b 	ldhu	r2,0(r2)
   8089c:	10bfffcc 	andi	r2,r2,65535
   808a0:	1884b03a 	or	r2,r3,r2
   808a4:	e0bffb15 	stw	r2,-20(fp)
		            
					// Check if the partition is valid
					if (partition_size > 0)
   808a8:	e0bffb17 	ldw	r2,-20(fp)
   808ac:	10800050 	cmplti	r2,r2,1
   808b0:	1000071e 	bne	r2,zero,808d0 <Check_for_Master_Boot_Record+0x128>
					{
						result = true;
   808b4:	00800044 	movi	r2,1
   808b8:	e0bfff15 	stw	r2,-4(fp)
						fat_partition_size_in_512_byte_sectors = partition_size;
   808bc:	e0bffb17 	ldw	r2,-20(fp)
   808c0:	d0a6fd15 	stw	r2,-25612(gp)
						fat_partition_offset_in_512_byte_sectors = offset;
   808c4:	e0bffc17 	ldw	r2,-16(fp)
   808c8:	d0a6fc15 	stw	r2,-25616(gp)
						break;
   808cc:	00000606 	br	808e8 <Check_for_Master_Boot_Record+0x140>

		// Check if the end of the sector contains an end string 0xaa55.
		if ((end & 0x0000ffff) == 0x0000aa55)
		{
			// Check four partition entries and see if any are valid
			for (index = 0; index < 4; index++)
   808d0:	e0bffe17 	ldw	r2,-8(fp)
   808d4:	10800044 	addi	r2,r2,1
   808d8:	e0bffe15 	stw	r2,-8(fp)
   808dc:	e0bffe17 	ldw	r2,-8(fp)
   808e0:	10800110 	cmplti	r2,r2,4
   808e4:	103fc61e 	bne	r2,zero,80800 <Check_for_Master_Boot_Record+0x58>
				}
			}
		}
	}

	return result;
   808e8:	e0bfff17 	ldw	r2,-4(fp)
}
   808ec:	e037883a 	mov	sp,fp
   808f0:	dfc00117 	ldw	ra,4(sp)
   808f4:	df000017 	ldw	fp,0(sp)
   808f8:	dec00204 	addi	sp,sp,8
   808fc:	f800283a 	ret

00080900 <Read_File_Record_At_Offset>:


bool Read_File_Record_At_Offset(int offset, t_file_record *record, unsigned int cluster_index, unsigned int sector_in_cluster)
// This function reads a file record
{
   80900:	defff804 	addi	sp,sp,-32
   80904:	dfc00715 	stw	ra,28(sp)
   80908:	df000615 	stw	fp,24(sp)
   8090c:	df000604 	addi	fp,sp,24
   80910:	e13ffc15 	stw	r4,-16(fp)
   80914:	e17ffd15 	stw	r5,-12(fp)
   80918:	e1bffe15 	stw	r6,-8(fp)
   8091c:	e1ffff15 	stw	r7,-4(fp)
	bool result = false;
   80920:	e03ffb15 	stw	zero,-20(fp)
	if (((offset & 0x01f) == 0) && (sd_card_is_Present()) && (is_sd_card_formated_as_FAT16))
   80924:	e0bffc17 	ldw	r2,-16(fp)
   80928:	108007cc 	andi	r2,r2,31
   8092c:	1004c03a 	cmpne	r2,r2,zero
   80930:	10005f1e 	bne	r2,zero,80ab0 <Read_File_Record_At_Offset+0x1b0>
   80934:	0082ef80 	call	82ef8 <sd_card_is_Present>
   80938:	1005003a 	cmpeq	r2,r2,zero
   8093c:	10005c1e 	bne	r2,zero,80ab0 <Read_File_Record_At_Offset+0x1b0>
   80940:	d0a6f617 	ldw	r2,-25640(gp)
   80944:	1005003a 	cmpeq	r2,r2,zero
   80948:	1000591e 	bne	r2,zero,80ab0 <Read_File_Record_At_Offset+0x1b0>
	{
		int counter;

		for (counter = 0; counter < 8; counter++)
   8094c:	e03ffa15 	stw	zero,-24(fp)
   80950:	00000c06 	br	80984 <Read_File_Record_At_Offset+0x84>
		{
			record->name[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+counter));
   80954:	e13ffa17 	ldw	r4,-24(fp)
   80958:	e0fffc17 	ldw	r3,-16(fp)
   8095c:	e0bffa17 	ldw	r2,-24(fp)
   80960:	1885883a 	add	r2,r3,r2
   80964:	10800003 	ldbu	r2,0(r2)
   80968:	1007883a 	mov	r3,r2
   8096c:	e0bffd17 	ldw	r2,-12(fp)
   80970:	1105883a 	add	r2,r2,r4
   80974:	10c00005 	stb	r3,0(r2)
	bool result = false;
	if (((offset & 0x01f) == 0) && (sd_card_is_Present()) && (is_sd_card_formated_as_FAT16))
	{
		int counter;

		for (counter = 0; counter < 8; counter++)
   80978:	e0bffa17 	ldw	r2,-24(fp)
   8097c:	10800044 	addi	r2,r2,1
   80980:	e0bffa15 	stw	r2,-24(fp)
   80984:	e0bffa17 	ldw	r2,-24(fp)
   80988:	10800210 	cmplti	r2,r2,8
   8098c:	103ff11e 	bne	r2,zero,80954 <Read_File_Record_At_Offset+0x54>
		{
			record->name[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+counter));
		}        
		for (counter = 0; counter < 3; counter++)
   80990:	e03ffa15 	stw	zero,-24(fp)
   80994:	00000e06 	br	809d0 <Read_File_Record_At_Offset+0xd0>
		{
			record->extension[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+counter+8));
   80998:	e13ffa17 	ldw	r4,-24(fp)
   8099c:	e0fffc17 	ldw	r3,-16(fp)
   809a0:	e0bffa17 	ldw	r2,-24(fp)
   809a4:	1885883a 	add	r2,r3,r2
   809a8:	10800204 	addi	r2,r2,8
   809ac:	10800003 	ldbu	r2,0(r2)
   809b0:	1007883a 	mov	r3,r2
   809b4:	e0bffd17 	ldw	r2,-12(fp)
   809b8:	2085883a 	add	r2,r4,r2
   809bc:	10800204 	addi	r2,r2,8
   809c0:	10c00005 	stb	r3,0(r2)

		for (counter = 0; counter < 8; counter++)
		{
			record->name[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+counter));
		}        
		for (counter = 0; counter < 3; counter++)
   809c4:	e0bffa17 	ldw	r2,-24(fp)
   809c8:	10800044 	addi	r2,r2,1
   809cc:	e0bffa15 	stw	r2,-24(fp)
   809d0:	e0bffa17 	ldw	r2,-24(fp)
   809d4:	108000d0 	cmplti	r2,r2,3
   809d8:	103fef1e 	bne	r2,zero,80998 <Read_File_Record_At_Offset+0x98>
		{
			record->extension[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+counter+8));
		}        
		record->attributes          =   *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+11));
   809dc:	e0bffc17 	ldw	r2,-16(fp)
   809e0:	108002c4 	addi	r2,r2,11
   809e4:	10800003 	ldbu	r2,0(r2)
   809e8:	1007883a 	mov	r3,r2
   809ec:	e0bffd17 	ldw	r2,-12(fp)
   809f0:	10c002c5 	stb	r3,11(r2)
		/* Ignore reserved bytes at locations 12 and 13. */
		record->create_time         =   *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+14));
   809f4:	e0bffc17 	ldw	r2,-16(fp)
   809f8:	10800384 	addi	r2,r2,14
   809fc:	10c0000b 	ldhu	r3,0(r2)
   80a00:	e0bffd17 	ldw	r2,-12(fp)
   80a04:	10c0030d 	sth	r3,12(r2)
		record->create_date         =   *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+16));
   80a08:	e0bffc17 	ldw	r2,-16(fp)
   80a0c:	10800404 	addi	r2,r2,16
   80a10:	10c0000b 	ldhu	r3,0(r2)
   80a14:	e0bffd17 	ldw	r2,-12(fp)
   80a18:	10c0038d 	sth	r3,14(r2)
		record->last_access_date    =   *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+18));
   80a1c:	e0bffc17 	ldw	r2,-16(fp)
   80a20:	10800484 	addi	r2,r2,18
   80a24:	10c0000b 	ldhu	r3,0(r2)
   80a28:	e0bffd17 	ldw	r2,-12(fp)
   80a2c:	10c0040d 	sth	r3,16(r2)
		/* Ignore reserved bytes at locations 20 and 21. */
		record->last_modified_time  =	*((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+22));
   80a30:	e0bffc17 	ldw	r2,-16(fp)
   80a34:	10800584 	addi	r2,r2,22
   80a38:	10c0000b 	ldhu	r3,0(r2)
   80a3c:	e0bffd17 	ldw	r2,-12(fp)
   80a40:	10c0048d 	sth	r3,18(r2)
		record->last_modified_date  =	*((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+24));
   80a44:	e0bffc17 	ldw	r2,-16(fp)
   80a48:	10800604 	addi	r2,r2,24
   80a4c:	10c0000b 	ldhu	r3,0(r2)
   80a50:	e0bffd17 	ldw	r2,-12(fp)
   80a54:	10c0050d 	sth	r3,20(r2)
		record->start_cluster_index =	*((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+26));
   80a58:	e0bffc17 	ldw	r2,-16(fp)
   80a5c:	10800684 	addi	r2,r2,26
   80a60:	10c0000b 	ldhu	r3,0(r2)
   80a64:	e0bffd17 	ldw	r2,-12(fp)
   80a68:	10c0058d 	sth	r3,22(r2)
		record->file_size_in_bytes  =	*((volatile unsigned int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+28));
   80a6c:	e0bffc17 	ldw	r2,-16(fp)
   80a70:	10800704 	addi	r2,r2,28
   80a74:	10c00017 	ldw	r3,0(r2)
   80a78:	e0bffd17 	ldw	r2,-12(fp)
   80a7c:	10c00615 	stw	r3,24(r2)
		record->file_record_cluster = cluster_index;
   80a80:	e0fffd17 	ldw	r3,-12(fp)
   80a84:	e0bffe17 	ldw	r2,-8(fp)
   80a88:	18800a15 	stw	r2,40(r3)
		record->file_record_sector_in_cluster = sector_in_cluster;
   80a8c:	e0fffd17 	ldw	r3,-12(fp)
   80a90:	e0bfff17 	ldw	r2,-4(fp)
   80a94:	18800b15 	stw	r2,44(r3)
		record->file_record_offset = offset;
   80a98:	e0bffc17 	ldw	r2,-16(fp)
   80a9c:	1007883a 	mov	r3,r2
   80aa0:	e0bffd17 	ldw	r2,-12(fp)
   80aa4:	10c00c0d 	sth	r3,48(r2)
		result = true;
   80aa8:	00800044 	movi	r2,1
   80aac:	e0bffb15 	stw	r2,-20(fp)
	}
	return result;
   80ab0:	e0bffb17 	ldw	r2,-20(fp)
}
   80ab4:	e037883a 	mov	sp,fp
   80ab8:	dfc00117 	ldw	ra,4(sp)
   80abc:	df000017 	ldw	fp,0(sp)
   80ac0:	dec00204 	addi	sp,sp,8
   80ac4:	f800283a 	ret

00080ac8 <Write_File_Record_At_Offset>:


bool Write_File_Record_At_Offset(int offset, t_file_record *record)
// This function writes a file record at a given offset. The offset is given in bytes.
{
   80ac8:	defff904 	addi	sp,sp,-28
   80acc:	dfc00615 	stw	ra,24(sp)
   80ad0:	df000515 	stw	fp,20(sp)
   80ad4:	df000504 	addi	fp,sp,20
   80ad8:	e13ffe15 	stw	r4,-8(fp)
   80adc:	e17fff15 	stw	r5,-4(fp)
    bool result = false;
   80ae0:	e03ffd15 	stw	zero,-12(fp)
    if (((offset & 0x01f) == 0) && (sd_card_is_Present()) && (is_sd_card_formated_as_FAT16))
   80ae4:	e0bffe17 	ldw	r2,-8(fp)
   80ae8:	108007cc 	andi	r2,r2,31
   80aec:	1004c03a 	cmpne	r2,r2,zero
   80af0:	10006d1e 	bne	r2,zero,80ca8 <Write_File_Record_At_Offset+0x1e0>
   80af4:	0082ef80 	call	82ef8 <sd_card_is_Present>
   80af8:	1005003a 	cmpeq	r2,r2,zero
   80afc:	10006a1e 	bne	r2,zero,80ca8 <Write_File_Record_At_Offset+0x1e0>
   80b00:	d0a6f617 	ldw	r2,-25640(gp)
   80b04:	1005003a 	cmpeq	r2,r2,zero
   80b08:	1000671e 	bne	r2,zero,80ca8 <Write_File_Record_At_Offset+0x1e0>
    {
        int counter;

        for (counter = 0; counter < 8; counter=counter+2)
   80b0c:	e03ffc15 	stw	zero,-16(fp)
   80b10:	00001b06 	br	80b80 <Write_File_Record_At_Offset+0xb8>
        {
            short int two_chars = (short int) record->name[counter+1];
   80b14:	e0bffc17 	ldw	r2,-16(fp)
   80b18:	10c00044 	addi	r3,r2,1
   80b1c:	e0bfff17 	ldw	r2,-4(fp)
   80b20:	10c5883a 	add	r2,r2,r3
   80b24:	10800003 	ldbu	r2,0(r2)
   80b28:	10803fcc 	andi	r2,r2,255
   80b2c:	e0bffb0d 	sth	r2,-20(fp)
            two_chars = two_chars << 8;
   80b30:	e0bffb0f 	ldh	r2,-20(fp)
   80b34:	1004923a 	slli	r2,r2,8
   80b38:	e0bffb0d 	sth	r2,-20(fp)
            two_chars = two_chars | record->name[counter];
   80b3c:	e0fffc17 	ldw	r3,-16(fp)
   80b40:	e0bfff17 	ldw	r2,-4(fp)
   80b44:	10c5883a 	add	r2,r2,r3
   80b48:	10800003 	ldbu	r2,0(r2)
   80b4c:	10c03fcc 	andi	r3,r2,255
   80b50:	e0bffb0b 	ldhu	r2,-20(fp)
   80b54:	10c4b03a 	or	r2,r2,r3
   80b58:	e0bffb0d 	sth	r2,-20(fp)
            *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+counter)) = two_chars;
   80b5c:	e0fffe17 	ldw	r3,-8(fp)
   80b60:	e0bffc17 	ldw	r2,-16(fp)
   80b64:	1885883a 	add	r2,r3,r2
   80b68:	1007883a 	mov	r3,r2
   80b6c:	e0bffb0b 	ldhu	r2,-20(fp)
   80b70:	1880000d 	sth	r2,0(r3)
    bool result = false;
    if (((offset & 0x01f) == 0) && (sd_card_is_Present()) && (is_sd_card_formated_as_FAT16))
    {
        int counter;

        for (counter = 0; counter < 8; counter=counter+2)
   80b74:	e0bffc17 	ldw	r2,-16(fp)
   80b78:	10800084 	addi	r2,r2,2
   80b7c:	e0bffc15 	stw	r2,-16(fp)
   80b80:	e0bffc17 	ldw	r2,-16(fp)
   80b84:	10800210 	cmplti	r2,r2,8
   80b88:	103fe21e 	bne	r2,zero,80b14 <Write_File_Record_At_Offset+0x4c>
            short int two_chars = (short int) record->name[counter+1];
            two_chars = two_chars << 8;
            two_chars = two_chars | record->name[counter];
            *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+counter)) = two_chars;
        }        
        for (counter = 0; counter < 3; counter++)
   80b8c:	e03ffc15 	stw	zero,-16(fp)
   80b90:	00000e06 	br	80bcc <Write_File_Record_At_Offset+0x104>
        {
            *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+counter+8)) = record->extension[counter];
   80b94:	e0fffe17 	ldw	r3,-8(fp)
   80b98:	e0bffc17 	ldw	r2,-16(fp)
   80b9c:	1885883a 	add	r2,r3,r2
   80ba0:	10800204 	addi	r2,r2,8
   80ba4:	1009883a 	mov	r4,r2
   80ba8:	e0fffc17 	ldw	r3,-16(fp)
   80bac:	e0bfff17 	ldw	r2,-4(fp)
   80bb0:	1885883a 	add	r2,r3,r2
   80bb4:	10800204 	addi	r2,r2,8
   80bb8:	10800003 	ldbu	r2,0(r2)
   80bbc:	20800005 	stb	r2,0(r4)
            short int two_chars = (short int) record->name[counter+1];
            two_chars = two_chars << 8;
            two_chars = two_chars | record->name[counter];
            *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+counter)) = two_chars;
        }        
        for (counter = 0; counter < 3; counter++)
   80bc0:	e0bffc17 	ldw	r2,-16(fp)
   80bc4:	10800044 	addi	r2,r2,1
   80bc8:	e0bffc15 	stw	r2,-16(fp)
   80bcc:	e0bffc17 	ldw	r2,-16(fp)
   80bd0:	108000d0 	cmplti	r2,r2,3
   80bd4:	103fef1e 	bne	r2,zero,80b94 <Write_File_Record_At_Offset+0xcc>
        {
            *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+counter+8)) = record->extension[counter];
        }        
        *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+11))  =   record->attributes;
   80bd8:	e0bffe17 	ldw	r2,-8(fp)
   80bdc:	108002c4 	addi	r2,r2,11
   80be0:	1007883a 	mov	r3,r2
   80be4:	e0bfff17 	ldw	r2,-4(fp)
   80be8:	108002c3 	ldbu	r2,11(r2)
   80bec:	18800005 	stb	r2,0(r3)
        /* Ignore reserved bytes at locations 12 and 13. */
        *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+14)) = record->create_time;
   80bf0:	e0bffe17 	ldw	r2,-8(fp)
   80bf4:	10800384 	addi	r2,r2,14
   80bf8:	1007883a 	mov	r3,r2
   80bfc:	e0bfff17 	ldw	r2,-4(fp)
   80c00:	1080030b 	ldhu	r2,12(r2)
   80c04:	1880000d 	sth	r2,0(r3)
        *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+16)) = record->create_date;
   80c08:	e0bffe17 	ldw	r2,-8(fp)
   80c0c:	10800404 	addi	r2,r2,16
   80c10:	1007883a 	mov	r3,r2
   80c14:	e0bfff17 	ldw	r2,-4(fp)
   80c18:	1080038b 	ldhu	r2,14(r2)
   80c1c:	1880000d 	sth	r2,0(r3)
        *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+18)) = record->last_access_date;
   80c20:	e0bffe17 	ldw	r2,-8(fp)
   80c24:	10800484 	addi	r2,r2,18
   80c28:	1007883a 	mov	r3,r2
   80c2c:	e0bfff17 	ldw	r2,-4(fp)
   80c30:	1080040b 	ldhu	r2,16(r2)
   80c34:	1880000d 	sth	r2,0(r3)
        /* Ignore reserved bytes at locations 20 and 21. */
        *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+22)) = record->last_modified_time;
   80c38:	e0bffe17 	ldw	r2,-8(fp)
   80c3c:	10800584 	addi	r2,r2,22
   80c40:	1007883a 	mov	r3,r2
   80c44:	e0bfff17 	ldw	r2,-4(fp)
   80c48:	1080048b 	ldhu	r2,18(r2)
   80c4c:	1880000d 	sth	r2,0(r3)
        *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+24)) = record->last_modified_date;
   80c50:	e0bffe17 	ldw	r2,-8(fp)
   80c54:	10800604 	addi	r2,r2,24
   80c58:	1007883a 	mov	r3,r2
   80c5c:	e0bfff17 	ldw	r2,-4(fp)
   80c60:	1080050b 	ldhu	r2,20(r2)
   80c64:	1880000d 	sth	r2,0(r3)
        *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+26)) = record->start_cluster_index;
   80c68:	e0bffe17 	ldw	r2,-8(fp)
   80c6c:	10800684 	addi	r2,r2,26
   80c70:	1007883a 	mov	r3,r2
   80c74:	e0bfff17 	ldw	r2,-4(fp)
   80c78:	1080058b 	ldhu	r2,22(r2)
   80c7c:	1880000d 	sth	r2,0(r3)
        *((volatile unsigned int *)SD_CARD_BUFFER(SD_CARD_0_BASE, offset+28)) = record->file_size_in_bytes;
   80c80:	e0bffe17 	ldw	r2,-8(fp)
   80c84:	10800704 	addi	r2,r2,28
   80c88:	1007883a 	mov	r3,r2
   80c8c:	e0bfff17 	ldw	r2,-4(fp)
   80c90:	10800617 	ldw	r2,24(r2)
   80c94:	18800015 	stw	r2,0(r3)
        current_sector_modified = true;                  
   80c98:	00800044 	movi	r2,1
   80c9c:	d0a6fe15 	stw	r2,-25608(gp)
        result = true;
   80ca0:	00800044 	movi	r2,1
   80ca4:	e0bffd15 	stw	r2,-12(fp)
    }
    return result;
   80ca8:	e0bffd17 	ldw	r2,-12(fp)
}
   80cac:	e037883a 	mov	sp,fp
   80cb0:	dfc00117 	ldw	ra,4(sp)
   80cb4:	df000017 	ldw	fp,0(sp)
   80cb8:	dec00204 	addi	sp,sp,8
   80cbc:	f800283a 	ret

00080cc0 <Check_for_DOS_FAT>:
// This function reads the boot sector for the FAT file system on the SD Card.
// The offset_address should point to the sector on the card where the boot sector is located.
// The sector number is specified either in the master Boot Record, or is 0 by default for a purely FAT
// based file system. If the specified sector contains a FAT boot sector, then this function prints the
// relevant information and returns 1. Otherwise, it returns 0. 
{
   80cc0:	defff904 	addi	sp,sp,-28
   80cc4:	dfc00615 	stw	ra,24(sp)
   80cc8:	df000515 	stw	fp,20(sp)
   80ccc:	dc000415 	stw	r16,16(sp)
   80cd0:	df000404 	addi	fp,sp,16
   80cd4:	e13fff15 	stw	r4,-4(fp)
	bool result = false;
   80cd8:	e03ffe15 	stw	zero,-8(fp)
	int counter = 0;
   80cdc:	e03ffd15 	stw	zero,-12(fp)
	short int end;

	result = Read_Sector_Data(0, FAT_partition_start_sector);
   80ce0:	0009883a 	mov	r4,zero
   80ce4:	e17fff17 	ldw	r5,-4(fp)
   80ce8:	008053c0 	call	8053c <Read_Sector_Data>
   80cec:	e0bffe15 	stw	r2,-8(fp)
	end =  (*((volatile short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, 0x1fe)));
   80cf0:	00807f84 	movi	r2,510
   80cf4:	1080000b 	ldhu	r2,0(r2)
   80cf8:	e0bffc0d 	sth	r2,-16(fp)
	if (((end & 0xffff) == 0xaa55) && (result))
   80cfc:	e0bffc0f 	ldh	r2,-16(fp)
   80d00:	10ffffcc 	andi	r3,r2,65535
   80d04:	00aa9554 	movui	r2,43605
   80d08:	18813a1e 	bne	r3,r2,811f4 <Check_for_DOS_FAT+0x534>
   80d0c:	e0bffe17 	ldw	r2,-8(fp)
   80d10:	1005003a 	cmpeq	r2,r2,zero
   80d14:	1001371e 	bne	r2,zero,811f4 <Check_for_DOS_FAT+0x534>
	{        
		boot_sector_data.jump_instruction[0] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 0));
   80d18:	0005883a 	mov	r2,zero
   80d1c:	10800003 	ldbu	r2,0(r2)
   80d20:	1007883a 	mov	r3,r2
   80d24:	008002b4 	movhi	r2,10
   80d28:	10911c04 	addi	r2,r2,17520
   80d2c:	10c00005 	stb	r3,0(r2)
		boot_sector_data.jump_instruction[1] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 1));
   80d30:	00800044 	movi	r2,1
   80d34:	10800003 	ldbu	r2,0(r2)
   80d38:	1007883a 	mov	r3,r2
   80d3c:	008002b4 	movhi	r2,10
   80d40:	10911c04 	addi	r2,r2,17520
   80d44:	10c00045 	stb	r3,1(r2)
		boot_sector_data.jump_instruction[2] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 2));
   80d48:	00800084 	movi	r2,2
   80d4c:	10800003 	ldbu	r2,0(r2)
   80d50:	1007883a 	mov	r3,r2
   80d54:	008002b4 	movhi	r2,10
   80d58:	10911c04 	addi	r2,r2,17520
   80d5c:	10c00085 	stb	r3,2(r2)
		for (counter = 0; counter < 8; counter++)
   80d60:	e03ffd15 	stw	zero,-12(fp)
   80d64:	00000b06 	br	80d94 <Check_for_DOS_FAT+0xd4>
		{
			boot_sector_data.OEM_name[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 3+counter));
   80d68:	e13ffd17 	ldw	r4,-12(fp)
   80d6c:	e0bffd17 	ldw	r2,-12(fp)
   80d70:	108000c4 	addi	r2,r2,3
   80d74:	10c00003 	ldbu	r3,0(r2)
   80d78:	008002b4 	movhi	r2,10
   80d7c:	10911c04 	addi	r2,r2,17520
   80d80:	1105883a 	add	r2,r2,r4
   80d84:	10c000c5 	stb	r3,3(r2)
	if (((end & 0xffff) == 0xaa55) && (result))
	{        
		boot_sector_data.jump_instruction[0] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 0));
		boot_sector_data.jump_instruction[1] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 1));
		boot_sector_data.jump_instruction[2] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 2));
		for (counter = 0; counter < 8; counter++)
   80d88:	e0bffd17 	ldw	r2,-12(fp)
   80d8c:	10800044 	addi	r2,r2,1
   80d90:	e0bffd15 	stw	r2,-12(fp)
   80d94:	e0bffd17 	ldw	r2,-12(fp)
   80d98:	10800210 	cmplti	r2,r2,8
   80d9c:	103ff21e 	bne	r2,zero,80d68 <Check_for_DOS_FAT+0xa8>
		{
			boot_sector_data.OEM_name[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 3+counter));
		}
		boot_sector_data.sector_size_in_bytes = (*((volatile unsigned char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 12)) << 8 ) | (*((char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 11)));
   80da0:	00800304 	movi	r2,12
   80da4:	10800003 	ldbu	r2,0(r2)
   80da8:	10803fcc 	andi	r2,r2,255
   80dac:	1004923a 	slli	r2,r2,8
   80db0:	1007883a 	mov	r3,r2
   80db4:	008002c4 	movi	r2,11
   80db8:	10800003 	ldbu	r2,0(r2)
   80dbc:	10803fcc 	andi	r2,r2,255
   80dc0:	1080201c 	xori	r2,r2,128
   80dc4:	10bfe004 	addi	r2,r2,-128
   80dc8:	1884b03a 	or	r2,r3,r2
   80dcc:	1007883a 	mov	r3,r2
   80dd0:	008002b4 	movhi	r2,10
   80dd4:	10911c04 	addi	r2,r2,17520
   80dd8:	10c0030d 	sth	r3,12(r2)
		boot_sector_data.sectors_per_cluster = *((volatile unsigned char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 13));
   80ddc:	00800344 	movi	r2,13
   80de0:	10c00003 	ldbu	r3,0(r2)
   80de4:	008002b4 	movhi	r2,10
   80de8:	10911c04 	addi	r2,r2,17520
   80dec:	10c00385 	stb	r3,14(r2)
		boot_sector_data.reserved_sectors = *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, 14));
   80df0:	00800384 	movi	r2,14
   80df4:	10c0000b 	ldhu	r3,0(r2)
   80df8:	008002b4 	movhi	r2,10
   80dfc:	10911c04 	addi	r2,r2,17520
   80e00:	10c0040d 	sth	r3,16(r2)
		boot_sector_data.number_of_FATs = *((volatile unsigned char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 16));
   80e04:	00800404 	movi	r2,16
   80e08:	10c00003 	ldbu	r3,0(r2)
   80e0c:	008002b4 	movhi	r2,10
   80e10:	10911c04 	addi	r2,r2,17520
   80e14:	10c00485 	stb	r3,18(r2)
		boot_sector_data.max_number_of_dir_entires = (((unsigned short int)(*((volatile unsigned char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 18)))) << 8 ) | (*((unsigned char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 17)));
   80e18:	00800484 	movi	r2,18
   80e1c:	10800003 	ldbu	r2,0(r2)
   80e20:	10803fcc 	andi	r2,r2,255
   80e24:	1004923a 	slli	r2,r2,8
   80e28:	1007883a 	mov	r3,r2
   80e2c:	00800444 	movi	r2,17
   80e30:	10800003 	ldbu	r2,0(r2)
   80e34:	10803fcc 	andi	r2,r2,255
   80e38:	1884b03a 	or	r2,r3,r2
   80e3c:	1007883a 	mov	r3,r2
   80e40:	008002b4 	movhi	r2,10
   80e44:	10911c04 	addi	r2,r2,17520
   80e48:	10c0050d 	sth	r3,20(r2)
		boot_sector_data.number_of_sectors_in_partition = ((*((volatile unsigned char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 20))) << 8) | (*((unsigned char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 19)));
   80e4c:	00800504 	movi	r2,20
   80e50:	10800003 	ldbu	r2,0(r2)
   80e54:	10803fcc 	andi	r2,r2,255
   80e58:	1004923a 	slli	r2,r2,8
   80e5c:	1007883a 	mov	r3,r2
   80e60:	008004c4 	movi	r2,19
   80e64:	10800003 	ldbu	r2,0(r2)
   80e68:	10803fcc 	andi	r2,r2,255
   80e6c:	1884b03a 	or	r2,r3,r2
   80e70:	1007883a 	mov	r3,r2
   80e74:	008002b4 	movhi	r2,10
   80e78:	10911c04 	addi	r2,r2,17520
   80e7c:	10c0058d 	sth	r3,22(r2)
		boot_sector_data.media_descriptor = *((volatile unsigned char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 21));
   80e80:	00800544 	movi	r2,21
   80e84:	10c00003 	ldbu	r3,0(r2)
   80e88:	008002b4 	movhi	r2,10
   80e8c:	10911c04 	addi	r2,r2,17520
   80e90:	10c00605 	stb	r3,24(r2)
		boot_sector_data.number_of_sectors_per_table = *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, 22));
   80e94:	00800584 	movi	r2,22
   80e98:	10c0000b 	ldhu	r3,0(r2)
   80e9c:	008002b4 	movhi	r2,10
   80ea0:	10911c04 	addi	r2,r2,17520
   80ea4:	10c0068d 	sth	r3,26(r2)
		boot_sector_data.number_of_sectors_per_track = *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, 24));
   80ea8:	00800604 	movi	r2,24
   80eac:	10c0000b 	ldhu	r3,0(r2)
   80eb0:	008002b4 	movhi	r2,10
   80eb4:	10911c04 	addi	r2,r2,17520
   80eb8:	10c0070d 	sth	r3,28(r2)
		boot_sector_data.number_of_heads = *((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, 26));
   80ebc:	00800684 	movi	r2,26
   80ec0:	10c0000b 	ldhu	r3,0(r2)
   80ec4:	008002b4 	movhi	r2,10
   80ec8:	10911c04 	addi	r2,r2,17520
   80ecc:	10c0078d 	sth	r3,30(r2)
		boot_sector_data.number_of_hidden_sectors = *((volatile unsigned int *)SD_CARD_BUFFER(SD_CARD_0_BASE, 28));
   80ed0:	00800704 	movi	r2,28
   80ed4:	10c00017 	ldw	r3,0(r2)
   80ed8:	008002b4 	movhi	r2,10
   80edc:	10911c04 	addi	r2,r2,17520
   80ee0:	10c00815 	stw	r3,32(r2)
		boot_sector_data.total_sector_count_if_above_32MB = *((volatile unsigned int *)SD_CARD_BUFFER(SD_CARD_0_BASE, 32));
   80ee4:	00800804 	movi	r2,32
   80ee8:	10c00017 	ldw	r3,0(r2)
   80eec:	008002b4 	movhi	r2,10
   80ef0:	10911c04 	addi	r2,r2,17520
   80ef4:	10c00915 	stw	r3,36(r2)
		boot_sector_data.drive_number = *((volatile unsigned char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 36));
   80ef8:	00800904 	movi	r2,36
   80efc:	10c00003 	ldbu	r3,0(r2)
   80f00:	008002b4 	movhi	r2,10
   80f04:	10911c04 	addi	r2,r2,17520
   80f08:	10c00a05 	stb	r3,40(r2)
		boot_sector_data.current_head = *((volatile unsigned char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 37));
   80f0c:	00800944 	movi	r2,37
   80f10:	10c00003 	ldbu	r3,0(r2)
   80f14:	008002b4 	movhi	r2,10
   80f18:	10911c04 	addi	r2,r2,17520
   80f1c:	10c00a45 	stb	r3,41(r2)
		boot_sector_data.boot_signature = *((volatile unsigned char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 38));
   80f20:	00800984 	movi	r2,38
   80f24:	10c00003 	ldbu	r3,0(r2)
   80f28:	008002b4 	movhi	r2,10
   80f2c:	10911c04 	addi	r2,r2,17520
   80f30:	10c00a85 	stb	r3,42(r2)
		boot_sector_data.first_fat_sector_offset = boot_sector_data.reserved_sectors;
   80f34:	008002b4 	movhi	r2,10
   80f38:	10911c04 	addi	r2,r2,17520
   80f3c:	1080040b 	ldhu	r2,16(r2)
   80f40:	10ffffcc 	andi	r3,r2,65535
   80f44:	008002b4 	movhi	r2,10
   80f48:	10911c04 	addi	r2,r2,17520
   80f4c:	10c01115 	stw	r3,68(r2)
		boot_sector_data.second_fat_sector_offset = boot_sector_data.first_fat_sector_offset + boot_sector_data.number_of_sectors_per_table;
   80f50:	008002b4 	movhi	r2,10
   80f54:	10911c04 	addi	r2,r2,17520
   80f58:	10c01117 	ldw	r3,68(r2)
   80f5c:	008002b4 	movhi	r2,10
   80f60:	10911c04 	addi	r2,r2,17520
   80f64:	1080068b 	ldhu	r2,26(r2)
   80f68:	10bfffcc 	andi	r2,r2,65535
   80f6c:	1887883a 	add	r3,r3,r2
   80f70:	008002b4 	movhi	r2,10
   80f74:	10911c04 	addi	r2,r2,17520
   80f78:	10c01215 	stw	r3,72(r2)
		boot_sector_data.root_directory_sector_offset = boot_sector_data.second_fat_sector_offset + boot_sector_data.number_of_sectors_per_table; 
   80f7c:	008002b4 	movhi	r2,10
   80f80:	10911c04 	addi	r2,r2,17520
   80f84:	10c01217 	ldw	r3,72(r2)
   80f88:	008002b4 	movhi	r2,10
   80f8c:	10911c04 	addi	r2,r2,17520
   80f90:	1080068b 	ldhu	r2,26(r2)
   80f94:	10bfffcc 	andi	r2,r2,65535
   80f98:	1887883a 	add	r3,r3,r2
   80f9c:	008002b4 	movhi	r2,10
   80fa0:	10911c04 	addi	r2,r2,17520
   80fa4:	10c01315 	stw	r3,76(r2)
		boot_sector_data.data_sector_offset = boot_sector_data.root_directory_sector_offset + (32*boot_sector_data.max_number_of_dir_entires / boot_sector_data.sector_size_in_bytes);    
   80fa8:	008002b4 	movhi	r2,10
   80fac:	10911c04 	addi	r2,r2,17520
   80fb0:	14001317 	ldw	r16,76(r2)
   80fb4:	008002b4 	movhi	r2,10
   80fb8:	10911c04 	addi	r2,r2,17520
   80fbc:	1080050b 	ldhu	r2,20(r2)
   80fc0:	10bfffcc 	andi	r2,r2,65535
   80fc4:	1008917a 	slli	r4,r2,5
   80fc8:	008002b4 	movhi	r2,10
   80fcc:	10911c04 	addi	r2,r2,17520
   80fd0:	1080030b 	ldhu	r2,12(r2)
   80fd4:	117fffcc 	andi	r5,r2,65535
   80fd8:	00885e00 	call	885e0 <__divsi3>
   80fdc:	8087883a 	add	r3,r16,r2
   80fe0:	008002b4 	movhi	r2,10
   80fe4:	10911c04 	addi	r2,r2,17520
   80fe8:	10c01415 	stw	r3,80(r2)
		// printf("haha: %d\n", boot_sector_data.first_fat_sector_offset);
		// printf("haha: %d\n", boot_sector_data.second_fat_sector_offset);
		// printf("haha: %d\n", boot_sector_data.root_directory_sector_offset);
		// printf("haha: %d\n", boot_sector_data.data_sector_offset);
		
		if (boot_sector_data.number_of_sectors_in_partition != 0) {
   80fec:	008002b4 	movhi	r2,10
   80ff0:	10911c04 	addi	r2,r2,17520
   80ff4:	1080058b 	ldhu	r2,22(r2)
   80ff8:	10bfffcc 	andi	r2,r2,65535
   80ffc:	1005003a 	cmpeq	r2,r2,zero
   81000:	10001b1e 	bne	r2,zero,81070 <Check_for_DOS_FAT+0x3b0>
			if ((boot_sector_data.number_of_sectors_in_partition / boot_sector_data.sectors_per_cluster) < 4085)
   81004:	008002b4 	movhi	r2,10
   81008:	10911c04 	addi	r2,r2,17520
   8100c:	1080058b 	ldhu	r2,22(r2)
   81010:	113fffcc 	andi	r4,r2,65535
   81014:	008002b4 	movhi	r2,10
   81018:	10911c04 	addi	r2,r2,17520
   8101c:	10800383 	ldbu	r2,14(r2)
   81020:	11403fcc 	andi	r5,r2,255
   81024:	00885e00 	call	885e0 <__divsi3>
   81028:	1083fd48 	cmpgei	r2,r2,4085
   8102c:	1000081e 	bne	r2,zero,81050 <Check_for_DOS_FAT+0x390>
			{
				printf("FAT12 found\n");
   81030:	010002b4 	movhi	r4,10
   81034:	213ff304 	addi	r4,r4,-52
   81038:	00889700 	call	88970 <puts>
				boot_sector_data.bits_for_cluster_index = 12;
   8103c:	00c002b4 	movhi	r3,10
   81040:	18d11c04 	addi	r3,r3,17520
   81044:	00800304 	movi	r2,12
   81048:	18801085 	stb	r2,66(r3)
   8104c:	00002206 	br	810d8 <Check_for_DOS_FAT+0x418>
			} else {
				printf("FAT16 found\n");
   81050:	010002b4 	movhi	r4,10
   81054:	213ff604 	addi	r4,r4,-40
   81058:	00889700 	call	88970 <puts>
				boot_sector_data.bits_for_cluster_index = 16;
   8105c:	00c002b4 	movhi	r3,10
   81060:	18d11c04 	addi	r3,r3,17520
   81064:	00800404 	movi	r2,16
   81068:	18801085 	stb	r2,66(r3)
   8106c:	00001a06 	br	810d8 <Check_for_DOS_FAT+0x418>
			}
		} else {
			if ((boot_sector_data.total_sector_count_if_above_32MB / boot_sector_data.sectors_per_cluster) >= 65525)
   81070:	008002b4 	movhi	r2,10
   81074:	10911c04 	addi	r2,r2,17520
   81078:	11000917 	ldw	r4,36(r2)
   8107c:	008002b4 	movhi	r2,10
   81080:	10911c04 	addi	r2,r2,17520
   81084:	10800383 	ldbu	r2,14(r2)
   81088:	11403fcc 	andi	r5,r2,255
   8108c:	00886a00 	call	886a0 <__udivsi3>
   81090:	1007883a 	mov	r3,r2
   81094:	00bffd14 	movui	r2,65524
   81098:	10c0082e 	bgeu	r2,r3,810bc <Check_for_DOS_FAT+0x3fc>
			{
				printf("FAT32 found\n");
   8109c:	010002b4 	movhi	r4,10
   810a0:	213ff904 	addi	r4,r4,-28
   810a4:	00889700 	call	88970 <puts>
				boot_sector_data.bits_for_cluster_index = 32;
   810a8:	00c002b4 	movhi	r3,10
   810ac:	18d11c04 	addi	r3,r3,17520
   810b0:	00800804 	movi	r2,32
   810b4:	18801085 	stb	r2,66(r3)
   810b8:	00000706 	br	810d8 <Check_for_DOS_FAT+0x418>
			} else {
				printf("FAT16 found\n");
   810bc:	010002b4 	movhi	r4,10
   810c0:	213ff604 	addi	r4,r4,-40
   810c4:	00889700 	call	88970 <puts>
				boot_sector_data.bits_for_cluster_index = 16;
   810c8:	00c002b4 	movhi	r3,10
   810cc:	18d11c04 	addi	r3,r3,17520
   810d0:	00800404 	movi	r2,16
   810d4:	18801085 	stb	r2,66(r3)
			}			
		}
	    
		for (counter = 0; counter < 4; counter++)
   810d8:	e03ffd15 	stw	zero,-12(fp)
   810dc:	00000d06 	br	81114 <Check_for_DOS_FAT+0x454>
		{
			boot_sector_data.volume_id[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 39+counter));
   810e0:	e13ffd17 	ldw	r4,-12(fp)
   810e4:	e0bffd17 	ldw	r2,-12(fp)
   810e8:	108009c4 	addi	r2,r2,39
   810ec:	10800003 	ldbu	r2,0(r2)
   810f0:	1007883a 	mov	r3,r2
   810f4:	008002b4 	movhi	r2,10
   810f8:	10911c04 	addi	r2,r2,17520
   810fc:	2085883a 	add	r2,r4,r2
   81100:	10800a04 	addi	r2,r2,40
   81104:	10c000c5 	stb	r3,3(r2)
				printf("FAT16 found\n");
				boot_sector_data.bits_for_cluster_index = 16;
			}			
		}
	    
		for (counter = 0; counter < 4; counter++)
   81108:	e0bffd17 	ldw	r2,-12(fp)
   8110c:	10800044 	addi	r2,r2,1
   81110:	e0bffd15 	stw	r2,-12(fp)
   81114:	e0bffd17 	ldw	r2,-12(fp)
   81118:	10800110 	cmplti	r2,r2,4
   8111c:	103ff01e 	bne	r2,zero,810e0 <Check_for_DOS_FAT+0x420>
		{
			boot_sector_data.volume_id[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 39+counter));
		}    
		for (counter = 0; counter < 11; counter++)
   81120:	e03ffd15 	stw	zero,-12(fp)
   81124:	00000c06 	br	81158 <Check_for_DOS_FAT+0x498>
		{
			boot_sector_data.volume_label[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 43+counter));
   81128:	e13ffd17 	ldw	r4,-12(fp)
   8112c:	e0bffd17 	ldw	r2,-12(fp)
   81130:	10800ac4 	addi	r2,r2,43
   81134:	10c00003 	ldbu	r3,0(r2)
   81138:	008002b4 	movhi	r2,10
   8113c:	10911c04 	addi	r2,r2,17520
   81140:	2085883a 	add	r2,r4,r2
   81144:	10800b04 	addi	r2,r2,44
   81148:	10c000c5 	stb	r3,3(r2)
	    
		for (counter = 0; counter < 4; counter++)
		{
			boot_sector_data.volume_id[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 39+counter));
		}    
		for (counter = 0; counter < 11; counter++)
   8114c:	e0bffd17 	ldw	r2,-12(fp)
   81150:	10800044 	addi	r2,r2,1
   81154:	e0bffd15 	stw	r2,-12(fp)
   81158:	e0bffd17 	ldw	r2,-12(fp)
   8115c:	108002d0 	cmplti	r2,r2,11
   81160:	103ff11e 	bne	r2,zero,81128 <Check_for_DOS_FAT+0x468>
		{
			boot_sector_data.volume_label[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 43+counter));
		}    
		for (counter = 0; counter < 8; counter++)
   81164:	e03ffd15 	stw	zero,-12(fp)
   81168:	00000d06 	br	811a0 <Check_for_DOS_FAT+0x4e0>
		{
			boot_sector_data.file_system_type[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 54+counter));
   8116c:	e13ffd17 	ldw	r4,-12(fp)
   81170:	e0bffd17 	ldw	r2,-12(fp)
   81174:	10800d84 	addi	r2,r2,54
   81178:	10800003 	ldbu	r2,0(r2)
   8117c:	1007883a 	mov	r3,r2
   81180:	008002b4 	movhi	r2,10
   81184:	10911c04 	addi	r2,r2,17520
   81188:	2085883a 	add	r2,r4,r2
   8118c:	10800e04 	addi	r2,r2,56
   81190:	10c00085 	stb	r3,2(r2)
		}    
		for (counter = 0; counter < 11; counter++)
		{
			boot_sector_data.volume_label[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 43+counter));
		}    
		for (counter = 0; counter < 8; counter++)
   81194:	e0bffd17 	ldw	r2,-12(fp)
   81198:	10800044 	addi	r2,r2,1
   8119c:	e0bffd15 	stw	r2,-12(fp)
   811a0:	e0bffd17 	ldw	r2,-12(fp)
   811a4:	10800210 	cmplti	r2,r2,8
   811a8:	103ff01e 	bne	r2,zero,8116c <Check_for_DOS_FAT+0x4ac>
		{
			boot_sector_data.file_system_type[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 54+counter));
		}    
		// Clear file records
		for (counter = 0; counter < MAX_FILES_OPENED; counter++)
   811ac:	e03ffd15 	stw	zero,-12(fp)
   811b0:	00000a06 	br	811dc <Check_for_DOS_FAT+0x51c>
		{
			active_files[counter].in_use = false;
   811b4:	e0bffd17 	ldw	r2,-12(fp)
   811b8:	00c002b4 	movhi	r3,10
   811bc:	18d13104 	addi	r3,r3,17604
   811c0:	100491ba 	slli	r2,r2,6
   811c4:	10c5883a 	add	r2,r2,r3
   811c8:	10800f04 	addi	r2,r2,60
   811cc:	10000015 	stw	zero,0(r2)
		for (counter = 0; counter < 8; counter++)
		{
			boot_sector_data.file_system_type[counter] = *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, 54+counter));
		}    
		// Clear file records
		for (counter = 0; counter < MAX_FILES_OPENED; counter++)
   811d0:	e0bffd17 	ldw	r2,-12(fp)
   811d4:	10800044 	addi	r2,r2,1
   811d8:	e0bffd15 	stw	r2,-12(fp)
   811dc:	e0bffd17 	ldw	r2,-12(fp)
   811e0:	10800510 	cmplti	r2,r2,20
   811e4:	103ff31e 	bne	r2,zero,811b4 <Check_for_DOS_FAT+0x4f4>
		{
			active_files[counter].in_use = false;
		}
		result = true;
   811e8:	00800044 	movi	r2,1
   811ec:	e0bffe15 	stw	r2,-8(fp)
	int counter = 0;
	short int end;

	result = Read_Sector_Data(0, FAT_partition_start_sector);
	end =  (*((volatile short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, 0x1fe)));
	if (((end & 0xffff) == 0xaa55) && (result))
   811f0:	00000106 	br	811f8 <Check_for_DOS_FAT+0x538>
		}
		result = true;
	}
    else
    {
        result = false;
   811f4:	e03ffe15 	stw	zero,-8(fp)
    }
	return result;
   811f8:	e0bffe17 	ldw	r2,-8(fp)
}
   811fc:	e037883a 	mov	sp,fp
   81200:	dfc00217 	ldw	ra,8(sp)
   81204:	df000117 	ldw	fp,4(sp)
   81208:	dc000017 	ldw	r16,0(sp)
   8120c:	dec00304 	addi	sp,sp,12
   81210:	f800283a 	ret

00081214 <Look_for_FAT16>:


bool Look_for_FAT16(void)
// Read the SD card to determine if it contains a FAT16 partition.
{
   81214:	defffc04 	addi	sp,sp,-16
   81218:	dfc00315 	stw	ra,12(sp)
   8121c:	df000215 	stw	fp,8(sp)
   81220:	df000204 	addi	fp,sp,8
	bool result = false;
   81224:	e03fff15 	stw	zero,-4(fp)

	if (sd_card_is_Present())
   81228:	0082ef80 	call	82ef8 <sd_card_is_Present>
   8122c:	1005003a 	cmpeq	r2,r2,zero
   81230:	10003b1e 	bne	r2,zero,81320 <Look_for_FAT16+0x10c>
	{
		short int csd_file_format = *CSD_register_w0;
   81234:	d0a6f917 	ldw	r2,-25628(gp)
   81238:	1080000b 	ldhu	r2,0(r2)
   8123c:	e0bffe0d 	sth	r2,-8(fp)
        
		fat_partition_offset_in_512_byte_sectors = 0;
   81240:	d026fc15 	stw	zero,-25616(gp)
		fat_partition_size_in_512_byte_sectors = 0;              
   81244:	d026fd15 	stw	zero,-25612(gp)

		if (((csd_file_format & 0x8000) == 0) && ((csd_file_format & 0x0c00) != 0x0c00))
   81248:	e0bffe0f 	ldh	r2,-8(fp)
   8124c:	1004803a 	cmplt	r2,r2,zero
   81250:	1000331e 	bne	r2,zero,81320 <Look_for_FAT16+0x10c>
   81254:	e0bffe0b 	ldhu	r2,-8(fp)
   81258:	10bfffcc 	andi	r2,r2,65535
   8125c:	1083000c 	andi	r2,r2,3072
   81260:	10830020 	cmpeqi	r2,r2,3072
   81264:	10002e1e 	bne	r2,zero,81320 <Look_for_FAT16+0x10c>
		{
			if ((csd_file_format & 0x0c00) == 0x0400)
   81268:	e0bffe0b 	ldhu	r2,-8(fp)
   8126c:	10bfffcc 	andi	r2,r2,65535
   81270:	1083000c 	andi	r2,r2,3072
   81274:	10810018 	cmpnei	r2,r2,1024
   81278:	1000031e 	bne	r2,zero,81288 <Look_for_FAT16+0x74>
			{
				/* SD Card contains files stored in a DOS FAT (floppy like) file format, without a partition table */
				result = Check_for_DOS_FAT(0);
   8127c:	0009883a 	mov	r4,zero
   81280:	0080cc00 	call	80cc0 <Check_for_DOS_FAT>
   81284:	e0bfff15 	stw	r2,-4(fp)
			}
			if ((csd_file_format & 0x0c00) == 0x0000)
   81288:	e0bffe0b 	ldhu	r2,-8(fp)
   8128c:	10bfffcc 	andi	r2,r2,65535
   81290:	1083000c 	andi	r2,r2,3072
   81294:	1004c03a 	cmpne	r2,r2,zero
   81298:	1000061e 	bne	r2,zero,812b4 <Look_for_FAT16+0xa0>
			{
				/* SD Card contains files stored in a Hard disk-like file format that contains a partition table */
				if (Check_for_Master_Boot_Record())
   8129c:	00807a80 	call	807a8 <Check_for_Master_Boot_Record>
   812a0:	1005003a 	cmpeq	r2,r2,zero
   812a4:	1000031e 	bne	r2,zero,812b4 <Look_for_FAT16+0xa0>
				{
					result = Check_for_DOS_FAT(fat_partition_offset_in_512_byte_sectors);
   812a8:	d126fc17 	ldw	r4,-25616(gp)
   812ac:	0080cc00 	call	80cc0 <Check_for_DOS_FAT>
   812b0:	e0bfff15 	stw	r2,-4(fp)
				}                        
			}
			if (result == true)
   812b4:	e0bfff17 	ldw	r2,-4(fp)
   812b8:	10800058 	cmpnei	r2,r2,1
   812bc:	1000181e 	bne	r2,zero,81320 <Look_for_FAT16+0x10c>
			{
				// Accept only FAT16, not FAT12.
				if (boot_sector_data.bits_for_cluster_index == 12)
   812c0:	008002b4 	movhi	r2,10
   812c4:	10911c04 	addi	r2,r2,17520
   812c8:	10801083 	ldbu	r2,66(r2)
   812cc:	10803fcc 	andi	r2,r2,255
   812d0:	10800318 	cmpnei	r2,r2,12
   812d4:	1000021e 	bne	r2,zero,812e0 <Look_for_FAT16+0xcc>
				{
					result = false;
   812d8:	e03fff15 	stw	zero,-4(fp)
   812dc:	00001006 	br	81320 <Look_for_FAT16+0x10c>
				}
				else
				{
					if (boot_sector_data.number_of_sectors_in_partition != 0)
   812e0:	008002b4 	movhi	r2,10
   812e4:	10911c04 	addi	r2,r2,17520
   812e8:	1080058b 	ldhu	r2,22(r2)
   812ec:	10bfffcc 	andi	r2,r2,65535
   812f0:	1005003a 	cmpeq	r2,r2,zero
   812f4:	1000061e 	bne	r2,zero,81310 <Look_for_FAT16+0xfc>
						fat_partition_size_in_512_byte_sectors = boot_sector_data.number_of_sectors_in_partition;
   812f8:	008002b4 	movhi	r2,10
   812fc:	10911c04 	addi	r2,r2,17520
   81300:	1080058b 	ldhu	r2,22(r2)
   81304:	10bfffcc 	andi	r2,r2,65535
   81308:	d0a6fd15 	stw	r2,-25612(gp)
   8130c:	00000406 	br	81320 <Look_for_FAT16+0x10c>
					else
						fat_partition_size_in_512_byte_sectors = boot_sector_data.total_sector_count_if_above_32MB;
   81310:	008002b4 	movhi	r2,10
   81314:	10911c04 	addi	r2,r2,17520
   81318:	10800917 	ldw	r2,36(r2)
   8131c:	d0a6fd15 	stw	r2,-25612(gp)
				}
			}
		}
	}
	return result;
   81320:	e0bfff17 	ldw	r2,-4(fp)
}
   81324:	e037883a 	mov	sp,fp
   81328:	dfc00117 	ldw	ra,4(sp)
   8132c:	df000017 	ldw	fp,0(sp)
   81330:	dec00204 	addi	sp,sp,8
   81334:	f800283a 	ret

00081338 <filename_to_upper_case>:
 

void filename_to_upper_case(char *file_name)
// Change file name to upper case.
{
   81338:	defffb04 	addi	sp,sp,-20
   8133c:	dfc00415 	stw	ra,16(sp)
   81340:	df000315 	stw	fp,12(sp)
   81344:	df000304 	addi	fp,sp,12
   81348:	e13fff15 	stw	r4,-4(fp)
    int index;
    int length = strlen(file_name);
   8134c:	e13fff17 	ldw	r4,-4(fp)
   81350:	0088a580 	call	88a58 <strlen>
   81354:	e0bffd15 	stw	r2,-12(fp)
    
    for (index = 0; index < length; index++)
   81358:	e03ffe15 	stw	zero,-8(fp)
   8135c:	00002206 	br	813e8 <filename_to_upper_case+0xb0>
    {
        if ((file_name[index] >= 'a') && (file_name[index] <= 'z'))
   81360:	e0bffe17 	ldw	r2,-8(fp)
   81364:	1007883a 	mov	r3,r2
   81368:	e0bfff17 	ldw	r2,-4(fp)
   8136c:	1885883a 	add	r2,r3,r2
   81370:	10800003 	ldbu	r2,0(r2)
   81374:	10803fcc 	andi	r2,r2,255
   81378:	1080201c 	xori	r2,r2,128
   8137c:	10bfe004 	addi	r2,r2,-128
   81380:	10801850 	cmplti	r2,r2,97
   81384:	1000151e 	bne	r2,zero,813dc <filename_to_upper_case+0xa4>
   81388:	e0bffe17 	ldw	r2,-8(fp)
   8138c:	1007883a 	mov	r3,r2
   81390:	e0bfff17 	ldw	r2,-4(fp)
   81394:	1885883a 	add	r2,r3,r2
   81398:	10800003 	ldbu	r2,0(r2)
   8139c:	10803fcc 	andi	r2,r2,255
   813a0:	1080201c 	xori	r2,r2,128
   813a4:	10bfe004 	addi	r2,r2,-128
   813a8:	10801ec8 	cmpgei	r2,r2,123
   813ac:	10000b1e 	bne	r2,zero,813dc <filename_to_upper_case+0xa4>
        {
            file_name[index] = (file_name[index] - 'a') + 'A';
   813b0:	e0bffe17 	ldw	r2,-8(fp)
   813b4:	1007883a 	mov	r3,r2
   813b8:	e0bfff17 	ldw	r2,-4(fp)
   813bc:	1889883a 	add	r4,r3,r2
   813c0:	e0bffe17 	ldw	r2,-8(fp)
   813c4:	1007883a 	mov	r3,r2
   813c8:	e0bfff17 	ldw	r2,-4(fp)
   813cc:	1885883a 	add	r2,r3,r2
   813d0:	10800003 	ldbu	r2,0(r2)
   813d4:	10bff804 	addi	r2,r2,-32
   813d8:	20800005 	stb	r2,0(r4)
// Change file name to upper case.
{
    int index;
    int length = strlen(file_name);
    
    for (index = 0; index < length; index++)
   813dc:	e0bffe17 	ldw	r2,-8(fp)
   813e0:	10800044 	addi	r2,r2,1
   813e4:	e0bffe15 	stw	r2,-8(fp)
   813e8:	e0fffe17 	ldw	r3,-8(fp)
   813ec:	e0bffd17 	ldw	r2,-12(fp)
   813f0:	18bfdb16 	blt	r3,r2,81360 <filename_to_upper_case+0x28>
        if ((file_name[index] >= 'a') && (file_name[index] <= 'z'))
        {
            file_name[index] = (file_name[index] - 'a') + 'A';
        }
    }
}
   813f4:	e037883a 	mov	sp,fp
   813f8:	dfc00117 	ldw	ra,4(sp)
   813fc:	df000017 	ldw	fp,0(sp)
   81400:	dec00204 	addi	sp,sp,8
   81404:	f800283a 	ret

00081408 <check_file_name_for_FAT16_compliance>:


bool check_file_name_for_FAT16_compliance(char *file_name)
// Check if the file complies with FAT16 naming convention.
{
   81408:	defff804 	addi	sp,sp,-32
   8140c:	dfc00715 	stw	ra,28(sp)
   81410:	df000615 	stw	fp,24(sp)
   81414:	df000604 	addi	fp,sp,24
   81418:	e13fff15 	stw	r4,-4(fp)
    int length = strlen(file_name);
   8141c:	e13fff17 	ldw	r4,-4(fp)
   81420:	0088a580 	call	88a58 <strlen>
   81424:	e0bffe15 	stw	r2,-8(fp)
    int index;
    int last_dir_break_position = -1;
   81428:	00bfffc4 	movi	r2,-1
   8142c:	e0bffc15 	stw	r2,-16(fp)
    int last_period = -1;
   81430:	00bfffc4 	movi	r2,-1
   81434:	e0bffb15 	stw	r2,-20(fp)
    bool result = true;
   81438:	00800044 	movi	r2,1
   8143c:	e0bffa15 	stw	r2,-24(fp)
    
    for(index = 0; index < length; index++)
   81440:	e03ffd15 	stw	zero,-12(fp)
   81444:	00007606 	br	81620 <check_file_name_for_FAT16_compliance+0x218>
    {
        if ((file_name[index] == ' ') ||
   81448:	e0bffd17 	ldw	r2,-12(fp)
   8144c:	1007883a 	mov	r3,r2
   81450:	e0bfff17 	ldw	r2,-4(fp)
   81454:	1885883a 	add	r2,r3,r2
   81458:	10800003 	ldbu	r2,0(r2)
   8145c:	10803fcc 	andi	r2,r2,255
   81460:	1080201c 	xori	r2,r2,128
   81464:	10bfe004 	addi	r2,r2,-128
   81468:	10800820 	cmpeqi	r2,r2,32
   8146c:	1000431e 	bne	r2,zero,8157c <check_file_name_for_FAT16_compliance+0x174>
   81470:	e0bffd17 	ldw	r2,-12(fp)
   81474:	10ffffc4 	addi	r3,r2,-1
   81478:	e0bffc17 	ldw	r2,-16(fp)
   8147c:	1880141e 	bne	r3,r2,814d0 <check_file_name_for_FAT16_compliance+0xc8>
   81480:	e0bffd17 	ldw	r2,-12(fp)
   81484:	1007883a 	mov	r3,r2
   81488:	e0bfff17 	ldw	r2,-4(fp)
   8148c:	1885883a 	add	r2,r3,r2
   81490:	10800003 	ldbu	r2,0(r2)
   81494:	10803fcc 	andi	r2,r2,255
   81498:	1080201c 	xori	r2,r2,128
   8149c:	10bfe004 	addi	r2,r2,-128
   814a0:	10801720 	cmpeqi	r2,r2,92
   814a4:	1000351e 	bne	r2,zero,8157c <check_file_name_for_FAT16_compliance+0x174>
   814a8:	e0bffd17 	ldw	r2,-12(fp)
   814ac:	1007883a 	mov	r3,r2
   814b0:	e0bfff17 	ldw	r2,-4(fp)
   814b4:	1885883a 	add	r2,r3,r2
   814b8:	10800003 	ldbu	r2,0(r2)
   814bc:	10803fcc 	andi	r2,r2,255
   814c0:	1080201c 	xori	r2,r2,128
   814c4:	10bfe004 	addi	r2,r2,-128
   814c8:	10800be0 	cmpeqi	r2,r2,47
   814cc:	10002b1e 	bne	r2,zero,8157c <check_file_name_for_FAT16_compliance+0x174>
   814d0:	e0fffd17 	ldw	r3,-12(fp)
   814d4:	e0bffb17 	ldw	r2,-20(fp)
   814d8:	1885c83a 	sub	r2,r3,r2
   814dc:	10800258 	cmpnei	r2,r2,9
   814e0:	10000a1e 	bne	r2,zero,8150c <check_file_name_for_FAT16_compliance+0x104>
   814e4:	e0bffd17 	ldw	r2,-12(fp)
   814e8:	1007883a 	mov	r3,r2
   814ec:	e0bfff17 	ldw	r2,-4(fp)
   814f0:	1885883a 	add	r2,r3,r2
   814f4:	10800003 	ldbu	r2,0(r2)
   814f8:	10803fcc 	andi	r2,r2,255
   814fc:	1080201c 	xori	r2,r2,128
   81500:	10bfe004 	addi	r2,r2,-128
   81504:	10800b98 	cmpnei	r2,r2,46
   81508:	10001c1e 	bne	r2,zero,8157c <check_file_name_for_FAT16_compliance+0x174>
   8150c:	e0fffc17 	ldw	r3,-16(fp)
   81510:	e0bffb17 	ldw	r2,-20(fp)
   81514:	18801b26 	beq	r3,r2,81584 <check_file_name_for_FAT16_compliance+0x17c>
   81518:	e0fffd17 	ldw	r3,-12(fp)
   8151c:	e0bffb17 	ldw	r2,-20(fp)
   81520:	1885c83a 	sub	r2,r3,r2
   81524:	10800110 	cmplti	r2,r2,4
   81528:	1000161e 	bne	r2,zero,81584 <check_file_name_for_FAT16_compliance+0x17c>
   8152c:	e0bffd17 	ldw	r2,-12(fp)
   81530:	1007883a 	mov	r3,r2
   81534:	e0bfff17 	ldw	r2,-4(fp)
   81538:	1885883a 	add	r2,r3,r2
   8153c:	10800003 	ldbu	r2,0(r2)
   81540:	10803fcc 	andi	r2,r2,255
   81544:	1080201c 	xori	r2,r2,128
   81548:	10bfe004 	addi	r2,r2,-128
   8154c:	10801720 	cmpeqi	r2,r2,92
   81550:	10000c1e 	bne	r2,zero,81584 <check_file_name_for_FAT16_compliance+0x17c>
   81554:	e0bffd17 	ldw	r2,-12(fp)
   81558:	1007883a 	mov	r3,r2
   8155c:	e0bfff17 	ldw	r2,-4(fp)
   81560:	1885883a 	add	r2,r3,r2
   81564:	10800003 	ldbu	r2,0(r2)
   81568:	10803fcc 	andi	r2,r2,255
   8156c:	1080201c 	xori	r2,r2,128
   81570:	10bfe004 	addi	r2,r2,-128
   81574:	10800be0 	cmpeqi	r2,r2,47
   81578:	1000021e 	bne	r2,zero,81584 <check_file_name_for_FAT16_compliance+0x17c>
            ((index - last_period == 9) && (file_name[index] != '.')) ||
            ((last_dir_break_position != last_period) && (index - last_period > 3) &&
             (file_name[index] != '\\') && (file_name[index] != '/'))
           )
        {
            result = false;
   8157c:	e03ffa15 	stw	zero,-24(fp)
            break;
   81580:	00002a06 	br	8162c <check_file_name_for_FAT16_compliance+0x224>
        }
        if ((file_name[index] == '\\') || (file_name[index] == '/'))
   81584:	e0bffd17 	ldw	r2,-12(fp)
   81588:	1007883a 	mov	r3,r2
   8158c:	e0bfff17 	ldw	r2,-4(fp)
   81590:	1885883a 	add	r2,r3,r2
   81594:	10800003 	ldbu	r2,0(r2)
   81598:	10803fcc 	andi	r2,r2,255
   8159c:	1080201c 	xori	r2,r2,128
   815a0:	10bfe004 	addi	r2,r2,-128
   815a4:	10801720 	cmpeqi	r2,r2,92
   815a8:	10000a1e 	bne	r2,zero,815d4 <check_file_name_for_FAT16_compliance+0x1cc>
   815ac:	e0bffd17 	ldw	r2,-12(fp)
   815b0:	1007883a 	mov	r3,r2
   815b4:	e0bfff17 	ldw	r2,-4(fp)
   815b8:	1885883a 	add	r2,r3,r2
   815bc:	10800003 	ldbu	r2,0(r2)
   815c0:	10803fcc 	andi	r2,r2,255
   815c4:	1080201c 	xori	r2,r2,128
   815c8:	10bfe004 	addi	r2,r2,-128
   815cc:	10800bd8 	cmpnei	r2,r2,47
   815d0:	1000041e 	bne	r2,zero,815e4 <check_file_name_for_FAT16_compliance+0x1dc>
        {
            last_period = index;
   815d4:	e0bffd17 	ldw	r2,-12(fp)
   815d8:	e0bffb15 	stw	r2,-20(fp)
            last_dir_break_position = index;
   815dc:	e0bffd17 	ldw	r2,-12(fp)
   815e0:	e0bffc15 	stw	r2,-16(fp)
        }
        if (file_name[index] == '.')
   815e4:	e0bffd17 	ldw	r2,-12(fp)
   815e8:	1007883a 	mov	r3,r2
   815ec:	e0bfff17 	ldw	r2,-4(fp)
   815f0:	1885883a 	add	r2,r3,r2
   815f4:	10800003 	ldbu	r2,0(r2)
   815f8:	10803fcc 	andi	r2,r2,255
   815fc:	1080201c 	xori	r2,r2,128
   81600:	10bfe004 	addi	r2,r2,-128
   81604:	10800b98 	cmpnei	r2,r2,46
   81608:	1000021e 	bne	r2,zero,81614 <check_file_name_for_FAT16_compliance+0x20c>
        {
            last_period = index;
   8160c:	e0bffd17 	ldw	r2,-12(fp)
   81610:	e0bffb15 	stw	r2,-20(fp)
    int index;
    int last_dir_break_position = -1;
    int last_period = -1;
    bool result = true;
    
    for(index = 0; index < length; index++)
   81614:	e0bffd17 	ldw	r2,-12(fp)
   81618:	10800044 	addi	r2,r2,1
   8161c:	e0bffd15 	stw	r2,-12(fp)
   81620:	e0fffd17 	ldw	r3,-12(fp)
   81624:	e0bffe17 	ldw	r2,-8(fp)
   81628:	18bf8716 	blt	r3,r2,81448 <check_file_name_for_FAT16_compliance+0x40>
        if (file_name[index] == '.')
        {
            last_period = index;
        }
    }
    if ((file_name[length-1] == '\\') || (file_name[length-1] == '/'))
   8162c:	e0fffe17 	ldw	r3,-8(fp)
   81630:	e0bfff17 	ldw	r2,-4(fp)
   81634:	1885883a 	add	r2,r3,r2
   81638:	10bfffc4 	addi	r2,r2,-1
   8163c:	10800003 	ldbu	r2,0(r2)
   81640:	10803fcc 	andi	r2,r2,255
   81644:	1080201c 	xori	r2,r2,128
   81648:	10bfe004 	addi	r2,r2,-128
   8164c:	10801720 	cmpeqi	r2,r2,92
   81650:	10000a1e 	bne	r2,zero,8167c <check_file_name_for_FAT16_compliance+0x274>
   81654:	e0fffe17 	ldw	r3,-8(fp)
   81658:	e0bfff17 	ldw	r2,-4(fp)
   8165c:	1885883a 	add	r2,r3,r2
   81660:	10bfffc4 	addi	r2,r2,-1
   81664:	10800003 	ldbu	r2,0(r2)
   81668:	10803fcc 	andi	r2,r2,255
   8166c:	1080201c 	xori	r2,r2,128
   81670:	10bfe004 	addi	r2,r2,-128
   81674:	10800bd8 	cmpnei	r2,r2,47
   81678:	1000011e 	bne	r2,zero,81680 <check_file_name_for_FAT16_compliance+0x278>
    {
        result = false;
   8167c:	e03ffa15 	stw	zero,-24(fp)
    }
    return result;
   81680:	e0bffa17 	ldw	r2,-24(fp)
}
   81684:	e037883a 	mov	sp,fp
   81688:	dfc00117 	ldw	ra,4(sp)
   8168c:	df000017 	ldw	fp,0(sp)
   81690:	dec00204 	addi	sp,sp,8
   81694:	f800283a 	ret

00081698 <get_dir_divider_location>:


int get_dir_divider_location(char *name)
// Find a directory divider location.
{
   81698:	defffb04 	addi	sp,sp,-20
   8169c:	dfc00415 	stw	ra,16(sp)
   816a0:	df000315 	stw	fp,12(sp)
   816a4:	df000304 	addi	fp,sp,12
   816a8:	e13fff15 	stw	r4,-4(fp)
    int index = 0;
   816ac:	e03ffe15 	stw	zero,-8(fp)
    int length = strlen(name);
   816b0:	e13fff17 	ldw	r4,-4(fp)
   816b4:	0088a580 	call	88a58 <strlen>
   816b8:	e0bffd15 	stw	r2,-12(fp)
    
    for(index = 0; index < length; index++)
   816bc:	e03ffe15 	stw	zero,-8(fp)
   816c0:	00001706 	br	81720 <get_dir_divider_location+0x88>
    {
        if ((name[index] == '\\') || (name[index] == '/'))
   816c4:	e0bffe17 	ldw	r2,-8(fp)
   816c8:	1007883a 	mov	r3,r2
   816cc:	e0bfff17 	ldw	r2,-4(fp)
   816d0:	1885883a 	add	r2,r3,r2
   816d4:	10800003 	ldbu	r2,0(r2)
   816d8:	10803fcc 	andi	r2,r2,255
   816dc:	1080201c 	xori	r2,r2,128
   816e0:	10bfe004 	addi	r2,r2,-128
   816e4:	10801720 	cmpeqi	r2,r2,92
   816e8:	1000101e 	bne	r2,zero,8172c <get_dir_divider_location+0x94>
   816ec:	e0bffe17 	ldw	r2,-8(fp)
   816f0:	1007883a 	mov	r3,r2
   816f4:	e0bfff17 	ldw	r2,-4(fp)
   816f8:	1885883a 	add	r2,r3,r2
   816fc:	10800003 	ldbu	r2,0(r2)
   81700:	10803fcc 	andi	r2,r2,255
   81704:	1080201c 	xori	r2,r2,128
   81708:	10bfe004 	addi	r2,r2,-128
   8170c:	10800be0 	cmpeqi	r2,r2,47
   81710:	1000061e 	bne	r2,zero,8172c <get_dir_divider_location+0x94>
// Find a directory divider location.
{
    int index = 0;
    int length = strlen(name);
    
    for(index = 0; index < length; index++)
   81714:	e0bffe17 	ldw	r2,-8(fp)
   81718:	10800044 	addi	r2,r2,1
   8171c:	e0bffe15 	stw	r2,-8(fp)
   81720:	e0fffe17 	ldw	r3,-8(fp)
   81724:	e0bffd17 	ldw	r2,-12(fp)
   81728:	18bfe616 	blt	r3,r2,816c4 <get_dir_divider_location+0x2c>
        {
            break;
        }
    }
    
    if (index == length)
   8172c:	e0fffe17 	ldw	r3,-8(fp)
   81730:	e0bffd17 	ldw	r2,-12(fp)
   81734:	1880021e 	bne	r3,r2,81740 <get_dir_divider_location+0xa8>
    {
        index = -1;
   81738:	00bfffc4 	movi	r2,-1
   8173c:	e0bffe15 	stw	r2,-8(fp)
    }
    
    return index;
   81740:	e0bffe17 	ldw	r2,-8(fp)
}
   81744:	e037883a 	mov	sp,fp
   81748:	dfc00117 	ldw	ra,4(sp)
   8174c:	df000017 	ldw	fp,0(sp)
   81750:	dec00204 	addi	sp,sp,8
   81754:	f800283a 	ret

00081758 <match_file_record_to_name_ext>:


bool match_file_record_to_name_ext(t_file_record *file_record, char *name, char *extension)
/* See if the given name and extension match the file record. Return true if this is so, false otherwise. */
{
   81758:	defff604 	addi	sp,sp,-40
   8175c:	df000915 	stw	fp,36(sp)
   81760:	df000904 	addi	fp,sp,36
   81764:	e13ff915 	stw	r4,-28(fp)
   81768:	e17ffa15 	stw	r5,-24(fp)
   8176c:	e1bffb15 	stw	r6,-20(fp)
    bool match = true;
   81770:	00800044 	movi	r2,1
   81774:	e0bff815 	stw	r2,-32(fp)
	int index;

    for (index = 0; index < 8; index++)
   81778:	e03ff715 	stw	zero,-36(fp)
   8177c:	00005006 	br	818c0 <match_file_record_to_name_ext+0x168>
    {
        if (CHAR_TO_UPPER(file_record->name[index]) != CHAR_TO_UPPER(name[index]))
   81780:	e0fff717 	ldw	r3,-36(fp)
   81784:	e0bff917 	ldw	r2,-28(fp)
   81788:	10c5883a 	add	r2,r2,r3
   8178c:	10800003 	ldbu	r2,0(r2)
   81790:	10803fcc 	andi	r2,r2,255
   81794:	10801870 	cmpltui	r2,r2,97
   81798:	1000111e 	bne	r2,zero,817e0 <match_file_record_to_name_ext+0x88>
   8179c:	e0fff717 	ldw	r3,-36(fp)
   817a0:	e0bff917 	ldw	r2,-28(fp)
   817a4:	10c5883a 	add	r2,r2,r3
   817a8:	10800003 	ldbu	r2,0(r2)
   817ac:	10803fcc 	andi	r2,r2,255
   817b0:	10801ee8 	cmpgeui	r2,r2,123
   817b4:	10000a1e 	bne	r2,zero,817e0 <match_file_record_to_name_ext+0x88>
   817b8:	e0fff717 	ldw	r3,-36(fp)
   817bc:	e0bff917 	ldw	r2,-28(fp)
   817c0:	10c5883a 	add	r2,r2,r3
   817c4:	10800003 	ldbu	r2,0(r2)
   817c8:	10bff804 	addi	r2,r2,-32
   817cc:	10803fcc 	andi	r2,r2,255
   817d0:	1080201c 	xori	r2,r2,128
   817d4:	10bfe004 	addi	r2,r2,-128
   817d8:	e0bfff15 	stw	r2,-4(fp)
   817dc:	00000806 	br	81800 <match_file_record_to_name_ext+0xa8>
   817e0:	e0fff717 	ldw	r3,-36(fp)
   817e4:	e0bff917 	ldw	r2,-28(fp)
   817e8:	10c5883a 	add	r2,r2,r3
   817ec:	10800003 	ldbu	r2,0(r2)
   817f0:	10803fcc 	andi	r2,r2,255
   817f4:	1080201c 	xori	r2,r2,128
   817f8:	10bfe004 	addi	r2,r2,-128
   817fc:	e0bfff15 	stw	r2,-4(fp)
   81800:	e0bff717 	ldw	r2,-36(fp)
   81804:	1007883a 	mov	r3,r2
   81808:	e0bffa17 	ldw	r2,-24(fp)
   8180c:	1885883a 	add	r2,r3,r2
   81810:	10800003 	ldbu	r2,0(r2)
   81814:	10803fcc 	andi	r2,r2,255
   81818:	1080201c 	xori	r2,r2,128
   8181c:	10bfe004 	addi	r2,r2,-128
   81820:	10801850 	cmplti	r2,r2,97
   81824:	1000151e 	bne	r2,zero,8187c <match_file_record_to_name_ext+0x124>
   81828:	e0bff717 	ldw	r2,-36(fp)
   8182c:	1007883a 	mov	r3,r2
   81830:	e0bffa17 	ldw	r2,-24(fp)
   81834:	1885883a 	add	r2,r3,r2
   81838:	10800003 	ldbu	r2,0(r2)
   8183c:	10803fcc 	andi	r2,r2,255
   81840:	1080201c 	xori	r2,r2,128
   81844:	10bfe004 	addi	r2,r2,-128
   81848:	10801ec8 	cmpgei	r2,r2,123
   8184c:	10000b1e 	bne	r2,zero,8187c <match_file_record_to_name_ext+0x124>
   81850:	e0bff717 	ldw	r2,-36(fp)
   81854:	1007883a 	mov	r3,r2
   81858:	e0bffa17 	ldw	r2,-24(fp)
   8185c:	1885883a 	add	r2,r3,r2
   81860:	10800003 	ldbu	r2,0(r2)
   81864:	10bff804 	addi	r2,r2,-32
   81868:	10803fcc 	andi	r2,r2,255
   8186c:	1080201c 	xori	r2,r2,128
   81870:	10bfe004 	addi	r2,r2,-128
   81874:	e0bffe15 	stw	r2,-8(fp)
   81878:	00000906 	br	818a0 <match_file_record_to_name_ext+0x148>
   8187c:	e0bff717 	ldw	r2,-36(fp)
   81880:	1007883a 	mov	r3,r2
   81884:	e0bffa17 	ldw	r2,-24(fp)
   81888:	1885883a 	add	r2,r3,r2
   8188c:	10800003 	ldbu	r2,0(r2)
   81890:	10803fcc 	andi	r2,r2,255
   81894:	1080201c 	xori	r2,r2,128
   81898:	10bfe004 	addi	r2,r2,-128
   8189c:	e0bffe15 	stw	r2,-8(fp)
   818a0:	e0bfff17 	ldw	r2,-4(fp)
   818a4:	e0fffe17 	ldw	r3,-8(fp)
   818a8:	10c00226 	beq	r2,r3,818b4 <match_file_record_to_name_ext+0x15c>
        {
            match = false;
   818ac:	e03ff815 	stw	zero,-32(fp)
			break;
   818b0:	00000606 	br	818cc <match_file_record_to_name_ext+0x174>
/* See if the given name and extension match the file record. Return true if this is so, false otherwise. */
{
    bool match = true;
	int index;

    for (index = 0; index < 8; index++)
   818b4:	e0bff717 	ldw	r2,-36(fp)
   818b8:	10800044 	addi	r2,r2,1
   818bc:	e0bff715 	stw	r2,-36(fp)
   818c0:	e0bff717 	ldw	r2,-36(fp)
   818c4:	10800210 	cmplti	r2,r2,8
   818c8:	103fad1e 	bne	r2,zero,81780 <match_file_record_to_name_ext+0x28>
        {
            match = false;
			break;
        }
    }
    for (index = 0; index < 3; index++)
   818cc:	e03ff715 	stw	zero,-36(fp)
   818d0:	00005406 	br	81a24 <match_file_record_to_name_ext+0x2cc>
    {
        if (CHAR_TO_UPPER(file_record->extension[index]) != CHAR_TO_UPPER(extension[index]))
   818d4:	e0fff717 	ldw	r3,-36(fp)
   818d8:	e0bff917 	ldw	r2,-28(fp)
   818dc:	1885883a 	add	r2,r3,r2
   818e0:	10800204 	addi	r2,r2,8
   818e4:	10800003 	ldbu	r2,0(r2)
   818e8:	10803fcc 	andi	r2,r2,255
   818ec:	10801870 	cmpltui	r2,r2,97
   818f0:	1000131e 	bne	r2,zero,81940 <match_file_record_to_name_ext+0x1e8>
   818f4:	e0fff717 	ldw	r3,-36(fp)
   818f8:	e0bff917 	ldw	r2,-28(fp)
   818fc:	1885883a 	add	r2,r3,r2
   81900:	10800204 	addi	r2,r2,8
   81904:	10800003 	ldbu	r2,0(r2)
   81908:	10803fcc 	andi	r2,r2,255
   8190c:	10801ee8 	cmpgeui	r2,r2,123
   81910:	10000b1e 	bne	r2,zero,81940 <match_file_record_to_name_ext+0x1e8>
   81914:	e0fff717 	ldw	r3,-36(fp)
   81918:	e0bff917 	ldw	r2,-28(fp)
   8191c:	1885883a 	add	r2,r3,r2
   81920:	10800204 	addi	r2,r2,8
   81924:	10800003 	ldbu	r2,0(r2)
   81928:	10bff804 	addi	r2,r2,-32
   8192c:	10803fcc 	andi	r2,r2,255
   81930:	1080201c 	xori	r2,r2,128
   81934:	10bfe004 	addi	r2,r2,-128
   81938:	e0bffd15 	stw	r2,-12(fp)
   8193c:	00000906 	br	81964 <match_file_record_to_name_ext+0x20c>
   81940:	e0fff717 	ldw	r3,-36(fp)
   81944:	e0bff917 	ldw	r2,-28(fp)
   81948:	1885883a 	add	r2,r3,r2
   8194c:	10800204 	addi	r2,r2,8
   81950:	10800003 	ldbu	r2,0(r2)
   81954:	10803fcc 	andi	r2,r2,255
   81958:	1080201c 	xori	r2,r2,128
   8195c:	10bfe004 	addi	r2,r2,-128
   81960:	e0bffd15 	stw	r2,-12(fp)
   81964:	e0bff717 	ldw	r2,-36(fp)
   81968:	1007883a 	mov	r3,r2
   8196c:	e0bffb17 	ldw	r2,-20(fp)
   81970:	1885883a 	add	r2,r3,r2
   81974:	10800003 	ldbu	r2,0(r2)
   81978:	10803fcc 	andi	r2,r2,255
   8197c:	1080201c 	xori	r2,r2,128
   81980:	10bfe004 	addi	r2,r2,-128
   81984:	10801850 	cmplti	r2,r2,97
   81988:	1000151e 	bne	r2,zero,819e0 <match_file_record_to_name_ext+0x288>
   8198c:	e0bff717 	ldw	r2,-36(fp)
   81990:	1007883a 	mov	r3,r2
   81994:	e0bffb17 	ldw	r2,-20(fp)
   81998:	1885883a 	add	r2,r3,r2
   8199c:	10800003 	ldbu	r2,0(r2)
   819a0:	10803fcc 	andi	r2,r2,255
   819a4:	1080201c 	xori	r2,r2,128
   819a8:	10bfe004 	addi	r2,r2,-128
   819ac:	10801ec8 	cmpgei	r2,r2,123
   819b0:	10000b1e 	bne	r2,zero,819e0 <match_file_record_to_name_ext+0x288>
   819b4:	e0bff717 	ldw	r2,-36(fp)
   819b8:	1007883a 	mov	r3,r2
   819bc:	e0bffb17 	ldw	r2,-20(fp)
   819c0:	1885883a 	add	r2,r3,r2
   819c4:	10800003 	ldbu	r2,0(r2)
   819c8:	10bff804 	addi	r2,r2,-32
   819cc:	10803fcc 	andi	r2,r2,255
   819d0:	1080201c 	xori	r2,r2,128
   819d4:	10bfe004 	addi	r2,r2,-128
   819d8:	e0bffc15 	stw	r2,-16(fp)
   819dc:	00000906 	br	81a04 <match_file_record_to_name_ext+0x2ac>
   819e0:	e0bff717 	ldw	r2,-36(fp)
   819e4:	1007883a 	mov	r3,r2
   819e8:	e0bffb17 	ldw	r2,-20(fp)
   819ec:	1885883a 	add	r2,r3,r2
   819f0:	10800003 	ldbu	r2,0(r2)
   819f4:	10803fcc 	andi	r2,r2,255
   819f8:	1080201c 	xori	r2,r2,128
   819fc:	10bfe004 	addi	r2,r2,-128
   81a00:	e0bffc15 	stw	r2,-16(fp)
   81a04:	e0bffd17 	ldw	r2,-12(fp)
   81a08:	e0fffc17 	ldw	r3,-16(fp)
   81a0c:	10c00226 	beq	r2,r3,81a18 <match_file_record_to_name_ext+0x2c0>
        {
            match = false;
   81a10:	e03ff815 	stw	zero,-32(fp)
			break;
   81a14:	00000606 	br	81a30 <match_file_record_to_name_ext+0x2d8>
        {
            match = false;
			break;
        }
    }
    for (index = 0; index < 3; index++)
   81a18:	e0bff717 	ldw	r2,-36(fp)
   81a1c:	10800044 	addi	r2,r2,1
   81a20:	e0bff715 	stw	r2,-36(fp)
   81a24:	e0bff717 	ldw	r2,-36(fp)
   81a28:	108000d0 	cmplti	r2,r2,3
   81a2c:	103fa91e 	bne	r2,zero,818d4 <match_file_record_to_name_ext+0x17c>
        {
            match = false;
			break;
        }
    }
	return match;
   81a30:	e0bff817 	ldw	r2,-32(fp)
}
   81a34:	e037883a 	mov	sp,fp
   81a38:	df000017 	ldw	fp,0(sp)
   81a3c:	dec00104 	addi	sp,sp,4
   81a40:	f800283a 	ret

00081a44 <get_home_directory_cluster_for_file>:


bool get_home_directory_cluster_for_file(char *file_name, int *home_directory_cluster, t_file_record *file_record)
// Scan the directories in given in the file name and find the root directory for the file.
{
   81a44:	deffe604 	addi	sp,sp,-104
   81a48:	dfc01915 	stw	ra,100(sp)
   81a4c:	df001815 	stw	fp,96(sp)
   81a50:	df001804 	addi	fp,sp,96
   81a54:	e13ffc15 	stw	r4,-16(fp)
   81a58:	e17ffd15 	stw	r5,-12(fp)
   81a5c:	e1bffe15 	stw	r6,-8(fp)
    bool result = false;
   81a60:	e03ff715 	stw	zero,-36(fp)
    int home_dir_cluster = 0;
   81a64:	e03ff615 	stw	zero,-40(fp)
    int location, index;
    int start_location = 0;
   81a68:	e03ff315 	stw	zero,-52(fp)
    
    /* Get Next Directory. */
    location = get_dir_divider_location( file_name );
   81a6c:	e13ffc17 	ldw	r4,-16(fp)
   81a70:	00816980 	call	81698 <get_dir_divider_location>
   81a74:	e0bff515 	stw	r2,-44(fp)
    while (location > 0)
   81a78:	00012206 	br	81f04 <get_home_directory_cluster_for_file+0x4c0>
    {
        char name[8] = { ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' };
   81a7c:	00800804 	movi	r2,32
   81a80:	e0bff805 	stb	r2,-32(fp)
   81a84:	00800804 	movi	r2,32
   81a88:	e0bff845 	stb	r2,-31(fp)
   81a8c:	00800804 	movi	r2,32
   81a90:	e0bff885 	stb	r2,-30(fp)
   81a94:	00800804 	movi	r2,32
   81a98:	e0bff8c5 	stb	r2,-29(fp)
   81a9c:	00800804 	movi	r2,32
   81aa0:	e0bff905 	stb	r2,-28(fp)
   81aa4:	00800804 	movi	r2,32
   81aa8:	e0bff945 	stb	r2,-27(fp)
   81aac:	00800804 	movi	r2,32
   81ab0:	e0bff985 	stb	r2,-26(fp)
   81ab4:	00800804 	movi	r2,32
   81ab8:	e0bff9c5 	stb	r2,-25(fp)
        char extension[3] = { ' ', ' ', ' ' };
   81abc:	00800804 	movi	r2,32
   81ac0:	e0bffa05 	stb	r2,-24(fp)
   81ac4:	00800804 	movi	r2,32
   81ac8:	e0bffa45 	stb	r2,-23(fp)
   81acc:	00800804 	movi	r2,32
   81ad0:	e0bffa85 	stb	r2,-22(fp)
        int ext_index = -1;
   81ad4:	00bfffc4 	movi	r2,-1
   81ad8:	e0bff215 	stw	r2,-56(fp)
        int new_cluster = home_dir_cluster;
   81adc:	e0bff617 	ldw	r2,-40(fp)
   81ae0:	e0bff115 	stw	r2,-60(fp)
        
        // Get the name of the directory in name/extension format.
        for (index = 0; index < location; index++)
   81ae4:	e03ff415 	stw	zero,-48(fp)
   81ae8:	00002e06 	br	81ba4 <get_home_directory_cluster_for_file+0x160>
        {
            if (file_name[index+start_location] == '.')
   81aec:	e0fff417 	ldw	r3,-48(fp)
   81af0:	e0bff317 	ldw	r2,-52(fp)
   81af4:	1885883a 	add	r2,r3,r2
   81af8:	1007883a 	mov	r3,r2
   81afc:	e0bffc17 	ldw	r2,-16(fp)
   81b00:	1885883a 	add	r2,r3,r2
   81b04:	10800003 	ldbu	r2,0(r2)
   81b08:	10803fcc 	andi	r2,r2,255
   81b0c:	1080201c 	xori	r2,r2,128
   81b10:	10bfe004 	addi	r2,r2,-128
   81b14:	10800b98 	cmpnei	r2,r2,46
   81b18:	1000031e 	bne	r2,zero,81b28 <get_home_directory_cluster_for_file+0xe4>
            {
                ext_index = index;
   81b1c:	e0bff417 	ldw	r2,-48(fp)
   81b20:	e0bff215 	stw	r2,-56(fp)
   81b24:	00001c06 	br	81b98 <get_home_directory_cluster_for_file+0x154>
            }
            else if (ext_index < 0)
   81b28:	e0bff217 	ldw	r2,-56(fp)
   81b2c:	1004403a 	cmpge	r2,r2,zero
   81b30:	10000c1e 	bne	r2,zero,81b64 <get_home_directory_cluster_for_file+0x120>
            {
                name[index] = file_name[index+start_location];
   81b34:	e13ff417 	ldw	r4,-48(fp)
   81b38:	e0fff417 	ldw	r3,-48(fp)
   81b3c:	e0bff317 	ldw	r2,-52(fp)
   81b40:	1885883a 	add	r2,r3,r2
   81b44:	1007883a 	mov	r3,r2
   81b48:	e0bffc17 	ldw	r2,-16(fp)
   81b4c:	1885883a 	add	r2,r3,r2
   81b50:	10c00003 	ldbu	r3,0(r2)
   81b54:	e0bff804 	addi	r2,fp,-32
   81b58:	1105883a 	add	r2,r2,r4
   81b5c:	10c00005 	stb	r3,0(r2)
   81b60:	00000d06 	br	81b98 <get_home_directory_cluster_for_file+0x154>
            }
            else
            {
                extension[index-ext_index] = file_name[index+start_location];
   81b64:	e0fff417 	ldw	r3,-48(fp)
   81b68:	e0bff217 	ldw	r2,-56(fp)
   81b6c:	1889c83a 	sub	r4,r3,r2
   81b70:	e0fff417 	ldw	r3,-48(fp)
   81b74:	e0bff317 	ldw	r2,-52(fp)
   81b78:	1885883a 	add	r2,r3,r2
   81b7c:	1007883a 	mov	r3,r2
   81b80:	e0bffc17 	ldw	r2,-16(fp)
   81b84:	1885883a 	add	r2,r3,r2
   81b88:	10c00003 	ldbu	r3,0(r2)
   81b8c:	e0bffa04 	addi	r2,fp,-24
   81b90:	1105883a 	add	r2,r2,r4
   81b94:	10c00005 	stb	r3,0(r2)
        char extension[3] = { ' ', ' ', ' ' };
        int ext_index = -1;
        int new_cluster = home_dir_cluster;
        
        // Get the name of the directory in name/extension format.
        for (index = 0; index < location; index++)
   81b98:	e0bff417 	ldw	r2,-48(fp)
   81b9c:	10800044 	addi	r2,r2,1
   81ba0:	e0bff415 	stw	r2,-48(fp)
   81ba4:	e0fff417 	ldw	r3,-48(fp)
   81ba8:	e0bff517 	ldw	r2,-44(fp)
   81bac:	18bfcf16 	blt	r3,r2,81aec <get_home_directory_cluster_for_file+0xa8>
            {
                extension[index-ext_index] = file_name[index+start_location];
            }
        }
        
        if (home_dir_cluster == 0)
   81bb0:	e0bff617 	ldw	r2,-40(fp)
   81bb4:	1004c03a 	cmpne	r2,r2,zero
   81bb8:	1000551e 	bne	r2,zero,81d10 <get_home_directory_cluster_for_file+0x2cc>
        {
            /* We are in the root directory. Scan the directory (of predefined size) and see if you can find the specified file. */
            int max_root_dir_sectors = ((32*boot_sector_data.max_number_of_dir_entires) / boot_sector_data.sector_size_in_bytes);
   81bbc:	008002b4 	movhi	r2,10
   81bc0:	10911c04 	addi	r2,r2,17520
   81bc4:	1080050b 	ldhu	r2,20(r2)
   81bc8:	10bfffcc 	andi	r2,r2,65535
   81bcc:	1008917a 	slli	r4,r2,5
   81bd0:	008002b4 	movhi	r2,10
   81bd4:	10911c04 	addi	r2,r2,17520
   81bd8:	1080030b 	ldhu	r2,12(r2)
   81bdc:	117fffcc 	andi	r5,r2,65535
   81be0:	00885e00 	call	885e0 <__divsi3>
   81be4:	e0bff015 	stw	r2,-64(fp)
            int sector_index;
            
            for (sector_index = 0; sector_index < max_root_dir_sectors; sector_index++)
   81be8:	e03fef15 	stw	zero,-68(fp)
   81bec:	00003806 	br	81cd0 <get_home_directory_cluster_for_file+0x28c>
            {
                if (Read_Sector_Data(sector_index+boot_sector_data.root_directory_sector_offset, fat_partition_offset_in_512_byte_sectors))
   81bf0:	008002b4 	movhi	r2,10
   81bf4:	10911c04 	addi	r2,r2,17520
   81bf8:	10c01317 	ldw	r3,76(r2)
   81bfc:	e0bfef17 	ldw	r2,-68(fp)
   81c00:	1885883a 	add	r2,r3,r2
   81c04:	1009883a 	mov	r4,r2
   81c08:	d166fc17 	ldw	r5,-25616(gp)
   81c0c:	008053c0 	call	8053c <Read_Sector_Data>
   81c10:	1005003a 	cmpeq	r2,r2,zero
   81c14:	1000311e 	bne	r2,zero,81cdc <get_home_directory_cluster_for_file+0x298>
                {
                    int file_counter;
                    
                    for (file_counter = 0; file_counter < 16; file_counter++)
   81c18:	e03fee15 	stw	zero,-72(fp)
   81c1c:	00002306 	br	81cac <get_home_directory_cluster_for_file+0x268>
                    {
                       
                        // Read file record.
                        Read_File_Record_At_Offset(file_counter*32, file_record, 0, sector_index);
   81c20:	e0bfee17 	ldw	r2,-72(fp)
   81c24:	1008917a 	slli	r4,r2,5
   81c28:	e1ffef17 	ldw	r7,-68(fp)
   81c2c:	e17ffe17 	ldw	r5,-8(fp)
   81c30:	000d883a 	mov	r6,zero
   81c34:	00809000 	call	80900 <Read_File_Record_At_Offset>
                        if ((file_record->name[0] != 0xe5) && (file_record->name[0] != 0x00))
   81c38:	e0bffe17 	ldw	r2,-8(fp)
   81c3c:	10800003 	ldbu	r2,0(r2)
   81c40:	10803fcc 	andi	r2,r2,255
   81c44:	10803960 	cmpeqi	r2,r2,229
   81c48:	1000151e 	bne	r2,zero,81ca0 <get_home_directory_cluster_for_file+0x25c>
   81c4c:	e0bffe17 	ldw	r2,-8(fp)
   81c50:	10800003 	ldbu	r2,0(r2)
   81c54:	10803fcc 	andi	r2,r2,255
   81c58:	1005003a 	cmpeq	r2,r2,zero
   81c5c:	1000101e 	bne	r2,zero,81ca0 <get_home_directory_cluster_for_file+0x25c>
                        {
                            bool match = match_file_record_to_name_ext(file_record, name, extension);
   81c60:	e17ff804 	addi	r5,fp,-32
   81c64:	e1bffa04 	addi	r6,fp,-24
   81c68:	e13ffe17 	ldw	r4,-8(fp)
   81c6c:	00817580 	call	81758 <match_file_record_to_name_ext>
   81c70:	e0bfed15 	stw	r2,-76(fp)
                            if (match)
   81c74:	e0bfed17 	ldw	r2,-76(fp)
   81c78:	1005003a 	cmpeq	r2,r2,zero
   81c7c:	1000081e 	bne	r2,zero,81ca0 <get_home_directory_cluster_for_file+0x25c>
                            {
                                new_cluster = file_record->start_cluster_index;
   81c80:	e0bffe17 	ldw	r2,-8(fp)
   81c84:	1080058b 	ldhu	r2,22(r2)
   81c88:	10bfffcc 	andi	r2,r2,65535
   81c8c:	e0bff115 	stw	r2,-60(fp)
                                file_record->file_record_cluster = 1; // Home directory is a subdirectory in the root directory.
   81c90:	e0fffe17 	ldw	r3,-8(fp)
   81c94:	00800044 	movi	r2,1
   81c98:	18800a15 	stw	r2,40(r3)
                                break;
   81c9c:	00000606 	br	81cb8 <get_home_directory_cluster_for_file+0x274>
            {
                if (Read_Sector_Data(sector_index+boot_sector_data.root_directory_sector_offset, fat_partition_offset_in_512_byte_sectors))
                {
                    int file_counter;
                    
                    for (file_counter = 0; file_counter < 16; file_counter++)
   81ca0:	e0bfee17 	ldw	r2,-72(fp)
   81ca4:	10800044 	addi	r2,r2,1
   81ca8:	e0bfee15 	stw	r2,-72(fp)
   81cac:	e0bfee17 	ldw	r2,-72(fp)
   81cb0:	10800410 	cmplti	r2,r2,16
   81cb4:	103fda1e 	bne	r2,zero,81c20 <get_home_directory_cluster_for_file+0x1dc>
                }
                else
                {
                    break;
                }
                if (new_cluster != home_dir_cluster)
   81cb8:	e0fff117 	ldw	r3,-60(fp)
   81cbc:	e0bff617 	ldw	r2,-40(fp)
   81cc0:	1880061e 	bne	r3,r2,81cdc <get_home_directory_cluster_for_file+0x298>
        {
            /* We are in the root directory. Scan the directory (of predefined size) and see if you can find the specified file. */
            int max_root_dir_sectors = ((32*boot_sector_data.max_number_of_dir_entires) / boot_sector_data.sector_size_in_bytes);
            int sector_index;
            
            for (sector_index = 0; sector_index < max_root_dir_sectors; sector_index++)
   81cc4:	e0bfef17 	ldw	r2,-68(fp)
   81cc8:	10800044 	addi	r2,r2,1
   81ccc:	e0bfef15 	stw	r2,-68(fp)
   81cd0:	e0ffef17 	ldw	r3,-68(fp)
   81cd4:	e0bff017 	ldw	r2,-64(fp)
   81cd8:	18bfc516 	blt	r3,r2,81bf0 <get_home_directory_cluster_for_file+0x1ac>
                if (new_cluster != home_dir_cluster)
                {
                    break;
                }
            }
            if (new_cluster != home_dir_cluster)
   81cdc:	e0fff117 	ldw	r3,-60(fp)
   81ce0:	e0bff617 	ldw	r2,-40(fp)
   81ce4:	18800826 	beq	r3,r2,81d08 <get_home_directory_cluster_for_file+0x2c4>
            {
                // A valid directory is found, so go to it.
                home_dir_cluster = new_cluster;
   81ce8:	e0bff117 	ldw	r2,-60(fp)
   81cec:	e0bff615 	stw	r2,-40(fp)
                start_location = start_location+location+1;
   81cf0:	e0fff317 	ldw	r3,-52(fp)
   81cf4:	e0bff517 	ldw	r2,-44(fp)
   81cf8:	1885883a 	add	r2,r3,r2
   81cfc:	10800044 	addi	r2,r2,1
   81d00:	e0bff315 	stw	r2,-52(fp)
   81d04:	00007406 	br	81ed8 <get_home_directory_cluster_for_file+0x494>
            }
            else
            {
                // Directory path is invalid. 
                return false;
   81d08:	e03fff15 	stw	zero,-4(fp)
   81d0c:	00008c06 	br	81f40 <get_home_directory_cluster_for_file+0x4fc>
            }
        } else {
            // This is a subdirectory that can have any number of elements. So scan through it as though it was a file
            // and see if you can find the directory of interest.
            int cluster = home_dir_cluster;
   81d10:	e0bff617 	ldw	r2,-40(fp)
   81d14:	e0bfec15 	stw	r2,-80(fp)
            
            do {
                int start_sector = ( cluster - 2 ) * ( boot_sector_data.sectors_per_cluster ) + boot_sector_data.data_sector_offset;
   81d18:	e0bfec17 	ldw	r2,-80(fp)
   81d1c:	113fff84 	addi	r4,r2,-2
   81d20:	008002b4 	movhi	r2,10
   81d24:	10911c04 	addi	r2,r2,17520
   81d28:	10800383 	ldbu	r2,14(r2)
   81d2c:	11403fcc 	andi	r5,r2,255
   81d30:	00886b00 	call	886b0 <__mulsi3>
   81d34:	1007883a 	mov	r3,r2
   81d38:	008002b4 	movhi	r2,10
   81d3c:	10911c04 	addi	r2,r2,17520
   81d40:	10801417 	ldw	r2,80(r2)
   81d44:	1885883a 	add	r2,r3,r2
   81d48:	e0bfeb15 	stw	r2,-84(fp)
                int sector_index;
                
                for (sector_index = 0; sector_index < boot_sector_data.sectors_per_cluster; sector_index++)
   81d4c:	e03fea15 	stw	zero,-88(fp)
   81d50:	00003206 	br	81e1c <get_home_directory_cluster_for_file+0x3d8>
                {
                    if (Read_Sector_Data(sector_index + start_sector, fat_partition_offset_in_512_byte_sectors))
   81d54:	e0ffea17 	ldw	r3,-88(fp)
   81d58:	e0bfeb17 	ldw	r2,-84(fp)
   81d5c:	1889883a 	add	r4,r3,r2
   81d60:	d166fc17 	ldw	r5,-25616(gp)
   81d64:	008053c0 	call	8053c <Read_Sector_Data>
   81d68:	1005003a 	cmpeq	r2,r2,zero
   81d6c:	1000311e 	bne	r2,zero,81e34 <get_home_directory_cluster_for_file+0x3f0>
                    {
                        int file_counter;
                        
                        for (file_counter = 0; file_counter < 16; file_counter++)
   81d70:	e03fe915 	stw	zero,-92(fp)
   81d74:	00002006 	br	81df8 <get_home_directory_cluster_for_file+0x3b4>
                        {                         
                            // Read file record.
                            Read_File_Record_At_Offset(file_counter*32, file_record, cluster, sector_index);
   81d78:	e0bfe917 	ldw	r2,-92(fp)
   81d7c:	1008917a 	slli	r4,r2,5
   81d80:	e1bfec17 	ldw	r6,-80(fp)
   81d84:	e1ffea17 	ldw	r7,-88(fp)
   81d88:	e17ffe17 	ldw	r5,-8(fp)
   81d8c:	00809000 	call	80900 <Read_File_Record_At_Offset>
                            if ((file_record->name[0] != 0xe5) && (file_record->name[0] != 0x00))
   81d90:	e0bffe17 	ldw	r2,-8(fp)
   81d94:	10800003 	ldbu	r2,0(r2)
   81d98:	10803fcc 	andi	r2,r2,255
   81d9c:	10803960 	cmpeqi	r2,r2,229
   81da0:	1000121e 	bne	r2,zero,81dec <get_home_directory_cluster_for_file+0x3a8>
   81da4:	e0bffe17 	ldw	r2,-8(fp)
   81da8:	10800003 	ldbu	r2,0(r2)
   81dac:	10803fcc 	andi	r2,r2,255
   81db0:	1005003a 	cmpeq	r2,r2,zero
   81db4:	10000d1e 	bne	r2,zero,81dec <get_home_directory_cluster_for_file+0x3a8>
                            {
								bool match = match_file_record_to_name_ext(file_record, name, extension);
   81db8:	e17ff804 	addi	r5,fp,-32
   81dbc:	e1bffa04 	addi	r6,fp,-24
   81dc0:	e13ffe17 	ldw	r4,-8(fp)
   81dc4:	00817580 	call	81758 <match_file_record_to_name_ext>
   81dc8:	e0bfe815 	stw	r2,-96(fp)
                                if (match)
   81dcc:	e0bfe817 	ldw	r2,-96(fp)
   81dd0:	1005003a 	cmpeq	r2,r2,zero
   81dd4:	1000051e 	bne	r2,zero,81dec <get_home_directory_cluster_for_file+0x3a8>
                                {
                                    new_cluster = file_record->start_cluster_index;                                   
   81dd8:	e0bffe17 	ldw	r2,-8(fp)
   81ddc:	1080058b 	ldhu	r2,22(r2)
   81de0:	10bfffcc 	andi	r2,r2,65535
   81de4:	e0bff115 	stw	r2,-60(fp)
                                    break;
   81de8:	00000606 	br	81e04 <get_home_directory_cluster_for_file+0x3c0>
                {
                    if (Read_Sector_Data(sector_index + start_sector, fat_partition_offset_in_512_byte_sectors))
                    {
                        int file_counter;
                        
                        for (file_counter = 0; file_counter < 16; file_counter++)
   81dec:	e0bfe917 	ldw	r2,-92(fp)
   81df0:	10800044 	addi	r2,r2,1
   81df4:	e0bfe915 	stw	r2,-92(fp)
   81df8:	e0bfe917 	ldw	r2,-92(fp)
   81dfc:	10800410 	cmplti	r2,r2,16
   81e00:	103fdd1e 	bne	r2,zero,81d78 <get_home_directory_cluster_for_file+0x334>
                    }
                    else
                    {
                        break;
                    }
                    if (new_cluster != home_dir_cluster)
   81e04:	e0fff117 	ldw	r3,-60(fp)
   81e08:	e0bff617 	ldw	r2,-40(fp)
   81e0c:	1880091e 	bne	r3,r2,81e34 <get_home_directory_cluster_for_file+0x3f0>
            
            do {
                int start_sector = ( cluster - 2 ) * ( boot_sector_data.sectors_per_cluster ) + boot_sector_data.data_sector_offset;
                int sector_index;
                
                for (sector_index = 0; sector_index < boot_sector_data.sectors_per_cluster; sector_index++)
   81e10:	e0bfea17 	ldw	r2,-88(fp)
   81e14:	10800044 	addi	r2,r2,1
   81e18:	e0bfea15 	stw	r2,-88(fp)
   81e1c:	008002b4 	movhi	r2,10
   81e20:	10911c04 	addi	r2,r2,17520
   81e24:	10800383 	ldbu	r2,14(r2)
   81e28:	10c03fcc 	andi	r3,r2,255
   81e2c:	e0bfea17 	ldw	r2,-88(fp)
   81e30:	10ffc816 	blt	r2,r3,81d54 <get_home_directory_cluster_for_file+0x310>
                        break;
                    }
                }
                // If this is the end of the cluster and the directory has not been found, then see if there is another cluster
                // that holds data for the current directory.
                if (new_cluster == home_dir_cluster)
   81e34:	e0fff117 	ldw	r3,-60(fp)
   81e38:	e0bff617 	ldw	r2,-40(fp)
   81e3c:	1880131e 	bne	r3,r2,81e8c <get_home_directory_cluster_for_file+0x448>
                {
					unsigned short int next_cluster;

					if (get_cluster_flag(new_cluster, &next_cluster))
   81e40:	e13ff117 	ldw	r4,-60(fp)
   81e44:	e17ffb04 	addi	r5,fp,-20
   81e48:	008062c0 	call	8062c <get_cluster_flag>
   81e4c:	1005003a 	cmpeq	r2,r2,zero
   81e50:	10000c1e 	bne	r2,zero,81e84 <get_home_directory_cluster_for_file+0x440>
					{
						// The directory needs to be expanded to store more files.
						if ((next_cluster & 0x0000fff8) == 0x0000fff8)
   81e54:	e0bffb0b 	ldhu	r2,-20(fp)
   81e58:	10bfffcc 	andi	r2,r2,65535
   81e5c:	10fffe0c 	andi	r3,r2,65528
   81e60:	00bffe14 	movui	r2,65528
   81e64:	1880021e 	bne	r3,r2,81e70 <get_home_directory_cluster_for_file+0x42c>
						{
							return false;
   81e68:	e03fff15 	stw	zero,-4(fp)
   81e6c:	00003406 	br	81f40 <get_home_directory_cluster_for_file+0x4fc>
						}
						new_cluster = (next_cluster & 0x0000fff8);
   81e70:	e0bffb0b 	ldhu	r2,-20(fp)
   81e74:	10bfffcc 	andi	r2,r2,65535
   81e78:	10bffe0c 	andi	r2,r2,65528
   81e7c:	e0bff115 	stw	r2,-60(fp)
   81e80:	00000206 	br	81e8c <get_home_directory_cluster_for_file+0x448>
					}
					else
					{
						// Directory path is invalid.                 
						return false;
   81e84:	e03fff15 	stw	zero,-4(fp)
   81e88:	00002d06 	br	81f40 <get_home_directory_cluster_for_file+0x4fc>
					}
                }              
            } while ((cluster < 0x0000fff8) && (new_cluster == home_dir_cluster));
   81e8c:	e0ffec17 	ldw	r3,-80(fp)
   81e90:	00bffdd4 	movui	r2,65527
   81e94:	10c00316 	blt	r2,r3,81ea4 <get_home_directory_cluster_for_file+0x460>
   81e98:	e0fff117 	ldw	r3,-60(fp)
   81e9c:	e0bff617 	ldw	r2,-40(fp)
   81ea0:	18bf9d26 	beq	r3,r2,81d18 <get_home_directory_cluster_for_file+0x2d4>
            if (new_cluster != home_dir_cluster)
   81ea4:	e0fff117 	ldw	r3,-60(fp)
   81ea8:	e0bff617 	ldw	r2,-40(fp)
   81eac:	18800826 	beq	r3,r2,81ed0 <get_home_directory_cluster_for_file+0x48c>
            {
                // A valid directory is found, so go to it.
                home_dir_cluster = new_cluster;
   81eb0:	e0bff117 	ldw	r2,-60(fp)
   81eb4:	e0bff615 	stw	r2,-40(fp)
                start_location = start_location+location+1;
   81eb8:	e0fff317 	ldw	r3,-52(fp)
   81ebc:	e0bff517 	ldw	r2,-44(fp)
   81ec0:	1885883a 	add	r2,r3,r2
   81ec4:	10800044 	addi	r2,r2,1
   81ec8:	e0bff315 	stw	r2,-52(fp)
   81ecc:	00000206 	br	81ed8 <get_home_directory_cluster_for_file+0x494>
            }
            else
            {
                // Directory path is invalid. 
                return false;
   81ed0:	e03fff15 	stw	zero,-4(fp)
   81ed4:	00001a06 	br	81f40 <get_home_directory_cluster_for_file+0x4fc>
            }            
        }
        location = get_dir_divider_location(&(file_name[start_location]));
   81ed8:	e0bff317 	ldw	r2,-52(fp)
   81edc:	1007883a 	mov	r3,r2
   81ee0:	e0bffc17 	ldw	r2,-16(fp)
   81ee4:	1889883a 	add	r4,r3,r2
   81ee8:	00816980 	call	81698 <get_dir_divider_location>
   81eec:	e0bff515 	stw	r2,-44(fp)
        if (location < 0)
   81ef0:	e0bff517 	ldw	r2,-44(fp)
   81ef4:	1004403a 	cmpge	r2,r2,zero
   81ef8:	1000021e 	bne	r2,zero,81f04 <get_home_directory_cluster_for_file+0x4c0>
        {
            // Directory has been located.
            result = true;
   81efc:	00800044 	movi	r2,1
   81f00:	e0bff715 	stw	r2,-36(fp)
    int location, index;
    int start_location = 0;
    
    /* Get Next Directory. */
    location = get_dir_divider_location( file_name );
    while (location > 0)
   81f04:	e0bff517 	ldw	r2,-44(fp)
   81f08:	10800048 	cmpgei	r2,r2,1
   81f0c:	103edb1e 	bne	r2,zero,81a7c <get_home_directory_cluster_for_file+0x38>
            // Directory has been located.
            result = true;
        }
    }
    
    *home_directory_cluster = home_dir_cluster;
   81f10:	e0fffd17 	ldw	r3,-12(fp)
   81f14:	e0bff617 	ldw	r2,-40(fp)
   81f18:	18800015 	stw	r2,0(r3)
    if (home_dir_cluster == 0)
   81f1c:	e0bff617 	ldw	r2,-40(fp)
   81f20:	1004c03a 	cmpne	r2,r2,zero
   81f24:	1000041e 	bne	r2,zero,81f38 <get_home_directory_cluster_for_file+0x4f4>
    {
        file_record->file_record_cluster = 0; // Home directory is the root directory.
   81f28:	e0bffe17 	ldw	r2,-8(fp)
   81f2c:	10000a15 	stw	zero,40(r2)
		result = true;
   81f30:	00800044 	movi	r2,1
   81f34:	e0bff715 	stw	r2,-36(fp)
    }
    return result;
   81f38:	e0bff717 	ldw	r2,-36(fp)
   81f3c:	e0bfff15 	stw	r2,-4(fp)
   81f40:	e0bfff17 	ldw	r2,-4(fp)
}
   81f44:	e037883a 	mov	sp,fp
   81f48:	dfc00117 	ldw	ra,4(sp)
   81f4c:	df000017 	ldw	fp,0(sp)
   81f50:	dec00204 	addi	sp,sp,8
   81f54:	f800283a 	ret

00081f58 <find_file_in_directory>:


bool find_file_in_directory(int directory_start_cluster, char *file_name, t_file_record *file_record)
// Given a cluster and a file name, check if the file already exists. Return the file record if the file is found.
{
   81f58:	deffe704 	addi	sp,sp,-100
   81f5c:	dfc01815 	stw	ra,96(sp)
   81f60:	df001715 	stw	fp,92(sp)
   81f64:	df001704 	addi	fp,sp,92
   81f68:	e13ffc15 	stw	r4,-16(fp)
   81f6c:	e17ffd15 	stw	r5,-12(fp)
   81f70:	e1bffe15 	stw	r6,-8(fp)
    int location = get_dir_divider_location( file_name );
   81f74:	e13ffd17 	ldw	r4,-12(fp)
   81f78:	00816980 	call	81698 <get_dir_divider_location>
   81f7c:	e0bff715 	stw	r2,-36(fp)
    int last_dir_separator = 0;
   81f80:	e03ff615 	stw	zero,-40(fp)
    char name[8] = { ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' };
   81f84:	00800804 	movi	r2,32
   81f88:	e0bff805 	stb	r2,-32(fp)
   81f8c:	00800804 	movi	r2,32
   81f90:	e0bff845 	stb	r2,-31(fp)
   81f94:	00800804 	movi	r2,32
   81f98:	e0bff885 	stb	r2,-30(fp)
   81f9c:	00800804 	movi	r2,32
   81fa0:	e0bff8c5 	stb	r2,-29(fp)
   81fa4:	00800804 	movi	r2,32
   81fa8:	e0bff905 	stb	r2,-28(fp)
   81fac:	00800804 	movi	r2,32
   81fb0:	e0bff945 	stb	r2,-27(fp)
   81fb4:	00800804 	movi	r2,32
   81fb8:	e0bff985 	stb	r2,-26(fp)
   81fbc:	00800804 	movi	r2,32
   81fc0:	e0bff9c5 	stb	r2,-25(fp)
    char extension[3] = { ' ', ' ', ' ' };
   81fc4:	00800804 	movi	r2,32
   81fc8:	e0bffa05 	stb	r2,-24(fp)
   81fcc:	00800804 	movi	r2,32
   81fd0:	e0bffa45 	stb	r2,-23(fp)
   81fd4:	00800804 	movi	r2,32
   81fd8:	e0bffa85 	stb	r2,-22(fp)
    int ext_index = -1;
   81fdc:	00bfffc4 	movi	r2,-1
   81fe0:	e0bff515 	stw	r2,-44(fp)
    int cluster = directory_start_cluster;
   81fe4:	e0bffc17 	ldw	r2,-16(fp)
   81fe8:	e0bff415 	stw	r2,-48(fp)
    int index;
	int length = strlen(file_name);
   81fec:	e13ffd17 	ldw	r4,-12(fp)
   81ff0:	0088a580 	call	88a58 <strlen>
   81ff4:	e0bff215 	stw	r2,-56(fp)
    bool result = false;
   81ff8:	e03ff115 	stw	zero,-60(fp)
    
    // Skip through all directory separators.
    while (location > 0)
   81ffc:	00000b06 	br	8202c <find_file_in_directory+0xd4>
    {
        last_dir_separator = last_dir_separator+location+1;
   82000:	e0fff617 	ldw	r3,-40(fp)
   82004:	e0bff717 	ldw	r2,-36(fp)
   82008:	1885883a 	add	r2,r3,r2
   8200c:	10800044 	addi	r2,r2,1
   82010:	e0bff615 	stw	r2,-40(fp)
        location = get_dir_divider_location( &(file_name[last_dir_separator]) );
   82014:	e0bff617 	ldw	r2,-40(fp)
   82018:	1007883a 	mov	r3,r2
   8201c:	e0bffd17 	ldw	r2,-12(fp)
   82020:	1889883a 	add	r4,r3,r2
   82024:	00816980 	call	81698 <get_dir_divider_location>
   82028:	e0bff715 	stw	r2,-36(fp)
    int index;
	int length = strlen(file_name);
    bool result = false;
    
    // Skip through all directory separators.
    while (location > 0)
   8202c:	e0bff717 	ldw	r2,-36(fp)
   82030:	10800048 	cmpgei	r2,r2,1
   82034:	103ff21e 	bne	r2,zero,82000 <find_file_in_directory+0xa8>
        last_dir_separator = last_dir_separator+location+1;
        location = get_dir_divider_location( &(file_name[last_dir_separator]) );
    }
        
    // Get the name of the file in name/extension format.
    for (index = last_dir_separator; index < length; index++)
   82038:	e0bff617 	ldw	r2,-40(fp)
   8203c:	e0bff315 	stw	r2,-52(fp)
   82040:	00002b06 	br	820f0 <find_file_in_directory+0x198>
    {
        if (file_name[index] == '.')
   82044:	e0bff317 	ldw	r2,-52(fp)
   82048:	1007883a 	mov	r3,r2
   8204c:	e0bffd17 	ldw	r2,-12(fp)
   82050:	1885883a 	add	r2,r3,r2
   82054:	10800003 	ldbu	r2,0(r2)
   82058:	10803fcc 	andi	r2,r2,255
   8205c:	1080201c 	xori	r2,r2,128
   82060:	10bfe004 	addi	r2,r2,-128
   82064:	10800b98 	cmpnei	r2,r2,46
   82068:	1000031e 	bne	r2,zero,82078 <find_file_in_directory+0x120>
        {
            ext_index = index;
   8206c:	e0bff317 	ldw	r2,-52(fp)
   82070:	e0bff515 	stw	r2,-44(fp)
   82074:	00001b06 	br	820e4 <find_file_in_directory+0x18c>
        }
        else if (ext_index < 0)
   82078:	e0bff517 	ldw	r2,-44(fp)
   8207c:	1004403a 	cmpge	r2,r2,zero
   82080:	10000c1e 	bne	r2,zero,820b4 <find_file_in_directory+0x15c>
        {
            name[index-last_dir_separator] = file_name[index];
   82084:	e0fff317 	ldw	r3,-52(fp)
   82088:	e0bff617 	ldw	r2,-40(fp)
   8208c:	1889c83a 	sub	r4,r3,r2
   82090:	e0bff317 	ldw	r2,-52(fp)
   82094:	1007883a 	mov	r3,r2
   82098:	e0bffd17 	ldw	r2,-12(fp)
   8209c:	1885883a 	add	r2,r3,r2
   820a0:	10c00003 	ldbu	r3,0(r2)
   820a4:	e0bff804 	addi	r2,fp,-32
   820a8:	1105883a 	add	r2,r2,r4
   820ac:	10c00005 	stb	r3,0(r2)
   820b0:	00000c06 	br	820e4 <find_file_in_directory+0x18c>
        }
        else
        {
            extension[index-ext_index-1] = file_name[index];
   820b4:	e0fff317 	ldw	r3,-52(fp)
   820b8:	e0bff517 	ldw	r2,-44(fp)
   820bc:	1885c83a 	sub	r2,r3,r2
   820c0:	113fffc4 	addi	r4,r2,-1
   820c4:	e0bff317 	ldw	r2,-52(fp)
   820c8:	1007883a 	mov	r3,r2
   820cc:	e0bffd17 	ldw	r2,-12(fp)
   820d0:	1885883a 	add	r2,r3,r2
   820d4:	10c00003 	ldbu	r3,0(r2)
   820d8:	e0bffa04 	addi	r2,fp,-24
   820dc:	1105883a 	add	r2,r2,r4
   820e0:	10c00005 	stb	r3,0(r2)
        last_dir_separator = last_dir_separator+location+1;
        location = get_dir_divider_location( &(file_name[last_dir_separator]) );
    }
        
    // Get the name of the file in name/extension format.
    for (index = last_dir_separator; index < length; index++)
   820e4:	e0bff317 	ldw	r2,-52(fp)
   820e8:	10800044 	addi	r2,r2,1
   820ec:	e0bff315 	stw	r2,-52(fp)
   820f0:	e0fff317 	ldw	r3,-52(fp)
   820f4:	e0bff217 	ldw	r2,-56(fp)
   820f8:	18bfd216 	blt	r3,r2,82044 <find_file_in_directory+0xec>
            extension[index-ext_index-1] = file_name[index];
        }
    }

    // Look for the file.
    if (directory_start_cluster == 0)
   820fc:	e0bffc17 	ldw	r2,-16(fp)
   82100:	1004c03a 	cmpne	r2,r2,zero
   82104:	1000441e 	bne	r2,zero,82218 <find_file_in_directory+0x2c0>
    {
        /* We are in the root directory. Scan the directory (of predefined size) and see if you can find the specified file. */
        int max_root_dir_sectors = ((32*boot_sector_data.max_number_of_dir_entires) / boot_sector_data.sector_size_in_bytes);
   82108:	008002b4 	movhi	r2,10
   8210c:	10911c04 	addi	r2,r2,17520
   82110:	1080050b 	ldhu	r2,20(r2)
   82114:	10bfffcc 	andi	r2,r2,65535
   82118:	1008917a 	slli	r4,r2,5
   8211c:	008002b4 	movhi	r2,10
   82120:	10911c04 	addi	r2,r2,17520
   82124:	1080030b 	ldhu	r2,12(r2)
   82128:	117fffcc 	andi	r5,r2,65535
   8212c:	00885e00 	call	885e0 <__divsi3>
   82130:	e0bff015 	stw	r2,-64(fp)
        int sector_index;
        
        for (sector_index = 0; sector_index < max_root_dir_sectors; sector_index++)
   82134:	e03fef15 	stw	zero,-68(fp)
   82138:	00003306 	br	82208 <find_file_in_directory+0x2b0>
        {
            if (Read_Sector_Data(   sector_index + boot_sector_data.root_directory_sector_offset,
   8213c:	008002b4 	movhi	r2,10
   82140:	10911c04 	addi	r2,r2,17520
   82144:	10c01317 	ldw	r3,76(r2)
   82148:	e0bfef17 	ldw	r2,-68(fp)
   8214c:	1885883a 	add	r2,r3,r2
   82150:	1009883a 	mov	r4,r2
   82154:	d166fc17 	ldw	r5,-25616(gp)
   82158:	008053c0 	call	8053c <Read_Sector_Data>
   8215c:	1005003a 	cmpeq	r2,r2,zero
   82160:	10008e1e 	bne	r2,zero,8239c <find_file_in_directory+0x444>
                                    fat_partition_offset_in_512_byte_sectors))
            {
                int file_counter;
                
                for (file_counter = 0; file_counter < 16; file_counter++)
   82164:	e03fee15 	stw	zero,-72(fp)
   82168:	00001e06 	br	821e4 <find_file_in_directory+0x28c>
                {
                    // Read file record.
                    Read_File_Record_At_Offset(file_counter*32, file_record, 0, sector_index);
   8216c:	e0bfee17 	ldw	r2,-72(fp)
   82170:	1008917a 	slli	r4,r2,5
   82174:	e1ffef17 	ldw	r7,-68(fp)
   82178:	e17ffe17 	ldw	r5,-8(fp)
   8217c:	000d883a 	mov	r6,zero
   82180:	00809000 	call	80900 <Read_File_Record_At_Offset>
                    if ((file_record->name[0] != 0xe5) && (file_record->name[0] != 0x00))
   82184:	e0bffe17 	ldw	r2,-8(fp)
   82188:	10800003 	ldbu	r2,0(r2)
   8218c:	10803fcc 	andi	r2,r2,255
   82190:	10803960 	cmpeqi	r2,r2,229
   82194:	1000101e 	bne	r2,zero,821d8 <find_file_in_directory+0x280>
   82198:	e0bffe17 	ldw	r2,-8(fp)
   8219c:	10800003 	ldbu	r2,0(r2)
   821a0:	10803fcc 	andi	r2,r2,255
   821a4:	1005003a 	cmpeq	r2,r2,zero
   821a8:	10000b1e 	bne	r2,zero,821d8 <find_file_in_directory+0x280>
                    {
                        bool match = match_file_record_to_name_ext(file_record, name, extension);
   821ac:	e17ff804 	addi	r5,fp,-32
   821b0:	e1bffa04 	addi	r6,fp,-24
   821b4:	e13ffe17 	ldw	r4,-8(fp)
   821b8:	00817580 	call	81758 <match_file_record_to_name_ext>
   821bc:	e0bfed15 	stw	r2,-76(fp)

                        if (match)
   821c0:	e0bfed17 	ldw	r2,-76(fp)
   821c4:	1005003a 	cmpeq	r2,r2,zero
   821c8:	1000031e 	bne	r2,zero,821d8 <find_file_in_directory+0x280>
                        {
                            result = true;
   821cc:	00800044 	movi	r2,1
   821d0:	e0bff115 	stw	r2,-60(fp)
                            break;
   821d4:	00000606 	br	821f0 <find_file_in_directory+0x298>
            if (Read_Sector_Data(   sector_index + boot_sector_data.root_directory_sector_offset,
                                    fat_partition_offset_in_512_byte_sectors))
            {
                int file_counter;
                
                for (file_counter = 0; file_counter < 16; file_counter++)
   821d8:	e0bfee17 	ldw	r2,-72(fp)
   821dc:	10800044 	addi	r2,r2,1
   821e0:	e0bfee15 	stw	r2,-72(fp)
   821e4:	e0bfee17 	ldw	r2,-72(fp)
   821e8:	10800410 	cmplti	r2,r2,16
   821ec:	103fdf1e 	bne	r2,zero,8216c <find_file_in_directory+0x214>
            }
            else
            {
                break;
            }
            if (result)
   821f0:	e0bff117 	ldw	r2,-60(fp)
   821f4:	1004c03a 	cmpne	r2,r2,zero
   821f8:	1000681e 	bne	r2,zero,8239c <find_file_in_directory+0x444>
    {
        /* We are in the root directory. Scan the directory (of predefined size) and see if you can find the specified file. */
        int max_root_dir_sectors = ((32*boot_sector_data.max_number_of_dir_entires) / boot_sector_data.sector_size_in_bytes);
        int sector_index;
        
        for (sector_index = 0; sector_index < max_root_dir_sectors; sector_index++)
   821fc:	e0bfef17 	ldw	r2,-68(fp)
   82200:	10800044 	addi	r2,r2,1
   82204:	e0bfef15 	stw	r2,-68(fp)
   82208:	e0ffef17 	ldw	r3,-68(fp)
   8220c:	e0bff017 	ldw	r2,-64(fp)
   82210:	18bfca16 	blt	r3,r2,8213c <find_file_in_directory+0x1e4>
   82214:	00006106 	br	8239c <find_file_in_directory+0x444>
        }
    }
    else
    {          
        do {
            int start_sector = ( cluster - 2 ) * ( boot_sector_data.sectors_per_cluster ) + boot_sector_data.data_sector_offset;
   82218:	e0bff417 	ldw	r2,-48(fp)
   8221c:	113fff84 	addi	r4,r2,-2
   82220:	008002b4 	movhi	r2,10
   82224:	10911c04 	addi	r2,r2,17520
   82228:	10800383 	ldbu	r2,14(r2)
   8222c:	11403fcc 	andi	r5,r2,255
   82230:	00886b00 	call	886b0 <__mulsi3>
   82234:	1007883a 	mov	r3,r2
   82238:	008002b4 	movhi	r2,10
   8223c:	10911c04 	addi	r2,r2,17520
   82240:	10801417 	ldw	r2,80(r2)
   82244:	1885883a 	add	r2,r3,r2
   82248:	e0bfec15 	stw	r2,-80(fp)
            int sector_index;
            
            for (sector_index = 0; sector_index < boot_sector_data.sectors_per_cluster; sector_index++)
   8224c:	e03feb15 	stw	zero,-84(fp)
   82250:	00003006 	br	82314 <find_file_in_directory+0x3bc>
            {
                if (Read_Sector_Data(sector_index + start_sector, fat_partition_offset_in_512_byte_sectors))
   82254:	e0ffeb17 	ldw	r3,-84(fp)
   82258:	e0bfec17 	ldw	r2,-80(fp)
   8225c:	1889883a 	add	r4,r3,r2
   82260:	d166fc17 	ldw	r5,-25616(gp)
   82264:	008053c0 	call	8053c <Read_Sector_Data>
   82268:	1005003a 	cmpeq	r2,r2,zero
   8226c:	10002f1e 	bne	r2,zero,8232c <find_file_in_directory+0x3d4>
                {
                    int file_counter;
                    
                    for (file_counter = 0; file_counter < 16; file_counter++)
   82270:	e03fea15 	stw	zero,-88(fp)
   82274:	00001e06 	br	822f0 <find_file_in_directory+0x398>
                    {
                        // Read file record.
                        Read_File_Record_At_Offset(file_counter*32, file_record, cluster, sector_index);
   82278:	e0bfea17 	ldw	r2,-88(fp)
   8227c:	1008917a 	slli	r4,r2,5
   82280:	e1bff417 	ldw	r6,-48(fp)
   82284:	e1ffeb17 	ldw	r7,-84(fp)
   82288:	e17ffe17 	ldw	r5,-8(fp)
   8228c:	00809000 	call	80900 <Read_File_Record_At_Offset>
                        if ((file_record->name[0] != 0xe5) && (file_record->name[0] != 0x00))
   82290:	e0bffe17 	ldw	r2,-8(fp)
   82294:	10800003 	ldbu	r2,0(r2)
   82298:	10803fcc 	andi	r2,r2,255
   8229c:	10803960 	cmpeqi	r2,r2,229
   822a0:	1000101e 	bne	r2,zero,822e4 <find_file_in_directory+0x38c>
   822a4:	e0bffe17 	ldw	r2,-8(fp)
   822a8:	10800003 	ldbu	r2,0(r2)
   822ac:	10803fcc 	andi	r2,r2,255
   822b0:	1005003a 	cmpeq	r2,r2,zero
   822b4:	10000b1e 	bne	r2,zero,822e4 <find_file_in_directory+0x38c>
                        {
                            bool match = match_file_record_to_name_ext(file_record, name, extension);
   822b8:	e17ff804 	addi	r5,fp,-32
   822bc:	e1bffa04 	addi	r6,fp,-24
   822c0:	e13ffe17 	ldw	r4,-8(fp)
   822c4:	00817580 	call	81758 <match_file_record_to_name_ext>
   822c8:	e0bfe915 	stw	r2,-92(fp)

                            if (match)
   822cc:	e0bfe917 	ldw	r2,-92(fp)
   822d0:	1005003a 	cmpeq	r2,r2,zero
   822d4:	1000031e 	bne	r2,zero,822e4 <find_file_in_directory+0x38c>
                            {                               
                                result = true;
   822d8:	00800044 	movi	r2,1
   822dc:	e0bff115 	stw	r2,-60(fp)
                                break;
   822e0:	00000606 	br	822fc <find_file_in_directory+0x3a4>
            {
                if (Read_Sector_Data(sector_index + start_sector, fat_partition_offset_in_512_byte_sectors))
                {
                    int file_counter;
                    
                    for (file_counter = 0; file_counter < 16; file_counter++)
   822e4:	e0bfea17 	ldw	r2,-88(fp)
   822e8:	10800044 	addi	r2,r2,1
   822ec:	e0bfea15 	stw	r2,-88(fp)
   822f0:	e0bfea17 	ldw	r2,-88(fp)
   822f4:	10800410 	cmplti	r2,r2,16
   822f8:	103fdf1e 	bne	r2,zero,82278 <find_file_in_directory+0x320>
                }
                else
                {
                    break;
                }
                if (result)
   822fc:	e0bff117 	ldw	r2,-60(fp)
   82300:	1004c03a 	cmpne	r2,r2,zero
   82304:	1000091e 	bne	r2,zero,8232c <find_file_in_directory+0x3d4>
    {          
        do {
            int start_sector = ( cluster - 2 ) * ( boot_sector_data.sectors_per_cluster ) + boot_sector_data.data_sector_offset;
            int sector_index;
            
            for (sector_index = 0; sector_index < boot_sector_data.sectors_per_cluster; sector_index++)
   82308:	e0bfeb17 	ldw	r2,-84(fp)
   8230c:	10800044 	addi	r2,r2,1
   82310:	e0bfeb15 	stw	r2,-84(fp)
   82314:	008002b4 	movhi	r2,10
   82318:	10911c04 	addi	r2,r2,17520
   8231c:	10800383 	ldbu	r2,14(r2)
   82320:	10c03fcc 	andi	r3,r2,255
   82324:	e0bfeb17 	ldw	r2,-84(fp)
   82328:	10ffca16 	blt	r2,r3,82254 <find_file_in_directory+0x2fc>
                    break;
                }
            }
            // If this is the end of the cluster and the file has not been found, then see if there is another cluster
            // that holds data for the current directory.
            if (result == false)
   8232c:	e0bff117 	ldw	r2,-60(fp)
   82330:	1004c03a 	cmpne	r2,r2,zero
   82334:	1000131e 	bne	r2,zero,82384 <find_file_in_directory+0x42c>
            {
				unsigned short int new_cluster;

				if (get_cluster_flag(cluster, &new_cluster))
   82338:	e13ff417 	ldw	r4,-48(fp)
   8233c:	e17ffb04 	addi	r5,fp,-20
   82340:	008062c0 	call	8062c <get_cluster_flag>
   82344:	1005003a 	cmpeq	r2,r2,zero
   82348:	10000c1e 	bne	r2,zero,8237c <find_file_in_directory+0x424>
				{
					// The directory needs to be expanded to store more files.
					if ((new_cluster & 0x0000fff8) == 0x0000fff8)
   8234c:	e0bffb0b 	ldhu	r2,-20(fp)
   82350:	10bfffcc 	andi	r2,r2,65535
   82354:	10fffe0c 	andi	r3,r2,65528
   82358:	00bffe14 	movui	r2,65528
   8235c:	1880021e 	bne	r3,r2,82368 <find_file_in_directory+0x410>
					{
						return false;
   82360:	e03fff15 	stw	zero,-4(fp)
   82364:	00000f06 	br	823a4 <find_file_in_directory+0x44c>
					}
					cluster = (new_cluster & 0x0000fff8);
   82368:	e0bffb0b 	ldhu	r2,-20(fp)
   8236c:	10bfffcc 	andi	r2,r2,65535
   82370:	10bffe0c 	andi	r2,r2,65528
   82374:	e0bff415 	stw	r2,-48(fp)
   82378:	00000206 	br	82384 <find_file_in_directory+0x42c>
				}
				else
                {
                    // Directory path is invalid.                 
                    return false;
   8237c:	e03fff15 	stw	zero,-4(fp)
   82380:	00000806 	br	823a4 <find_file_in_directory+0x44c>
                }
            }              
        } while ((cluster < 0x0000fff8) && (result == false));
   82384:	e0fff417 	ldw	r3,-48(fp)
   82388:	00bffdd4 	movui	r2,65527
   8238c:	10c00316 	blt	r2,r3,8239c <find_file_in_directory+0x444>
   82390:	e0bff117 	ldw	r2,-60(fp)
   82394:	1005003a 	cmpeq	r2,r2,zero
   82398:	103f9f1e 	bne	r2,zero,82218 <find_file_in_directory+0x2c0>
    }
    
    return result;   
   8239c:	e0bff117 	ldw	r2,-60(fp)
   823a0:	e0bfff15 	stw	r2,-4(fp)
   823a4:	e0bfff17 	ldw	r2,-4(fp)
}
   823a8:	e037883a 	mov	sp,fp
   823ac:	dfc00117 	ldw	ra,4(sp)
   823b0:	df000017 	ldw	fp,0(sp)
   823b4:	dec00204 	addi	sp,sp,8
   823b8:	f800283a 	ret

000823bc <find_first_empty_cluster>:


bool find_first_empty_cluster(unsigned int *cluster_number)
// Find the first empty cluster. It will be marked by a 0 entry in the File Allocation Table.
{
   823bc:	defff504 	addi	sp,sp,-44
   823c0:	dfc00a15 	stw	ra,40(sp)
   823c4:	df000915 	stw	fp,36(sp)
   823c8:	df000904 	addi	fp,sp,36
   823cc:	e13fff15 	stw	r4,-4(fp)
    unsigned int sector = boot_sector_data.first_fat_sector_offset;
   823d0:	008002b4 	movhi	r2,10
   823d4:	10911c04 	addi	r2,r2,17520
   823d8:	10801117 	ldw	r2,68(r2)
   823dc:	e0bffe15 	stw	r2,-8(fp)
    unsigned int cluster_index = 2;
   823e0:	00800084 	movi	r2,2
   823e4:	e0bffd15 	stw	r2,-12(fp)
    short int cluster = -1;
   823e8:	00bfffc4 	movi	r2,-1
   823ec:	e0bffc0d 	sth	r2,-16(fp)
    bool result = false;
   823f0:	e03ffb15 	stw	zero,-20(fp)
	unsigned max_cluster_index = 0;
   823f4:	e03ffa15 	stw	zero,-24(fp)
	unsigned int non_data_sectors = boot_sector_data.data_sector_offset;
   823f8:	008002b4 	movhi	r2,10
   823fc:	10911c04 	addi	r2,r2,17520
   82400:	10801417 	ldw	r2,80(r2)
   82404:	e0bff915 	stw	r2,-28(fp)
	unsigned int less_than_32 = boot_sector_data.number_of_sectors_in_partition;
   82408:	008002b4 	movhi	r2,10
   8240c:	10911c04 	addi	r2,r2,17520
   82410:	1080058b 	ldhu	r2,22(r2)
   82414:	10bfffcc 	andi	r2,r2,65535
   82418:	e0bff815 	stw	r2,-32(fp)
	unsigned int greater_than_32 = boot_sector_data.total_sector_count_if_above_32MB;
   8241c:	008002b4 	movhi	r2,10
   82420:	10911c04 	addi	r2,r2,17520
   82424:	10800917 	ldw	r2,36(r2)
   82428:	e0bff715 	stw	r2,-36(fp)

	if (less_than_32 > greater_than_32)
   8242c:	e0fff817 	ldw	r3,-32(fp)
   82430:	e0bff717 	ldw	r2,-36(fp)
   82434:	10c00b2e 	bgeu	r2,r3,82464 <find_first_empty_cluster+0xa8>
	{
		max_cluster_index = ((less_than_32 - non_data_sectors) / boot_sector_data.sectors_per_cluster) + 1;
   82438:	e0fff817 	ldw	r3,-32(fp)
   8243c:	e0bff917 	ldw	r2,-28(fp)
   82440:	1889c83a 	sub	r4,r3,r2
   82444:	008002b4 	movhi	r2,10
   82448:	10911c04 	addi	r2,r2,17520
   8244c:	10800383 	ldbu	r2,14(r2)
   82450:	11403fcc 	andi	r5,r2,255
   82454:	00886a00 	call	886a0 <__udivsi3>
   82458:	10800044 	addi	r2,r2,1
   8245c:	e0bffa15 	stw	r2,-24(fp)
   82460:	00002506 	br	824f8 <find_first_empty_cluster+0x13c>
	}
	else
	{
		max_cluster_index = ((greater_than_32 - non_data_sectors) / boot_sector_data.sectors_per_cluster) + 1;
   82464:	e0fff717 	ldw	r3,-36(fp)
   82468:	e0bff917 	ldw	r2,-28(fp)
   8246c:	1889c83a 	sub	r4,r3,r2
   82470:	008002b4 	movhi	r2,10
   82474:	10911c04 	addi	r2,r2,17520
   82478:	10800383 	ldbu	r2,14(r2)
   8247c:	11403fcc 	andi	r5,r2,255
   82480:	00886a00 	call	886a0 <__udivsi3>
   82484:	10800044 	addi	r2,r2,1
   82488:	e0bffa15 	stw	r2,-24(fp)
	}
    // Find an empty cluster for the file.
    while (sector != boot_sector_data.second_fat_sector_offset)
   8248c:	00001a06 	br	824f8 <find_first_empty_cluster+0x13c>
    {
        if (Read_Sector_Data( sector, fat_partition_offset_in_512_byte_sectors))
   82490:	e13ffe17 	ldw	r4,-8(fp)
   82494:	d166fc17 	ldw	r5,-25616(gp)
   82498:	008053c0 	call	8053c <Read_Sector_Data>
   8249c:	1005003a 	cmpeq	r2,r2,zero
   824a0:	10000f1e 	bne	r2,zero,824e0 <find_first_empty_cluster+0x124>
        {
            do {
                cluster = (*((volatile unsigned short int *)SD_CARD_BUFFER(SD_CARD_0_BASE, 2*(cluster_index % 256))));
   824a4:	e0bffd17 	ldw	r2,-12(fp)
   824a8:	10803fcc 	andi	r2,r2,255
   824ac:	1085883a 	add	r2,r2,r2
   824b0:	1080000b 	ldhu	r2,0(r2)
   824b4:	e0bffc0d 	sth	r2,-16(fp)
                if (cluster == 0)
   824b8:	e0bffc0f 	ldh	r2,-16(fp)
   824bc:	1005003a 	cmpeq	r2,r2,zero
   824c0:	1000071e 	bne	r2,zero,824e0 <find_first_empty_cluster+0x124>
                    // Free cluster found.
                    break;
                }
                else
                {
                    cluster_index++;
   824c4:	e0bffd17 	ldw	r2,-12(fp)
   824c8:	10800044 	addi	r2,r2,1
   824cc:	e0bffd15 	stw	r2,-12(fp)
                } 
            } while ((cluster_index % 256) != 0);
   824d0:	e0bffd17 	ldw	r2,-12(fp)
   824d4:	10803fcc 	andi	r2,r2,255
   824d8:	1004c03a 	cmpne	r2,r2,zero
   824dc:	103ff11e 	bne	r2,zero,824a4 <find_first_empty_cluster+0xe8>
        }
        if (cluster == 0)
   824e0:	e0bffc0f 	ldh	r2,-16(fp)
   824e4:	1005003a 	cmpeq	r2,r2,zero
   824e8:	1000081e 	bne	r2,zero,8250c <find_first_empty_cluster+0x150>
        {
            break;
        }
        sector++;
   824ec:	e0bffe17 	ldw	r2,-8(fp)
   824f0:	10800044 	addi	r2,r2,1
   824f4:	e0bffe15 	stw	r2,-8(fp)
	else
	{
		max_cluster_index = ((greater_than_32 - non_data_sectors) / boot_sector_data.sectors_per_cluster) + 1;
	}
    // Find an empty cluster for the file.
    while (sector != boot_sector_data.second_fat_sector_offset)
   824f8:	008002b4 	movhi	r2,10
   824fc:	10911c04 	addi	r2,r2,17520
   82500:	10c01217 	ldw	r3,72(r2)
   82504:	e0bffe17 	ldw	r2,-8(fp)
   82508:	18bfe11e 	bne	r3,r2,82490 <find_first_empty_cluster+0xd4>
        {
            break;
        }
        sector++;
    }
    if ((cluster == 0) && (cluster <= max_cluster_index))
   8250c:	e0bffc0f 	ldh	r2,-16(fp)
   82510:	1004c03a 	cmpne	r2,r2,zero
   82514:	1000081e 	bne	r2,zero,82538 <find_first_empty_cluster+0x17c>
   82518:	e0fffc0f 	ldh	r3,-16(fp)
   8251c:	e0bffa17 	ldw	r2,-24(fp)
   82520:	10c00536 	bltu	r2,r3,82538 <find_first_empty_cluster+0x17c>
    {
        *cluster_number = cluster_index;
   82524:	e0bfff17 	ldw	r2,-4(fp)
   82528:	e0fffd17 	ldw	r3,-12(fp)
   8252c:	10c00015 	stw	r3,0(r2)
		result = true;
   82530:	00800044 	movi	r2,1
   82534:	e0bffb15 	stw	r2,-20(fp)
    }
    return result;
   82538:	e0bffb17 	ldw	r2,-20(fp)
}
   8253c:	e037883a 	mov	sp,fp
   82540:	dfc00117 	ldw	ra,4(sp)
   82544:	df000017 	ldw	fp,0(sp)
   82548:	dec00204 	addi	sp,sp,8
   8254c:	f800283a 	ret

00082550 <find_first_empty_record_in_a_subdirectory>:


int find_first_empty_record_in_a_subdirectory(int start_cluster_index)
// Search for a free spot in a subdirectory. Return an encoded location for the file record.
{
   82550:	defff404 	addi	sp,sp,-48
   82554:	dfc00b15 	stw	ra,44(sp)
   82558:	df000a15 	stw	fp,40(sp)
   8255c:	df000a04 	addi	fp,sp,40
   82560:	e13ffe15 	stw	r4,-8(fp)
    int result = -1;
   82564:	00bfffc4 	movi	r2,-1
   82568:	e0bffb15 	stw	r2,-20(fp)
    int cluster = start_cluster_index;
   8256c:	e0bffe17 	ldw	r2,-8(fp)
   82570:	e0bffa15 	stw	r2,-24(fp)
    do {
        int start_sector = ( cluster - 2 ) * ( boot_sector_data.sectors_per_cluster ) + boot_sector_data.data_sector_offset;
   82574:	e0bffa17 	ldw	r2,-24(fp)
   82578:	113fff84 	addi	r4,r2,-2
   8257c:	008002b4 	movhi	r2,10
   82580:	10911c04 	addi	r2,r2,17520
   82584:	10800383 	ldbu	r2,14(r2)
   82588:	11403fcc 	andi	r5,r2,255
   8258c:	00886b00 	call	886b0 <__mulsi3>
   82590:	1007883a 	mov	r3,r2
   82594:	008002b4 	movhi	r2,10
   82598:	10911c04 	addi	r2,r2,17520
   8259c:	10801417 	ldw	r2,80(r2)
   825a0:	1885883a 	add	r2,r3,r2
   825a4:	e0bff915 	stw	r2,-28(fp)
        int sector_index;
        
        for (sector_index = 0; sector_index < boot_sector_data.sectors_per_cluster; sector_index++)
   825a8:	e03ff815 	stw	zero,-32(fp)
   825ac:	00002806 	br	82650 <find_first_empty_record_in_a_subdirectory+0x100>
        {
            if (Read_Sector_Data(sector_index + start_sector, fat_partition_offset_in_512_byte_sectors))
   825b0:	e0fff817 	ldw	r3,-32(fp)
   825b4:	e0bff917 	ldw	r2,-28(fp)
   825b8:	1889883a 	add	r4,r3,r2
   825bc:	d166fc17 	ldw	r5,-25616(gp)
   825c0:	008053c0 	call	8053c <Read_Sector_Data>
   825c4:	1005003a 	cmpeq	r2,r2,zero
   825c8:	1000271e 	bne	r2,zero,82668 <find_first_empty_record_in_a_subdirectory+0x118>
            {
                int file_counter;
                
                for (file_counter = 0; file_counter < 16; file_counter++)
   825cc:	e03ff715 	stw	zero,-36(fp)
   825d0:	00001906 	br	82638 <find_first_empty_record_in_a_subdirectory+0xe8>
                {
                    unsigned short int leading_char;
                    
                    // Read file record.
                    leading_char = (*((volatile unsigned char *)SD_CARD_BUFFER(SD_CARD_0_BASE, file_counter*32)));
   825d4:	e0bff717 	ldw	r2,-36(fp)
   825d8:	1004917a 	slli	r2,r2,5
   825dc:	10800003 	ldbu	r2,0(r2)
   825e0:	10803fcc 	andi	r2,r2,255
   825e4:	e0bff60d 	sth	r2,-40(fp)
                    if ((leading_char == 0x00e5) || (leading_char == 0))
   825e8:	e0bff60b 	ldhu	r2,-40(fp)
   825ec:	10803960 	cmpeqi	r2,r2,229
   825f0:	1000031e 	bne	r2,zero,82600 <find_first_empty_record_in_a_subdirectory+0xb0>
   825f4:	e0bff60b 	ldhu	r2,-40(fp)
   825f8:	1004c03a 	cmpne	r2,r2,zero
   825fc:	10000b1e 	bne	r2,zero,8262c <find_first_empty_record_in_a_subdirectory+0xdc>
                    {
                        result = (cluster) | ((sector_index*16 + file_counter) << 16);
   82600:	e0bff817 	ldw	r2,-32(fp)
   82604:	1006913a 	slli	r3,r2,4
   82608:	e0bff717 	ldw	r2,-36(fp)
   8260c:	1885883a 	add	r2,r3,r2
   82610:	1006943a 	slli	r3,r2,16
   82614:	e0bffa17 	ldw	r2,-24(fp)
   82618:	1884b03a 	or	r2,r3,r2
   8261c:	e0bffb15 	stw	r2,-20(fp)
                        return result;
   82620:	e0bffb17 	ldw	r2,-20(fp)
   82624:	e0bfff15 	stw	r2,-4(fp)
   82628:	00005206 	br	82774 <find_first_empty_record_in_a_subdirectory+0x224>
        {
            if (Read_Sector_Data(sector_index + start_sector, fat_partition_offset_in_512_byte_sectors))
            {
                int file_counter;
                
                for (file_counter = 0; file_counter < 16; file_counter++)
   8262c:	e0bff717 	ldw	r2,-36(fp)
   82630:	10800044 	addi	r2,r2,1
   82634:	e0bff715 	stw	r2,-36(fp)
   82638:	e0bff717 	ldw	r2,-36(fp)
   8263c:	10800410 	cmplti	r2,r2,16
   82640:	103fe41e 	bne	r2,zero,825d4 <find_first_empty_record_in_a_subdirectory+0x84>
    int cluster = start_cluster_index;
    do {
        int start_sector = ( cluster - 2 ) * ( boot_sector_data.sectors_per_cluster ) + boot_sector_data.data_sector_offset;
        int sector_index;
        
        for (sector_index = 0; sector_index < boot_sector_data.sectors_per_cluster; sector_index++)
   82644:	e0bff817 	ldw	r2,-32(fp)
   82648:	10800044 	addi	r2,r2,1
   8264c:	e0bff815 	stw	r2,-32(fp)
   82650:	008002b4 	movhi	r2,10
   82654:	10911c04 	addi	r2,r2,17520
   82658:	10800383 	ldbu	r2,14(r2)
   8265c:	10c03fcc 	andi	r3,r2,255
   82660:	e0bff817 	ldw	r2,-32(fp)
   82664:	10ffd216 	blt	r2,r3,825b0 <find_first_empty_record_in_a_subdirectory+0x60>
                break;
            }
        }
        // If this is the end of the cluster and the file has not been found, then see if there is another cluster
        // that holds data for the current directory.
        if (result < 0)
   82668:	e0bffb17 	ldw	r2,-20(fp)
   8266c:	1004403a 	cmpge	r2,r2,zero
   82670:	1000381e 	bne	r2,zero,82754 <find_first_empty_record_in_a_subdirectory+0x204>
        {
			unsigned short int new_cluster;
			if (get_cluster_flag(cluster, &new_cluster))
   82674:	e13ffa17 	ldw	r4,-24(fp)
   82678:	e17ffc04 	addi	r5,fp,-16
   8267c:	008062c0 	call	8062c <get_cluster_flag>
   82680:	1005003a 	cmpeq	r2,r2,zero
   82684:	1000311e 	bne	r2,zero,8274c <find_first_empty_record_in_a_subdirectory+0x1fc>
			{
                // The directory needs to be expanded to store more files.
				if ((new_cluster & 0x0000fff8) == 0x0000fff8)
   82688:	e0bffc0b 	ldhu	r2,-16(fp)
   8268c:	10bfffcc 	andi	r2,r2,65535
   82690:	10fffe0c 	andi	r3,r2,65528
   82694:	00bffe14 	movui	r2,65528
   82698:	18802e1e 	bne	r3,r2,82754 <find_first_empty_record_in_a_subdirectory+0x204>
				{
					int new_dir_cluster; 
					if (find_first_empty_cluster(&new_dir_cluster))
   8269c:	e13ffd04 	addi	r4,fp,-12
   826a0:	00823bc0 	call	823bc <find_first_empty_cluster>
   826a4:	1005003a 	cmpeq	r2,r2,zero
   826a8:	1000231e 	bne	r2,zero,82738 <find_first_empty_record_in_a_subdirectory+0x1e8>
					{
						// Add the new cluster to the linked list of the given directory.
						if (mark_cluster(cluster, ((short int) (new_dir_cluster)), true) &&
   826ac:	e13ffa17 	ldw	r4,-24(fp)
   826b0:	e0bffd17 	ldw	r2,-12(fp)
   826b4:	117fffcc 	andi	r5,r2,65535
   826b8:	2960001c 	xori	r5,r5,32768
   826bc:	29600004 	addi	r5,r5,-32768
   826c0:	01800044 	movi	r6,1
   826c4:	00806d00 	call	806d0 <mark_cluster>
   826c8:	1005003a 	cmpeq	r2,r2,zero
   826cc:	10001a1e 	bne	r2,zero,82738 <find_first_empty_record_in_a_subdirectory+0x1e8>
   826d0:	e0bffd17 	ldw	r2,-12(fp)
   826d4:	1009883a 	mov	r4,r2
   826d8:	017fffc4 	movi	r5,-1
   826dc:	01800044 	movi	r6,1
   826e0:	00806d00 	call	806d0 <mark_cluster>
   826e4:	1005003a 	cmpeq	r2,r2,zero
   826e8:	1000131e 	bne	r2,zero,82738 <find_first_empty_record_in_a_subdirectory+0x1e8>
   826ec:	e13ffa17 	ldw	r4,-24(fp)
   826f0:	e0bffd17 	ldw	r2,-12(fp)
   826f4:	117fffcc 	andi	r5,r2,65535
   826f8:	2960001c 	xori	r5,r5,32768
   826fc:	29600004 	addi	r5,r5,-32768
   82700:	000d883a 	mov	r6,zero
   82704:	00806d00 	call	806d0 <mark_cluster>
   82708:	1005003a 	cmpeq	r2,r2,zero
   8270c:	10000a1e 	bne	r2,zero,82738 <find_first_empty_record_in_a_subdirectory+0x1e8>
   82710:	e0bffd17 	ldw	r2,-12(fp)
   82714:	1009883a 	mov	r4,r2
   82718:	017fffc4 	movi	r5,-1
   8271c:	000d883a 	mov	r6,zero
   82720:	00806d00 	call	806d0 <mark_cluster>
   82724:	1005003a 	cmpeq	r2,r2,zero
   82728:	1000031e 	bne	r2,zero,82738 <find_first_empty_record_in_a_subdirectory+0x1e8>
							mark_cluster(new_dir_cluster, ((short int) (0xffff)), true) &&
							mark_cluster(cluster, ((short int) (new_dir_cluster)), false) &&
							mark_cluster(new_dir_cluster, ((short int) (0xffff)), false))
						{
							Save_Modified_Sector();
   8272c:	00804ec0 	call	804ec <Save_Modified_Sector>
							// The new file will begin at the first entry of the directory.
							result = new_dir_cluster;                           
   82730:	e0bffd17 	ldw	r2,-12(fp)
   82734:	e0bffb15 	stw	r2,-20(fp)
						}
					}
					cluster = (new_cluster & 0x0000fff8);
   82738:	e0bffc0b 	ldhu	r2,-16(fp)
   8273c:	10bfffcc 	andi	r2,r2,65535
   82740:	10bffe0c 	andi	r2,r2,65528
   82744:	e0bffa15 	stw	r2,-24(fp)
   82748:	00000206 	br	82754 <find_first_empty_record_in_a_subdirectory+0x204>
				}
			}
			else
			{
				// Error encountered.                 
				result = -1;
   8274c:	00bfffc4 	movi	r2,-1
   82750:	e0bffb15 	stw	r2,-20(fp)
			}
        }              
    } while ((cluster < 0x0000fff8) && (result == -1)); 
   82754:	e0fffa17 	ldw	r3,-24(fp)
   82758:	00bffdd4 	movui	r2,65527
   8275c:	10c00316 	blt	r2,r3,8276c <find_first_empty_record_in_a_subdirectory+0x21c>
   82760:	e0bffb17 	ldw	r2,-20(fp)
   82764:	10bfffe0 	cmpeqi	r2,r2,-1
   82768:	103f821e 	bne	r2,zero,82574 <find_first_empty_record_in_a_subdirectory+0x24>
    return result; 
   8276c:	e0bffb17 	ldw	r2,-20(fp)
   82770:	e0bfff15 	stw	r2,-4(fp)
   82774:	e0bfff17 	ldw	r2,-4(fp)
}
   82778:	e037883a 	mov	sp,fp
   8277c:	dfc00117 	ldw	ra,4(sp)
   82780:	df000017 	ldw	fp,0(sp)
   82784:	dec00204 	addi	sp,sp,8
   82788:	f800283a 	ret

0008278c <find_first_empty_record_in_root_directory>:


int find_first_empty_record_in_root_directory()
// Find a first unused record location to use. Return -1 if none is found.
{
   8278c:	defff804 	addi	sp,sp,-32
   82790:	dfc00715 	stw	ra,28(sp)
   82794:	df000615 	stw	fp,24(sp)
   82798:	df000604 	addi	fp,sp,24
    int max_root_dir_sectors = ((32*boot_sector_data.max_number_of_dir_entires) / boot_sector_data.sector_size_in_bytes);
   8279c:	008002b4 	movhi	r2,10
   827a0:	10911c04 	addi	r2,r2,17520
   827a4:	1080050b 	ldhu	r2,20(r2)
   827a8:	10bfffcc 	andi	r2,r2,65535
   827ac:	1008917a 	slli	r4,r2,5
   827b0:	008002b4 	movhi	r2,10
   827b4:	10911c04 	addi	r2,r2,17520
   827b8:	1080030b 	ldhu	r2,12(r2)
   827bc:	117fffcc 	andi	r5,r2,65535
   827c0:	00885e00 	call	885e0 <__divsi3>
   827c4:	e0bffe15 	stw	r2,-8(fp)
    int sector_index;
    int result = -1;
   827c8:	00bfffc4 	movi	r2,-1
   827cc:	e0bffc15 	stw	r2,-16(fp)
    
    for (sector_index = 0; sector_index < max_root_dir_sectors; sector_index++)
   827d0:	e03ffd15 	stw	zero,-12(fp)
   827d4:	00002906 	br	8287c <find_first_empty_record_in_root_directory+0xf0>
    {
        if (Read_Sector_Data(   sector_index + boot_sector_data.root_directory_sector_offset,
   827d8:	008002b4 	movhi	r2,10
   827dc:	10911c04 	addi	r2,r2,17520
   827e0:	10c01317 	ldw	r3,76(r2)
   827e4:	e0bffd17 	ldw	r2,-12(fp)
   827e8:	1885883a 	add	r2,r3,r2
   827ec:	1009883a 	mov	r4,r2
   827f0:	d166fc17 	ldw	r5,-25616(gp)
   827f4:	008053c0 	call	8053c <Read_Sector_Data>
   827f8:	1005003a 	cmpeq	r2,r2,zero
   827fc:	1000221e 	bne	r2,zero,82888 <find_first_empty_record_in_root_directory+0xfc>
                                fat_partition_offset_in_512_byte_sectors))
        {
            int file_counter;
            
            for (file_counter = 0; file_counter < 16; file_counter++)
   82800:	e03ffb15 	stw	zero,-20(fp)
   82804:	00001706 	br	82864 <find_first_empty_record_in_root_directory+0xd8>
            {
                unsigned short int leading_char;
                
                // Read first character of the file record.
                leading_char = (*((volatile unsigned char *)SD_CARD_BUFFER(SD_CARD_0_BASE, file_counter*32)));
   82808:	e0bffb17 	ldw	r2,-20(fp)
   8280c:	1004917a 	slli	r2,r2,5
   82810:	10800003 	ldbu	r2,0(r2)
   82814:	10803fcc 	andi	r2,r2,255
   82818:	e0bffa0d 	sth	r2,-24(fp)
                if ((leading_char == 0x00e5) || (leading_char == 0))
   8281c:	e0bffa0b 	ldhu	r2,-24(fp)
   82820:	10803960 	cmpeqi	r2,r2,229
   82824:	1000031e 	bne	r2,zero,82834 <find_first_empty_record_in_root_directory+0xa8>
   82828:	e0bffa0b 	ldhu	r2,-24(fp)
   8282c:	1004c03a 	cmpne	r2,r2,zero
   82830:	1000091e 	bne	r2,zero,82858 <find_first_empty_record_in_root_directory+0xcc>
                {
                    result = (sector_index*16 + file_counter) << 16;
   82834:	e0bffd17 	ldw	r2,-12(fp)
   82838:	1006913a 	slli	r3,r2,4
   8283c:	e0bffb17 	ldw	r2,-20(fp)
   82840:	1885883a 	add	r2,r3,r2
   82844:	1004943a 	slli	r2,r2,16
   82848:	e0bffc15 	stw	r2,-16(fp)
                    return result;
   8284c:	e0bffc17 	ldw	r2,-16(fp)
   82850:	e0bfff15 	stw	r2,-4(fp)
   82854:	00000e06 	br	82890 <find_first_empty_record_in_root_directory+0x104>
        if (Read_Sector_Data(   sector_index + boot_sector_data.root_directory_sector_offset,
                                fat_partition_offset_in_512_byte_sectors))
        {
            int file_counter;
            
            for (file_counter = 0; file_counter < 16; file_counter++)
   82858:	e0bffb17 	ldw	r2,-20(fp)
   8285c:	10800044 	addi	r2,r2,1
   82860:	e0bffb15 	stw	r2,-20(fp)
   82864:	e0bffb17 	ldw	r2,-20(fp)
   82868:	10800410 	cmplti	r2,r2,16
   8286c:	103fe61e 	bne	r2,zero,82808 <find_first_empty_record_in_root_directory+0x7c>
{
    int max_root_dir_sectors = ((32*boot_sector_data.max_number_of_dir_entires) / boot_sector_data.sector_size_in_bytes);
    int sector_index;
    int result = -1;
    
    for (sector_index = 0; sector_index < max_root_dir_sectors; sector_index++)
   82870:	e0bffd17 	ldw	r2,-12(fp)
   82874:	10800044 	addi	r2,r2,1
   82878:	e0bffd15 	stw	r2,-12(fp)
   8287c:	e0fffd17 	ldw	r3,-12(fp)
   82880:	e0bffe17 	ldw	r2,-8(fp)
   82884:	18bfd416 	blt	r3,r2,827d8 <find_first_empty_record_in_root_directory+0x4c>
        else
        {
            break;
        }
    }
    return result;
   82888:	e0bffc17 	ldw	r2,-16(fp)
   8288c:	e0bfff15 	stw	r2,-4(fp)
   82890:	e0bfff17 	ldw	r2,-4(fp)
}
   82894:	e037883a 	mov	sp,fp
   82898:	dfc00117 	ldw	ra,4(sp)
   8289c:	df000017 	ldw	fp,0(sp)
   828a0:	dec00204 	addi	sp,sp,8
   828a4:	f800283a 	ret

000828a8 <convert_filename_to_name_extension>:

void convert_filename_to_name_extension(char *filename, char *name, char *extension)
// This function converts the file name into a name . extension format.
{
   828a8:	defffa04 	addi	sp,sp,-24
   828ac:	df000515 	stw	fp,20(sp)
   828b0:	df000504 	addi	fp,sp,20
   828b4:	e13ffd15 	stw	r4,-12(fp)
   828b8:	e17ffe15 	stw	r5,-8(fp)
   828bc:	e1bfff15 	stw	r6,-4(fp)
    int counter;
    int local = 0;
   828c0:	e03ffb15 	stw	zero,-20(fp)
    
    for(counter = 0; counter < 8; counter++)
   828c4:	e03ffc15 	stw	zero,-16(fp)
   828c8:	00002b06 	br	82978 <convert_filename_to_name_extension+0xd0>
    {
        if (filename[local] != '.')
   828cc:	e0bffb17 	ldw	r2,-20(fp)
   828d0:	1007883a 	mov	r3,r2
   828d4:	e0bffd17 	ldw	r2,-12(fp)
   828d8:	1885883a 	add	r2,r3,r2
   828dc:	10800003 	ldbu	r2,0(r2)
   828e0:	10803fcc 	andi	r2,r2,255
   828e4:	1080201c 	xori	r2,r2,128
   828e8:	10bfe004 	addi	r2,r2,-128
   828ec:	10800ba0 	cmpeqi	r2,r2,46
   828f0:	1000181e 	bne	r2,zero,82954 <convert_filename_to_name_extension+0xac>
        {
            name[counter] = filename[local];
   828f4:	e0bffc17 	ldw	r2,-16(fp)
   828f8:	1007883a 	mov	r3,r2
   828fc:	e0bffe17 	ldw	r2,-8(fp)
   82900:	1889883a 	add	r4,r3,r2
   82904:	e0bffb17 	ldw	r2,-20(fp)
   82908:	1007883a 	mov	r3,r2
   8290c:	e0bffd17 	ldw	r2,-12(fp)
   82910:	1885883a 	add	r2,r3,r2
   82914:	10800003 	ldbu	r2,0(r2)
   82918:	20800005 	stb	r2,0(r4)
            if (filename[local] != 0) local++;
   8291c:	e0bffb17 	ldw	r2,-20(fp)
   82920:	1007883a 	mov	r3,r2
   82924:	e0bffd17 	ldw	r2,-12(fp)
   82928:	1885883a 	add	r2,r3,r2
   8292c:	10800003 	ldbu	r2,0(r2)
   82930:	10803fcc 	andi	r2,r2,255
   82934:	1080201c 	xori	r2,r2,128
   82938:	10bfe004 	addi	r2,r2,-128
   8293c:	1005003a 	cmpeq	r2,r2,zero
   82940:	10000a1e 	bne	r2,zero,8296c <convert_filename_to_name_extension+0xc4>
   82944:	e0bffb17 	ldw	r2,-20(fp)
   82948:	10800044 	addi	r2,r2,1
   8294c:	e0bffb15 	stw	r2,-20(fp)
   82950:	00000606 	br	8296c <convert_filename_to_name_extension+0xc4>
        }
        else
        {
            name[counter] = ' ';
   82954:	e0bffc17 	ldw	r2,-16(fp)
   82958:	1007883a 	mov	r3,r2
   8295c:	e0bffe17 	ldw	r2,-8(fp)
   82960:	1887883a 	add	r3,r3,r2
   82964:	00800804 	movi	r2,32
   82968:	18800005 	stb	r2,0(r3)
// This function converts the file name into a name . extension format.
{
    int counter;
    int local = 0;
    
    for(counter = 0; counter < 8; counter++)
   8296c:	e0bffc17 	ldw	r2,-16(fp)
   82970:	10800044 	addi	r2,r2,1
   82974:	e0bffc15 	stw	r2,-16(fp)
   82978:	e0bffc17 	ldw	r2,-16(fp)
   8297c:	10800210 	cmplti	r2,r2,8
   82980:	103fd21e 	bne	r2,zero,828cc <convert_filename_to_name_extension+0x24>
        else
        {
            name[counter] = ' ';
        }
    }
    if (filename[local] == '.') local++;
   82984:	e0bffb17 	ldw	r2,-20(fp)
   82988:	1007883a 	mov	r3,r2
   8298c:	e0bffd17 	ldw	r2,-12(fp)
   82990:	1885883a 	add	r2,r3,r2
   82994:	10800003 	ldbu	r2,0(r2)
   82998:	10803fcc 	andi	r2,r2,255
   8299c:	1080201c 	xori	r2,r2,128
   829a0:	10bfe004 	addi	r2,r2,-128
   829a4:	10800b98 	cmpnei	r2,r2,46
   829a8:	1000031e 	bne	r2,zero,829b8 <convert_filename_to_name_extension+0x110>
   829ac:	e0bffb17 	ldw	r2,-20(fp)
   829b0:	10800044 	addi	r2,r2,1
   829b4:	e0bffb15 	stw	r2,-20(fp)
    for(counter = 0; counter < 3; counter++)
   829b8:	e03ffc15 	stw	zero,-16(fp)
   829bc:	00002106 	br	82a44 <convert_filename_to_name_extension+0x19c>
    {
        if (filename[local] != 0)
   829c0:	e0bffb17 	ldw	r2,-20(fp)
   829c4:	1007883a 	mov	r3,r2
   829c8:	e0bffd17 	ldw	r2,-12(fp)
   829cc:	1885883a 	add	r2,r3,r2
   829d0:	10800003 	ldbu	r2,0(r2)
   829d4:	10803fcc 	andi	r2,r2,255
   829d8:	1080201c 	xori	r2,r2,128
   829dc:	10bfe004 	addi	r2,r2,-128
   829e0:	1005003a 	cmpeq	r2,r2,zero
   829e4:	10000e1e 	bne	r2,zero,82a20 <convert_filename_to_name_extension+0x178>
        {
            extension[counter] = filename[local];
   829e8:	e0bffc17 	ldw	r2,-16(fp)
   829ec:	1007883a 	mov	r3,r2
   829f0:	e0bfff17 	ldw	r2,-4(fp)
   829f4:	1889883a 	add	r4,r3,r2
   829f8:	e0bffb17 	ldw	r2,-20(fp)
   829fc:	1007883a 	mov	r3,r2
   82a00:	e0bffd17 	ldw	r2,-12(fp)
   82a04:	1885883a 	add	r2,r3,r2
   82a08:	10800003 	ldbu	r2,0(r2)
   82a0c:	20800005 	stb	r2,0(r4)
            local++;
   82a10:	e0bffb17 	ldw	r2,-20(fp)
   82a14:	10800044 	addi	r2,r2,1
   82a18:	e0bffb15 	stw	r2,-20(fp)
   82a1c:	00000606 	br	82a38 <convert_filename_to_name_extension+0x190>
        }
        else
        {
            extension[counter] = ' ';
   82a20:	e0bffc17 	ldw	r2,-16(fp)
   82a24:	1007883a 	mov	r3,r2
   82a28:	e0bfff17 	ldw	r2,-4(fp)
   82a2c:	1887883a 	add	r3,r3,r2
   82a30:	00800804 	movi	r2,32
   82a34:	18800005 	stb	r2,0(r3)
        {
            name[counter] = ' ';
        }
    }
    if (filename[local] == '.') local++;
    for(counter = 0; counter < 3; counter++)
   82a38:	e0bffc17 	ldw	r2,-16(fp)
   82a3c:	10800044 	addi	r2,r2,1
   82a40:	e0bffc15 	stw	r2,-16(fp)
   82a44:	e0bffc17 	ldw	r2,-16(fp)
   82a48:	108000d0 	cmplti	r2,r2,3
   82a4c:	103fdc1e 	bne	r2,zero,829c0 <convert_filename_to_name_extension+0x118>
        {
            extension[counter] = ' ';
        }
    }

}
   82a50:	e037883a 	mov	sp,fp
   82a54:	df000017 	ldw	fp,0(sp)
   82a58:	dec00104 	addi	sp,sp,4
   82a5c:	f800283a 	ret

00082a60 <create_file>:

bool create_file(char *name, t_file_record *file_record, t_file_record *home_dir)
// Create a file in a given directory. Expand the directory if needed.
{
   82a60:	defff204 	addi	sp,sp,-56
   82a64:	dfc00d15 	stw	ra,52(sp)
   82a68:	df000c15 	stw	fp,48(sp)
   82a6c:	dc000b15 	stw	r16,44(sp)
   82a70:	df000b04 	addi	fp,sp,44
   82a74:	e13ffb15 	stw	r4,-20(fp)
   82a78:	e17ffc15 	stw	r5,-16(fp)
   82a7c:	e1bffd15 	stw	r6,-12(fp)
    unsigned int cluster_number;
    bool result = false;
   82a80:	e03ff915 	stw	zero,-28(fp)
    
    if (find_first_empty_cluster(&cluster_number))
   82a84:	e13ffa04 	addi	r4,fp,-24
   82a88:	00823bc0 	call	823bc <find_first_empty_cluster>
   82a8c:	1005003a 	cmpeq	r2,r2,zero
   82a90:	1000a71e 	bne	r2,zero,82d30 <create_file+0x2d0>
    {
        int record_index;
        
        if (home_dir->file_record_cluster == 0)
   82a94:	e0bffd17 	ldw	r2,-12(fp)
   82a98:	10800a17 	ldw	r2,40(r2)
   82a9c:	1004c03a 	cmpne	r2,r2,zero
   82aa0:	1000031e 	bne	r2,zero,82ab0 <create_file+0x50>
        {
            // Put a file in the root directory.
            record_index = find_first_empty_record_in_root_directory();
   82aa4:	008278c0 	call	8278c <find_first_empty_record_in_root_directory>
   82aa8:	e0bff815 	stw	r2,-32(fp)
   82aac:	00000506 	br	82ac4 <create_file+0x64>
        }
        else
        {
            // Put a file in a subdirectory.
            record_index = find_first_empty_record_in_a_subdirectory(home_dir->start_cluster_index);           
   82ab0:	e0bffd17 	ldw	r2,-12(fp)
   82ab4:	1080058b 	ldhu	r2,22(r2)
   82ab8:	113fffcc 	andi	r4,r2,65535
   82abc:	00825500 	call	82550 <find_first_empty_record_in_a_subdirectory>
   82ac0:	e0bff815 	stw	r2,-32(fp)
        }
        if (record_index >= 0)
   82ac4:	e0bff817 	ldw	r2,-32(fp)
   82ac8:	1004803a 	cmplt	r2,r2,zero
   82acc:	1000981e 	bne	r2,zero,82d30 <create_file+0x2d0>
        {   
            unsigned int file_record_sector;
            int location = get_dir_divider_location( name );
   82ad0:	e13ffb17 	ldw	r4,-20(fp)
   82ad4:	00816980 	call	81698 <get_dir_divider_location>
   82ad8:	e0bff615 	stw	r2,-40(fp)
            int last_dir_separator = 0;
   82adc:	e03ff515 	stw	zero,-44(fp)

            // Skip through all directory separators.
            while (location > 0)
   82ae0:	00000b06 	br	82b10 <create_file+0xb0>
            {
                last_dir_separator = last_dir_separator+location+1;
   82ae4:	e0fff517 	ldw	r3,-44(fp)
   82ae8:	e0bff617 	ldw	r2,-40(fp)
   82aec:	1885883a 	add	r2,r3,r2
   82af0:	10800044 	addi	r2,r2,1
   82af4:	e0bff515 	stw	r2,-44(fp)
                location = get_dir_divider_location( &(name[last_dir_separator]) );
   82af8:	e0bff517 	ldw	r2,-44(fp)
   82afc:	1007883a 	mov	r3,r2
   82b00:	e0bffb17 	ldw	r2,-20(fp)
   82b04:	1889883a 	add	r4,r3,r2
   82b08:	00816980 	call	81698 <get_dir_divider_location>
   82b0c:	e0bff615 	stw	r2,-40(fp)
            unsigned int file_record_sector;
            int location = get_dir_divider_location( name );
            int last_dir_separator = 0;

            // Skip through all directory separators.
            while (location > 0)
   82b10:	e0bff617 	ldw	r2,-40(fp)
   82b14:	10800048 	cmpgei	r2,r2,1
   82b18:	103ff21e 	bne	r2,zero,82ae4 <create_file+0x84>
            {
                last_dir_separator = last_dir_separator+location+1;
                location = get_dir_divider_location( &(name[last_dir_separator]) );
            }
            
            convert_filename_to_name_extension(&(name[last_dir_separator]), file_record->name, file_record->extension);
   82b1c:	e0bff517 	ldw	r2,-44(fp)
   82b20:	1007883a 	mov	r3,r2
   82b24:	e0bffb17 	ldw	r2,-20(fp)
   82b28:	1889883a 	add	r4,r3,r2
   82b2c:	e0bffc17 	ldw	r2,-16(fp)
   82b30:	100b883a 	mov	r5,r2
   82b34:	e0bffc17 	ldw	r2,-16(fp)
   82b38:	10800204 	addi	r2,r2,8
   82b3c:	100d883a 	mov	r6,r2
   82b40:	00828a80 	call	828a8 <convert_filename_to_name_extension>
                         
            file_record->attributes = 0x20;
   82b44:	e0fffc17 	ldw	r3,-16(fp)
   82b48:	00800804 	movi	r2,32
   82b4c:	188002c5 	stb	r2,11(r3)
            file_record->create_time = 0;
   82b50:	e0bffc17 	ldw	r2,-16(fp)
   82b54:	1000030d 	sth	zero,12(r2)
            file_record->create_date = (30 << 9) + (1 << 5) + 1;
   82b58:	e0fffc17 	ldw	r3,-16(fp)
   82b5c:	008f0844 	movi	r2,15393
   82b60:	1880038d 	sth	r2,14(r3)
            file_record->last_access_date = (30 << 9) + (1 << 5) + 1;
   82b64:	e0fffc17 	ldw	r3,-16(fp)
   82b68:	008f0844 	movi	r2,15393
   82b6c:	1880040d 	sth	r2,16(r3)
            file_record->last_modified_time = 0;
   82b70:	e0bffc17 	ldw	r2,-16(fp)
   82b74:	1000048d 	sth	zero,18(r2)
            file_record->last_modified_date = (30 << 9) + (1 << 5) + 1;
   82b78:	e0fffc17 	ldw	r3,-16(fp)
   82b7c:	008f0844 	movi	r2,15393
   82b80:	1880050d 	sth	r2,20(r3)
            file_record->start_cluster_index = cluster_number;
   82b84:	e0bffa17 	ldw	r2,-24(fp)
   82b88:	1007883a 	mov	r3,r2
   82b8c:	e0bffc17 	ldw	r2,-16(fp)
   82b90:	10c0058d 	sth	r3,22(r2)
            file_record->file_size_in_bytes = 0;
   82b94:	e0bffc17 	ldw	r2,-16(fp)
   82b98:	10000615 	stw	zero,24(r2)
            file_record->current_cluster_index = cluster_number;
   82b9c:	e0fffa17 	ldw	r3,-24(fp)
   82ba0:	e0bffc17 	ldw	r2,-16(fp)
   82ba4:	10c00715 	stw	r3,28(r2)
            file_record->current_sector_in_cluster = 0;
   82ba8:	e0bffc17 	ldw	r2,-16(fp)
   82bac:	10000815 	stw	zero,32(r2)
            file_record->current_byte_position = 0;
   82bb0:	e0bffc17 	ldw	r2,-16(fp)
   82bb4:	10000915 	stw	zero,36(r2)
            file_record->file_record_cluster = record_index & 0x0000ffff;
   82bb8:	e0bff817 	ldw	r2,-32(fp)
   82bbc:	10ffffcc 	andi	r3,r2,65535
   82bc0:	e0bffc17 	ldw	r2,-16(fp)
   82bc4:	10c00a15 	stw	r3,40(r2)
            file_record->file_record_sector_in_cluster = ((record_index >> 16) & 0x0000ffff) / 16;
   82bc8:	e0bff817 	ldw	r2,-32(fp)
   82bcc:	1005d43a 	srai	r2,r2,16
   82bd0:	10bfffcc 	andi	r2,r2,65535
   82bd4:	e0bfff15 	stw	r2,-4(fp)
   82bd8:	e0ffff17 	ldw	r3,-4(fp)
   82bdc:	1804403a 	cmpge	r2,r3,zero
   82be0:	1000031e 	bne	r2,zero,82bf0 <create_file+0x190>
   82be4:	e0bfff17 	ldw	r2,-4(fp)
   82be8:	108003c4 	addi	r2,r2,15
   82bec:	e0bfff15 	stw	r2,-4(fp)
   82bf0:	e0ffff17 	ldw	r3,-4(fp)
   82bf4:	1805d13a 	srai	r2,r3,4
   82bf8:	1007883a 	mov	r3,r2
   82bfc:	e0bffc17 	ldw	r2,-16(fp)
   82c00:	10c00b15 	stw	r3,44(r2)
            file_record->file_record_offset = (((record_index >> 16) & 0x0000ffff) % 16)*32;   
   82c04:	e0bff817 	ldw	r2,-32(fp)
   82c08:	1005d43a 	srai	r2,r2,16
   82c0c:	108003cc 	andi	r2,r2,15
   82c10:	1004917a 	slli	r2,r2,5
   82c14:	1007883a 	mov	r3,r2
   82c18:	e0bffc17 	ldw	r2,-16(fp)
   82c1c:	10c00c0d 	sth	r3,48(r2)
            file_record->home_directory_cluster = home_dir->start_cluster_index;
   82c20:	e0bffd17 	ldw	r2,-12(fp)
   82c24:	1080058b 	ldhu	r2,22(r2)
   82c28:	10ffffcc 	andi	r3,r2,65535
   82c2c:	e0bffc17 	ldw	r2,-16(fp)
   82c30:	10c00d15 	stw	r3,52(r2)
            file_record->in_use = true;
   82c34:	e0fffc17 	ldw	r3,-16(fp)
   82c38:	00800044 	movi	r2,1
   82c3c:	18800f15 	stw	r2,60(r3)
            file_record->modified = true;
   82c40:	e0fffc17 	ldw	r3,-16(fp)
   82c44:	00800044 	movi	r2,1
   82c48:	18800e15 	stw	r2,56(r3)
            // Now write the record at the specified location.
            file_record_sector = (file_record->file_record_cluster == 0) ? 
   82c4c:	e0bffc17 	ldw	r2,-16(fp)
   82c50:	10800a17 	ldw	r2,40(r2)
   82c54:	1004c03a 	cmpne	r2,r2,zero
   82c58:	1000081e 	bne	r2,zero,82c7c <create_file+0x21c>
   82c5c:	008002b4 	movhi	r2,10
   82c60:	10911c04 	addi	r2,r2,17520
   82c64:	10c01317 	ldw	r3,76(r2)
   82c68:	e0bffc17 	ldw	r2,-16(fp)
   82c6c:	10800b17 	ldw	r2,44(r2)
   82c70:	1887883a 	add	r3,r3,r2
   82c74:	e0fffe15 	stw	r3,-8(fp)
   82c78:	00001006 	br	82cbc <create_file+0x25c>
   82c7c:	008002b4 	movhi	r2,10
   82c80:	10911c04 	addi	r2,r2,17520
   82c84:	14001417 	ldw	r16,80(r2)
   82c88:	e0bffc17 	ldw	r2,-16(fp)
   82c8c:	10800a17 	ldw	r2,40(r2)
   82c90:	113fff84 	addi	r4,r2,-2
   82c94:	008002b4 	movhi	r2,10
   82c98:	10911c04 	addi	r2,r2,17520
   82c9c:	10800383 	ldbu	r2,14(r2)
   82ca0:	11403fcc 	andi	r5,r2,255
   82ca4:	00886b00 	call	886b0 <__mulsi3>
   82ca8:	8087883a 	add	r3,r16,r2
   82cac:	e0bffc17 	ldw	r2,-16(fp)
   82cb0:	10800b17 	ldw	r2,44(r2)
   82cb4:	1887883a 	add	r3,r3,r2
   82cb8:	e0fffe15 	stw	r3,-8(fp)
   82cbc:	e0bffe17 	ldw	r2,-8(fp)
   82cc0:	e0bff715 	stw	r2,-36(fp)
                                    (boot_sector_data.root_directory_sector_offset + file_record->file_record_sector_in_cluster):  
                                    (boot_sector_data.data_sector_offset + (file_record->file_record_cluster-2)*boot_sector_data.sectors_per_cluster +
                                     file_record->file_record_sector_in_cluster);

			if (Read_Sector_Data(file_record_sector, fat_partition_offset_in_512_byte_sectors))
   82cc4:	e13ff717 	ldw	r4,-36(fp)
   82cc8:	d166fc17 	ldw	r5,-25616(gp)
   82ccc:	008053c0 	call	8053c <Read_Sector_Data>
   82cd0:	1005003a 	cmpeq	r2,r2,zero
   82cd4:	1000161e 	bne	r2,zero,82d30 <create_file+0x2d0>
            {
                if (Write_File_Record_At_Offset(file_record->file_record_offset, file_record))
   82cd8:	e0bffc17 	ldw	r2,-16(fp)
   82cdc:	10800c0b 	ldhu	r2,48(r2)
   82ce0:	113fffcc 	andi	r4,r2,65535
   82ce4:	2120001c 	xori	r4,r4,32768
   82ce8:	21200004 	addi	r4,r4,-32768
   82cec:	e17ffc17 	ldw	r5,-16(fp)
   82cf0:	0080ac80 	call	80ac8 <Write_File_Record_At_Offset>
   82cf4:	1005003a 	cmpeq	r2,r2,zero
   82cf8:	10000d1e 	bne	r2,zero,82d30 <create_file+0x2d0>
                {
                    Save_Modified_Sector();
   82cfc:	00804ec0 	call	804ec <Save_Modified_Sector>
                    // Mark the first cluster of the file as the last cluster at first.
                    mark_cluster(cluster_number, ((short int) (0xffff)), true);
   82d00:	e13ffa17 	ldw	r4,-24(fp)
   82d04:	017fffc4 	movi	r5,-1
   82d08:	01800044 	movi	r6,1
   82d0c:	00806d00 	call	806d0 <mark_cluster>
                    if (mark_cluster(cluster_number, ((short int) (0xffff)), false))
   82d10:	e13ffa17 	ldw	r4,-24(fp)
   82d14:	017fffc4 	movi	r5,-1
   82d18:	000d883a 	mov	r6,zero
   82d1c:	00806d00 	call	806d0 <mark_cluster>
   82d20:	1005003a 	cmpeq	r2,r2,zero
   82d24:	1000021e 	bne	r2,zero,82d30 <create_file+0x2d0>
                    {
                        result = true;
   82d28:	00800044 	movi	r2,1
   82d2c:	e0bff915 	stw	r2,-28(fp)
                }
            }
        }

    }
    return result;           
   82d30:	e0bff917 	ldw	r2,-28(fp)
}
   82d34:	e037883a 	mov	sp,fp
   82d38:	dfc00217 	ldw	ra,8(sp)
   82d3c:	df000117 	ldw	fp,4(sp)
   82d40:	dc000017 	ldw	r16,0(sp)
   82d44:	dec00304 	addi	sp,sp,12
   82d48:	f800283a 	ret

00082d4c <copy_file_record_name_to_string>:


void copy_file_record_name_to_string(t_file_record *file_record, char *file_name)
/* Copy a file name from the file record to a given string */
{
   82d4c:	defffb04 	addi	sp,sp,-20
   82d50:	df000415 	stw	fp,16(sp)
   82d54:	df000404 	addi	fp,sp,16
   82d58:	e13ffe15 	stw	r4,-8(fp)
   82d5c:	e17fff15 	stw	r5,-4(fp)
	int index;
	int flength = 0;
   82d60:	e03ffc15 	stw	zero,-16(fp)

	/* Copy file name.*/
	for (index = 0; index < 8; index++)
   82d64:	e03ffd15 	stw	zero,-12(fp)
   82d68:	00001606 	br	82dc4 <copy_file_record_name_to_string+0x78>
	{
		if (file_record->name[index] != ' ')
   82d6c:	e0fffd17 	ldw	r3,-12(fp)
   82d70:	e0bffe17 	ldw	r2,-8(fp)
   82d74:	10c5883a 	add	r2,r2,r3
   82d78:	10800003 	ldbu	r2,0(r2)
   82d7c:	10803fcc 	andi	r2,r2,255
   82d80:	10800820 	cmpeqi	r2,r2,32
   82d84:	10000c1e 	bne	r2,zero,82db8 <copy_file_record_name_to_string+0x6c>
		{
			file_name[flength] = file_record->name[index];
   82d88:	e0bffc17 	ldw	r2,-16(fp)
   82d8c:	1007883a 	mov	r3,r2
   82d90:	e0bfff17 	ldw	r2,-4(fp)
   82d94:	1889883a 	add	r4,r3,r2
   82d98:	e0fffd17 	ldw	r3,-12(fp)
   82d9c:	e0bffe17 	ldw	r2,-8(fp)
   82da0:	10c5883a 	add	r2,r2,r3
   82da4:	10800003 	ldbu	r2,0(r2)
   82da8:	20800005 	stb	r2,0(r4)
			flength = flength + 1;
   82dac:	e0bffc17 	ldw	r2,-16(fp)
   82db0:	10800044 	addi	r2,r2,1
   82db4:	e0bffc15 	stw	r2,-16(fp)
{
	int index;
	int flength = 0;

	/* Copy file name.*/
	for (index = 0; index < 8; index++)
   82db8:	e0bffd17 	ldw	r2,-12(fp)
   82dbc:	10800044 	addi	r2,r2,1
   82dc0:	e0bffd15 	stw	r2,-12(fp)
   82dc4:	e0bffd17 	ldw	r2,-12(fp)
   82dc8:	10800210 	cmplti	r2,r2,8
   82dcc:	103fe71e 	bne	r2,zero,82d6c <copy_file_record_name_to_string+0x20>
		{
			file_name[flength] = file_record->name[index];
			flength = flength + 1;
		}
	}
	if (file_record->extension[0] != ' ')
   82dd0:	e0bffe17 	ldw	r2,-8(fp)
   82dd4:	10800203 	ldbu	r2,8(r2)
   82dd8:	10803fcc 	andi	r2,r2,255
   82ddc:	10800820 	cmpeqi	r2,r2,32
   82de0:	1000261e 	bne	r2,zero,82e7c <copy_file_record_name_to_string+0x130>
	{
		file_name[flength] = '.';
   82de4:	e0bffc17 	ldw	r2,-16(fp)
   82de8:	1007883a 	mov	r3,r2
   82dec:	e0bfff17 	ldw	r2,-4(fp)
   82df0:	1887883a 	add	r3,r3,r2
   82df4:	00800b84 	movi	r2,46
   82df8:	18800005 	stb	r2,0(r3)
		flength = flength + 1;
   82dfc:	e0bffc17 	ldw	r2,-16(fp)
   82e00:	10800044 	addi	r2,r2,1
   82e04:	e0bffc15 	stw	r2,-16(fp)
		for (index = 0; index < 3; index++)
   82e08:	e03ffd15 	stw	zero,-12(fp)
   82e0c:	00001806 	br	82e70 <copy_file_record_name_to_string+0x124>
		{
			if (file_record->extension[index] != ' ')
   82e10:	e0fffd17 	ldw	r3,-12(fp)
   82e14:	e0bffe17 	ldw	r2,-8(fp)
   82e18:	1885883a 	add	r2,r3,r2
   82e1c:	10800204 	addi	r2,r2,8
   82e20:	10800003 	ldbu	r2,0(r2)
   82e24:	10803fcc 	andi	r2,r2,255
   82e28:	10800820 	cmpeqi	r2,r2,32
   82e2c:	10000d1e 	bne	r2,zero,82e64 <copy_file_record_name_to_string+0x118>
			{
				file_name[flength] = file_record->extension[index];
   82e30:	e0bffc17 	ldw	r2,-16(fp)
   82e34:	1007883a 	mov	r3,r2
   82e38:	e0bfff17 	ldw	r2,-4(fp)
   82e3c:	1889883a 	add	r4,r3,r2
   82e40:	e0fffd17 	ldw	r3,-12(fp)
   82e44:	e0bffe17 	ldw	r2,-8(fp)
   82e48:	1885883a 	add	r2,r3,r2
   82e4c:	10800204 	addi	r2,r2,8
   82e50:	10800003 	ldbu	r2,0(r2)
   82e54:	20800005 	stb	r2,0(r4)
				flength = flength + 1;
   82e58:	e0bffc17 	ldw	r2,-16(fp)
   82e5c:	10800044 	addi	r2,r2,1
   82e60:	e0bffc15 	stw	r2,-16(fp)
	}
	if (file_record->extension[0] != ' ')
	{
		file_name[flength] = '.';
		flength = flength + 1;
		for (index = 0; index < 3; index++)
   82e64:	e0bffd17 	ldw	r2,-12(fp)
   82e68:	10800044 	addi	r2,r2,1
   82e6c:	e0bffd15 	stw	r2,-12(fp)
   82e70:	e0bffd17 	ldw	r2,-12(fp)
   82e74:	108000d0 	cmplti	r2,r2,3
   82e78:	103fe51e 	bne	r2,zero,82e10 <copy_file_record_name_to_string+0xc4>
				file_name[flength] = file_record->extension[index];
				flength = flength + 1;
			}
		}
	}
	file_name[flength] = 0;
   82e7c:	e0bffc17 	ldw	r2,-16(fp)
   82e80:	1007883a 	mov	r3,r2
   82e84:	e0bfff17 	ldw	r2,-4(fp)
   82e88:	1885883a 	add	r2,r3,r2
   82e8c:	10000005 	stb	zero,0(r2)
}
   82e90:	e037883a 	mov	sp,fp
   82e94:	df000017 	ldw	fp,0(sp)
   82e98:	dec00104 	addi	sp,sp,4
   82e9c:	f800283a 	ret

00082ea0 <sd_card_open_dev>:
// Direct functions
///////////////////////////////////////////////////////////////////////////


void sd_card_open_dev()
{
   82ea0:	deffff04 	addi	sp,sp,-4
   82ea4:	df000015 	stw	fp,0(sp)
   82ea8:	d839883a 	mov	fp,sp
	// for details)
	// alt_up_sd_card_dev *dev = (alt_up_sd_card_dev *) alt_find_dev(name, &alt_dev_list);

	// if (dev != NULL)
	// {
		aux_status_register = ((short int *) SD_CARD_AUX_STATUS(SD_CARD_0_BASE));
   82eac:	00808d04 	movi	r2,564
   82eb0:	d0a6f715 	stw	r2,-25636(gp)
		status_register = ((int *) SD_CARD_STATUS(SD_CARD_0_BASE));
   82eb4:	00808904 	movi	r2,548
   82eb8:	d0a6f815 	stw	r2,-25632(gp)
		CSD_register_w0 = ((short int *) SD_CARD_CSD(SD_CARD_0_BASE, 0));
   82ebc:	00808404 	movi	r2,528
   82ec0:	d0a6f915 	stw	r2,-25628(gp)
		command_register = ((short int *) SD_CARD_COMMAND(SD_CARD_0_BASE));
   82ec4:	00808c04 	movi	r2,560
   82ec8:	d0a6fa15 	stw	r2,-25624(gp)
		command_argument_register = ((int *) SD_CARD_ARGUMENT(SD_CARD_0_BASE));
   82ecc:	00808b04 	movi	r2,556
   82ed0:	d0a6fb15 	stw	r2,-25620(gp)
		// device_pointer = dev;
		initialized = false;
   82ed4:	d026f515 	stw	zero,-25644(gp)
		is_sd_card_formated_as_FAT16 = false;
   82ed8:	d026f615 	stw	zero,-25640(gp)
		search_data.valid = false;
   82edc:	008002b4 	movhi	r2,10
   82ee0:	10911704 	addi	r2,r2,17500
   82ee4:	10000415 	stw	zero,16(r2)
	// }
	// return dev;
}
   82ee8:	e037883a 	mov	sp,fp
   82eec:	df000017 	ldw	fp,0(sp)
   82ef0:	dec00104 	addi	sp,sp,4
   82ef4:	f800283a 	ret

00082ef8 <sd_card_is_Present>:


bool sd_card_is_Present(void)
// Check if there is an SD Card insterted into the SD Card socket.
{
   82ef8:	defffe04 	addi	sp,sp,-8
   82efc:	df000115 	stw	fp,4(sp)
   82f00:	df000104 	addi	fp,sp,4
    bool result = false;
   82f04:	e03fff15 	stw	zero,-4(fp)

    if ((*aux_status_register & 0x02) != 0)
   82f08:	d0a6f717 	ldw	r2,-25636(gp)
   82f0c:	1080000b 	ldhu	r2,0(r2)
   82f10:	10bfffcc 	andi	r2,r2,65535
   82f14:	1080008c 	andi	r2,r2,2
   82f18:	1005003a 	cmpeq	r2,r2,zero
   82f1c:	1000031e 	bne	r2,zero,82f2c <sd_card_is_Present+0x34>
    {
        result = true;
   82f20:	00800044 	movi	r2,1
   82f24:	e0bfff15 	stw	r2,-4(fp)
   82f28:	00000106 	br	82f30 <sd_card_is_Present+0x38>
    } else {
		initialized = false;
   82f2c:	d026f515 	stw	zero,-25644(gp)
	}
    return result;
   82f30:	e0bfff17 	ldw	r2,-4(fp)
}
   82f34:	e037883a 	mov	sp,fp
   82f38:	df000017 	ldw	fp,0(sp)
   82f3c:	dec00104 	addi	sp,sp,4
   82f40:	f800283a 	ret

00082f44 <sd_card_is_FAT16>:
/* This function reads the SD card data in an effort to determine if the card is formated as a FAT16
 * volume. Please note that FAT12 has a similar format, but will not be supported by this driver.
 * If the card contains a FAT16 volume, the local data structures will be initialized to allow reading and writing
 * to the SD card as though it was a hard drive.
 */
{
   82f44:	defffd04 	addi	sp,sp,-12
   82f48:	dfc00215 	stw	ra,8(sp)
   82f4c:	df000115 	stw	fp,4(sp)
   82f50:	df000104 	addi	fp,sp,4
	bool result = false;
   82f54:	e03fff15 	stw	zero,-4(fp)

	if (sd_card_is_Present())
   82f58:	0082ef80 	call	82ef8 <sd_card_is_Present>
   82f5c:	1005003a 	cmpeq	r2,r2,zero
   82f60:	1000151e 	bne	r2,zero,82fb8 <sd_card_is_FAT16+0x74>
	{
		// Check if an SD Card is in the SD Card slot.
		if ((*aux_status_register & 0x02) != 0)
   82f64:	d0a6f717 	ldw	r2,-25636(gp)
   82f68:	1080000b 	ldhu	r2,0(r2)
   82f6c:	10bfffcc 	andi	r2,r2,65535
   82f70:	1080008c 	andi	r2,r2,2
   82f74:	1005003a 	cmpeq	r2,r2,zero
   82f78:	10000b1e 	bne	r2,zero,82fa8 <sd_card_is_FAT16+0x64>
		{
			if (initialized == false)
   82f7c:	d0a6f517 	ldw	r2,-25644(gp)
   82f80:	1004c03a 	cmpne	r2,r2,zero
   82f84:	10000a1e 	bne	r2,zero,82fb0 <sd_card_is_FAT16+0x6c>
			{
				// Now determine if the card is formatted as FAT 16.
				is_sd_card_formated_as_FAT16 = Look_for_FAT16();
   82f88:	00812140 	call	81214 <Look_for_FAT16>
   82f8c:	d0a6f615 	stw	r2,-25640(gp)
				initialized = is_sd_card_formated_as_FAT16;
   82f90:	d0a6f617 	ldw	r2,-25640(gp)
   82f94:	d0a6f515 	stw	r2,-25644(gp)
				search_data.valid = false;
   82f98:	008002b4 	movhi	r2,10
   82f9c:	10911704 	addi	r2,r2,17500
   82fa0:	10000415 	stw	zero,16(r2)
   82fa4:	00000206 	br	82fb0 <sd_card_is_FAT16+0x6c>
			}
		}
		else
		{
			// If not then you may as well not open the device.
			initialized = false;
   82fa8:	d026f515 	stw	zero,-25644(gp)
			is_sd_card_formated_as_FAT16 = false;
   82fac:	d026f615 	stw	zero,-25640(gp)
		}
		result = is_sd_card_formated_as_FAT16;
   82fb0:	d0a6f617 	ldw	r2,-25640(gp)
   82fb4:	e0bfff15 	stw	r2,-4(fp)
	}

	return result;
   82fb8:	e0bfff17 	ldw	r2,-4(fp)
}
   82fbc:	e037883a 	mov	sp,fp
   82fc0:	dfc00117 	ldw	ra,4(sp)
   82fc4:	df000017 	ldw	fp,0(sp)
   82fc8:	dec00204 	addi	sp,sp,8
   82fcc:	f800283a 	ret

00082fd0 <sd_card_find_first>:
 * "first/sub/." - look through a directory named "sub", that is located within the subdirectory named "first". "first" is located in the root directory.
 * Invalid examples include:
 * "/.", "/////." - this is not the root directory.
 * "/first/." - the first character may not be a '/'.
 */
{
   82fd0:	deffea04 	addi	sp,sp,-88
   82fd4:	dfc01515 	stw	ra,84(sp)
   82fd8:	df001415 	stw	fp,80(sp)
   82fdc:	df001404 	addi	fp,sp,80
   82fe0:	e13ffe15 	stw	r4,-8(fp)
   82fe4:	e17fff15 	stw	r5,-4(fp)
	short int result = 2;
   82fe8:	00800084 	movi	r2,2
   82fec:	e0bfec0d 	sth	r2,-80(fp)
	if ((sd_card_is_Present()) && (is_sd_card_formated_as_FAT16))
   82ff0:	0082ef80 	call	82ef8 <sd_card_is_Present>
   82ff4:	1005003a 	cmpeq	r2,r2,zero
   82ff8:	1000241e 	bne	r2,zero,8308c <sd_card_find_first+0xbc>
   82ffc:	d0a6f617 	ldw	r2,-25640(gp)
   83000:	1005003a 	cmpeq	r2,r2,zero
   83004:	1000211e 	bne	r2,zero,8308c <sd_card_find_first+0xbc>
	{
		int home_directory_cluster;
		t_file_record file_record;

		if (get_home_directory_cluster_for_file(directory_to_search_through, &home_directory_cluster, &file_record))
   83008:	e17fed04 	addi	r5,fp,-76
   8300c:	e1bfee04 	addi	r6,fp,-72
   83010:	e13ffe17 	ldw	r4,-8(fp)
   83014:	0081a440 	call	81a44 <get_home_directory_cluster_for_file>
   83018:	1005003a 	cmpeq	r2,r2,zero
   8301c:	1000191e 	bne	r2,zero,83084 <sd_card_find_first+0xb4>
		{
			search_data.directory_root_cluster = home_directory_cluster;
   83020:	e0bfed17 	ldw	r2,-76(fp)
   83024:	1007883a 	mov	r3,r2
   83028:	008002b4 	movhi	r2,10
   8302c:	10911704 	addi	r2,r2,17500
   83030:	10c00015 	stw	r3,0(r2)
			search_data.current_cluster_index = home_directory_cluster;
   83034:	e0bfed17 	ldw	r2,-76(fp)
   83038:	1007883a 	mov	r3,r2
   8303c:	008002b4 	movhi	r2,10
   83040:	10911704 	addi	r2,r2,17500
   83044:	10c00115 	stw	r3,4(r2)
			search_data.current_sector_in_cluster = 0;
   83048:	008002b4 	movhi	r2,10
   8304c:	10911704 	addi	r2,r2,17500
   83050:	10000215 	stw	zero,8(r2)
			search_data.file_index_in_sector = -1;
   83054:	00c002b4 	movhi	r3,10
   83058:	18d11704 	addi	r3,r3,17500
   8305c:	00bfffc4 	movi	r2,-1
   83060:	1880030d 	sth	r2,12(r3)
			search_data.valid = true;
   83064:	00c002b4 	movhi	r3,10
   83068:	18d11704 	addi	r3,r3,17500
   8306c:	00800044 	movi	r2,1
   83070:	18800415 	stw	r2,16(r3)
			result = sd_card_find_next(file_name);
   83074:	e13fff17 	ldw	r4,-4(fp)
   83078:	00830a40 	call	830a4 <sd_card_find_next>
   8307c:	e0bfec0d 	sth	r2,-80(fp)
   83080:	00000206 	br	8308c <sd_card_find_first+0xbc>
		}
		else
		{
			result = 1;
   83084:	00800044 	movi	r2,1
   83088:	e0bfec0d 	sth	r2,-80(fp)
		}
	}
	return result;
   8308c:	e0bfec0f 	ldh	r2,-80(fp)
}
   83090:	e037883a 	mov	sp,fp
   83094:	dfc00117 	ldw	ra,4(sp)
   83098:	df000017 	ldw	fp,0(sp)
   8309c:	dec00204 	addi	sp,sp,8
   830a0:	f800283a 	ret

000830a4 <sd_card_find_next>:
 *		-1 - end of directory.
 *		0 - success
 *		2 - No card or incorrect card format.
 *		3 - find_first has not been called successfully.
 */
{
   830a4:	deffe404 	addi	sp,sp,-112
   830a8:	dfc01b15 	stw	ra,108(sp)
   830ac:	df001a15 	stw	fp,104(sp)
   830b0:	df001a04 	addi	fp,sp,104
   830b4:	e13ffe15 	stw	r4,-8(fp)
	short int result = 2;
   830b8:	00800084 	movi	r2,2
   830bc:	e0bfed0d 	sth	r2,-76(fp)
	if ((sd_card_is_Present()) && (is_sd_card_formated_as_FAT16))
   830c0:	0082ef80 	call	82ef8 <sd_card_is_Present>
   830c4:	1005003a 	cmpeq	r2,r2,zero
   830c8:	1000d81e 	bne	r2,zero,8342c <sd_card_find_next+0x388>
   830cc:	d0a6f617 	ldw	r2,-25640(gp)
   830d0:	1005003a 	cmpeq	r2,r2,zero
   830d4:	1000d51e 	bne	r2,zero,8342c <sd_card_find_next+0x388>
	{
		if (search_data.valid)
   830d8:	008002b4 	movhi	r2,10
   830dc:	10911704 	addi	r2,r2,17500
   830e0:	10800417 	ldw	r2,16(r2)
   830e4:	1005003a 	cmpeq	r2,r2,zero
   830e8:	1000ce1e 	bne	r2,zero,83424 <sd_card_find_next+0x380>
		{
			t_file_record file_record;
			int cluster = search_data.current_cluster_index;
   830ec:	008002b4 	movhi	r2,10
   830f0:	10911704 	addi	r2,r2,17500
   830f4:	10800117 	ldw	r2,4(r2)
   830f8:	e0bfec15 	stw	r2,-80(fp)

			if (cluster == 0)
   830fc:	e0bfec17 	ldw	r2,-80(fp)
   83100:	1004c03a 	cmpne	r2,r2,zero
   83104:	1000521e 	bne	r2,zero,83250 <sd_card_find_next+0x1ac>
			{
				// Searching through the root directory
				int max_root_dir_sectors = ((32*boot_sector_data.max_number_of_dir_entires) / boot_sector_data.sector_size_in_bytes);
   83108:	008002b4 	movhi	r2,10
   8310c:	10911c04 	addi	r2,r2,17520
   83110:	1080050b 	ldhu	r2,20(r2)
   83114:	10bfffcc 	andi	r2,r2,65535
   83118:	1008917a 	slli	r4,r2,5
   8311c:	008002b4 	movhi	r2,10
   83120:	10911c04 	addi	r2,r2,17520
   83124:	1080030b 	ldhu	r2,12(r2)
   83128:	117fffcc 	andi	r5,r2,65535
   8312c:	00885e00 	call	885e0 <__divsi3>
   83130:	e0bfeb15 	stw	r2,-84(fp)
				int sector_index = search_data.current_sector_in_cluster;
   83134:	008002b4 	movhi	r2,10
   83138:	10911704 	addi	r2,r2,17500
   8313c:	10800217 	ldw	r2,8(r2)
   83140:	e0bfea15 	stw	r2,-88(fp)
				int file_counter = search_data.file_index_in_sector+1;
   83144:	008002b4 	movhi	r2,10
   83148:	10911704 	addi	r2,r2,17500
   8314c:	1080030b 	ldhu	r2,12(r2)
   83150:	10bfffcc 	andi	r2,r2,65535
   83154:	10a0001c 	xori	r2,r2,32768
   83158:	10a00004 	addi	r2,r2,-32768
   8315c:	10800044 	addi	r2,r2,1
   83160:	e0bfe915 	stw	r2,-92(fp)
    
				for (sector_index = 0; sector_index < max_root_dir_sectors; sector_index++)
   83164:	e03fea15 	stw	zero,-88(fp)
   83168:	00003306 	br	83238 <sd_card_find_next+0x194>
				{
					if (Read_Sector_Data(   sector_index + boot_sector_data.root_directory_sector_offset,
   8316c:	008002b4 	movhi	r2,10
   83170:	10911c04 	addi	r2,r2,17520
   83174:	10c01317 	ldw	r3,76(r2)
   83178:	e0bfea17 	ldw	r2,-88(fp)
   8317c:	1885883a 	add	r2,r3,r2
   83180:	1009883a 	mov	r4,r2
   83184:	d166fc17 	ldw	r5,-25616(gp)
   83188:	008053c0 	call	8053c <Read_Sector_Data>
   8318c:	1005003a 	cmpeq	r2,r2,zero
   83190:	10002c1e 	bne	r2,zero,83244 <sd_card_find_next+0x1a0>
											fat_partition_offset_in_512_byte_sectors))
					{
						for (; file_counter < 16; file_counter++)
   83194:	00002106 	br	8321c <sd_card_find_next+0x178>
						{
							if (Read_File_Record_At_Offset(file_counter*32, &file_record, 0, sector_index))
   83198:	e0bfe917 	ldw	r2,-92(fp)
   8319c:	1008917a 	slli	r4,r2,5
   831a0:	e1ffea17 	ldw	r7,-88(fp)
   831a4:	e17fee04 	addi	r5,fp,-72
   831a8:	000d883a 	mov	r6,zero
   831ac:	00809000 	call	80900 <Read_File_Record_At_Offset>
   831b0:	1005003a 	cmpeq	r2,r2,zero
   831b4:	1000161e 	bne	r2,zero,83210 <sd_card_find_next+0x16c>
							{
								if ((file_record.name[0] != 0) && (file_record.name[0] != 0xe5))
   831b8:	e0bfee03 	ldbu	r2,-72(fp)
   831bc:	10803fcc 	andi	r2,r2,255
   831c0:	1005003a 	cmpeq	r2,r2,zero
   831c4:	1000121e 	bne	r2,zero,83210 <sd_card_find_next+0x16c>
   831c8:	e0bfee03 	ldbu	r2,-72(fp)
   831cc:	10803fcc 	andi	r2,r2,255
   831d0:	10803960 	cmpeqi	r2,r2,229
   831d4:	10000e1e 	bne	r2,zero,83210 <sd_card_find_next+0x16c>
								{
									/* Update search structure. */
									search_data.file_index_in_sector = file_counter;
   831d8:	e0bfe917 	ldw	r2,-92(fp)
   831dc:	1007883a 	mov	r3,r2
   831e0:	008002b4 	movhi	r2,10
   831e4:	10911704 	addi	r2,r2,17500
   831e8:	10c0030d 	sth	r3,12(r2)
									search_data.current_sector_in_cluster = sector_index;
   831ec:	e0ffea17 	ldw	r3,-88(fp)
   831f0:	008002b4 	movhi	r2,10
   831f4:	10911704 	addi	r2,r2,17500
   831f8:	10c00215 	stw	r3,8(r2)

									/* Copy file name.*/
									copy_file_record_name_to_string(&file_record, file_name);
   831fc:	e13fee04 	addi	r4,fp,-72
   83200:	e17ffe17 	ldw	r5,-8(fp)
   83204:	0082d4c0 	call	82d4c <copy_file_record_name_to_string>
									return 0;
   83208:	e03fff15 	stw	zero,-4(fp)
   8320c:	00008906 	br	83434 <sd_card_find_next+0x390>
				for (sector_index = 0; sector_index < max_root_dir_sectors; sector_index++)
				{
					if (Read_Sector_Data(   sector_index + boot_sector_data.root_directory_sector_offset,
											fat_partition_offset_in_512_byte_sectors))
					{
						for (; file_counter < 16; file_counter++)
   83210:	e0bfe917 	ldw	r2,-92(fp)
   83214:	10800044 	addi	r2,r2,1
   83218:	e0bfe915 	stw	r2,-92(fp)
   8321c:	e0bfe917 	ldw	r2,-92(fp)
   83220:	10800410 	cmplti	r2,r2,16
   83224:	103fdc1e 	bne	r2,zero,83198 <sd_card_find_next+0xf4>
									copy_file_record_name_to_string(&file_record, file_name);
									return 0;
								}
							}
						}
						file_counter = 0;
   83228:	e03fe915 	stw	zero,-92(fp)
				// Searching through the root directory
				int max_root_dir_sectors = ((32*boot_sector_data.max_number_of_dir_entires) / boot_sector_data.sector_size_in_bytes);
				int sector_index = search_data.current_sector_in_cluster;
				int file_counter = search_data.file_index_in_sector+1;
    
				for (sector_index = 0; sector_index < max_root_dir_sectors; sector_index++)
   8322c:	e0bfea17 	ldw	r2,-88(fp)
   83230:	10800044 	addi	r2,r2,1
   83234:	e0bfea15 	stw	r2,-88(fp)
   83238:	e0ffea17 	ldw	r3,-88(fp)
   8323c:	e0bfeb17 	ldw	r2,-84(fp)
   83240:	18bfca16 	blt	r3,r2,8316c <sd_card_find_next+0xc8>
					else
					{
						break;
					}
				}
				result = -1;
   83244:	00bfffc4 	movi	r2,-1
   83248:	e0bfed0d 	sth	r2,-76(fp)
   8324c:	00007706 	br	8342c <sd_card_find_next+0x388>
			}
			else
			{
				int file_counter = search_data.file_index_in_sector+1;
   83250:	008002b4 	movhi	r2,10
   83254:	10911704 	addi	r2,r2,17500
   83258:	1080030b 	ldhu	r2,12(r2)
   8325c:	10bfffcc 	andi	r2,r2,65535
   83260:	10a0001c 	xori	r2,r2,32768
   83264:	10a00004 	addi	r2,r2,-32768
   83268:	10800044 	addi	r2,r2,1
   8326c:	e0bfe815 	stw	r2,-96(fp)
				do 
				{
					int start_sector = ( cluster - 2 ) * ( boot_sector_data.sectors_per_cluster ) + boot_sector_data.data_sector_offset;
   83270:	e0bfec17 	ldw	r2,-80(fp)
   83274:	113fff84 	addi	r4,r2,-2
   83278:	008002b4 	movhi	r2,10
   8327c:	10911c04 	addi	r2,r2,17520
   83280:	10800383 	ldbu	r2,14(r2)
   83284:	11403fcc 	andi	r5,r2,255
   83288:	00886b00 	call	886b0 <__mulsi3>
   8328c:	1007883a 	mov	r3,r2
   83290:	008002b4 	movhi	r2,10
   83294:	10911c04 	addi	r2,r2,17520
   83298:	10801417 	ldw	r2,80(r2)
   8329c:	1885883a 	add	r2,r3,r2
   832a0:	e0bfe715 	stw	r2,-100(fp)
					int sector_index;
			        
					for (sector_index = 0; sector_index < boot_sector_data.sectors_per_cluster; sector_index++)
   832a4:	e03fe615 	stw	zero,-104(fp)
   832a8:	00003406 	br	8337c <sd_card_find_next+0x2d8>
					{
						if (Read_Sector_Data(sector_index + start_sector, fat_partition_offset_in_512_byte_sectors))
   832ac:	e0ffe617 	ldw	r3,-104(fp)
   832b0:	e0bfe717 	ldw	r2,-100(fp)
   832b4:	1889883a 	add	r4,r3,r2
   832b8:	d166fc17 	ldw	r5,-25616(gp)
   832bc:	008053c0 	call	8053c <Read_Sector_Data>
   832c0:	1005003a 	cmpeq	r2,r2,zero
   832c4:	1000331e 	bne	r2,zero,83394 <sd_card_find_next+0x2f0>
						{        
							for (; file_counter < 16; file_counter++)
   832c8:	00002506 	br	83360 <sd_card_find_next+0x2bc>
							{
								if (Read_File_Record_At_Offset(file_counter*32, &file_record, cluster, sector_index))
   832cc:	e0bfe817 	ldw	r2,-96(fp)
   832d0:	1008917a 	slli	r4,r2,5
   832d4:	e1bfec17 	ldw	r6,-80(fp)
   832d8:	e1ffe617 	ldw	r7,-104(fp)
   832dc:	e17fee04 	addi	r5,fp,-72
   832e0:	00809000 	call	80900 <Read_File_Record_At_Offset>
   832e4:	1005003a 	cmpeq	r2,r2,zero
   832e8:	10001a1e 	bne	r2,zero,83354 <sd_card_find_next+0x2b0>
								{
									if ((file_record.name[0] != 0) && (file_record.name[0] != 0xe5))
   832ec:	e0bfee03 	ldbu	r2,-72(fp)
   832f0:	10803fcc 	andi	r2,r2,255
   832f4:	1005003a 	cmpeq	r2,r2,zero
   832f8:	1000161e 	bne	r2,zero,83354 <sd_card_find_next+0x2b0>
   832fc:	e0bfee03 	ldbu	r2,-72(fp)
   83300:	10803fcc 	andi	r2,r2,255
   83304:	10803960 	cmpeqi	r2,r2,229
   83308:	1000121e 	bne	r2,zero,83354 <sd_card_find_next+0x2b0>
									{
										/* Update search structure. */
										search_data.current_cluster_index = cluster;
   8330c:	e0ffec17 	ldw	r3,-80(fp)
   83310:	008002b4 	movhi	r2,10
   83314:	10911704 	addi	r2,r2,17500
   83318:	10c00115 	stw	r3,4(r2)
										search_data.file_index_in_sector = file_counter;
   8331c:	e0bfe817 	ldw	r2,-96(fp)
   83320:	1007883a 	mov	r3,r2
   83324:	008002b4 	movhi	r2,10
   83328:	10911704 	addi	r2,r2,17500
   8332c:	10c0030d 	sth	r3,12(r2)
										search_data.current_sector_in_cluster = sector_index;
   83330:	e0ffe617 	ldw	r3,-104(fp)
   83334:	008002b4 	movhi	r2,10
   83338:	10911704 	addi	r2,r2,17500
   8333c:	10c00215 	stw	r3,8(r2)

										/* Copy file name.*/
										copy_file_record_name_to_string(&file_record, file_name);
   83340:	e13fee04 	addi	r4,fp,-72
   83344:	e17ffe17 	ldw	r5,-8(fp)
   83348:	0082d4c0 	call	82d4c <copy_file_record_name_to_string>
										return 0;
   8334c:	e03fff15 	stw	zero,-4(fp)
   83350:	00003806 	br	83434 <sd_card_find_next+0x390>
			        
					for (sector_index = 0; sector_index < boot_sector_data.sectors_per_cluster; sector_index++)
					{
						if (Read_Sector_Data(sector_index + start_sector, fat_partition_offset_in_512_byte_sectors))
						{        
							for (; file_counter < 16; file_counter++)
   83354:	e0bfe817 	ldw	r2,-96(fp)
   83358:	10800044 	addi	r2,r2,1
   8335c:	e0bfe815 	stw	r2,-96(fp)
   83360:	e0bfe817 	ldw	r2,-96(fp)
   83364:	10800410 	cmplti	r2,r2,16
   83368:	103fd81e 	bne	r2,zero,832cc <sd_card_find_next+0x228>
										copy_file_record_name_to_string(&file_record, file_name);
										return 0;
									}
								}
							}
							file_counter = 0;
   8336c:	e03fe815 	stw	zero,-96(fp)
				do 
				{
					int start_sector = ( cluster - 2 ) * ( boot_sector_data.sectors_per_cluster ) + boot_sector_data.data_sector_offset;
					int sector_index;
			        
					for (sector_index = 0; sector_index < boot_sector_data.sectors_per_cluster; sector_index++)
   83370:	e0bfe617 	ldw	r2,-104(fp)
   83374:	10800044 	addi	r2,r2,1
   83378:	e0bfe615 	stw	r2,-104(fp)
   8337c:	008002b4 	movhi	r2,10
   83380:	10911c04 	addi	r2,r2,17520
   83384:	10800383 	ldbu	r2,14(r2)
   83388:	10c03fcc 	andi	r3,r2,255
   8338c:	e0bfe617 	ldw	r2,-104(fp)
   83390:	10ffc616 	blt	r2,r3,832ac <sd_card_find_next+0x208>
							break;
						}
					}
					// If this is the end of the cluster and the file has not been found, then see if there is another cluster
					// that holds data for the current directory.
					if (sector_index >= boot_sector_data.sectors_per_cluster)
   83394:	008002b4 	movhi	r2,10
   83398:	10911c04 	addi	r2,r2,17520
   8339c:	10800383 	ldbu	r2,14(r2)
   833a0:	10c03fcc 	andi	r3,r2,255
   833a4:	e0bfe617 	ldw	r2,-104(fp)
   833a8:	10c01a16 	blt	r2,r3,83414 <sd_card_find_next+0x370>
					{
						short int new_cluster;

						if (get_cluster_flag(cluster, &new_cluster))
   833ac:	e13fec17 	ldw	r4,-80(fp)
   833b0:	e17fed84 	addi	r5,fp,-74
   833b4:	008062c0 	call	8062c <get_cluster_flag>
   833b8:	1005003a 	cmpeq	r2,r2,zero
   833bc:	1000131e 	bne	r2,zero,8340c <sd_card_find_next+0x368>
						{
							if ((new_cluster & 0x0000fff8) == 0x0000fff8)
   833c0:	e0bfed8b 	ldhu	r2,-74(fp)
   833c4:	10bfffcc 	andi	r2,r2,65535
   833c8:	10a0001c 	xori	r2,r2,32768
   833cc:	10a00004 	addi	r2,r2,-32768
   833d0:	10fffe0c 	andi	r3,r2,65528
   833d4:	00bffe14 	movui	r2,65528
   833d8:	1880051e 	bne	r3,r2,833f0 <sd_card_find_next+0x34c>
							{
								result = -1;
   833dc:	00bfffc4 	movi	r2,-1
   833e0:	e0bfed0d 	sth	r2,-76(fp)
								search_data.valid = false;
   833e4:	008002b4 	movhi	r2,10
   833e8:	10911704 	addi	r2,r2,17500
   833ec:	10000415 	stw	zero,16(r2)
							}
							cluster = ((new_cluster) & 0x0000fff8);
   833f0:	e0bfed8b 	ldhu	r2,-74(fp)
   833f4:	10bfffcc 	andi	r2,r2,65535
   833f8:	10a0001c 	xori	r2,r2,32768
   833fc:	10a00004 	addi	r2,r2,-32768
   83400:	10bffe0c 	andi	r2,r2,65528
   83404:	e0bfec15 	stw	r2,-80(fp)
   83408:	00000206 	br	83414 <sd_card_find_next+0x370>
						}
						else
						{
							// Error encountered.                 
							result = -1;
   8340c:	00bfffc4 	movi	r2,-1
   83410:	e0bfed0d 	sth	r2,-76(fp)
						}
					}              
				} while (cluster < 0x0000fff8);
   83414:	e0ffec17 	ldw	r3,-80(fp)
   83418:	00bffdd4 	movui	r2,65527
   8341c:	10ff940e 	bge	r2,r3,83270 <sd_card_find_next+0x1cc>
   83420:	00000206 	br	8342c <sd_card_find_next+0x388>
			}
		}
		else
		{
			// Call Find_First first.
			result = 3;
   83424:	008000c4 	movi	r2,3
   83428:	e0bfed0d 	sth	r2,-76(fp)
		}
	}
	return result;
   8342c:	e0bfed0f 	ldh	r2,-76(fp)
   83430:	e0bfff15 	stw	r2,-4(fp)
   83434:	e0bfff17 	ldw	r2,-4(fp)
}
   83438:	e037883a 	mov	sp,fp
   8343c:	dfc00117 	ldw	ra,4(sp)
   83440:	df000017 	ldw	fp,0(sp)
   83444:	dec00204 	addi	sp,sp,8
   83448:	f800283a 	ret

0008344c <sd_card_fopen>:
 *      create - a flag set to true to create a file if it does not already exist
 * Output:
 *      An index to the file record assigned to the specified file. -1 is returned if the file could not be opened.
 *		Return -2 if the specified file has already been opened previously.
 */
{
   8344c:	deffe804 	addi	sp,sp,-96
   83450:	dfc01715 	stw	ra,92(sp)
   83454:	df001615 	stw	fp,88(sp)
   83458:	df001604 	addi	fp,sp,88
   8345c:	e13ffd15 	stw	r4,-12(fp)
   83460:	e17ffe15 	stw	r5,-8(fp)
	short int file_record_index = -1;
   83464:	00bfffc4 	movi	r2,-1
   83468:	e0bfeb0d 	sth	r2,-84(fp)

	if ((sd_card_is_Present()) && (is_sd_card_formated_as_FAT16))
   8346c:	0082ef80 	call	82ef8 <sd_card_is_Present>
   83470:	1005003a 	cmpeq	r2,r2,zero
   83474:	1000d71e 	bne	r2,zero,837d4 <sd_card_fopen+0x388>
   83478:	d0a6f617 	ldw	r2,-25640(gp)
   8347c:	1005003a 	cmpeq	r2,r2,zero
   83480:	1000d41e 	bne	r2,zero,837d4 <sd_card_fopen+0x388>
	{
        unsigned int home_directory_cluster = 0;
   83484:	e03fec15 	stw	zero,-80(fp)
         * Rules:
         *  - no spaces
         *  - at most 12 chatacters per name, with a period in 9th position.
         *  - a / or a \ every at most 12 characters.
         */
        filename_to_upper_case(name);
   83488:	e13ffd17 	ldw	r4,-12(fp)
   8348c:	00813380 	call	81338 <filename_to_upper_case>
        if (check_file_name_for_FAT16_compliance(name))
   83490:	e13ffd17 	ldw	r4,-12(fp)
   83494:	00814080 	call	81408 <check_file_name_for_FAT16_compliance>
   83498:	1005003a 	cmpeq	r2,r2,zero
   8349c:	1000cd1e 	bne	r2,zero,837d4 <sd_card_fopen+0x388>
        {
			int index;

            /* Get home directory cluster location for the specified file. 0 means root directory. */
            if (!get_home_directory_cluster_for_file(name, &home_directory_cluster, &home_dir))
   834a0:	e17fec04 	addi	r5,fp,-80
   834a4:	e1bfed04 	addi	r6,fp,-76
   834a8:	e13ffd17 	ldw	r4,-12(fp)
   834ac:	0081a440 	call	81a44 <get_home_directory_cluster_for_file>
   834b0:	1004c03a 	cmpne	r2,r2,zero
   834b4:	1000031e 	bne	r2,zero,834c4 <sd_card_fopen+0x78>
            {
                return file_record_index;
   834b8:	e0bfeb0f 	ldh	r2,-84(fp)
   834bc:	e0bfff15 	stw	r2,-4(fp)
   834c0:	0000c606 	br	837dc <sd_card_fopen+0x390>
            }
            
    		/* Find a free file slot to store file specs in. */
    		for (index = 0; index < MAX_FILES_OPENED; index++)
   834c4:	e03fea15 	stw	zero,-88(fp)
   834c8:	00000f06 	br	83508 <sd_card_fopen+0xbc>
    		{
    			if (active_files[index].in_use == false)
   834cc:	e0bfea17 	ldw	r2,-88(fp)
   834d0:	00c002b4 	movhi	r3,10
   834d4:	18d13104 	addi	r3,r3,17604
   834d8:	100491ba 	slli	r2,r2,6
   834dc:	10c5883a 	add	r2,r2,r3
   834e0:	10800f04 	addi	r2,r2,60
   834e4:	10800017 	ldw	r2,0(r2)
   834e8:	1004c03a 	cmpne	r2,r2,zero
   834ec:	1000031e 	bne	r2,zero,834fc <sd_card_fopen+0xb0>
    			{
    				file_record_index = index;
   834f0:	e0bfea17 	ldw	r2,-88(fp)
   834f4:	e0bfeb0d 	sth	r2,-84(fp)
    				break;
   834f8:	00000606 	br	83514 <sd_card_fopen+0xc8>
            {
                return file_record_index;
            }
            
    		/* Find a free file slot to store file specs in. */
    		for (index = 0; index < MAX_FILES_OPENED; index++)
   834fc:	e0bfea17 	ldw	r2,-88(fp)
   83500:	10800044 	addi	r2,r2,1
   83504:	e0bfea15 	stw	r2,-88(fp)
   83508:	e0bfea17 	ldw	r2,-88(fp)
   8350c:	10800510 	cmplti	r2,r2,20
   83510:	103fee1e 	bne	r2,zero,834cc <sd_card_fopen+0x80>
    			{
    				file_record_index = index;
    				break;
    			}
    		}
    		if (file_record_index >= 0)
   83514:	e0bfeb0f 	ldh	r2,-84(fp)
   83518:	1004803a 	cmplt	r2,r2,zero
   8351c:	1000ad1e 	bne	r2,zero,837d4 <sd_card_fopen+0x388>
    		{
    			/* If file record is found, then look for the specified file. If the create flag is set to true 
    			 * and the file is not found, then it should be created in the current directory. 
    			 */
                
                if (find_file_in_directory(home_directory_cluster, name, &(active_files[file_record_index])))
   83520:	e0bfec17 	ldw	r2,-80(fp)
   83524:	1009883a 	mov	r4,r2
   83528:	e0bfeb0f 	ldh	r2,-84(fp)
   8352c:	100491ba 	slli	r2,r2,6
   83530:	1007883a 	mov	r3,r2
   83534:	008002b4 	movhi	r2,10
   83538:	10913104 	addi	r2,r2,17604
   8353c:	188d883a 	add	r6,r3,r2
   83540:	e17ffd17 	ldw	r5,-12(fp)
   83544:	0081f580 	call	81f58 <find_file_in_directory>
   83548:	1005003a 	cmpeq	r2,r2,zero
   8354c:	10007d1e 	bne	r2,zero,83744 <sd_card_fopen+0x2f8>
                {
                    if (create)
   83550:	e0bffe17 	ldw	r2,-8(fp)
   83554:	1005003a 	cmpeq	r2,r2,zero
   83558:	1000031e 	bne	r2,zero,83568 <sd_card_fopen+0x11c>
                    {
                        /* Do not allow overwriting existing files for now. */
                        return -1;
   8355c:	00bfffc4 	movi	r2,-1
   83560:	e0bfff15 	stw	r2,-4(fp)
   83564:	00009d06 	br	837dc <sd_card_fopen+0x390>
                    }
                    active_files[file_record_index].current_cluster_index = active_files[file_record_index].start_cluster_index;
   83568:	e17feb0f 	ldh	r5,-84(fp)
   8356c:	e0bfeb0f 	ldh	r2,-84(fp)
   83570:	00c002b4 	movhi	r3,10
   83574:	18d13104 	addi	r3,r3,17604
   83578:	100491ba 	slli	r2,r2,6
   8357c:	10c5883a 	add	r2,r2,r3
   83580:	10800504 	addi	r2,r2,20
   83584:	1080008b 	ldhu	r2,2(r2)
   83588:	113fffcc 	andi	r4,r2,65535
   8358c:	00c002b4 	movhi	r3,10
   83590:	18d13104 	addi	r3,r3,17604
   83594:	280491ba 	slli	r2,r5,6
   83598:	10c5883a 	add	r2,r2,r3
   8359c:	10800704 	addi	r2,r2,28
   835a0:	11000015 	stw	r4,0(r2)
                    active_files[file_record_index].current_sector_in_cluster = 0;
   835a4:	e0bfeb0f 	ldh	r2,-84(fp)
   835a8:	00c002b4 	movhi	r3,10
   835ac:	18d13104 	addi	r3,r3,17604
   835b0:	100491ba 	slli	r2,r2,6
   835b4:	10c5883a 	add	r2,r2,r3
   835b8:	10800804 	addi	r2,r2,32
   835bc:	10000015 	stw	zero,0(r2)
                    active_files[file_record_index].current_byte_position = 0;
   835c0:	e0bfeb0f 	ldh	r2,-84(fp)
   835c4:	00c002b4 	movhi	r3,10
   835c8:	18d13104 	addi	r3,r3,17604
   835cc:	100491ba 	slli	r2,r2,6
   835d0:	10c5883a 	add	r2,r2,r3
   835d4:	10800904 	addi	r2,r2,36
   835d8:	10000015 	stw	zero,0(r2)
                    active_files[file_record_index].in_use = true;
   835dc:	e0bfeb0f 	ldh	r2,-84(fp)
   835e0:	00c002b4 	movhi	r3,10
   835e4:	18d13104 	addi	r3,r3,17604
   835e8:	100491ba 	slli	r2,r2,6
   835ec:	10c5883a 	add	r2,r2,r3
   835f0:	10c00f04 	addi	r3,r2,60
   835f4:	00800044 	movi	r2,1
   835f8:	18800015 	stw	r2,0(r3)
    				active_files[file_record_index].modified = false;
   835fc:	e0bfeb0f 	ldh	r2,-84(fp)
   83600:	00c002b4 	movhi	r3,10
   83604:	18d13104 	addi	r3,r3,17604
   83608:	100491ba 	slli	r2,r2,6
   8360c:	10c5883a 	add	r2,r2,r3
   83610:	10800e04 	addi	r2,r2,56
   83614:	10000015 	stw	zero,0(r2)

					/* Check if the file has already been opened. */
					for (index = 0; index < MAX_FILES_OPENED; index++)
   83618:	e03fea15 	stw	zero,-88(fp)
   8361c:	00004506 	br	83734 <sd_card_fopen+0x2e8>
					{
						if ((file_record_index != index) && (active_files[index].in_use == true))
   83620:	e0ffeb0f 	ldh	r3,-84(fp)
   83624:	e0bfea17 	ldw	r2,-88(fp)
   83628:	18803f26 	beq	r3,r2,83728 <sd_card_fopen+0x2dc>
   8362c:	e0bfea17 	ldw	r2,-88(fp)
   83630:	00c002b4 	movhi	r3,10
   83634:	18d13104 	addi	r3,r3,17604
   83638:	100491ba 	slli	r2,r2,6
   8363c:	10c5883a 	add	r2,r2,r3
   83640:	10800f04 	addi	r2,r2,60
   83644:	10800017 	ldw	r2,0(r2)
   83648:	10800058 	cmpnei	r2,r2,1
   8364c:	1000361e 	bne	r2,zero,83728 <sd_card_fopen+0x2dc>
						{
							if ((active_files[file_record_index].file_record_cluster == active_files[index].file_record_cluster) &&
   83650:	e0bfeb0f 	ldh	r2,-84(fp)
   83654:	00c002b4 	movhi	r3,10
   83658:	18d13104 	addi	r3,r3,17604
   8365c:	100491ba 	slli	r2,r2,6
   83660:	10c5883a 	add	r2,r2,r3
   83664:	10800a04 	addi	r2,r2,40
   83668:	11000017 	ldw	r4,0(r2)
   8366c:	e0bfea17 	ldw	r2,-88(fp)
   83670:	00c002b4 	movhi	r3,10
   83674:	18d13104 	addi	r3,r3,17604
   83678:	100491ba 	slli	r2,r2,6
   8367c:	10c5883a 	add	r2,r2,r3
   83680:	10800a04 	addi	r2,r2,40
   83684:	10800017 	ldw	r2,0(r2)
   83688:	2080271e 	bne	r4,r2,83728 <sd_card_fopen+0x2dc>
   8368c:	e0bfeb0f 	ldh	r2,-84(fp)
   83690:	00c002b4 	movhi	r3,10
   83694:	18d13104 	addi	r3,r3,17604
   83698:	100491ba 	slli	r2,r2,6
   8369c:	10c5883a 	add	r2,r2,r3
   836a0:	10800b04 	addi	r2,r2,44
   836a4:	11000017 	ldw	r4,0(r2)
   836a8:	e0bfea17 	ldw	r2,-88(fp)
   836ac:	00c002b4 	movhi	r3,10
   836b0:	18d13104 	addi	r3,r3,17604
   836b4:	100491ba 	slli	r2,r2,6
   836b8:	10c5883a 	add	r2,r2,r3
   836bc:	10800b04 	addi	r2,r2,44
   836c0:	10800017 	ldw	r2,0(r2)
   836c4:	2080181e 	bne	r4,r2,83728 <sd_card_fopen+0x2dc>
   836c8:	e0bfeb0f 	ldh	r2,-84(fp)
   836cc:	00c002b4 	movhi	r3,10
   836d0:	18d13104 	addi	r3,r3,17604
   836d4:	100491ba 	slli	r2,r2,6
   836d8:	10c5883a 	add	r2,r2,r3
   836dc:	10800c04 	addi	r2,r2,48
   836e0:	1100000b 	ldhu	r4,0(r2)
   836e4:	e0bfea17 	ldw	r2,-88(fp)
   836e8:	00c002b4 	movhi	r3,10
   836ec:	18d13104 	addi	r3,r3,17604
   836f0:	100491ba 	slli	r2,r2,6
   836f4:	10c5883a 	add	r2,r2,r3
   836f8:	10800c04 	addi	r2,r2,48
   836fc:	1080000b 	ldhu	r2,0(r2)
   83700:	20ffffcc 	andi	r3,r4,65535
   83704:	18e0001c 	xori	r3,r3,32768
   83708:	18e00004 	addi	r3,r3,-32768
   8370c:	10bfffcc 	andi	r2,r2,65535
   83710:	10a0001c 	xori	r2,r2,32768
   83714:	10a00004 	addi	r2,r2,-32768
   83718:	1880031e 	bne	r3,r2,83728 <sd_card_fopen+0x2dc>
								(active_files[file_record_index].file_record_sector_in_cluster == active_files[index].file_record_sector_in_cluster) &&
								(active_files[file_record_index].file_record_offset == active_files[index].file_record_offset))
							{
								// file already in use.
								file_record_index = -2;
   8371c:	00bfff84 	movi	r2,-2
   83720:	e0bfeb0d 	sth	r2,-84(fp)
								break;
   83724:	00002b06 	br	837d4 <sd_card_fopen+0x388>
                    active_files[file_record_index].current_byte_position = 0;
                    active_files[file_record_index].in_use = true;
    				active_files[file_record_index].modified = false;

					/* Check if the file has already been opened. */
					for (index = 0; index < MAX_FILES_OPENED; index++)
   83728:	e0bfea17 	ldw	r2,-88(fp)
   8372c:	10800044 	addi	r2,r2,1
   83730:	e0bfea15 	stw	r2,-88(fp)
   83734:	e0bfea17 	ldw	r2,-88(fp)
   83738:	10800510 	cmplti	r2,r2,20
   8373c:	103fb81e 	bne	r2,zero,83620 <sd_card_fopen+0x1d4>
   83740:	00002406 	br	837d4 <sd_card_fopen+0x388>
							}
						}
					}

                }
                else if (create)
   83744:	e0bffe17 	ldw	r2,-8(fp)
   83748:	1005003a 	cmpeq	r2,r2,zero
   8374c:	10001f1e 	bne	r2,zero,837cc <sd_card_fopen+0x380>
                {
                    /* Create file if needed. */
                    if (create_file(name, &(active_files[file_record_index]), &home_dir))
   83750:	e0bfeb0f 	ldh	r2,-84(fp)
   83754:	100491ba 	slli	r2,r2,6
   83758:	1007883a 	mov	r3,r2
   8375c:	008002b4 	movhi	r2,10
   83760:	10913104 	addi	r2,r2,17604
   83764:	188b883a 	add	r5,r3,r2
   83768:	e1bfed04 	addi	r6,fp,-76
   8376c:	e13ffd17 	ldw	r4,-12(fp)
   83770:	0082a600 	call	82a60 <create_file>
   83774:	1005003a 	cmpeq	r2,r2,zero
   83778:	1000111e 	bne	r2,zero,837c0 <sd_card_fopen+0x374>
                    {
                        active_files[file_record_index].in_use = true;
   8377c:	e0bfeb0f 	ldh	r2,-84(fp)
   83780:	00c002b4 	movhi	r3,10
   83784:	18d13104 	addi	r3,r3,17604
   83788:	100491ba 	slli	r2,r2,6
   8378c:	10c5883a 	add	r2,r2,r3
   83790:	10c00f04 	addi	r3,r2,60
   83794:	00800044 	movi	r2,1
   83798:	18800015 	stw	r2,0(r3)
    					active_files[file_record_index].modified = true;
   8379c:	e0bfeb0f 	ldh	r2,-84(fp)
   837a0:	00c002b4 	movhi	r3,10
   837a4:	18d13104 	addi	r3,r3,17604
   837a8:	100491ba 	slli	r2,r2,6
   837ac:	10c5883a 	add	r2,r2,r3
   837b0:	10c00e04 	addi	r3,r2,56
   837b4:	00800044 	movi	r2,1
   837b8:	18800015 	stw	r2,0(r3)
   837bc:	00000506 	br	837d4 <sd_card_fopen+0x388>
                    }
                    else
                    {
                        /* If file creation fails then return an invalid file handle. */
                        file_record_index = -1;
   837c0:	00bfffc4 	movi	r2,-1
   837c4:	e0bfeb0d 	sth	r2,-84(fp)
   837c8:	00000206 	br	837d4 <sd_card_fopen+0x388>
                    }                
                }
                else
                {
                    /* Otherwise the file could not be opened.*/
                    file_record_index = -1;
   837cc:	00bfffc4 	movi	r2,-1
   837d0:	e0bfeb0d 	sth	r2,-84(fp)
                }
    		}
        }
	}

	return file_record_index;
   837d4:	e0bfeb0f 	ldh	r2,-84(fp)
   837d8:	e0bfff15 	stw	r2,-4(fp)
   837dc:	e0bfff17 	ldw	r2,-4(fp)
}
   837e0:	e037883a 	mov	sp,fp
   837e4:	dfc00117 	ldw	ra,4(sp)
   837e8:	df000017 	ldw	fp,0(sp)
   837ec:	dec00204 	addi	sp,sp,8
   837f0:	f800283a 	ret

000837f4 <sd_card_set_attributes>:


void sd_card_set_attributes(short int file_handle, short int attributes)
/* Return file attributes, or -1 if the file_handle is invalid.
 */
{
   837f4:	defffd04 	addi	sp,sp,-12
   837f8:	df000215 	stw	fp,8(sp)
   837fc:	df000204 	addi	fp,sp,8
   83800:	e13ffe0d 	sth	r4,-8(fp)
   83804:	e17fff0d 	sth	r5,-4(fp)
    if ((file_handle >= 0) && (file_handle < MAX_FILES_OPENED))
   83808:	e0bffe0f 	ldh	r2,-8(fp)
   8380c:	1004803a 	cmplt	r2,r2,zero
   83810:	1000181e 	bne	r2,zero,83874 <sd_card_set_attributes+0x80>
   83814:	e0bffe0f 	ldh	r2,-8(fp)
   83818:	10800508 	cmpgei	r2,r2,20
   8381c:	1000151e 	bne	r2,zero,83874 <sd_card_set_attributes+0x80>
    {
        if (active_files[file_handle].in_use)
   83820:	e0bffe0f 	ldh	r2,-8(fp)
   83824:	00c002b4 	movhi	r3,10
   83828:	18d13104 	addi	r3,r3,17604
   8382c:	100491ba 	slli	r2,r2,6
   83830:	10c5883a 	add	r2,r2,r3
   83834:	10800f04 	addi	r2,r2,60
   83838:	10800017 	ldw	r2,0(r2)
   8383c:	1005003a 	cmpeq	r2,r2,zero
   83840:	10000c1e 	bne	r2,zero,83874 <sd_card_set_attributes+0x80>
        {
            active_files[file_handle].attributes = ((char)(attributes & 0x00ff));
   83844:	e17ffe0f 	ldh	r5,-8(fp)
   83848:	e0bfff0b 	ldhu	r2,-4(fp)
   8384c:	1007883a 	mov	r3,r2
   83850:	00bfffc4 	movi	r2,-1
   83854:	1884703a 	and	r2,r3,r2
   83858:	1009883a 	mov	r4,r2
   8385c:	00c002b4 	movhi	r3,10
   83860:	18d13104 	addi	r3,r3,17604
   83864:	280491ba 	slli	r2,r5,6
   83868:	10c5883a 	add	r2,r2,r3
   8386c:	10800204 	addi	r2,r2,8
   83870:	110000c5 	stb	r4,3(r2)
        }
    }
}
   83874:	e037883a 	mov	sp,fp
   83878:	df000017 	ldw	fp,0(sp)
   8387c:	dec00104 	addi	sp,sp,4
   83880:	f800283a 	ret

00083884 <sd_card_get_attributes>:


short int sd_card_get_attributes(short int file_handle)
/* Return file attributes, or -1 if the file_handle is invalid.
 */
{
   83884:	defffd04 	addi	sp,sp,-12
   83888:	df000215 	stw	fp,8(sp)
   8388c:	df000204 	addi	fp,sp,8
   83890:	e13fff0d 	sth	r4,-4(fp)
	short int result = -1;
   83894:	00bfffc4 	movi	r2,-1
   83898:	e0bffe0d 	sth	r2,-8(fp)
    if ((file_handle >= 0) && (file_handle < MAX_FILES_OPENED))
   8389c:	e0bfff0f 	ldh	r2,-4(fp)
   838a0:	1004803a 	cmplt	r2,r2,zero
   838a4:	1000151e 	bne	r2,zero,838fc <sd_card_get_attributes+0x78>
   838a8:	e0bfff0f 	ldh	r2,-4(fp)
   838ac:	10800508 	cmpgei	r2,r2,20
   838b0:	1000121e 	bne	r2,zero,838fc <sd_card_get_attributes+0x78>
    {
        if (active_files[file_handle].in_use)
   838b4:	e0bfff0f 	ldh	r2,-4(fp)
   838b8:	00c002b4 	movhi	r3,10
   838bc:	18d13104 	addi	r3,r3,17604
   838c0:	100491ba 	slli	r2,r2,6
   838c4:	10c5883a 	add	r2,r2,r3
   838c8:	10800f04 	addi	r2,r2,60
   838cc:	10800017 	ldw	r2,0(r2)
   838d0:	1005003a 	cmpeq	r2,r2,zero
   838d4:	1000091e 	bne	r2,zero,838fc <sd_card_get_attributes+0x78>
		{
			result = ((active_files[file_handle].attributes) & 0x00ff);
   838d8:	e0bfff0f 	ldh	r2,-4(fp)
   838dc:	00c002b4 	movhi	r3,10
   838e0:	18d13104 	addi	r3,r3,17604
   838e4:	100491ba 	slli	r2,r2,6
   838e8:	10c5883a 	add	r2,r2,r3
   838ec:	10800204 	addi	r2,r2,8
   838f0:	108000c3 	ldbu	r2,3(r2)
   838f4:	10803fcc 	andi	r2,r2,255
   838f8:	e0bffe0d 	sth	r2,-8(fp)
		}
	}
	return result;
   838fc:	e0bffe0f 	ldh	r2,-8(fp)
}
   83900:	e037883a 	mov	sp,fp
   83904:	df000017 	ldw	fp,0(sp)
   83908:	dec00104 	addi	sp,sp,4
   8390c:	f800283a 	ret

00083910 <sd_card_read>:

short int sd_card_read(short int file_handle)
/* Read a single character from a given file. Return -1 if at the end of a file. Any other negative number
 * means that the file could not be read. A number between 0 and 255 is an ASCII character read from the SD Card. */
{
   83910:	defff904 	addi	sp,sp,-28
   83914:	dfc00615 	stw	ra,24(sp)
   83918:	df000515 	stw	fp,20(sp)
   8391c:	dc000415 	stw	r16,16(sp)
   83920:	df000404 	addi	fp,sp,16
   83924:	e13ffe0d 	sth	r4,-8(fp)
    short int ch = -1;
   83928:	00bfffc4 	movi	r2,-1
   8392c:	e0bffd0d 	sth	r2,-12(fp)
    
    if ((file_handle >= 0) && (file_handle < MAX_FILES_OPENED))
   83930:	e0bffe0f 	ldh	r2,-8(fp)
   83934:	1004803a 	cmplt	r2,r2,zero
   83938:	1000c81e 	bne	r2,zero,83c5c <sd_card_read+0x34c>
   8393c:	e0bffe0f 	ldh	r2,-8(fp)
   83940:	10800508 	cmpgei	r2,r2,20
   83944:	1000c51e 	bne	r2,zero,83c5c <sd_card_read+0x34c>
    {
        if (active_files[file_handle].in_use)
   83948:	e0bffe0f 	ldh	r2,-8(fp)
   8394c:	00c002b4 	movhi	r3,10
   83950:	18d13104 	addi	r3,r3,17604
   83954:	100491ba 	slli	r2,r2,6
   83958:	10c5883a 	add	r2,r2,r3
   8395c:	10800f04 	addi	r2,r2,60
   83960:	10800017 	ldw	r2,0(r2)
   83964:	1005003a 	cmpeq	r2,r2,zero
   83968:	1000bc1e 	bne	r2,zero,83c5c <sd_card_read+0x34c>
        {
            if (active_files[file_handle].current_byte_position < active_files[file_handle].file_size_in_bytes)
   8396c:	e0bffe0f 	ldh	r2,-8(fp)
   83970:	00c002b4 	movhi	r3,10
   83974:	18d13104 	addi	r3,r3,17604
   83978:	100491ba 	slli	r2,r2,6
   8397c:	10c5883a 	add	r2,r2,r3
   83980:	10800904 	addi	r2,r2,36
   83984:	11000017 	ldw	r4,0(r2)
   83988:	e0bffe0f 	ldh	r2,-8(fp)
   8398c:	00c002b4 	movhi	r3,10
   83990:	18d13104 	addi	r3,r3,17604
   83994:	100491ba 	slli	r2,r2,6
   83998:	10c5883a 	add	r2,r2,r3
   8399c:	10800604 	addi	r2,r2,24
   839a0:	10800017 	ldw	r2,0(r2)
   839a4:	2080ad2e 	bgeu	r4,r2,83c5c <sd_card_read+0x34c>
            {
                int data_sector = boot_sector_data.data_sector_offset + (active_files[file_handle].current_cluster_index - 2)*boot_sector_data.sectors_per_cluster +
                                  active_files[file_handle].current_sector_in_cluster;
   839a8:	008002b4 	movhi	r2,10
   839ac:	10911c04 	addi	r2,r2,17520
   839b0:	14001417 	ldw	r16,80(r2)
   839b4:	e0bffe0f 	ldh	r2,-8(fp)
   839b8:	00c002b4 	movhi	r3,10
   839bc:	18d13104 	addi	r3,r3,17604
   839c0:	100491ba 	slli	r2,r2,6
   839c4:	10c5883a 	add	r2,r2,r3
   839c8:	10800704 	addi	r2,r2,28
   839cc:	10800017 	ldw	r2,0(r2)
   839d0:	113fff84 	addi	r4,r2,-2
   839d4:	008002b4 	movhi	r2,10
   839d8:	10911c04 	addi	r2,r2,17520
   839dc:	10800383 	ldbu	r2,14(r2)
   839e0:	11403fcc 	andi	r5,r2,255
   839e4:	00886b00 	call	886b0 <__mulsi3>
   839e8:	8089883a 	add	r4,r16,r2
   839ec:	e0bffe0f 	ldh	r2,-8(fp)
   839f0:	00c002b4 	movhi	r3,10
   839f4:	18d13104 	addi	r3,r3,17604
   839f8:	100491ba 	slli	r2,r2,6
   839fc:	10c5883a 	add	r2,r2,r3
   83a00:	10800804 	addi	r2,r2,32
   83a04:	10800017 	ldw	r2,0(r2)
   83a08:	2085883a 	add	r2,r4,r2
   83a0c:	e0bffc15 	stw	r2,-16(fp)
                
				// printf("hahaha: %d %X, %d\n", active_files[file_handle].current_sector_in_cluster, active_files[file_handle].current_cluster_index, active_files[file_handle].current_byte_position);
                if ((active_files[file_handle].current_byte_position > 0) && ((active_files[file_handle].current_byte_position % 512) == 0))
   83a10:	e0bffe0f 	ldh	r2,-8(fp)
   83a14:	00c002b4 	movhi	r3,10
   83a18:	18d13104 	addi	r3,r3,17604
   83a1c:	100491ba 	slli	r2,r2,6
   83a20:	10c5883a 	add	r2,r2,r3
   83a24:	10800904 	addi	r2,r2,36
   83a28:	10800017 	ldw	r2,0(r2)
   83a2c:	1005003a 	cmpeq	r2,r2,zero
   83a30:	1000621e 	bne	r2,zero,83bbc <sd_card_read+0x2ac>
   83a34:	e0bffe0f 	ldh	r2,-8(fp)
   83a38:	00c002b4 	movhi	r3,10
   83a3c:	18d13104 	addi	r3,r3,17604
   83a40:	100491ba 	slli	r2,r2,6
   83a44:	10c5883a 	add	r2,r2,r3
   83a48:	10800904 	addi	r2,r2,36
   83a4c:	10800017 	ldw	r2,0(r2)
   83a50:	10807fcc 	andi	r2,r2,511
   83a54:	1004c03a 	cmpne	r2,r2,zero
   83a58:	1000581e 	bne	r2,zero,83bbc <sd_card_read+0x2ac>
                {
                    // Read in a new sector of data.
                    if (active_files[file_handle].current_sector_in_cluster == boot_sector_data.sectors_per_cluster - 1)
   83a5c:	e0bffe0f 	ldh	r2,-8(fp)
   83a60:	00c002b4 	movhi	r3,10
   83a64:	18d13104 	addi	r3,r3,17604
   83a68:	100491ba 	slli	r2,r2,6
   83a6c:	10c5883a 	add	r2,r2,r3
   83a70:	10800804 	addi	r2,r2,32
   83a74:	10c00017 	ldw	r3,0(r2)
   83a78:	008002b4 	movhi	r2,10
   83a7c:	10911c04 	addi	r2,r2,17520
   83a80:	10800383 	ldbu	r2,14(r2)
   83a84:	10803fcc 	andi	r2,r2,255
   83a88:	10bfffc4 	addi	r2,r2,-1
   83a8c:	1880391e 	bne	r3,r2,83b74 <sd_card_read+0x264>
                    {
                        // Go to the next cluster.
                        unsigned short int next_cluster;
                        if (get_cluster_flag(active_files[file_handle].current_cluster_index, &next_cluster))
   83a90:	e0bffe0f 	ldh	r2,-8(fp)
   83a94:	00c002b4 	movhi	r3,10
   83a98:	18d13104 	addi	r3,r3,17604
   83a9c:	100491ba 	slli	r2,r2,6
   83aa0:	10c5883a 	add	r2,r2,r3
   83aa4:	10800704 	addi	r2,r2,28
   83aa8:	11000017 	ldw	r4,0(r2)
   83aac:	e17ffd84 	addi	r5,fp,-10
   83ab0:	008062c0 	call	8062c <get_cluster_flag>
   83ab4:	1005003a 	cmpeq	r2,r2,zero
   83ab8:	10002b1e 	bne	r2,zero,83b68 <sd_card_read+0x258>
                        {
							// printf("hahaha: %X, %X, %d\n", active_files[file_handle].current_cluster_index, next_cluster, active_files[file_handle].current_byte_position);
                            if ((next_cluster & 0xfff8) == 0xfff8)
   83abc:	e0bffd8b 	ldhu	r2,-10(fp)
   83ac0:	10bfffcc 	andi	r2,r2,65535
   83ac4:	10fffe0c 	andi	r3,r2,65528
   83ac8:	00bffe14 	movui	r2,65528
   83acc:	1880031e 	bne	r3,r2,83adc <sd_card_read+0x1cc>
                            {
                                /* End of file */
								// printf("hahaha1: %X %d %d\n", next_cluster, active_files[file_handle].current_byte_position, active_files[file_handle].file_size_in_bytes);
                                return -1;
   83ad0:	00bfffc4 	movi	r2,-1
   83ad4:	e0bfff15 	stw	r2,-4(fp)
   83ad8:	00006206 	br	83c64 <sd_card_read+0x354>
                            } 
                            else
                            {
                                active_files[file_handle].current_cluster_index = next_cluster;
   83adc:	e13ffe0f 	ldh	r4,-8(fp)
   83ae0:	e0bffd8b 	ldhu	r2,-10(fp)
   83ae4:	117fffcc 	andi	r5,r2,65535
   83ae8:	00c002b4 	movhi	r3,10
   83aec:	18d13104 	addi	r3,r3,17604
   83af0:	200491ba 	slli	r2,r4,6
   83af4:	10c5883a 	add	r2,r2,r3
   83af8:	10800704 	addi	r2,r2,28
   83afc:	11400015 	stw	r5,0(r2)
								data_sector = boot_sector_data.data_sector_offset + (active_files[file_handle].current_cluster_index - 2)*boot_sector_data.sectors_per_cluster;
   83b00:	008002b4 	movhi	r2,10
   83b04:	10911c04 	addi	r2,r2,17520
   83b08:	14001417 	ldw	r16,80(r2)
   83b0c:	e0bffe0f 	ldh	r2,-8(fp)
   83b10:	00c002b4 	movhi	r3,10
   83b14:	18d13104 	addi	r3,r3,17604
   83b18:	100491ba 	slli	r2,r2,6
   83b1c:	10c5883a 	add	r2,r2,r3
   83b20:	10800704 	addi	r2,r2,28
   83b24:	10800017 	ldw	r2,0(r2)
   83b28:	113fff84 	addi	r4,r2,-2
   83b2c:	008002b4 	movhi	r2,10
   83b30:	10911c04 	addi	r2,r2,17520
   83b34:	10800383 	ldbu	r2,14(r2)
   83b38:	11403fcc 	andi	r5,r2,255
   83b3c:	00886b00 	call	886b0 <__mulsi3>
   83b40:	8085883a 	add	r2,r16,r2
   83b44:	e0bffc15 	stw	r2,-16(fp)
                                active_files[file_handle].current_sector_in_cluster = 0; 
   83b48:	e0bffe0f 	ldh	r2,-8(fp)
   83b4c:	00c002b4 	movhi	r3,10
   83b50:	18d13104 	addi	r3,r3,17604
   83b54:	100491ba 	slli	r2,r2,6
   83b58:	10c5883a 	add	r2,r2,r3
   83b5c:	10800804 	addi	r2,r2,32
   83b60:	10000015 	stw	zero,0(r2)
   83b64:	00001506 	br	83bbc <sd_card_read+0x2ac>
                            }
                        }
                        else
                        {
							//printf("hahaha2\n");
                            return -2;
   83b68:	00bfff84 	movi	r2,-2
   83b6c:	e0bfff15 	stw	r2,-4(fp)
   83b70:	00003c06 	br	83c64 <sd_card_read+0x354>
                        }
                    }
                    else
                    {
                        active_files[file_handle].current_sector_in_cluster = active_files[file_handle].current_sector_in_cluster + 1;
   83b74:	e17ffe0f 	ldh	r5,-8(fp)
   83b78:	e0bffe0f 	ldh	r2,-8(fp)
   83b7c:	00c002b4 	movhi	r3,10
   83b80:	18d13104 	addi	r3,r3,17604
   83b84:	100491ba 	slli	r2,r2,6
   83b88:	10c5883a 	add	r2,r2,r3
   83b8c:	10800804 	addi	r2,r2,32
   83b90:	10800017 	ldw	r2,0(r2)
   83b94:	11000044 	addi	r4,r2,1
   83b98:	00c002b4 	movhi	r3,10
   83b9c:	18d13104 	addi	r3,r3,17604
   83ba0:	280491ba 	slli	r2,r5,6
   83ba4:	10c5883a 	add	r2,r2,r3
   83ba8:	10800804 	addi	r2,r2,32
   83bac:	11000015 	stw	r4,0(r2)
                        data_sector = data_sector + 1;
   83bb0:	e0bffc17 	ldw	r2,-16(fp)
   83bb4:	10800044 	addi	r2,r2,1
   83bb8:	e0bffc15 	stw	r2,-16(fp)
                    }
                }
                // Reading te first byte of the file.
                if (current_sector_index != data_sector + fat_partition_offset_in_512_byte_sectors)
   83bbc:	d0e6fc17 	ldw	r3,-25616(gp)
   83bc0:	e0bffc17 	ldw	r2,-16(fp)
   83bc4:	1885883a 	add	r2,r3,r2
   83bc8:	1007883a 	mov	r3,r2
   83bcc:	d0a6ff17 	ldw	r2,-25604(gp)
   83bd0:	18800826 	beq	r3,r2,83bf4 <sd_card_read+0x2e4>
                {
					// printf("hau: %d, %d, %d\n", current_sector_index, data_sector, active_files[file_handle].current_byte_position);
                    if (!Read_Sector_Data(data_sector, fat_partition_offset_in_512_byte_sectors))
   83bd4:	d166fc17 	ldw	r5,-25616(gp)
   83bd8:	e13ffc17 	ldw	r4,-16(fp)
   83bdc:	008053c0 	call	8053c <Read_Sector_Data>
   83be0:	1004c03a 	cmpne	r2,r2,zero
   83be4:	1000031e 	bne	r2,zero,83bf4 <sd_card_read+0x2e4>
                    {
						// printf("hahaha3\n");
						return -2;
   83be8:	00bfff84 	movi	r2,-2
   83bec:	e0bfff15 	stw	r2,-4(fp)
   83bf0:	00001c06 	br	83c64 <sd_card_read+0x354>
                    }
                }
                ch = ((*((unsigned char *)SD_CARD_BUFFER(SD_CARD_0_BASE, active_files[file_handle].current_byte_position % 512))) & 0x00ff);
   83bf4:	e0bffe0f 	ldh	r2,-8(fp)
   83bf8:	00c002b4 	movhi	r3,10
   83bfc:	18d13104 	addi	r3,r3,17604
   83c00:	100491ba 	slli	r2,r2,6
   83c04:	10c5883a 	add	r2,r2,r3
   83c08:	10800904 	addi	r2,r2,36
   83c0c:	10800017 	ldw	r2,0(r2)
   83c10:	10807fcc 	andi	r2,r2,511
   83c14:	10800003 	ldbu	r2,0(r2)
   83c18:	10803fcc 	andi	r2,r2,255
   83c1c:	e0bffd0d 	sth	r2,-12(fp)
                active_files[file_handle].current_byte_position = active_files[file_handle].current_byte_position + 1;
   83c20:	e17ffe0f 	ldh	r5,-8(fp)
   83c24:	e0bffe0f 	ldh	r2,-8(fp)
   83c28:	00c002b4 	movhi	r3,10
   83c2c:	18d13104 	addi	r3,r3,17604
   83c30:	100491ba 	slli	r2,r2,6
   83c34:	10c5883a 	add	r2,r2,r3
   83c38:	10800904 	addi	r2,r2,36
   83c3c:	10800017 	ldw	r2,0(r2)
   83c40:	11000044 	addi	r4,r2,1
   83c44:	00c002b4 	movhi	r3,10
   83c48:	18d13104 	addi	r3,r3,17604
   83c4c:	280491ba 	slli	r2,r5,6
   83c50:	10c5883a 	add	r2,r2,r3
   83c54:	10800904 	addi	r2,r2,36
   83c58:	11000015 	stw	r4,0(r2)
            }
        }
    }
    
    return ch;
   83c5c:	e0bffd0f 	ldh	r2,-12(fp)
   83c60:	e0bfff15 	stw	r2,-4(fp)
   83c64:	e0bfff17 	ldw	r2,-4(fp)
}
   83c68:	e037883a 	mov	sp,fp
   83c6c:	dfc00217 	ldw	ra,8(sp)
   83c70:	df000117 	ldw	fp,4(sp)
   83c74:	dc000017 	ldw	r16,0(sp)
   83c78:	dec00304 	addi	sp,sp,12
   83c7c:	f800283a 	ret

00083c80 <sd_card_write>:


bool sd_card_write(short int file_handle, char byte_of_data)
/* Write a single character to a given file. Return true if successful, and false otherwise. */
{
   83c80:	defff504 	addi	sp,sp,-44
   83c84:	dfc00a15 	stw	ra,40(sp)
   83c88:	df000915 	stw	fp,36(sp)
   83c8c:	dc000815 	stw	r16,32(sp)
   83c90:	df000804 	addi	fp,sp,32
   83c94:	e13ffd0d 	sth	r4,-12(fp)
   83c98:	e17ffe05 	stb	r5,-8(fp)
    bool result = false;
   83c9c:	e03ffa15 	stw	zero,-24(fp)
    
    if ((file_handle >= 0) && (file_handle < MAX_FILES_OPENED))
   83ca0:	e0bffd0f 	ldh	r2,-12(fp)
   83ca4:	1004803a 	cmplt	r2,r2,zero
   83ca8:	1001681e 	bne	r2,zero,8424c <sd_card_write+0x5cc>
   83cac:	e0bffd0f 	ldh	r2,-12(fp)
   83cb0:	10800508 	cmpgei	r2,r2,20
   83cb4:	1001651e 	bne	r2,zero,8424c <sd_card_write+0x5cc>
    {
        if (active_files[file_handle].in_use)
   83cb8:	e0bffd0f 	ldh	r2,-12(fp)
   83cbc:	00c002b4 	movhi	r3,10
   83cc0:	18d13104 	addi	r3,r3,17604
   83cc4:	100491ba 	slli	r2,r2,6
   83cc8:	10c5883a 	add	r2,r2,r3
   83ccc:	10800f04 	addi	r2,r2,60
   83cd0:	10800017 	ldw	r2,0(r2)
   83cd4:	1005003a 	cmpeq	r2,r2,zero
   83cd8:	10015c1e 	bne	r2,zero,8424c <sd_card_write+0x5cc>
        {
            int data_sector = boot_sector_data.data_sector_offset + (active_files[file_handle].current_cluster_index - 2)*boot_sector_data.sectors_per_cluster +
                              active_files[file_handle].current_sector_in_cluster;
   83cdc:	008002b4 	movhi	r2,10
   83ce0:	10911c04 	addi	r2,r2,17520
   83ce4:	14001417 	ldw	r16,80(r2)
   83ce8:	e0bffd0f 	ldh	r2,-12(fp)
   83cec:	00c002b4 	movhi	r3,10
   83cf0:	18d13104 	addi	r3,r3,17604
   83cf4:	100491ba 	slli	r2,r2,6
   83cf8:	10c5883a 	add	r2,r2,r3
   83cfc:	10800704 	addi	r2,r2,28
   83d00:	10800017 	ldw	r2,0(r2)
   83d04:	113fff84 	addi	r4,r2,-2
   83d08:	008002b4 	movhi	r2,10
   83d0c:	10911c04 	addi	r2,r2,17520
   83d10:	10800383 	ldbu	r2,14(r2)
   83d14:	11403fcc 	andi	r5,r2,255
   83d18:	00886b00 	call	886b0 <__mulsi3>
   83d1c:	8089883a 	add	r4,r16,r2
   83d20:	e0bffd0f 	ldh	r2,-12(fp)
   83d24:	00c002b4 	movhi	r3,10
   83d28:	18d13104 	addi	r3,r3,17604
   83d2c:	100491ba 	slli	r2,r2,6
   83d30:	10c5883a 	add	r2,r2,r3
   83d34:	10800804 	addi	r2,r2,32
   83d38:	10800017 	ldw	r2,0(r2)
   83d3c:	2085883a 	add	r2,r4,r2
   83d40:	e0bff915 	stw	r2,-28(fp)
			short int buffer_address = active_files[file_handle].current_byte_position % boot_sector_data.sector_size_in_bytes;
   83d44:	e0bffd0f 	ldh	r2,-12(fp)
   83d48:	00c002b4 	movhi	r3,10
   83d4c:	18d13104 	addi	r3,r3,17604
   83d50:	100491ba 	slli	r2,r2,6
   83d54:	10c5883a 	add	r2,r2,r3
   83d58:	10800904 	addi	r2,r2,36
   83d5c:	11000017 	ldw	r4,0(r2)
   83d60:	008002b4 	movhi	r2,10
   83d64:	10911c04 	addi	r2,r2,17520
   83d68:	1080030b 	ldhu	r2,12(r2)
   83d6c:	117fffcc 	andi	r5,r2,65535
   83d70:	00886a80 	call	886a8 <__umodsi3>
   83d74:	e0bff80d 	sth	r2,-32(fp)

			if (active_files[file_handle].current_byte_position < active_files[file_handle].file_size_in_bytes)
   83d78:	e0bffd0f 	ldh	r2,-12(fp)
   83d7c:	00c002b4 	movhi	r3,10
   83d80:	18d13104 	addi	r3,r3,17604
   83d84:	100491ba 	slli	r2,r2,6
   83d88:	10c5883a 	add	r2,r2,r3
   83d8c:	10800904 	addi	r2,r2,36
   83d90:	11000017 	ldw	r4,0(r2)
   83d94:	e0bffd0f 	ldh	r2,-12(fp)
   83d98:	00c002b4 	movhi	r3,10
   83d9c:	18d13104 	addi	r3,r3,17604
   83da0:	100491ba 	slli	r2,r2,6
   83da4:	10c5883a 	add	r2,r2,r3
   83da8:	10800604 	addi	r2,r2,24
   83dac:	10800017 	ldw	r2,0(r2)
   83db0:	2080602e 	bgeu	r4,r2,83f34 <sd_card_write+0x2b4>
            {
                if ((active_files[file_handle].current_byte_position > 0) && (buffer_address == 0))
   83db4:	e0bffd0f 	ldh	r2,-12(fp)
   83db8:	00c002b4 	movhi	r3,10
   83dbc:	18d13104 	addi	r3,r3,17604
   83dc0:	100491ba 	slli	r2,r2,6
   83dc4:	10c5883a 	add	r2,r2,r3
   83dc8:	10800904 	addi	r2,r2,36
   83dcc:	10800017 	ldw	r2,0(r2)
   83dd0:	1005003a 	cmpeq	r2,r2,zero
   83dd4:	1000d11e 	bne	r2,zero,8411c <sd_card_write+0x49c>
   83dd8:	e0bff80f 	ldh	r2,-32(fp)
   83ddc:	1004c03a 	cmpne	r2,r2,zero
   83de0:	1000ce1e 	bne	r2,zero,8411c <sd_card_write+0x49c>
                {
                    // Read in a new sector of data.
                    if (active_files[file_handle].current_sector_in_cluster == boot_sector_data.sectors_per_cluster - 1)
   83de4:	e0bffd0f 	ldh	r2,-12(fp)
   83de8:	00c002b4 	movhi	r3,10
   83dec:	18d13104 	addi	r3,r3,17604
   83df0:	100491ba 	slli	r2,r2,6
   83df4:	10c5883a 	add	r2,r2,r3
   83df8:	10800804 	addi	r2,r2,32
   83dfc:	10c00017 	ldw	r3,0(r2)
   83e00:	008002b4 	movhi	r2,10
   83e04:	10911c04 	addi	r2,r2,17520
   83e08:	10800383 	ldbu	r2,14(r2)
   83e0c:	10803fcc 	andi	r2,r2,255
   83e10:	10bfffc4 	addi	r2,r2,-1
   83e14:	1880341e 	bne	r3,r2,83ee8 <sd_card_write+0x268>
                    {
                        // Go to the next cluster.
                        unsigned short int next_cluster;
                        if (get_cluster_flag(active_files[file_handle].current_cluster_index, &next_cluster))
   83e18:	e0bffd0f 	ldh	r2,-12(fp)
   83e1c:	00c002b4 	movhi	r3,10
   83e20:	18d13104 	addi	r3,r3,17604
   83e24:	100491ba 	slli	r2,r2,6
   83e28:	10c5883a 	add	r2,r2,r3
   83e2c:	10800704 	addi	r2,r2,28
   83e30:	11000017 	ldw	r4,0(r2)
   83e34:	e17ffb04 	addi	r5,fp,-20
   83e38:	008062c0 	call	8062c <get_cluster_flag>
   83e3c:	1005003a 	cmpeq	r2,r2,zero
   83e40:	1000271e 	bne	r2,zero,83ee0 <sd_card_write+0x260>
                        {
                            if (next_cluster < 0xfff8)
   83e44:	e0bffb0b 	ldhu	r2,-20(fp)
   83e48:	10ffffcc 	andi	r3,r2,65535
   83e4c:	00bffdd4 	movui	r2,65527
   83e50:	10c0b236 	bltu	r2,r3,8411c <sd_card_write+0x49c>
                            {
                                active_files[file_handle].current_cluster_index = next_cluster;
   83e54:	e13ffd0f 	ldh	r4,-12(fp)
   83e58:	e0bffb0b 	ldhu	r2,-20(fp)
   83e5c:	117fffcc 	andi	r5,r2,65535
   83e60:	00c002b4 	movhi	r3,10
   83e64:	18d13104 	addi	r3,r3,17604
   83e68:	200491ba 	slli	r2,r4,6
   83e6c:	10c5883a 	add	r2,r2,r3
   83e70:	10800704 	addi	r2,r2,28
   83e74:	11400015 	stw	r5,0(r2)
								data_sector = boot_sector_data.data_sector_offset + (active_files[file_handle].current_cluster_index - 2)*boot_sector_data.sectors_per_cluster;
   83e78:	008002b4 	movhi	r2,10
   83e7c:	10911c04 	addi	r2,r2,17520
   83e80:	14001417 	ldw	r16,80(r2)
   83e84:	e0bffd0f 	ldh	r2,-12(fp)
   83e88:	00c002b4 	movhi	r3,10
   83e8c:	18d13104 	addi	r3,r3,17604
   83e90:	100491ba 	slli	r2,r2,6
   83e94:	10c5883a 	add	r2,r2,r3
   83e98:	10800704 	addi	r2,r2,28
   83e9c:	10800017 	ldw	r2,0(r2)
   83ea0:	113fff84 	addi	r4,r2,-2
   83ea4:	008002b4 	movhi	r2,10
   83ea8:	10911c04 	addi	r2,r2,17520
   83eac:	10800383 	ldbu	r2,14(r2)
   83eb0:	11403fcc 	andi	r5,r2,255
   83eb4:	00886b00 	call	886b0 <__mulsi3>
   83eb8:	8085883a 	add	r2,r16,r2
   83ebc:	e0bff915 	stw	r2,-28(fp)
								active_files[file_handle].current_sector_in_cluster = 0;
   83ec0:	e0bffd0f 	ldh	r2,-12(fp)
   83ec4:	00c002b4 	movhi	r3,10
   83ec8:	18d13104 	addi	r3,r3,17604
   83ecc:	100491ba 	slli	r2,r2,6
   83ed0:	10c5883a 	add	r2,r2,r3
   83ed4:	10800804 	addi	r2,r2,32
   83ed8:	10000015 	stw	zero,0(r2)
   83edc:	00008f06 	br	8411c <sd_card_write+0x49c>
                            }
                        }
                        else
                        {
                            return false;
   83ee0:	e03fff15 	stw	zero,-4(fp)
   83ee4:	0000db06 	br	84254 <sd_card_write+0x5d4>
                        }
                    }
                    else
                    {
                        active_files[file_handle].current_sector_in_cluster = active_files[file_handle].current_sector_in_cluster + 1;
   83ee8:	e17ffd0f 	ldh	r5,-12(fp)
   83eec:	e0bffd0f 	ldh	r2,-12(fp)
   83ef0:	00c002b4 	movhi	r3,10
   83ef4:	18d13104 	addi	r3,r3,17604
   83ef8:	100491ba 	slli	r2,r2,6
   83efc:	10c5883a 	add	r2,r2,r3
   83f00:	10800804 	addi	r2,r2,32
   83f04:	10800017 	ldw	r2,0(r2)
   83f08:	11000044 	addi	r4,r2,1
   83f0c:	00c002b4 	movhi	r3,10
   83f10:	18d13104 	addi	r3,r3,17604
   83f14:	280491ba 	slli	r2,r5,6
   83f18:	10c5883a 	add	r2,r2,r3
   83f1c:	10800804 	addi	r2,r2,32
   83f20:	11000015 	stw	r4,0(r2)
                        data_sector = data_sector + 1;
   83f24:	e0bff917 	ldw	r2,-28(fp)
   83f28:	10800044 	addi	r2,r2,1
   83f2c:	e0bff915 	stw	r2,-28(fp)
   83f30:	00007a06 	br	8411c <sd_card_write+0x49c>
                }
            }
			else
			{
				/* You are adding data to the end of the file, so increment its size and look for an additional data cluster if needed. */
				if ((active_files[file_handle].current_byte_position > 0) && (buffer_address == 0))
   83f34:	e0bffd0f 	ldh	r2,-12(fp)
   83f38:	00c002b4 	movhi	r3,10
   83f3c:	18d13104 	addi	r3,r3,17604
   83f40:	100491ba 	slli	r2,r2,6
   83f44:	10c5883a 	add	r2,r2,r3
   83f48:	10800904 	addi	r2,r2,36
   83f4c:	10800017 	ldw	r2,0(r2)
   83f50:	1005003a 	cmpeq	r2,r2,zero
   83f54:	1000711e 	bne	r2,zero,8411c <sd_card_write+0x49c>
   83f58:	e0bff80f 	ldh	r2,-32(fp)
   83f5c:	1004c03a 	cmpne	r2,r2,zero
   83f60:	10006e1e 	bne	r2,zero,8411c <sd_card_write+0x49c>
				{
					if (active_files[file_handle].current_sector_in_cluster == boot_sector_data.sectors_per_cluster - 1)
   83f64:	e0bffd0f 	ldh	r2,-12(fp)
   83f68:	00c002b4 	movhi	r3,10
   83f6c:	18d13104 	addi	r3,r3,17604
   83f70:	100491ba 	slli	r2,r2,6
   83f74:	10c5883a 	add	r2,r2,r3
   83f78:	10800804 	addi	r2,r2,32
   83f7c:	10c00017 	ldw	r3,0(r2)
   83f80:	008002b4 	movhi	r2,10
   83f84:	10911c04 	addi	r2,r2,17520
   83f88:	10800383 	ldbu	r2,14(r2)
   83f8c:	10803fcc 	andi	r2,r2,255
   83f90:	10bfffc4 	addi	r2,r2,-1
   83f94:	1880381e 	bne	r3,r2,84078 <sd_card_write+0x3f8>
					{
						/* Find a new cluster if possible. */
						unsigned int cluster_number;

						if (find_first_empty_cluster(&cluster_number))
   83f98:	e13ffc04 	addi	r4,fp,-16
   83f9c:	00823bc0 	call	823bc <find_first_empty_cluster>
   83fa0:	1005003a 	cmpeq	r2,r2,zero
   83fa4:	1000321e 	bne	r2,zero,84070 <sd_card_write+0x3f0>
						{
							// mark clusters in both File Allocation Tables.
							mark_cluster(active_files[file_handle].current_cluster_index, ((unsigned short int) (cluster_number & 0x0000ffff)), true);
   83fa8:	e0bffd0f 	ldh	r2,-12(fp)
   83fac:	00c002b4 	movhi	r3,10
   83fb0:	18d13104 	addi	r3,r3,17604
   83fb4:	100491ba 	slli	r2,r2,6
   83fb8:	10c5883a 	add	r2,r2,r3
   83fbc:	10800704 	addi	r2,r2,28
   83fc0:	11000017 	ldw	r4,0(r2)
   83fc4:	e0bffc17 	ldw	r2,-16(fp)
   83fc8:	117fffcc 	andi	r5,r2,65535
   83fcc:	2960001c 	xori	r5,r5,32768
   83fd0:	29600004 	addi	r5,r5,-32768
   83fd4:	01800044 	movi	r6,1
   83fd8:	00806d00 	call	806d0 <mark_cluster>
							mark_cluster(cluster_number, 0xffff, true);
   83fdc:	e13ffc17 	ldw	r4,-16(fp)
   83fe0:	017fffc4 	movi	r5,-1
   83fe4:	01800044 	movi	r6,1
   83fe8:	00806d00 	call	806d0 <mark_cluster>
							mark_cluster(active_files[file_handle].current_cluster_index, ((unsigned short int) (cluster_number & 0x0000ffff)), false);
   83fec:	e0bffd0f 	ldh	r2,-12(fp)
   83ff0:	00c002b4 	movhi	r3,10
   83ff4:	18d13104 	addi	r3,r3,17604
   83ff8:	100491ba 	slli	r2,r2,6
   83ffc:	10c5883a 	add	r2,r2,r3
   84000:	10800704 	addi	r2,r2,28
   84004:	11000017 	ldw	r4,0(r2)
   84008:	e0bffc17 	ldw	r2,-16(fp)
   8400c:	117fffcc 	andi	r5,r2,65535
   84010:	2960001c 	xori	r5,r5,32768
   84014:	29600004 	addi	r5,r5,-32768
   84018:	000d883a 	mov	r6,zero
   8401c:	00806d00 	call	806d0 <mark_cluster>
							mark_cluster(cluster_number, 0xffff, false);
   84020:	e13ffc17 	ldw	r4,-16(fp)
   84024:	017fffc4 	movi	r5,-1
   84028:	000d883a 	mov	r6,zero
   8402c:	00806d00 	call	806d0 <mark_cluster>
							// Change cluster index and sector index to compute a new data sector.
							active_files[file_handle].current_cluster_index = cluster_number;
   84030:	e0bffd0f 	ldh	r2,-12(fp)
   84034:	e13ffc17 	ldw	r4,-16(fp)
   84038:	00c002b4 	movhi	r3,10
   8403c:	18d13104 	addi	r3,r3,17604
   84040:	100491ba 	slli	r2,r2,6
   84044:	10c5883a 	add	r2,r2,r3
   84048:	10800704 	addi	r2,r2,28
   8404c:	11000015 	stw	r4,0(r2)
							active_files[file_handle].current_sector_in_cluster = 0;
   84050:	e0bffd0f 	ldh	r2,-12(fp)
   84054:	00c002b4 	movhi	r3,10
   84058:	18d13104 	addi	r3,r3,17604
   8405c:	100491ba 	slli	r2,r2,6
   84060:	10c5883a 	add	r2,r2,r3
   84064:	10800804 	addi	r2,r2,32
   84068:	10000015 	stw	zero,0(r2)
   8406c:	00001106 	br	840b4 <sd_card_write+0x434>
						}
						else
						{
							return false;
   84070:	e03fff15 	stw	zero,-4(fp)
   84074:	00007706 	br	84254 <sd_card_write+0x5d4>
					}
					else
					{
						/* Read the next sector in the cluster and modify it. We only need to change the data_sector value. The actual read happens a few lines below. */
						// active_files[file_handle].current_sector_in_cluster = active_files[file_handle].current_byte_position / boot_sector_data.sector_size_in_bytes;
						active_files[file_handle].current_sector_in_cluster += 1;
   84078:	e17ffd0f 	ldh	r5,-12(fp)
   8407c:	e0bffd0f 	ldh	r2,-12(fp)
   84080:	00c002b4 	movhi	r3,10
   84084:	18d13104 	addi	r3,r3,17604
   84088:	100491ba 	slli	r2,r2,6
   8408c:	10c5883a 	add	r2,r2,r3
   84090:	10800804 	addi	r2,r2,32
   84094:	10800017 	ldw	r2,0(r2)
   84098:	11000044 	addi	r4,r2,1
   8409c:	00c002b4 	movhi	r3,10
   840a0:	18d13104 	addi	r3,r3,17604
   840a4:	280491ba 	slli	r2,r5,6
   840a8:	10c5883a 	add	r2,r2,r3
   840ac:	10800804 	addi	r2,r2,32
   840b0:	11000015 	stw	r4,0(r2)
					}
					data_sector = boot_sector_data.data_sector_offset + (active_files[file_handle].current_cluster_index - 2)*boot_sector_data.sectors_per_cluster +
   840b4:	008002b4 	movhi	r2,10
   840b8:	10911c04 	addi	r2,r2,17520
   840bc:	14001417 	ldw	r16,80(r2)
   840c0:	e0bffd0f 	ldh	r2,-12(fp)
   840c4:	00c002b4 	movhi	r3,10
   840c8:	18d13104 	addi	r3,r3,17604
   840cc:	100491ba 	slli	r2,r2,6
   840d0:	10c5883a 	add	r2,r2,r3
   840d4:	10800704 	addi	r2,r2,28
   840d8:	10800017 	ldw	r2,0(r2)
   840dc:	113fff84 	addi	r4,r2,-2
   840e0:	008002b4 	movhi	r2,10
   840e4:	10911c04 	addi	r2,r2,17520
   840e8:	10800383 	ldbu	r2,14(r2)
   840ec:	11403fcc 	andi	r5,r2,255
   840f0:	00886b00 	call	886b0 <__mulsi3>
   840f4:	8089883a 	add	r4,r16,r2
   840f8:	e0bffd0f 	ldh	r2,-12(fp)
   840fc:	00c002b4 	movhi	r3,10
   84100:	18d13104 	addi	r3,r3,17604
   84104:	100491ba 	slli	r2,r2,6
   84108:	10c5883a 	add	r2,r2,r3
   8410c:	10800804 	addi	r2,r2,32
   84110:	10800017 	ldw	r2,0(r2)
   84114:	2085883a 	add	r2,r4,r2
   84118:	e0bff915 	stw	r2,-28(fp)
                          active_files[file_handle].current_sector_in_cluster;
				}
			}
            // Reading a data sector into the buffer. Note that changes to the most recently modified sector will be saved before
			// a new sector is read from the SD Card.
            if (current_sector_index != data_sector + fat_partition_offset_in_512_byte_sectors)
   8411c:	d0e6fc17 	ldw	r3,-25616(gp)
   84120:	e0bff917 	ldw	r2,-28(fp)
   84124:	1885883a 	add	r2,r3,r2
   84128:	1007883a 	mov	r3,r2
   8412c:	d0a6ff17 	ldw	r2,-25604(gp)
   84130:	18800926 	beq	r3,r2,84158 <sd_card_write+0x4d8>
            {
				result = Save_Modified_Sector();
   84134:	00804ec0 	call	804ec <Save_Modified_Sector>
   84138:	e0bffa15 	stw	r2,-24(fp)
                if (!Read_Sector_Data(data_sector, fat_partition_offset_in_512_byte_sectors))
   8413c:	d166fc17 	ldw	r5,-25616(gp)
   84140:	e13ff917 	ldw	r4,-28(fp)
   84144:	008053c0 	call	8053c <Read_Sector_Data>
   84148:	1004c03a 	cmpne	r2,r2,zero
   8414c:	1000021e 	bne	r2,zero,84158 <sd_card_write+0x4d8>
                {
					return false;
   84150:	e03fff15 	stw	zero,-4(fp)
   84154:	00003f06 	br	84254 <sd_card_write+0x5d4>
                }
            }
            // Write a byte of data to the buffer.
            *((volatile char *)SD_CARD_BUFFER(SD_CARD_0_BASE, buffer_address)) = byte_of_data;
   84158:	e0bff80f 	ldh	r2,-32(fp)
   8415c:	1007883a 	mov	r3,r2
   84160:	e0bffe03 	ldbu	r2,-8(fp)
   84164:	18800005 	stb	r2,0(r3)
			active_files[file_handle].current_byte_position = active_files[file_handle].current_byte_position + 1;
   84168:	e17ffd0f 	ldh	r5,-12(fp)
   8416c:	e0bffd0f 	ldh	r2,-12(fp)
   84170:	00c002b4 	movhi	r3,10
   84174:	18d13104 	addi	r3,r3,17604
   84178:	100491ba 	slli	r2,r2,6
   8417c:	10c5883a 	add	r2,r2,r3
   84180:	10800904 	addi	r2,r2,36
   84184:	10800017 	ldw	r2,0(r2)
   84188:	11000044 	addi	r4,r2,1
   8418c:	00c002b4 	movhi	r3,10
   84190:	18d13104 	addi	r3,r3,17604
   84194:	280491ba 	slli	r2,r5,6
   84198:	10c5883a 	add	r2,r2,r3
   8419c:	10800904 	addi	r2,r2,36
   841a0:	11000015 	stw	r4,0(r2)

			// Modify the file record only when necessary.
			if (active_files[file_handle].current_byte_position >= active_files[file_handle].file_size_in_bytes)
   841a4:	e0bffd0f 	ldh	r2,-12(fp)
   841a8:	00c002b4 	movhi	r3,10
   841ac:	18d13104 	addi	r3,r3,17604
   841b0:	100491ba 	slli	r2,r2,6
   841b4:	10c5883a 	add	r2,r2,r3
   841b8:	10800904 	addi	r2,r2,36
   841bc:	11000017 	ldw	r4,0(r2)
   841c0:	e0bffd0f 	ldh	r2,-12(fp)
   841c4:	00c002b4 	movhi	r3,10
   841c8:	18d13104 	addi	r3,r3,17604
   841cc:	100491ba 	slli	r2,r2,6
   841d0:	10c5883a 	add	r2,r2,r3
   841d4:	10800604 	addi	r2,r2,24
   841d8:	10800017 	ldw	r2,0(r2)
   841dc:	20801736 	bltu	r4,r2,8423c <sd_card_write+0x5bc>
			{
				active_files[file_handle].file_size_in_bytes = active_files[file_handle].file_size_in_bytes + 1;
   841e0:	e17ffd0f 	ldh	r5,-12(fp)
   841e4:	e0bffd0f 	ldh	r2,-12(fp)
   841e8:	00c002b4 	movhi	r3,10
   841ec:	18d13104 	addi	r3,r3,17604
   841f0:	100491ba 	slli	r2,r2,6
   841f4:	10c5883a 	add	r2,r2,r3
   841f8:	10800604 	addi	r2,r2,24
   841fc:	10800017 	ldw	r2,0(r2)
   84200:	11000044 	addi	r4,r2,1
   84204:	00c002b4 	movhi	r3,10
   84208:	18d13104 	addi	r3,r3,17604
   8420c:	280491ba 	slli	r2,r5,6
   84210:	10c5883a 	add	r2,r2,r3
   84214:	10800604 	addi	r2,r2,24
   84218:	11000015 	stw	r4,0(r2)
				active_files[file_handle].modified = true;
   8421c:	e0bffd0f 	ldh	r2,-12(fp)
   84220:	00c002b4 	movhi	r3,10
   84224:	18d13104 	addi	r3,r3,17604
   84228:	100491ba 	slli	r2,r2,6
   8422c:	10c5883a 	add	r2,r2,r3
   84230:	10c00e04 	addi	r3,r2,56
   84234:	00800044 	movi	r2,1
   84238:	18800015 	stw	r2,0(r3)
			}
            // Invaldiate the buffer to ensure that the buffer contents are written to the SD card whe nthe file is closed.
            current_sector_modified = true;
   8423c:	00800044 	movi	r2,1
   84240:	d0a6fe15 	stw	r2,-25608(gp)
			result = true;
   84244:	00800044 	movi	r2,1
   84248:	e0bffa15 	stw	r2,-24(fp)
		}
    }
    
    return result;
   8424c:	e0bffa17 	ldw	r2,-24(fp)
   84250:	e0bfff15 	stw	r2,-4(fp)
   84254:	e0bfff17 	ldw	r2,-4(fp)
}
   84258:	e037883a 	mov	sp,fp
   8425c:	dfc00217 	ldw	ra,8(sp)
   84260:	df000117 	ldw	fp,4(sp)
   84264:	dc000017 	ldw	r16,0(sp)
   84268:	dec00304 	addi	sp,sp,12
   8426c:	f800283a 	ret

00084270 <sd_card_fclose>:


bool sd_card_fclose(short int file_handle)
// This function closes an opened file and saves data to SD Card if necessary.
{
   84270:	defffa04 	addi	sp,sp,-24
   84274:	dfc00515 	stw	ra,20(sp)
   84278:	df000415 	stw	fp,16(sp)
   8427c:	dc000315 	stw	r16,12(sp)
   84280:	df000304 	addi	fp,sp,12
   84284:	e13fff0d 	sth	r4,-4(fp)
    bool result = false;
   84288:	e03ffe15 	stw	zero,-8(fp)
    if ((sd_card_is_Present()) && (is_sd_card_formated_as_FAT16))
   8428c:	0082ef80 	call	82ef8 <sd_card_is_Present>
   84290:	1005003a 	cmpeq	r2,r2,zero
   84294:	1000641e 	bne	r2,zero,84428 <sd_card_fclose+0x1b8>
   84298:	d0a6f617 	ldw	r2,-25640(gp)
   8429c:	1005003a 	cmpeq	r2,r2,zero
   842a0:	1000611e 	bne	r2,zero,84428 <sd_card_fclose+0x1b8>
    {
        if (active_files[file_handle].in_use) 
   842a4:	e0bfff0f 	ldh	r2,-4(fp)
   842a8:	00c002b4 	movhi	r3,10
   842ac:	18d13104 	addi	r3,r3,17604
   842b0:	100491ba 	slli	r2,r2,6
   842b4:	10c5883a 	add	r2,r2,r3
   842b8:	10800f04 	addi	r2,r2,60
   842bc:	10800017 	ldw	r2,0(r2)
   842c0:	1005003a 	cmpeq	r2,r2,zero
   842c4:	1000581e 	bne	r2,zero,84428 <sd_card_fclose+0x1b8>
        {
			if (active_files[file_handle].modified)
   842c8:	e0bfff0f 	ldh	r2,-4(fp)
   842cc:	00c002b4 	movhi	r3,10
   842d0:	18d13104 	addi	r3,r3,17604
   842d4:	100491ba 	slli	r2,r2,6
   842d8:	10c5883a 	add	r2,r2,r3
   842dc:	10800e04 	addi	r2,r2,56
   842e0:	10800017 	ldw	r2,0(r2)
   842e4:	1005003a 	cmpeq	r2,r2,zero
   842e8:	1000461e 	bne	r2,zero,84404 <sd_card_fclose+0x194>
			{
				unsigned int record_sector = active_files[file_handle].file_record_sector_in_cluster;
   842ec:	e0bfff0f 	ldh	r2,-4(fp)
   842f0:	00c002b4 	movhi	r3,10
   842f4:	18d13104 	addi	r3,r3,17604
   842f8:	100491ba 	slli	r2,r2,6
   842fc:	10c5883a 	add	r2,r2,r3
   84300:	10800b04 	addi	r2,r2,44
   84304:	10800017 	ldw	r2,0(r2)
   84308:	e0bffd15 	stw	r2,-12(fp)
				if (active_files[file_handle].file_record_cluster == 0)
   8430c:	e0bfff0f 	ldh	r2,-4(fp)
   84310:	00c002b4 	movhi	r3,10
   84314:	18d13104 	addi	r3,r3,17604
   84318:	100491ba 	slli	r2,r2,6
   8431c:	10c5883a 	add	r2,r2,r3
   84320:	10800a04 	addi	r2,r2,40
   84324:	10800017 	ldw	r2,0(r2)
   84328:	1004c03a 	cmpne	r2,r2,zero
   8432c:	1000071e 	bne	r2,zero,8434c <sd_card_fclose+0xdc>
				{
					record_sector = record_sector + boot_sector_data.root_directory_sector_offset;
   84330:	008002b4 	movhi	r2,10
   84334:	10911c04 	addi	r2,r2,17520
   84338:	10c01317 	ldw	r3,76(r2)
   8433c:	e0bffd17 	ldw	r2,-12(fp)
   84340:	10c5883a 	add	r2,r2,r3
   84344:	e0bffd15 	stw	r2,-12(fp)
   84348:	00001406 	br	8439c <sd_card_fclose+0x12c>
				}
				else
				{
					record_sector = record_sector + boot_sector_data.data_sector_offset + 
   8434c:	008002b4 	movhi	r2,10
   84350:	10911c04 	addi	r2,r2,17520
   84354:	10c01417 	ldw	r3,80(r2)
   84358:	e0bffd17 	ldw	r2,-12(fp)
   8435c:	18a1883a 	add	r16,r3,r2
   84360:	e0bfff0f 	ldh	r2,-4(fp)
   84364:	00c002b4 	movhi	r3,10
   84368:	18d13104 	addi	r3,r3,17604
   8436c:	100491ba 	slli	r2,r2,6
   84370:	10c5883a 	add	r2,r2,r3
   84374:	10800a04 	addi	r2,r2,40
   84378:	10800017 	ldw	r2,0(r2)
   8437c:	113fff84 	addi	r4,r2,-2
   84380:	008002b4 	movhi	r2,10
   84384:	10911c04 	addi	r2,r2,17520
   84388:	10800383 	ldbu	r2,14(r2)
   8438c:	11403fcc 	andi	r5,r2,255
   84390:	00886b00 	call	886b0 <__mulsi3>
   84394:	8085883a 	add	r2,r16,r2
   84398:	e0bffd15 	stw	r2,-12(fp)
									(active_files[file_handle].file_record_cluster - 2)*boot_sector_data.sectors_per_cluster;
				}
				if (Read_Sector_Data(record_sector, fat_partition_offset_in_512_byte_sectors))
   8439c:	e13ffd17 	ldw	r4,-12(fp)
   843a0:	d166fc17 	ldw	r5,-25616(gp)
   843a4:	008053c0 	call	8053c <Read_Sector_Data>
   843a8:	1005003a 	cmpeq	r2,r2,zero
   843ac:	1000151e 	bne	r2,zero,84404 <sd_card_fclose+0x194>
				{
					if (Write_File_Record_At_Offset(active_files[file_handle].file_record_offset, &(active_files[file_handle])))
   843b0:	e0bfff0f 	ldh	r2,-4(fp)
   843b4:	00c002b4 	movhi	r3,10
   843b8:	18d13104 	addi	r3,r3,17604
   843bc:	100491ba 	slli	r2,r2,6
   843c0:	10c5883a 	add	r2,r2,r3
   843c4:	10800c04 	addi	r2,r2,48
   843c8:	1080000b 	ldhu	r2,0(r2)
   843cc:	113fffcc 	andi	r4,r2,65535
   843d0:	2120001c 	xori	r4,r4,32768
   843d4:	21200004 	addi	r4,r4,-32768
   843d8:	e0bfff0f 	ldh	r2,-4(fp)
   843dc:	100491ba 	slli	r2,r2,6
   843e0:	1007883a 	mov	r3,r2
   843e4:	008002b4 	movhi	r2,10
   843e8:	10913104 	addi	r2,r2,17604
   843ec:	188b883a 	add	r5,r3,r2
   843f0:	0080ac80 	call	80ac8 <Write_File_Record_At_Offset>
   843f4:	1005003a 	cmpeq	r2,r2,zero
   843f8:	1000021e 	bne	r2,zero,84404 <sd_card_fclose+0x194>
					{
						// Make sure that the Data has been saved to the SD Card.
						result = Save_Modified_Sector();
   843fc:	00804ec0 	call	804ec <Save_Modified_Sector>
   84400:	e0bffe15 	stw	r2,-8(fp)
					}
				}
			}
			active_files[file_handle].in_use = false;
   84404:	e0bfff0f 	ldh	r2,-4(fp)
   84408:	00c002b4 	movhi	r3,10
   8440c:	18d13104 	addi	r3,r3,17604
   84410:	100491ba 	slli	r2,r2,6
   84414:	10c5883a 	add	r2,r2,r3
   84418:	10800f04 	addi	r2,r2,60
   8441c:	10000015 	stw	zero,0(r2)
			result = true;
   84420:	00800044 	movi	r2,1
   84424:	e0bffe15 	stw	r2,-8(fp)
        }
    }
    
    return result;
   84428:	e0bffe17 	ldw	r2,-8(fp)
}
   8442c:	e037883a 	mov	sp,fp
   84430:	dfc00217 	ldw	ra,8(sp)
   84434:	df000117 	ldw	fp,4(sp)
   84438:	dc000017 	ldw	r16,0(sp)
   8443c:	dec00304 	addi	sp,sp,12
   84440:	f800283a 	ret

00084444 <alt_ucosii_check_return_code>:
   84444:	defffd04 	addi	sp,sp,-12
   84448:	dfc00215 	stw	ra,8(sp)
   8444c:	df000115 	stw	fp,4(sp)
   84450:	df000104 	addi	fp,sp,4
   84454:	e13fff05 	stb	r4,-4(fp)
   84458:	e0bfff03 	ldbu	r2,-4(fp)
   8445c:	1005003a 	cmpeq	r2,r2,zero
   84460:	1000041e 	bne	r2,zero,84474 <alt_ucosii_check_return_code+0x30>
   84464:	00940100 	call	94010 <OSSchedLock>
   84468:	e13fff03 	ldbu	r4,-4(fp)
   8446c:	00844880 	call	84488 <alt_ucosii_simple_error_handler>
   84470:	009409c0 	call	9409c <OSSchedUnlock>
   84474:	e037883a 	mov	sp,fp
   84478:	dfc00117 	ldw	ra,4(sp)
   8447c:	df000017 	ldw	fp,0(sp)
   84480:	dec00204 	addi	sp,sp,8
   84484:	f800283a 	ret

00084488 <alt_ucosii_simple_error_handler>:
   84488:	defffc04 	addi	sp,sp,-16
   8448c:	dfc00315 	stw	ra,12(sp)
   84490:	df000215 	stw	fp,8(sp)
   84494:	df000204 	addi	fp,sp,8
   84498:	e13ffe05 	stb	r4,-8(fp)
   8449c:	010002b4 	movhi	r4,10
   844a0:	213ffc04 	addi	r4,r4,-16
   844a4:	00889700 	call	88970 <puts>
   844a8:	e0bffe03 	ldbu	r2,-8(fp)
   844ac:	e0bfff15 	stw	r2,-4(fp)
   844b0:	e0ffff17 	ldw	r3,-4(fp)
   844b4:	18801968 	cmpgeui	r2,r3,101
   844b8:	10011e1e 	bne	r2,zero,84934 <alt_ucosii_simple_error_handler+0x4ac>
   844bc:	e13fff17 	ldw	r4,-4(fp)
   844c0:	e13fff17 	ldw	r4,-4(fp)
   844c4:	2105883a 	add	r2,r4,r4
   844c8:	1087883a 	add	r3,r2,r2
   844cc:	00800234 	movhi	r2,8
   844d0:	10913804 	addi	r2,r2,17632
   844d4:	1885883a 	add	r2,r3,r2
   844d8:	10800017 	ldw	r2,0(r2)
   844dc:	1000683a 	jmp	r2
   844e0:	00084934 	movhi	zero,8484
   844e4:	00084754 	movui	zero,8477
   844e8:	000847f4 	movhi	zero,8479
   844ec:	000847a4 	muli	zero,zero,8478
   844f0:	0008477c 	xorhi	zero,zero,8477
   844f4:	00084934 	movhi	zero,8484
   844f8:	00084934 	movhi	zero,8484
   844fc:	00084934 	movhi	zero,8484
   84500:	00084934 	movhi	zero,8484
   84504:	00084934 	movhi	zero,8484
   84508:	000847cc 	andi	zero,zero,8479
   8450c:	00084934 	movhi	zero,8484
   84510:	00084934 	movhi	zero,8484
   84514:	00084934 	movhi	zero,8484
   84518:	00084934 	movhi	zero,8484
   8451c:	00084934 	movhi	zero,8484
   84520:	00084934 	movhi	zero,8484
   84524:	00084934 	movhi	zero,8484
   84528:	00084934 	movhi	zero,8484
   8452c:	00084934 	movhi	zero,8484
   84530:	0008472c 	andhi	zero,zero,8476
   84534:	00084934 	movhi	zero,8484
   84538:	00084934 	movhi	zero,8484
   8453c:	00084934 	movhi	zero,8484
   84540:	00084934 	movhi	zero,8484
   84544:	00084934 	movhi	zero,8484
   84548:	00084934 	movhi	zero,8484
   8454c:	00084934 	movhi	zero,8484
   84550:	00084934 	movhi	zero,8484
   84554:	00084934 	movhi	zero,8484
   84558:	00084894 	movui	zero,8482
   8455c:	00084934 	movhi	zero,8484
   84560:	00084934 	movhi	zero,8484
   84564:	00084934 	movhi	zero,8484
   84568:	00084934 	movhi	zero,8484
   8456c:	00084934 	movhi	zero,8484
   84570:	00084934 	movhi	zero,8484
   84574:	00084934 	movhi	zero,8484
   84578:	00084934 	movhi	zero,8484
   8457c:	00084934 	movhi	zero,8484
   84580:	00084674 	movhi	zero,8473
   84584:	00084934 	movhi	zero,8484
   84588:	0008469c 	xori	zero,zero,8474
   8458c:	00084934 	movhi	zero,8484
   84590:	00084934 	movhi	zero,8484
   84594:	00084934 	movhi	zero,8484
   84598:	00084934 	movhi	zero,8484
   8459c:	00084934 	movhi	zero,8484
   845a0:	00084934 	movhi	zero,8484
   845a4:	00084934 	movhi	zero,8484
   845a8:	00084934 	movhi	zero,8484
   845ac:	00084934 	movhi	zero,8484
   845b0:	00084934 	movhi	zero,8484
   845b4:	00084934 	movhi	zero,8484
   845b8:	00084934 	movhi	zero,8484
   845bc:	00084934 	movhi	zero,8484
   845c0:	00084934 	movhi	zero,8484
   845c4:	00084934 	movhi	zero,8484
   845c8:	00084934 	movhi	zero,8484
   845cc:	00084934 	movhi	zero,8484
   845d0:	00084934 	movhi	zero,8484
   845d4:	00084844 	movi	zero,8481
   845d8:	0008481c 	xori	zero,zero,8480
   845dc:	00084934 	movhi	zero,8484
   845e0:	0008486c 	andhi	zero,zero,8481
   845e4:	00084934 	movhi	zero,8484
   845e8:	000846e4 	muli	zero,zero,8475
   845ec:	00084934 	movhi	zero,8484
   845f0:	00084934 	movhi	zero,8484
   845f4:	00084934 	movhi	zero,8484
   845f8:	00084934 	movhi	zero,8484
   845fc:	00084934 	movhi	zero,8484
   84600:	00084934 	movhi	zero,8484
   84604:	00084934 	movhi	zero,8484
   84608:	00084934 	movhi	zero,8484
   8460c:	00084934 	movhi	zero,8484
   84610:	00084934 	movhi	zero,8484
   84614:	00084934 	movhi	zero,8484
   84618:	00084934 	movhi	zero,8484
   8461c:	00084934 	movhi	zero,8484
   84620:	00084934 	movhi	zero,8484
   84624:	00084934 	movhi	zero,8484
   84628:	00084934 	movhi	zero,8484
   8462c:	00084934 	movhi	zero,8484
   84630:	00084934 	movhi	zero,8484
   84634:	00084934 	movhi	zero,8484
   84638:	00084934 	movhi	zero,8484
   8463c:	00084934 	movhi	zero,8484
   84640:	00084934 	movhi	zero,8484
   84644:	00084934 	movhi	zero,8484
   84648:	00084934 	movhi	zero,8484
   8464c:	00084934 	movhi	zero,8484
   84650:	00084934 	movhi	zero,8484
   84654:	000848e4 	muli	zero,zero,8483
   84658:	00084934 	movhi	zero,8484
   8465c:	00084934 	movhi	zero,8484
   84660:	0008490c 	andi	zero,zero,8484
   84664:	00084934 	movhi	zero,8484
   84668:	00084934 	movhi	zero,8484
   8466c:	00084934 	movhi	zero,8484
   84670:	000848bc 	xorhi	zero,zero,8482
   84674:	008002b4 	movhi	r2,10
   84678:	1089d704 	addi	r2,r2,10076
   8467c:	10800017 	ldw	r2,0(r2)
   84680:	11c00317 	ldw	r7,12(r2)
   84684:	010002b4 	movhi	r4,10
   84688:	21000304 	addi	r4,r4,12
   8468c:	01400044 	movi	r5,1
   84690:	01800ec4 	movi	r6,59
   84694:	00887f40 	call	887f4 <fwrite>
   84698:	0000af06 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   8469c:	008002b4 	movhi	r2,10
   846a0:	1089d704 	addi	r2,r2,10076
   846a4:	10800017 	ldw	r2,0(r2)
   846a8:	11c00317 	ldw	r7,12(r2)
   846ac:	010002b4 	movhi	r4,10
   846b0:	21001204 	addi	r4,r4,72
   846b4:	01400044 	movi	r5,1
   846b8:	01800ec4 	movi	r6,59
   846bc:	00887f40 	call	887f4 <fwrite>
   846c0:	008002b4 	movhi	r2,10
   846c4:	1089d704 	addi	r2,r2,10076
   846c8:	10800017 	ldw	r2,0(r2)
   846cc:	11000317 	ldw	r4,12(r2)
   846d0:	014002b4 	movhi	r5,10
   846d4:	29402104 	addi	r5,r5,132
   846d8:	01800504 	movi	r6,20
   846dc:	00886e80 	call	886e8 <fprintf>
   846e0:	00009d06 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   846e4:	008002b4 	movhi	r2,10
   846e8:	1089d704 	addi	r2,r2,10076
   846ec:	10800017 	ldw	r2,0(r2)
   846f0:	11c00317 	ldw	r7,12(r2)
   846f4:	010002b4 	movhi	r4,10
   846f8:	21002e04 	addi	r4,r4,184
   846fc:	01400044 	movi	r5,1
   84700:	01800a04 	movi	r6,40
   84704:	00887f40 	call	887f4 <fwrite>
   84708:	008002b4 	movhi	r2,10
   8470c:	1089d704 	addi	r2,r2,10076
   84710:	10800017 	ldw	r2,0(r2)
   84714:	11000317 	ldw	r4,12(r2)
   84718:	014002b4 	movhi	r5,10
   8471c:	29403904 	addi	r5,r5,228
   84720:	01800284 	movi	r6,10
   84724:	00886e80 	call	886e8 <fprintf>
   84728:	00008b06 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   8472c:	008002b4 	movhi	r2,10
   84730:	1089d704 	addi	r2,r2,10076
   84734:	10800017 	ldw	r2,0(r2)
   84738:	11c00317 	ldw	r7,12(r2)
   8473c:	010002b4 	movhi	r4,10
   84740:	21004304 	addi	r4,r4,268
   84744:	01400044 	movi	r5,1
   84748:	01800f84 	movi	r6,62
   8474c:	00887f40 	call	887f4 <fwrite>
   84750:	00008106 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   84754:	008002b4 	movhi	r2,10
   84758:	1089d704 	addi	r2,r2,10076
   8475c:	10800017 	ldw	r2,0(r2)
   84760:	11c00317 	ldw	r7,12(r2)
   84764:	010002b4 	movhi	r4,10
   84768:	21005304 	addi	r4,r4,332
   8476c:	01400044 	movi	r5,1
   84770:	01801244 	movi	r6,73
   84774:	00887f40 	call	887f4 <fwrite>
   84778:	00007706 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   8477c:	008002b4 	movhi	r2,10
   84780:	1089d704 	addi	r2,r2,10076
   84784:	10800017 	ldw	r2,0(r2)
   84788:	11c00317 	ldw	r7,12(r2)
   8478c:	010002b4 	movhi	r4,10
   84790:	21006604 	addi	r4,r4,408
   84794:	01400044 	movi	r5,1
   84798:	01800d84 	movi	r6,54
   8479c:	00887f40 	call	887f4 <fwrite>
   847a0:	00006d06 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   847a4:	008002b4 	movhi	r2,10
   847a8:	1089d704 	addi	r2,r2,10076
   847ac:	10800017 	ldw	r2,0(r2)
   847b0:	11c00317 	ldw	r7,12(r2)
   847b4:	010002b4 	movhi	r4,10
   847b8:	21007404 	addi	r4,r4,464
   847bc:	01400044 	movi	r5,1
   847c0:	01800a44 	movi	r6,41
   847c4:	00887f40 	call	887f4 <fwrite>
   847c8:	00006306 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   847cc:	008002b4 	movhi	r2,10
   847d0:	1089d704 	addi	r2,r2,10076
   847d4:	10800017 	ldw	r2,0(r2)
   847d8:	11c00317 	ldw	r7,12(r2)
   847dc:	010002b4 	movhi	r4,10
   847e0:	21007f04 	addi	r4,r4,508
   847e4:	01400044 	movi	r5,1
   847e8:	01800a04 	movi	r6,40
   847ec:	00887f40 	call	887f4 <fwrite>
   847f0:	00005906 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   847f4:	008002b4 	movhi	r2,10
   847f8:	1089d704 	addi	r2,r2,10076
   847fc:	10800017 	ldw	r2,0(r2)
   84800:	11c00317 	ldw	r7,12(r2)
   84804:	010002b4 	movhi	r4,10
   84808:	21008a04 	addi	r4,r4,552
   8480c:	01400044 	movi	r5,1
   84810:	01800bc4 	movi	r6,47
   84814:	00887f40 	call	887f4 <fwrite>
   84818:	00004f06 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   8481c:	008002b4 	movhi	r2,10
   84820:	1089d704 	addi	r2,r2,10076
   84824:	10800017 	ldw	r2,0(r2)
   84828:	11c00317 	ldw	r7,12(r2)
   8482c:	010002b4 	movhi	r4,10
   84830:	21009604 	addi	r4,r4,600
   84834:	01400044 	movi	r5,1
   84838:	01800884 	movi	r6,34
   8483c:	00887f40 	call	887f4 <fwrite>
   84840:	00004506 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   84844:	008002b4 	movhi	r2,10
   84848:	1089d704 	addi	r2,r2,10076
   8484c:	10800017 	ldw	r2,0(r2)
   84850:	11c00317 	ldw	r7,12(r2)
   84854:	010002b4 	movhi	r4,10
   84858:	21009f04 	addi	r4,r4,636
   8485c:	01400044 	movi	r5,1
   84860:	01800bc4 	movi	r6,47
   84864:	00887f40 	call	887f4 <fwrite>
   84868:	00003b06 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   8486c:	008002b4 	movhi	r2,10
   84870:	1089d704 	addi	r2,r2,10076
   84874:	10800017 	ldw	r2,0(r2)
   84878:	11c00317 	ldw	r7,12(r2)
   8487c:	010002b4 	movhi	r4,10
   84880:	2100ab04 	addi	r4,r4,684
   84884:	01400044 	movi	r5,1
   84888:	018009c4 	movi	r6,39
   8488c:	00887f40 	call	887f4 <fwrite>
   84890:	00003106 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   84894:	008002b4 	movhi	r2,10
   84898:	1089d704 	addi	r2,r2,10076
   8489c:	10800017 	ldw	r2,0(r2)
   848a0:	11c00317 	ldw	r7,12(r2)
   848a4:	010002b4 	movhi	r4,10
   848a8:	2100b504 	addi	r4,r4,724
   848ac:	01400044 	movi	r5,1
   848b0:	01800a84 	movi	r6,42
   848b4:	00887f40 	call	887f4 <fwrite>
   848b8:	00002706 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   848bc:	008002b4 	movhi	r2,10
   848c0:	1089d704 	addi	r2,r2,10076
   848c4:	10800017 	ldw	r2,0(r2)
   848c8:	11c00317 	ldw	r7,12(r2)
   848cc:	010002b4 	movhi	r4,10
   848d0:	2100c004 	addi	r4,r4,768
   848d4:	01400044 	movi	r5,1
   848d8:	01800e04 	movi	r6,56
   848dc:	00887f40 	call	887f4 <fwrite>
   848e0:	00001d06 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   848e4:	008002b4 	movhi	r2,10
   848e8:	1089d704 	addi	r2,r2,10076
   848ec:	10800017 	ldw	r2,0(r2)
   848f0:	11c00317 	ldw	r7,12(r2)
   848f4:	010002b4 	movhi	r4,10
   848f8:	2100cf04 	addi	r4,r4,828
   848fc:	01400044 	movi	r5,1
   84900:	018011c4 	movi	r6,71
   84904:	00887f40 	call	887f4 <fwrite>
   84908:	00001306 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   8490c:	008002b4 	movhi	r2,10
   84910:	1089d704 	addi	r2,r2,10076
   84914:	10800017 	ldw	r2,0(r2)
   84918:	11c00317 	ldw	r7,12(r2)
   8491c:	010002b4 	movhi	r4,10
   84920:	2100e104 	addi	r4,r4,900
   84924:	01400044 	movi	r5,1
   84928:	018005c4 	movi	r6,23
   8492c:	00887f40 	call	887f4 <fwrite>
   84930:	00000906 	br	84958 <alt_ucosii_simple_error_handler+0x4d0>
   84934:	008002b4 	movhi	r2,10
   84938:	1089d704 	addi	r2,r2,10076
   8493c:	10800017 	ldw	r2,0(r2)
   84940:	11c00317 	ldw	r7,12(r2)
   84944:	010002b4 	movhi	r4,10
   84948:	2100e704 	addi	r4,r4,924
   8494c:	01400044 	movi	r5,1
   84950:	01800384 	movi	r6,14
   84954:	00887f40 	call	887f4 <fwrite>
   84958:	e037883a 	mov	sp,fp
   8495c:	dfc00117 	ldw	ra,4(sp)
   84960:	df000017 	ldw	fp,0(sp)
   84964:	dec00204 	addi	sp,sp,8
   84968:	f800283a 	ret

0008496c <initialize_task>:
void *WriteQueueR[QUEUE_LEN];
void *WriteQueueG[QUEUE_LEN];
void *WriteQueueB[QUEUE_LEN];

// Initialization task for uCOS
void initialize_task(void* pdata) {
   8496c:	defffc04 	addi	sp,sp,-16
   84970:	dfc00315 	stw	ra,12(sp)
   84974:	df000215 	stw	fp,8(sp)
   84978:	df000204 	addi	fp,sp,8
   8497c:	e13fff15 	stw	r4,-4(fp)
	INT8U return_code = OS_NO_ERR;
   84980:	e03ffe05 	stb	zero,-8(fp)

	// Initialize statistic counters in OS
	OSStatInit();
   84984:	00941f00 	call	941f0 <OSStatInit>

	// create os data structures
	init_OS_data_structs();
   84988:	0084aa00 	call	84aa0 <init_OS_data_structs>

	// create the tasks
	init_create_tasks();
   8498c:	0084cf80 	call	84cf8 <init_create_tasks>

	// This task is deleted because there is no need for it to run again
	return_code = OSTaskDel(OS_PRIO_SELF);
   84990:	01003fc4 	movi	r4,255
   84994:	009c18c0 	call	9c18c <OSTaskDel>
   84998:	e0bffe05 	stb	r2,-8(fp)
	alt_ucosii_check_return_code(return_code);
   8499c:	e13ffe03 	ldbu	r4,-8(fp)
   849a0:	00844440 	call	84444 <alt_ucosii_check_return_code>

	while (1);
   849a4:	003fff06 	br	849a4 <initialize_task+0x38>

000849a8 <main>:
}

// The main function, it initializes the hardware, and create the initialization task,
// then it starts uCOS, and never returns
int main(void) {
   849a8:	defff804 	addi	sp,sp,-32
   849ac:	dfc00715 	stw	ra,28(sp)
   849b0:	df000615 	stw	fp,24(sp)
   849b4:	df000604 	addi	fp,sp,24
	INT8U return_code = OS_NO_ERR;
   849b8:	e03fff05 	stb	zero,-4(fp)
	
	printf("Start main...\n");
   849bc:	010002b4 	movhi	r4,10
   849c0:	2100eb04 	addi	r4,r4,940
   849c4:	00889700 	call	88970 <puts>

	init_button_irq();
   849c8:	00803dc0 	call	803dc <init_button_irq>
	printf("PB initialized...\n");
   849cc:	010002b4 	movhi	r4,10
   849d0:	2100ef04 	addi	r4,r4,956
   849d4:	00889700 	call	88970 <puts>

	seg7_show(SEG7_DISPLAY_0_BASE,SEG7_VALUE);
   849d8:	00c00434 	movhi	r3,16
   849dc:	18c52a04 	addi	r3,r3,5288
   849e0:	00844474 	movhi	r2,4369
   849e4:	10844444 	addi	r2,r2,4369
   849e8:	18800035 	stwio	r2,0(r3)
	printf("SEG7 initialized...\n");
   849ec:	010002b4 	movhi	r4,10
   849f0:	2100f404 	addi	r4,r4,976
   849f4:	00889700 	call	88970 <puts>

    sd_card_open_dev();
   849f8:	0082ea00 	call	82ea0 <sd_card_open_dev>
	printf("Opened SD card device...\n");
   849fc:	010002b4 	movhi	r4,10
   84a00:	2100f904 	addi	r4,r4,996
   84a04:	00889700 	call	88970 <puts>

	PERF_RESET(PERFORMANCE_COUNTER_0_BASE);
   84a08:	00c00434 	movhi	r3,16
   84a0c:	18c50004 	addi	r3,r3,5120
   84a10:	00800044 	movi	r2,1
   84a14:	18800035 	stwio	r2,0(r3)
	printf("Reset performance counter...\n");
   84a18:	010002b4 	movhi	r4,10
   84a1c:	21010004 	addi	r4,r4,1024
   84a20:	00889700 	call	88970 <puts>

	OSInit();
   84a24:	0093e400 	call	93e40 <OSInit>

	return_code = OSTaskCreateExt(initialize_task,
   84a28:	018002f4 	movhi	r6,11
   84a2c:	31894104 	addi	r6,r6,9476
   84a30:	00800184 	movi	r2,6
   84a34:	d8800015 	stw	r2,0(sp)
   84a38:	008002f4 	movhi	r2,11
   84a3c:	10814104 	addi	r2,r2,1284
   84a40:	d8800115 	stw	r2,4(sp)
   84a44:	00820004 	movi	r2,2048
   84a48:	d8800215 	stw	r2,8(sp)
   84a4c:	d8000315 	stw	zero,12(sp)
   84a50:	008000c4 	movi	r2,3
   84a54:	d8800415 	stw	r2,16(sp)
   84a58:	01000234 	movhi	r4,8
   84a5c:	21125b04 	addi	r4,r4,18796
   84a60:	000b883a 	mov	r5,zero
   84a64:	01c00184 	movi	r7,6
   84a68:	009bf8c0 	call	9bf8c <OSTaskCreateExt>
   84a6c:	e0bfff05 	stb	r2,-4(fp)
					INITIALIZE_TASK_PRIORITY,
					initialize_task_stk,
					TASK_STACKSIZE,
					NULL,
					OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR);
	alt_ucosii_check_return_code(return_code);
   84a70:	e13fff03 	ldbu	r4,-4(fp)
   84a74:	00844440 	call	84444 <alt_ucosii_check_return_code>
	printf("Starting uCOS...\n");
   84a78:	010002b4 	movhi	r4,10
   84a7c:	21010804 	addi	r4,r4,1056
   84a80:	00889700 	call	88970 <puts>

	OSStart();
   84a84:	00941800 	call	94180 <OSStart>
	return 0;
   84a88:	0005883a 	mov	r2,zero
}
   84a8c:	e037883a 	mov	sp,fp
   84a90:	dfc00117 	ldw	ra,4(sp)
   84a94:	df000017 	ldw	fp,0(sp)
   84a98:	dec00204 	addi	sp,sp,8
   84a9c:	f800283a 	ret

00084aa0 <init_OS_data_structs>:

/* This function simply creates a message queue and a semaphore
 */

int init_OS_data_structs(void)
{
   84aa0:	defffb04 	addi	sp,sp,-20
   84aa4:	dfc00415 	stw	ra,16(sp)
   84aa8:	df000315 	stw	fp,12(sp)
   84aac:	dc000215 	stw	r16,8(sp)
   84ab0:	df000204 	addi	fp,sp,8
	int i;
	INT8U return_code = OS_NO_ERR;
   84ab4:	e03fff05 	stb	zero,-4(fp)

	printf("Init data structs...\n");
   84ab8:	010002b4 	movhi	r4,10
   84abc:	21010d04 	addi	r4,r4,1076
   84ac0:	00889700 	call	88970 <puts>

	for (i = 0; i < NUM_PB_BUTTON; i++)
   84ac4:	e03ffe15 	stw	zero,-8(fp)
   84ac8:	00000d06 	br	84b00 <init_OS_data_structs+0x60>
		PBSemaphore[i] = OSSemCreate(0);
   84acc:	e43ffe17 	ldw	r16,-8(fp)
   84ad0:	0009883a 	mov	r4,zero
   84ad4:	009ad3c0 	call	9ad3c <OSSemCreate>
   84ad8:	1009883a 	mov	r4,r2
   84adc:	00c002f4 	movhi	r3,11
   84ae0:	18e10704 	addi	r3,r3,-31716
   84ae4:	8405883a 	add	r2,r16,r16
   84ae8:	1085883a 	add	r2,r2,r2
   84aec:	10c5883a 	add	r2,r2,r3
   84af0:	11000015 	stw	r4,0(r2)
	int i;
	INT8U return_code = OS_NO_ERR;

	printf("Init data structs...\n");

	for (i = 0; i < NUM_PB_BUTTON; i++)
   84af4:	e0bffe17 	ldw	r2,-8(fp)
   84af8:	10800044 	addi	r2,r2,1
   84afc:	e0bffe15 	stw	r2,-8(fp)
   84b00:	e0bffe17 	ldw	r2,-8(fp)
   84b04:	10800110 	cmplti	r2,r2,4
   84b08:	103ff01e 	bne	r2,zero,84acc <init_OS_data_structs+0x2c>
		PBSemaphore[i] = OSSemCreate(0);
	YMailbox = OSMboxCreate((void *)0);
   84b0c:	0009883a 	mov	r4,zero
   84b10:	00971ac0 	call	971ac <OSMboxCreate>
   84b14:	1007883a 	mov	r3,r2
   84b18:	008002b4 	movhi	r2,10
   84b1c:	1090e504 	addi	r2,r2,17300
   84b20:	10c00015 	stw	r3,0(r2)
	RMailbox = OSMboxCreate((void *)0);
   84b24:	0009883a 	mov	r4,zero
   84b28:	00971ac0 	call	971ac <OSMboxCreate>
   84b2c:	1007883a 	mov	r3,r2
   84b30:	008002b4 	movhi	r2,10
   84b34:	1090de04 	addi	r2,r2,17272
   84b38:	10c00015 	stw	r3,0(r2)
	GMailbox = OSMboxCreate((void *)0);
   84b3c:	0009883a 	mov	r4,zero
   84b40:	00971ac0 	call	971ac <OSMboxCreate>
   84b44:	1007883a 	mov	r3,r2
   84b48:	008002b4 	movhi	r2,10
   84b4c:	1090d804 	addi	r2,r2,17248
   84b50:	10c00015 	stw	r3,0(r2)
	BMailbox = OSMboxCreate((void *)0);
   84b54:	0009883a 	mov	r4,zero
   84b58:	00971ac0 	call	971ac <OSMboxCreate>
   84b5c:	1007883a 	mov	r3,r2
   84b60:	008002b4 	movhi	r2,10
   84b64:	1090e004 	addi	r2,r2,17280
   84b68:	10c00015 	stw	r3,0(r2)
	YImageWidthMailbox = OSMboxCreate((void *)0);
   84b6c:	0009883a 	mov	r4,zero
   84b70:	00971ac0 	call	971ac <OSMboxCreate>
   84b74:	1007883a 	mov	r3,r2
   84b78:	008002b4 	movhi	r2,10
   84b7c:	1090db04 	addi	r2,r2,17260
   84b80:	10c00015 	stw	r3,0(r2)
	YImageHeightMailbox = OSMboxCreate((void *)0);
   84b84:	0009883a 	mov	r4,zero
   84b88:	00971ac0 	call	971ac <OSMboxCreate>
   84b8c:	1007883a 	mov	r3,r2
   84b90:	008002b4 	movhi	r2,10
   84b94:	1090dc04 	addi	r2,r2,17264
   84b98:	10c00015 	stw	r3,0(r2)
	ReadImageWidthMailbox = OSMboxCreate((void *)0);
   84b9c:	0009883a 	mov	r4,zero
   84ba0:	00971ac0 	call	971ac <OSMboxCreate>
   84ba4:	1007883a 	mov	r3,r2
   84ba8:	008002b4 	movhi	r2,10
   84bac:	1090e604 	addi	r2,r2,17304
   84bb0:	10c00015 	stw	r3,0(r2)
	ReadImageHeightMailbox = OSMboxCreate((void *)0);
   84bb4:	0009883a 	mov	r4,zero
   84bb8:	00971ac0 	call	971ac <OSMboxCreate>
   84bbc:	1007883a 	mov	r3,r2
   84bc0:	008002b4 	movhi	r2,10
   84bc4:	1090e104 	addi	r2,r2,17284
   84bc8:	10c00015 	stw	r3,0(r2)
	WriteImageWidthMailbox = OSMboxCreate((void *)0);
   84bcc:	0009883a 	mov	r4,zero
   84bd0:	00971ac0 	call	971ac <OSMboxCreate>
   84bd4:	1007883a 	mov	r3,r2
   84bd8:	008002b4 	movhi	r2,10
   84bdc:	1090e304 	addi	r2,r2,17292
   84be0:	10c00015 	stw	r3,0(r2)
	WriteImageHeightMailbox = OSMboxCreate((void *)0);
   84be4:	0009883a 	mov	r4,zero
   84be8:	00971ac0 	call	971ac <OSMboxCreate>
   84bec:	1007883a 	mov	r3,r2
   84bf0:	008002b4 	movhi	r2,10
   84bf4:	1090dd04 	addi	r2,r2,17268
   84bf8:	10c00015 	stw	r3,0(r2)

	MemoryPartition = OSMemCreate(&line_buf[0][0], 7, LINE_LEN, &return_code);
   84bfc:	010002b4 	movhi	r4,10
   84c00:	21137104 	addi	r4,r4,19908
   84c04:	e1ffff04 	addi	r7,fp,-4
   84c08:	014001c4 	movi	r5,7
   84c0c:	0180a004 	movi	r6,640
   84c10:	0097d940 	call	97d94 <OSMemCreate>
   84c14:	1007883a 	mov	r3,r2
   84c18:	008002b4 	movhi	r2,10
   84c1c:	1090d604 	addi	r2,r2,17240
   84c20:	10c00015 	stw	r3,0(r2)
	
	SDReadQueue = OSQCreate(&ReadQueue[0], QUEUE_LEN);
   84c24:	010002b4 	movhi	r4,10
   84c28:	21127104 	addi	r4,r4,18884
   84c2c:	01402004 	movi	r5,128
   84c30:	0099a9c0 	call	99a9c <OSQCreate>
   84c34:	1007883a 	mov	r3,r2
   84c38:	008002b4 	movhi	r2,10
   84c3c:	1090e204 	addi	r2,r2,17288
   84c40:	10c00015 	stw	r3,0(r2)
	//SDWriteQueue = OSQCreate(&WriteQueue[0], QUEUE_LEN);
	SDWriteQueueR = OSQCreate(&WriteQueueR[0], QUEUE_LEN);
   84c44:	010002b4 	movhi	r4,10
   84c48:	2112f104 	addi	r4,r4,19396
   84c4c:	01402004 	movi	r5,128
   84c50:	0099a9c0 	call	99a9c <OSQCreate>
   84c54:	1007883a 	mov	r3,r2
   84c58:	008002b4 	movhi	r2,10
   84c5c:	1090df04 	addi	r2,r2,17276
   84c60:	10c00015 	stw	r3,0(r2)
	SDWriteQueueG = OSQCreate(&WriteQueueG[0], QUEUE_LEN);
   84c64:	010002b4 	movhi	r4,10
   84c68:	2117d104 	addi	r4,r4,24388
   84c6c:	01402004 	movi	r5,128
   84c70:	0099a9c0 	call	99a9c <OSQCreate>
   84c74:	1007883a 	mov	r3,r2
   84c78:	008002b4 	movhi	r2,10
   84c7c:	1090e404 	addi	r2,r2,17296
   84c80:	10c00015 	stw	r3,0(r2)
	SDWriteQueueB = OSQCreate(&WriteQueueB[0], QUEUE_LEN);
   84c84:	010002b4 	movhi	r4,10
   84c88:	21185104 	addi	r4,r4,24900
   84c8c:	01402004 	movi	r5,128
   84c90:	0099a9c0 	call	99a9c <OSQCreate>
   84c94:	1007883a 	mov	r3,r2
   84c98:	008002b4 	movhi	r2,10
   84c9c:	1090d704 	addi	r2,r2,17244
   84ca0:	10c00015 	stw	r3,0(r2)
	
	SDCardFlag = OSFlagCreate(0, &return_code);
   84ca4:	e17fff04 	addi	r5,fp,-4
   84ca8:	0009883a 	mov	r4,zero
   84cac:	0095b000 	call	95b00 <OSFlagCreate>
   84cb0:	1007883a 	mov	r3,r2
   84cb4:	008002b4 	movhi	r2,10
   84cb8:	1090da04 	addi	r2,r2,17256
   84cbc:	10c00015 	stw	r3,0(r2)
	
	SDMutex = OSMutexCreate(SD_MUTEX_PRIORITY, &return_code);
   84cc0:	e17fff04 	addi	r5,fp,-4
   84cc4:	01000284 	movi	r4,10
   84cc8:	00987780 	call	98778 <OSMutexCreate>
   84ccc:	1007883a 	mov	r3,r2
   84cd0:	008002b4 	movhi	r2,10
   84cd4:	1090d904 	addi	r2,r2,17252
   84cd8:	10c00015 	stw	r3,0(r2)

	return 0;
   84cdc:	0005883a 	mov	r2,zero
}
   84ce0:	e037883a 	mov	sp,fp
   84ce4:	dfc00217 	ldw	ra,8(sp)
   84ce8:	df000117 	ldw	fp,4(sp)
   84cec:	dc000017 	ldw	r16,0(sp)
   84cf0:	dec00304 	addi	sp,sp,12
   84cf4:	f800283a 	ret

00084cf8 <init_create_tasks>:

// This function creates the first task in uCOS
int init_create_tasks(void) {
   84cf8:	defff804 	addi	sp,sp,-32
   84cfc:	dfc00715 	stw	ra,28(sp)
   84d00:	df000615 	stw	fp,24(sp)
   84d04:	df000604 	addi	fp,sp,24
	INT8U return_code = OS_NO_ERR;
   84d08:	e03fff05 	stb	zero,-4(fp)

	printf("Creating task launcher...\n");
   84d0c:	010002b4 	movhi	r4,10
   84d10:	21011304 	addi	r4,r4,1100
   84d14:	00889700 	call	88970 <puts>
	return_code = OSTaskCreateExt(task_launcher,
   84d18:	018002f4 	movhi	r6,11
   84d1c:	31915c04 	addi	r6,r6,17776
   84d20:	00800484 	movi	r2,18
   84d24:	d8800015 	stw	r2,0(sp)
   84d28:	008002f4 	movhi	r2,11
   84d2c:	10895c04 	addi	r2,r2,9584
   84d30:	d8800115 	stw	r2,4(sp)
   84d34:	00820004 	movi	r2,2048
   84d38:	d8800215 	stw	r2,8(sp)
   84d3c:	d8000315 	stw	zero,12(sp)
   84d40:	d8000415 	stw	zero,16(sp)
   84d44:	01000274 	movhi	r4,9
   84d48:	2120c804 	addi	r4,r4,-31968
   84d4c:	000b883a 	mov	r5,zero
   84d50:	01c00484 	movi	r7,18
   84d54:	009bf8c0 	call	9bf8c <OSTaskCreateExt>
   84d58:	e0bfff05 	stb	r2,-4(fp)
					TASK_LAUNCHER_PRIORITY,
					task_launcher_stk,
					TASK_STACKSIZE,
					NULL,
					0);
	alt_ucosii_check_return_code(return_code);
   84d5c:	e13fff03 	ldbu	r4,-4(fp)
   84d60:	00844440 	call	84444 <alt_ucosii_check_return_code>

	return 0;
   84d64:	0005883a 	mov	r2,zero
}
   84d68:	e037883a 	mov	sp,fp
   84d6c:	dfc00117 	ldw	ra,4(sp)
   84d70:	df000017 	ldw	fp,0(sp)
   84d74:	dec00204 	addi	sp,sp,8
   84d78:	f800283a 	ret

00084d7c <SD_presence_detect_task>:
	int ver_resolution;
	int num_color_in_palette;
	int important_color;
} bmp_header_struct;

void SD_presence_detect_task(void* pdata) {
   84d7c:	defff704 	addi	sp,sp,-36
   84d80:	dfc00815 	stw	ra,32(sp)
   84d84:	df000715 	stw	fp,28(sp)
   84d88:	df000704 	addi	fp,sp,28
   84d8c:	e13ffe15 	stw	r4,-8(fp)
	INT8U return_code = OS_NO_ERR;
   84d90:	e03ffa85 	stb	zero,-22(fp)
	OS_FLAGS SD_flag_value;
	char filename[13];
	int status;
	printf("We are in SD_presence_detect_task()!\n");
   84d94:	010002b4 	movhi	r4,10
   84d98:	21011a04 	addi	r4,r4,1128
   84d9c:	00889700 	call	88970 <puts>
	while (1) {
		SD_flag_value = OSFlagQuery(SDCardFlag, &return_code);
   84da0:	d1270417 	ldw	r4,-25584(gp)
   84da4:	e17ffa84 	addi	r5,fp,-22
   84da8:	0096bd00 	call	96bd0 <OSFlagQuery>
   84dac:	e0bffa0d 	sth	r2,-24(fp)
		if ((SD_flag_value & SD_PRESENCE_FLAG) == 0) {
   84db0:	e0bffa0b 	ldhu	r2,-24(fp)
   84db4:	1080004c 	andi	r2,r2,1
   84db8:	1004c03a 	cmpne	r2,r2,zero
   84dbc:	10003c1e 	bne	r2,zero,84eb0 <SD_presence_detect_task+0x134>
			if (sd_card_is_Present()) {
   84dc0:	0082ef80 	call	82ef8 <sd_card_is_Present>
   84dc4:	1005003a 	cmpeq	r2,r2,zero
   84dc8:	1000471e 	bne	r2,zero,84ee8 <SD_presence_detect_task+0x16c>
				printf("SD card is inserted\n");
   84dcc:	010002b4 	movhi	r4,10
   84dd0:	21012404 	addi	r4,r4,1168
   84dd4:	00889700 	call	88970 <puts>
				OSFlagPost(SDCardFlag, SD_PRESENCE_FLAG, OS_FLAG_SET, &return_code);
   84dd8:	d1270417 	ldw	r4,-25584(gp)
   84ddc:	e1fffa84 	addi	r7,fp,-22
   84de0:	01400044 	movi	r5,1
   84de4:	01800044 	movi	r6,1
   84de8:	00968280 	call	96828 <OSFlagPost>
				alt_ucosii_check_return_code(return_code);
   84dec:	e0bffa83 	ldbu	r2,-22(fp)
   84df0:	11003fcc 	andi	r4,r2,255
   84df4:	00844440 	call	84444 <alt_ucosii_check_return_code>
			
				if (sd_card_is_FAT16()) {
   84df8:	0082f440 	call	82f44 <sd_card_is_FAT16>
   84dfc:	1005003a 	cmpeq	r2,r2,zero
   84e00:	1000391e 	bne	r2,zero,84ee8 <SD_presence_detect_task+0x16c>
					printf("Valid filesystem is detected on SD card\n");
   84e04:	010002b4 	movhi	r4,10
   84e08:	21012904 	addi	r4,r4,1188
   84e0c:	00889700 	call	88970 <puts>
					OSFlagPost(SDCardFlag, SD_FILESYSTEM_FLAG, OS_FLAG_SET, &return_code);
   84e10:	d1270417 	ldw	r4,-25584(gp)
   84e14:	e1fffa84 	addi	r7,fp,-22
   84e18:	01400084 	movi	r5,2
   84e1c:	01800044 	movi	r6,1
   84e20:	00968280 	call	96828 <OSFlagPost>
					alt_ucosii_check_return_code(return_code);	
   84e24:	e0bffa83 	ldbu	r2,-22(fp)
   84e28:	11003fcc 	andi	r4,r2,255
   84e2c:	00844440 	call	84444 <alt_ucosii_check_return_code>
					
					status = sd_card_find_first(".", filename);
   84e30:	e17ffac4 	addi	r5,fp,-21
   84e34:	010002b4 	movhi	r4,10
   84e38:	21013304 	addi	r4,r4,1228
   84e3c:	0082fd00 	call	82fd0 <sd_card_find_first>
   84e40:	10bfffcc 	andi	r2,r2,65535
   84e44:	10a0001c 	xori	r2,r2,32768
   84e48:	10a00004 	addi	r2,r2,-32768
   84e4c:	e0bff915 	stw	r2,-28(fp)
					switch (status) {
   84e50:	e0bff917 	ldw	r2,-28(fp)
   84e54:	e0bfff15 	stw	r2,-4(fp)
   84e58:	e0ffff17 	ldw	r3,-4(fp)
   84e5c:	18800060 	cmpeqi	r2,r3,1
   84e60:	10000b1e 	bne	r2,zero,84e90 <SD_presence_detect_task+0x114>
   84e64:	e0ffff17 	ldw	r3,-4(fp)
   84e68:	188000a0 	cmpeqi	r2,r3,2
   84e6c:	10000c1e 	bne	r2,zero,84ea0 <SD_presence_detect_task+0x124>
   84e70:	e0ffff17 	ldw	r3,-4(fp)
   84e74:	1805003a 	cmpeq	r2,r3,zero
   84e78:	1000011e 	bne	r2,zero,84e80 <SD_presence_detect_task+0x104>
   84e7c:	00001a06 	br	84ee8 <SD_presence_detect_task+0x16c>
	                    case 0: printf("Success\n"); break;
   84e80:	010002b4 	movhi	r4,10
   84e84:	21013404 	addi	r4,r4,1232
   84e88:	00889700 	call	88970 <puts>
   84e8c:	00001606 	br	84ee8 <SD_presence_detect_task+0x16c>
	                    case 1: printf("Invalid directory\n"); break;
   84e90:	010002b4 	movhi	r4,10
   84e94:	21013604 	addi	r4,r4,1240
   84e98:	00889700 	call	88970 <puts>
   84e9c:	00001206 	br	84ee8 <SD_presence_detect_task+0x16c>
	                    case 2: printf("No card or incorrect FS\n"); break;
   84ea0:	010002b4 	movhi	r4,10
   84ea4:	21013b04 	addi	r4,r4,1260
   84ea8:	00889700 	call	88970 <puts>
   84eac:	00000e06 	br	84ee8 <SD_presence_detect_task+0x16c>
	                }
				}
			}
		} else {
			if (!sd_card_is_Present()) {
   84eb0:	0082ef80 	call	82ef8 <sd_card_is_Present>
   84eb4:	1004c03a 	cmpne	r2,r2,zero
   84eb8:	10000b1e 	bne	r2,zero,84ee8 <SD_presence_detect_task+0x16c>
				printf("SD card is removed\n");
   84ebc:	010002b4 	movhi	r4,10
   84ec0:	21014104 	addi	r4,r4,1284
   84ec4:	00889700 	call	88970 <puts>
				
				// clear all the flags
				OSFlagPost(SDCardFlag, 0xFF, OS_FLAG_CLR, &return_code);
   84ec8:	d1270417 	ldw	r4,-25584(gp)
   84ecc:	e1fffa84 	addi	r7,fp,-22
   84ed0:	01403fc4 	movi	r5,255
   84ed4:	000d883a 	mov	r6,zero
   84ed8:	00968280 	call	96828 <OSFlagPost>
				alt_ucosii_check_return_code(return_code);
   84edc:	e0bffa83 	ldbu	r2,-22(fp)
   84ee0:	11003fcc 	andi	r4,r2,255
   84ee4:	00844440 	call	84444 <alt_ucosii_check_return_code>
			}
		}

		// Check if SD card is present every 500ms
		OSTimeDlyHMSM(0, 0, 0, 500);
   84ee8:	0009883a 	mov	r4,zero
   84eec:	000b883a 	mov	r5,zero
   84ef0:	000d883a 	mov	r6,zero
   84ef4:	01c07d04 	movi	r7,500
   84ef8:	009d3d00 	call	9d3d0 <OSTimeDlyHMSM>
	}
   84efc:	003fa806 	br	84da0 <SD_presence_detect_task+0x24>

00084f00 <SD_read_task>:
}

void SD_read_task(void *pdata) {
   84f00:	deffbd04 	addi	sp,sp,-268
   84f04:	dfc04215 	stw	ra,264(sp)
   84f08:	df004115 	stw	fp,260(sp)
   84f0c:	df004104 	addi	fp,sp,260
   84f10:	e13fff15 	stw	r4,-4(fp)
	INT8U return_code = OS_NO_ERR;
   84f14:	e03fca85 	stb	zero,-214(fp)
	short int file_handle, file_handle1, file_handle2, file_handle3;
	unsigned short int data, data1, data2, data3;
	unsigned short int finalImageData;
	int file_opened = 0;
   84f18:	e03fc515 	stw	zero,-236(fp)
	int image_size;
	int colCounter = 0;
   84f1c:	e03fc315 	stw	zero,-244(fp)
	int rowCounter = 0;
   84f20:	e03fc215 	stw	zero,-248(fp)
	int pixelCounter = 0;
   84f24:	e03fc115 	stw	zero,-252(fp)
	bmp_header_struct bmp_header, bmp_header1, bmp_header2, bmp_header3;
	printf("We are in SD_read_task()!\n");
   84f28:	010002b4 	movhi	r4,10
   84f2c:	21014604 	addi	r4,r4,1304
   84f30:	00889700 	call	88970 <puts>
	while (1) {
		OSFlagPend(SDCardFlag, SD_PRESENCE_FLAG | SD_FILESYSTEM_FLAG | SD_READ_NEED_FILL, OS_FLAG_WAIT_SET_ALL, 0, &return_code);
   84f34:	d1270417 	ldw	r4,-25584(gp)
   84f38:	e0bfca84 	addi	r2,fp,-214
   84f3c:	d8800015 	stw	r2,0(sp)
   84f40:	014001c4 	movi	r5,7
   84f44:	01800084 	movi	r6,2
   84f48:	000f883a 	mov	r7,zero
   84f4c:	009617c0 	call	9617c <OSFlagPend>
		alt_ucosii_check_return_code(return_code);
   84f50:	e0bfca83 	ldbu	r2,-214(fp)
   84f54:	11003fcc 	andi	r4,r2,255
   84f58:	00844440 	call	84444 <alt_ucosii_check_return_code>
		
		// printf("R: waiting for SDMutex\n");
        // OSTimeDlyHMSM(0, 0, 0, 100);
		OSMutexPend(SDMutex, 0, &return_code);
   84f5c:	d1270317 	ldw	r4,-25588(gp)
   84f60:	e1bfca84 	addi	r6,fp,-214
   84f64:	000b883a 	mov	r5,zero
   84f68:	0098ce40 	call	98ce4 <OSMutexPend>
		alt_ucosii_check_return_code(return_code);
   84f6c:	e0bfca83 	ldbu	r2,-214(fp)
   84f70:	11003fcc 	andi	r4,r2,255
   84f74:	00844440 	call	84444 <alt_ucosii_check_return_code>
		
		if (file_opened == 0) {
   84f78:	e0bfc517 	ldw	r2,-236(fp)
   84f7c:	1004c03a 	cmpne	r2,r2,zero
   84f80:	1006691e 	bne	r2,zero,86928 <SD_read_task+0x1a28>
			//The order here matters since we are reading positive height images, we we bottom ones first, then the top ones second
				file_handle = sd_card_fopen("INPIC2.BMP", false);
   84f84:	010002b4 	movhi	r4,10
   84f88:	21014d04 	addi	r4,r4,1332
   84f8c:	000b883a 	mov	r5,zero
   84f90:	008344c0 	call	8344c <sd_card_fopen>
   84f94:	e0bfca0d 	sth	r2,-216(fp)
				file_handle1 = sd_card_fopen("INPIC3.BMP", false);
   84f98:	010002b4 	movhi	r4,10
   84f9c:	21015004 	addi	r4,r4,1344
   84fa0:	000b883a 	mov	r5,zero
   84fa4:	008344c0 	call	8344c <sd_card_fopen>
   84fa8:	e0bfc98d 	sth	r2,-218(fp)
				file_handle2 = sd_card_fopen("INPIC0.BMP", false);
   84fac:	010002b4 	movhi	r4,10
   84fb0:	21015304 	addi	r4,r4,1356
   84fb4:	000b883a 	mov	r5,zero
   84fb8:	008344c0 	call	8344c <sd_card_fopen>
   84fbc:	e0bfc90d 	sth	r2,-220(fp)
				file_handle3 = sd_card_fopen("INPIC1.BMP", false);
   84fc0:	010002b4 	movhi	r4,10
   84fc4:	21015604 	addi	r4,r4,1368
   84fc8:	000b883a 	mov	r5,zero
   84fcc:	008344c0 	call	8344c <sd_card_fopen>
   84fd0:	e0bfc88d 	sth	r2,-222(fp)

				if (file_handle < 0) {
   84fd4:	e0bfca0f 	ldh	r2,-216(fp)
   84fd8:	1004403a 	cmpge	r2,r2,zero
   84fdc:	1000091e 	bne	r2,zero,85004 <SD_read_task+0x104>
					printf("Error opening INPIC0.BMP\n");
   84fe0:	010002b4 	movhi	r4,10
   84fe4:	21015904 	addi	r4,r4,1380
   84fe8:	00889700 	call	88970 <puts>
					OSTimeDlyHMSM(0, 0, 1, 0);
   84fec:	0009883a 	mov	r4,zero
   84ff0:	000b883a 	mov	r5,zero
   84ff4:	01800044 	movi	r6,1
   84ff8:	000f883a 	mov	r7,zero
   84ffc:	009d3d00 	call	9d3d0 <OSTimeDlyHMSM>
					break;
   85000:	0006b706 	br	86ae0 <SD_read_task+0x1be0>
				}
				if (file_handle1 < 0) {
   85004:	e0bfc98f 	ldh	r2,-218(fp)
   85008:	1004403a 	cmpge	r2,r2,zero
   8500c:	1000091e 	bne	r2,zero,85034 <SD_read_task+0x134>
					printf("Error opening INPIC1.BMP\n");
   85010:	010002b4 	movhi	r4,10
   85014:	21016004 	addi	r4,r4,1408
   85018:	00889700 	call	88970 <puts>
					OSTimeDlyHMSM(0, 0, 1, 0);
   8501c:	0009883a 	mov	r4,zero
   85020:	000b883a 	mov	r5,zero
   85024:	01800044 	movi	r6,1
   85028:	000f883a 	mov	r7,zero
   8502c:	009d3d00 	call	9d3d0 <OSTimeDlyHMSM>
					break;
   85030:	0006ab06 	br	86ae0 <SD_read_task+0x1be0>
				}
				if (file_handle2 < 0) {
   85034:	e0bfc90f 	ldh	r2,-220(fp)
   85038:	1004403a 	cmpge	r2,r2,zero
   8503c:	1000091e 	bne	r2,zero,85064 <SD_read_task+0x164>
					printf("Error opening INPIC2.BMP\n");
   85040:	010002b4 	movhi	r4,10
   85044:	21016704 	addi	r4,r4,1436
   85048:	00889700 	call	88970 <puts>
					OSTimeDlyHMSM(0, 0, 1, 0);
   8504c:	0009883a 	mov	r4,zero
   85050:	000b883a 	mov	r5,zero
   85054:	01800044 	movi	r6,1
   85058:	000f883a 	mov	r7,zero
   8505c:	009d3d00 	call	9d3d0 <OSTimeDlyHMSM>
					break;
   85060:	00069f06 	br	86ae0 <SD_read_task+0x1be0>
				}
				if (file_handle3 < 0) {
   85064:	e0bfc88f 	ldh	r2,-222(fp)
   85068:	1004403a 	cmpge	r2,r2,zero
   8506c:	1000091e 	bne	r2,zero,85094 <SD_read_task+0x194>
					printf("Error opening INPIC3.BMP\n");
   85070:	010002b4 	movhi	r4,10
   85074:	21016e04 	addi	r4,r4,1464
   85078:	00889700 	call	88970 <puts>
					OSTimeDlyHMSM(0, 0, 1, 0);
   8507c:	0009883a 	mov	r4,zero
   85080:	000b883a 	mov	r5,zero
   85084:	01800044 	movi	r6,1
   85088:	000f883a 	mov	r7,zero
   8508c:	009d3d00 	call	9d3d0 <OSTimeDlyHMSM>
					break;
   85090:	00069306 	br	86ae0 <SD_read_task+0x1be0>
				}
			printf("Image opened: INPIC0.BMP\n");
   85094:	010002b4 	movhi	r4,10
   85098:	21017504 	addi	r4,r4,1492
   8509c:	00889700 	call	88970 <puts>
			// BMP header
			data = sd_card_read(file_handle);
   850a0:	e13fca0f 	ldh	r4,-216(fp)
   850a4:	00839100 	call	83910 <sd_card_read>
   850a8:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.magic_number = data << 8;
   850ac:	e0bfc80b 	ldhu	r2,-224(fp)
   850b0:	1004923a 	slli	r2,r2,8
   850b4:	e0bfcb0d 	sth	r2,-212(fp)
			data = sd_card_read(file_handle);
   850b8:	e13fca0f 	ldh	r4,-216(fp)
   850bc:	00839100 	call	83910 <sd_card_read>
   850c0:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.magic_number = bmp_header.magic_number | data;
   850c4:	e0ffcb0b 	ldhu	r3,-212(fp)
   850c8:	e0bfc80b 	ldhu	r2,-224(fp)
   850cc:	1884b03a 	or	r2,r3,r2
   850d0:	e0bfcb0d 	sth	r2,-212(fp)
			
			data = sd_card_read(file_handle);
   850d4:	e13fca0f 	ldh	r4,-216(fp)
   850d8:	00839100 	call	83910 <sd_card_read>
   850dc:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.file_size = data;
   850e0:	e0bfc80b 	ldhu	r2,-224(fp)
   850e4:	e0bfcc15 	stw	r2,-208(fp)
			data = sd_card_read(file_handle);
   850e8:	e13fca0f 	ldh	r4,-216(fp)
   850ec:	00839100 	call	83910 <sd_card_read>
   850f0:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.file_size = bmp_header.file_size | data << 8;
   850f4:	e0ffcc17 	ldw	r3,-208(fp)
   850f8:	e0bfc80b 	ldhu	r2,-224(fp)
   850fc:	1004923a 	slli	r2,r2,8
   85100:	1884b03a 	or	r2,r3,r2
   85104:	e0bfcc15 	stw	r2,-208(fp)
			data = sd_card_read(file_handle);
   85108:	e13fca0f 	ldh	r4,-216(fp)
   8510c:	00839100 	call	83910 <sd_card_read>
   85110:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.file_size = bmp_header.file_size | data << 16;
   85114:	e0ffcc17 	ldw	r3,-208(fp)
   85118:	e0bfc80b 	ldhu	r2,-224(fp)
   8511c:	1004943a 	slli	r2,r2,16
   85120:	1884b03a 	or	r2,r3,r2
   85124:	e0bfcc15 	stw	r2,-208(fp)
			data = sd_card_read(file_handle);
   85128:	e13fca0f 	ldh	r4,-216(fp)
   8512c:	00839100 	call	83910 <sd_card_read>
   85130:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.file_size = bmp_header.file_size | data << 24;
   85134:	e0ffcc17 	ldw	r3,-208(fp)
   85138:	e0bfc80b 	ldhu	r2,-224(fp)
   8513c:	1004963a 	slli	r2,r2,24
   85140:	1884b03a 	or	r2,r3,r2
   85144:	e0bfcc15 	stw	r2,-208(fp)
			
			// unused
			data = sd_card_read(file_handle);
   85148:	e13fca0f 	ldh	r4,-216(fp)
   8514c:	00839100 	call	83910 <sd_card_read>
   85150:	e0bfc80d 	sth	r2,-224(fp)
			data = sd_card_read(file_handle);
   85154:	e13fca0f 	ldh	r4,-216(fp)
   85158:	00839100 	call	83910 <sd_card_read>
   8515c:	e0bfc80d 	sth	r2,-224(fp)
			data = sd_card_read(file_handle);
   85160:	e13fca0f 	ldh	r4,-216(fp)
   85164:	00839100 	call	83910 <sd_card_read>
   85168:	e0bfc80d 	sth	r2,-224(fp)
			data = sd_card_read(file_handle);
   8516c:	e13fca0f 	ldh	r4,-216(fp)
   85170:	00839100 	call	83910 <sd_card_read>
   85174:	e0bfc80d 	sth	r2,-224(fp)

			data = sd_card_read(file_handle);
   85178:	e13fca0f 	ldh	r4,-216(fp)
   8517c:	00839100 	call	83910 <sd_card_read>
   85180:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.data_offset = data;
   85184:	e0bfc80b 	ldhu	r2,-224(fp)
   85188:	e0bfcd15 	stw	r2,-204(fp)
			data = sd_card_read(file_handle);
   8518c:	e13fca0f 	ldh	r4,-216(fp)
   85190:	00839100 	call	83910 <sd_card_read>
   85194:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.data_offset = bmp_header.data_offset | data << 8;
   85198:	e0ffcd17 	ldw	r3,-204(fp)
   8519c:	e0bfc80b 	ldhu	r2,-224(fp)
   851a0:	1004923a 	slli	r2,r2,8
   851a4:	1884b03a 	or	r2,r3,r2
   851a8:	e0bfcd15 	stw	r2,-204(fp)
			data = sd_card_read(file_handle);
   851ac:	e13fca0f 	ldh	r4,-216(fp)
   851b0:	00839100 	call	83910 <sd_card_read>
   851b4:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.data_offset = bmp_header.data_offset | data << 16;
   851b8:	e0ffcd17 	ldw	r3,-204(fp)
   851bc:	e0bfc80b 	ldhu	r2,-224(fp)
   851c0:	1004943a 	slli	r2,r2,16
   851c4:	1884b03a 	or	r2,r3,r2
   851c8:	e0bfcd15 	stw	r2,-204(fp)
			data = sd_card_read(file_handle);
   851cc:	e13fca0f 	ldh	r4,-216(fp)
   851d0:	00839100 	call	83910 <sd_card_read>
   851d4:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.data_offset = bmp_header.data_offset | data << 24;
   851d8:	e0ffcd17 	ldw	r3,-204(fp)
   851dc:	e0bfc80b 	ldhu	r2,-224(fp)
   851e0:	1004963a 	slli	r2,r2,24
   851e4:	1884b03a 	or	r2,r3,r2
   851e8:	e0bfcd15 	stw	r2,-204(fp)

			data = sd_card_read(file_handle);
   851ec:	e13fca0f 	ldh	r4,-216(fp)
   851f0:	00839100 	call	83910 <sd_card_read>
   851f4:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.header_size = data;
   851f8:	e0bfc80b 	ldhu	r2,-224(fp)
   851fc:	e0bfce15 	stw	r2,-200(fp)
			data = sd_card_read(file_handle);
   85200:	e13fca0f 	ldh	r4,-216(fp)
   85204:	00839100 	call	83910 <sd_card_read>
   85208:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.header_size = bmp_header.header_size | data << 8;
   8520c:	e0ffce17 	ldw	r3,-200(fp)
   85210:	e0bfc80b 	ldhu	r2,-224(fp)
   85214:	1004923a 	slli	r2,r2,8
   85218:	1884b03a 	or	r2,r3,r2
   8521c:	e0bfce15 	stw	r2,-200(fp)
			data = sd_card_read(file_handle);
   85220:	e13fca0f 	ldh	r4,-216(fp)
   85224:	00839100 	call	83910 <sd_card_read>
   85228:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.header_size = bmp_header.header_size | data << 16;
   8522c:	e0ffce17 	ldw	r3,-200(fp)
   85230:	e0bfc80b 	ldhu	r2,-224(fp)
   85234:	1004943a 	slli	r2,r2,16
   85238:	1884b03a 	or	r2,r3,r2
   8523c:	e0bfce15 	stw	r2,-200(fp)
			data = sd_card_read(file_handle);
   85240:	e13fca0f 	ldh	r4,-216(fp)
   85244:	00839100 	call	83910 <sd_card_read>
   85248:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.header_size = bmp_header.header_size | data << 24;
   8524c:	e0ffce17 	ldw	r3,-200(fp)
   85250:	e0bfc80b 	ldhu	r2,-224(fp)
   85254:	1004963a 	slli	r2,r2,24
   85258:	1884b03a 	or	r2,r3,r2
   8525c:	e0bfce15 	stw	r2,-200(fp)

			data = sd_card_read(file_handle);
   85260:	e13fca0f 	ldh	r4,-216(fp)
   85264:	00839100 	call	83910 <sd_card_read>
   85268:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.width = data;
   8526c:	e0bfc80b 	ldhu	r2,-224(fp)
   85270:	e0bfcf15 	stw	r2,-196(fp)
			data = sd_card_read(file_handle);
   85274:	e13fca0f 	ldh	r4,-216(fp)
   85278:	00839100 	call	83910 <sd_card_read>
   8527c:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.width = bmp_header.width | data << 8;
   85280:	e0ffcf17 	ldw	r3,-196(fp)
   85284:	e0bfc80b 	ldhu	r2,-224(fp)
   85288:	1004923a 	slli	r2,r2,8
   8528c:	1884b03a 	or	r2,r3,r2
   85290:	e0bfcf15 	stw	r2,-196(fp)
			data = sd_card_read(file_handle);
   85294:	e13fca0f 	ldh	r4,-216(fp)
   85298:	00839100 	call	83910 <sd_card_read>
   8529c:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.width = bmp_header.width | data << 16;
   852a0:	e0ffcf17 	ldw	r3,-196(fp)
   852a4:	e0bfc80b 	ldhu	r2,-224(fp)
   852a8:	1004943a 	slli	r2,r2,16
   852ac:	1884b03a 	or	r2,r3,r2
   852b0:	e0bfcf15 	stw	r2,-196(fp)
			data = sd_card_read(file_handle);
   852b4:	e13fca0f 	ldh	r4,-216(fp)
   852b8:	00839100 	call	83910 <sd_card_read>
   852bc:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.width = bmp_header.width | data << 24;
   852c0:	e0ffcf17 	ldw	r3,-196(fp)
   852c4:	e0bfc80b 	ldhu	r2,-224(fp)
   852c8:	1004963a 	slli	r2,r2,24
   852cc:	1884b03a 	or	r2,r3,r2
   852d0:	e0bfcf15 	stw	r2,-196(fp)

			data = sd_card_read(file_handle);
   852d4:	e13fca0f 	ldh	r4,-216(fp)
   852d8:	00839100 	call	83910 <sd_card_read>
   852dc:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.height = data;
   852e0:	e0bfc80b 	ldhu	r2,-224(fp)
   852e4:	e0bfd015 	stw	r2,-192(fp)
			data = sd_card_read(file_handle);
   852e8:	e13fca0f 	ldh	r4,-216(fp)
   852ec:	00839100 	call	83910 <sd_card_read>
   852f0:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.height = bmp_header.height | data << 8;
   852f4:	e0ffd017 	ldw	r3,-192(fp)
   852f8:	e0bfc80b 	ldhu	r2,-224(fp)
   852fc:	1004923a 	slli	r2,r2,8
   85300:	1884b03a 	or	r2,r3,r2
   85304:	e0bfd015 	stw	r2,-192(fp)
			data = sd_card_read(file_handle);
   85308:	e13fca0f 	ldh	r4,-216(fp)
   8530c:	00839100 	call	83910 <sd_card_read>
   85310:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.height = bmp_header.height | data << 16;
   85314:	e0ffd017 	ldw	r3,-192(fp)
   85318:	e0bfc80b 	ldhu	r2,-224(fp)
   8531c:	1004943a 	slli	r2,r2,16
   85320:	1884b03a 	or	r2,r3,r2
   85324:	e0bfd015 	stw	r2,-192(fp)
			data = sd_card_read(file_handle);
   85328:	e13fca0f 	ldh	r4,-216(fp)
   8532c:	00839100 	call	83910 <sd_card_read>
   85330:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.height = bmp_header.height | data << 24;
   85334:	e0ffd017 	ldw	r3,-192(fp)
   85338:	e0bfc80b 	ldhu	r2,-224(fp)
   8533c:	1004963a 	slli	r2,r2,24
   85340:	1884b03a 	or	r2,r3,r2
   85344:	e0bfd015 	stw	r2,-192(fp)

			data = sd_card_read(file_handle);
   85348:	e13fca0f 	ldh	r4,-216(fp)
   8534c:	00839100 	call	83910 <sd_card_read>
   85350:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.num_plane = data;
   85354:	e0bfc80b 	ldhu	r2,-224(fp)
   85358:	e0bfd10d 	sth	r2,-188(fp)
			data = sd_card_read(file_handle);
   8535c:	e13fca0f 	ldh	r4,-216(fp)
   85360:	00839100 	call	83910 <sd_card_read>
   85364:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.num_plane = bmp_header.num_plane | data << 8;
   85368:	e0ffd10b 	ldhu	r3,-188(fp)
   8536c:	e0bfc80b 	ldhu	r2,-224(fp)
   85370:	1004923a 	slli	r2,r2,8
   85374:	1884b03a 	or	r2,r3,r2
   85378:	e0bfd10d 	sth	r2,-188(fp)

			data = sd_card_read(file_handle);
   8537c:	e13fca0f 	ldh	r4,-216(fp)
   85380:	00839100 	call	83910 <sd_card_read>
   85384:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.num_bits_per_pixel = data;
   85388:	e0bfc80b 	ldhu	r2,-224(fp)
   8538c:	e0bfd18d 	sth	r2,-186(fp)
			data = sd_card_read(file_handle);
   85390:	e13fca0f 	ldh	r4,-216(fp)
   85394:	00839100 	call	83910 <sd_card_read>
   85398:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.num_bits_per_pixel = bmp_header.num_bits_per_pixel | data << 8;
   8539c:	e0ffd18b 	ldhu	r3,-186(fp)
   853a0:	e0bfc80b 	ldhu	r2,-224(fp)
   853a4:	1004923a 	slli	r2,r2,8
   853a8:	1884b03a 	or	r2,r3,r2
   853ac:	e0bfd18d 	sth	r2,-186(fp)
			
			data = sd_card_read(file_handle);
   853b0:	e13fca0f 	ldh	r4,-216(fp)
   853b4:	00839100 	call	83910 <sd_card_read>
   853b8:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.compress_mode = data;
   853bc:	e0bfc80b 	ldhu	r2,-224(fp)
   853c0:	e0bfd215 	stw	r2,-184(fp)
			data = sd_card_read(file_handle);
   853c4:	e13fca0f 	ldh	r4,-216(fp)
   853c8:	00839100 	call	83910 <sd_card_read>
   853cc:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.compress_mode = bmp_header.compress_mode | data << 8;
   853d0:	e0ffd217 	ldw	r3,-184(fp)
   853d4:	e0bfc80b 	ldhu	r2,-224(fp)
   853d8:	1004923a 	slli	r2,r2,8
   853dc:	1884b03a 	or	r2,r3,r2
   853e0:	e0bfd215 	stw	r2,-184(fp)
			data = sd_card_read(file_handle);
   853e4:	e13fca0f 	ldh	r4,-216(fp)
   853e8:	00839100 	call	83910 <sd_card_read>
   853ec:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.compress_mode = bmp_header.compress_mode | data << 16;
   853f0:	e0ffd217 	ldw	r3,-184(fp)
   853f4:	e0bfc80b 	ldhu	r2,-224(fp)
   853f8:	1004943a 	slli	r2,r2,16
   853fc:	1884b03a 	or	r2,r3,r2
   85400:	e0bfd215 	stw	r2,-184(fp)
			data = sd_card_read(file_handle);
   85404:	e13fca0f 	ldh	r4,-216(fp)
   85408:	00839100 	call	83910 <sd_card_read>
   8540c:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.compress_mode = bmp_header.compress_mode | data << 24;
   85410:	e0ffd217 	ldw	r3,-184(fp)
   85414:	e0bfc80b 	ldhu	r2,-224(fp)
   85418:	1004963a 	slli	r2,r2,24
   8541c:	1884b03a 	or	r2,r3,r2
   85420:	e0bfd215 	stw	r2,-184(fp)

			data = sd_card_read(file_handle);
   85424:	e13fca0f 	ldh	r4,-216(fp)
   85428:	00839100 	call	83910 <sd_card_read>
   8542c:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.data_size = data;
   85430:	e0bfc80b 	ldhu	r2,-224(fp)
   85434:	e0bfd315 	stw	r2,-180(fp)
			data = sd_card_read(file_handle);
   85438:	e13fca0f 	ldh	r4,-216(fp)
   8543c:	00839100 	call	83910 <sd_card_read>
   85440:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.data_size = bmp_header.data_size | data << 8;
   85444:	e0ffd317 	ldw	r3,-180(fp)
   85448:	e0bfc80b 	ldhu	r2,-224(fp)
   8544c:	1004923a 	slli	r2,r2,8
   85450:	1884b03a 	or	r2,r3,r2
   85454:	e0bfd315 	stw	r2,-180(fp)
			data = sd_card_read(file_handle);
   85458:	e13fca0f 	ldh	r4,-216(fp)
   8545c:	00839100 	call	83910 <sd_card_read>
   85460:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.data_size = bmp_header.data_size | data << 16;
   85464:	e0ffd317 	ldw	r3,-180(fp)
   85468:	e0bfc80b 	ldhu	r2,-224(fp)
   8546c:	1004943a 	slli	r2,r2,16
   85470:	1884b03a 	or	r2,r3,r2
   85474:	e0bfd315 	stw	r2,-180(fp)
			data = sd_card_read(file_handle);
   85478:	e13fca0f 	ldh	r4,-216(fp)
   8547c:	00839100 	call	83910 <sd_card_read>
   85480:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.data_size = bmp_header.data_size | data << 24;
   85484:	e0ffd317 	ldw	r3,-180(fp)
   85488:	e0bfc80b 	ldhu	r2,-224(fp)
   8548c:	1004963a 	slli	r2,r2,24
   85490:	1884b03a 	or	r2,r3,r2
   85494:	e0bfd315 	stw	r2,-180(fp)
								
			data = sd_card_read(file_handle);
   85498:	e13fca0f 	ldh	r4,-216(fp)
   8549c:	00839100 	call	83910 <sd_card_read>
   854a0:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.hor_resolution = data;
   854a4:	e0bfc80b 	ldhu	r2,-224(fp)
   854a8:	e0bfd415 	stw	r2,-176(fp)
			data = sd_card_read(file_handle);
   854ac:	e13fca0f 	ldh	r4,-216(fp)
   854b0:	00839100 	call	83910 <sd_card_read>
   854b4:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.hor_resolution = bmp_header.hor_resolution | data << 8;
   854b8:	e0ffd417 	ldw	r3,-176(fp)
   854bc:	e0bfc80b 	ldhu	r2,-224(fp)
   854c0:	1004923a 	slli	r2,r2,8
   854c4:	1884b03a 	or	r2,r3,r2
   854c8:	e0bfd415 	stw	r2,-176(fp)
			data = sd_card_read(file_handle);
   854cc:	e13fca0f 	ldh	r4,-216(fp)
   854d0:	00839100 	call	83910 <sd_card_read>
   854d4:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.hor_resolution = bmp_header.hor_resolution | data << 16;
   854d8:	e0ffd417 	ldw	r3,-176(fp)
   854dc:	e0bfc80b 	ldhu	r2,-224(fp)
   854e0:	1004943a 	slli	r2,r2,16
   854e4:	1884b03a 	or	r2,r3,r2
   854e8:	e0bfd415 	stw	r2,-176(fp)
			data = sd_card_read(file_handle);
   854ec:	e13fca0f 	ldh	r4,-216(fp)
   854f0:	00839100 	call	83910 <sd_card_read>
   854f4:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.hor_resolution = bmp_header.hor_resolution | data << 24;
   854f8:	e0ffd417 	ldw	r3,-176(fp)
   854fc:	e0bfc80b 	ldhu	r2,-224(fp)
   85500:	1004963a 	slli	r2,r2,24
   85504:	1884b03a 	or	r2,r3,r2
   85508:	e0bfd415 	stw	r2,-176(fp)
			
			data = sd_card_read(file_handle);
   8550c:	e13fca0f 	ldh	r4,-216(fp)
   85510:	00839100 	call	83910 <sd_card_read>
   85514:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.ver_resolution = data;
   85518:	e0bfc80b 	ldhu	r2,-224(fp)
   8551c:	e0bfd515 	stw	r2,-172(fp)
			data = sd_card_read(file_handle);
   85520:	e13fca0f 	ldh	r4,-216(fp)
   85524:	00839100 	call	83910 <sd_card_read>
   85528:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.ver_resolution = bmp_header.ver_resolution | data << 8;
   8552c:	e0ffd517 	ldw	r3,-172(fp)
   85530:	e0bfc80b 	ldhu	r2,-224(fp)
   85534:	1004923a 	slli	r2,r2,8
   85538:	1884b03a 	or	r2,r3,r2
   8553c:	e0bfd515 	stw	r2,-172(fp)
			data = sd_card_read(file_handle);
   85540:	e13fca0f 	ldh	r4,-216(fp)
   85544:	00839100 	call	83910 <sd_card_read>
   85548:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.ver_resolution = bmp_header.ver_resolution | data << 16;
   8554c:	e0ffd517 	ldw	r3,-172(fp)
   85550:	e0bfc80b 	ldhu	r2,-224(fp)
   85554:	1004943a 	slli	r2,r2,16
   85558:	1884b03a 	or	r2,r3,r2
   8555c:	e0bfd515 	stw	r2,-172(fp)
			data = sd_card_read(file_handle);
   85560:	e13fca0f 	ldh	r4,-216(fp)
   85564:	00839100 	call	83910 <sd_card_read>
   85568:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.ver_resolution = bmp_header.ver_resolution | data << 24;
   8556c:	e0ffd517 	ldw	r3,-172(fp)
   85570:	e0bfc80b 	ldhu	r2,-224(fp)
   85574:	1004963a 	slli	r2,r2,24
   85578:	1884b03a 	or	r2,r3,r2
   8557c:	e0bfd515 	stw	r2,-172(fp)
			
			data = sd_card_read(file_handle);
   85580:	e13fca0f 	ldh	r4,-216(fp)
   85584:	00839100 	call	83910 <sd_card_read>
   85588:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.num_color_in_palette = data;
   8558c:	e0bfc80b 	ldhu	r2,-224(fp)
   85590:	e0bfd615 	stw	r2,-168(fp)
			data = sd_card_read(file_handle);
   85594:	e13fca0f 	ldh	r4,-216(fp)
   85598:	00839100 	call	83910 <sd_card_read>
   8559c:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.num_color_in_palette = bmp_header.num_color_in_palette | data << 8;
   855a0:	e0ffd617 	ldw	r3,-168(fp)
   855a4:	e0bfc80b 	ldhu	r2,-224(fp)
   855a8:	1004923a 	slli	r2,r2,8
   855ac:	1884b03a 	or	r2,r3,r2
   855b0:	e0bfd615 	stw	r2,-168(fp)
			data = sd_card_read(file_handle);
   855b4:	e13fca0f 	ldh	r4,-216(fp)
   855b8:	00839100 	call	83910 <sd_card_read>
   855bc:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.num_color_in_palette = bmp_header.num_color_in_palette | data << 16;
   855c0:	e0ffd617 	ldw	r3,-168(fp)
   855c4:	e0bfc80b 	ldhu	r2,-224(fp)
   855c8:	1004943a 	slli	r2,r2,16
   855cc:	1884b03a 	or	r2,r3,r2
   855d0:	e0bfd615 	stw	r2,-168(fp)
			data = sd_card_read(file_handle);
   855d4:	e13fca0f 	ldh	r4,-216(fp)
   855d8:	00839100 	call	83910 <sd_card_read>
   855dc:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.num_color_in_palette = bmp_header.num_color_in_palette | data << 24;
   855e0:	e0ffd617 	ldw	r3,-168(fp)
   855e4:	e0bfc80b 	ldhu	r2,-224(fp)
   855e8:	1004963a 	slli	r2,r2,24
   855ec:	1884b03a 	or	r2,r3,r2
   855f0:	e0bfd615 	stw	r2,-168(fp)
			
			data = sd_card_read(file_handle);
   855f4:	e13fca0f 	ldh	r4,-216(fp)
   855f8:	00839100 	call	83910 <sd_card_read>
   855fc:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.important_color = data;
   85600:	e0bfc80b 	ldhu	r2,-224(fp)
   85604:	e0bfd715 	stw	r2,-164(fp)
			data = sd_card_read(file_handle);
   85608:	e13fca0f 	ldh	r4,-216(fp)
   8560c:	00839100 	call	83910 <sd_card_read>
   85610:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.important_color = bmp_header.important_color | data << 8;
   85614:	e0ffd717 	ldw	r3,-164(fp)
   85618:	e0bfc80b 	ldhu	r2,-224(fp)
   8561c:	1004923a 	slli	r2,r2,8
   85620:	1884b03a 	or	r2,r3,r2
   85624:	e0bfd715 	stw	r2,-164(fp)
			data = sd_card_read(file_handle);
   85628:	e13fca0f 	ldh	r4,-216(fp)
   8562c:	00839100 	call	83910 <sd_card_read>
   85630:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.important_color = bmp_header.important_color | data << 16;
   85634:	e0ffd717 	ldw	r3,-164(fp)
   85638:	e0bfc80b 	ldhu	r2,-224(fp)
   8563c:	1004943a 	slli	r2,r2,16
   85640:	1884b03a 	or	r2,r3,r2
   85644:	e0bfd715 	stw	r2,-164(fp)
			data = sd_card_read(file_handle);
   85648:	e13fca0f 	ldh	r4,-216(fp)
   8564c:	00839100 	call	83910 <sd_card_read>
   85650:	e0bfc80d 	sth	r2,-224(fp)
			bmp_header.important_color = bmp_header.important_color | data << 24;
   85654:	e0ffd717 	ldw	r3,-164(fp)
   85658:	e0bfc80b 	ldhu	r2,-224(fp)
   8565c:	1004963a 	slli	r2,r2,24
   85660:	1884b03a 	or	r2,r3,r2
   85664:	e0bfd715 	stw	r2,-164(fp)
			
			printf("Reading image of dimension: %d x %d\n", bmp_header.width, bmp_header.height);
   85668:	e17fcf17 	ldw	r5,-196(fp)
   8566c:	e1bfd017 	ldw	r6,-192(fp)
   85670:	010002b4 	movhi	r4,10
   85674:	21017c04 	addi	r4,r4,1520
   85678:	00888340 	call	88834 <printf>
			if (bmp_header.height > 0) {
   8567c:	e0bfd017 	ldw	r2,-192(fp)
   85680:	10800050 	cmplti	r2,r2,1
   85684:	1000031e 	bne	r2,zero,85694 <SD_read_task+0x794>
				printf("Positive height detected, image will be loaded as upside-down\n");
   85688:	010002b4 	movhi	r4,10
   8568c:	21018604 	addi	r4,r4,1560
   85690:	00889700 	call	88970 <puts>
			}
			
			printf("Image opened: INPIC1.BMP\n");
   85694:	010002b4 	movhi	r4,10
   85698:	21019604 	addi	r4,r4,1624
   8569c:	00889700 	call	88970 <puts>
			// BMP header 1
			data1 = sd_card_read(file_handle1);
   856a0:	e13fc98f 	ldh	r4,-218(fp)
   856a4:	00839100 	call	83910 <sd_card_read>
   856a8:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.magic_number = data1 << 8;
   856ac:	e0bfc78b 	ldhu	r2,-226(fp)
   856b0:	1004923a 	slli	r2,r2,8
   856b4:	e0bfd80d 	sth	r2,-160(fp)
			data1 = sd_card_read(file_handle1);
   856b8:	e13fc98f 	ldh	r4,-218(fp)
   856bc:	00839100 	call	83910 <sd_card_read>
   856c0:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.magic_number = bmp_header1.magic_number | data1;
   856c4:	e0ffd80b 	ldhu	r3,-160(fp)
   856c8:	e0bfc78b 	ldhu	r2,-226(fp)
   856cc:	1884b03a 	or	r2,r3,r2
   856d0:	e0bfd80d 	sth	r2,-160(fp)

			data1 = sd_card_read(file_handle1);
   856d4:	e13fc98f 	ldh	r4,-218(fp)
   856d8:	00839100 	call	83910 <sd_card_read>
   856dc:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.file_size = data1;
   856e0:	e0bfc78b 	ldhu	r2,-226(fp)
   856e4:	e0bfd915 	stw	r2,-156(fp)
			data1 = sd_card_read(file_handle1);
   856e8:	e13fc98f 	ldh	r4,-218(fp)
   856ec:	00839100 	call	83910 <sd_card_read>
   856f0:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.file_size = bmp_header1.file_size | data1 << 8;
   856f4:	e0ffd917 	ldw	r3,-156(fp)
   856f8:	e0bfc78b 	ldhu	r2,-226(fp)
   856fc:	1004923a 	slli	r2,r2,8
   85700:	1884b03a 	or	r2,r3,r2
   85704:	e0bfd915 	stw	r2,-156(fp)
			data1 = sd_card_read(file_handle1);
   85708:	e13fc98f 	ldh	r4,-218(fp)
   8570c:	00839100 	call	83910 <sd_card_read>
   85710:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.file_size = bmp_header1.file_size | data1 << 16;
   85714:	e0ffd917 	ldw	r3,-156(fp)
   85718:	e0bfc78b 	ldhu	r2,-226(fp)
   8571c:	1004943a 	slli	r2,r2,16
   85720:	1884b03a 	or	r2,r3,r2
   85724:	e0bfd915 	stw	r2,-156(fp)
			data1 = sd_card_read(file_handle1);
   85728:	e13fc98f 	ldh	r4,-218(fp)
   8572c:	00839100 	call	83910 <sd_card_read>
   85730:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.file_size = bmp_header1.file_size | data1 << 24;
   85734:	e0ffd917 	ldw	r3,-156(fp)
   85738:	e0bfc78b 	ldhu	r2,-226(fp)
   8573c:	1004963a 	slli	r2,r2,24
   85740:	1884b03a 	or	r2,r3,r2
   85744:	e0bfd915 	stw	r2,-156(fp)

			// unused
			data1 = sd_card_read(file_handle1);
   85748:	e13fc98f 	ldh	r4,-218(fp)
   8574c:	00839100 	call	83910 <sd_card_read>
   85750:	e0bfc78d 	sth	r2,-226(fp)
			data1 = sd_card_read(file_handle1);
   85754:	e13fc98f 	ldh	r4,-218(fp)
   85758:	00839100 	call	83910 <sd_card_read>
   8575c:	e0bfc78d 	sth	r2,-226(fp)
			data1 = sd_card_read(file_handle1);
   85760:	e13fc98f 	ldh	r4,-218(fp)
   85764:	00839100 	call	83910 <sd_card_read>
   85768:	e0bfc78d 	sth	r2,-226(fp)
			data1 = sd_card_read(file_handle1);
   8576c:	e13fc98f 	ldh	r4,-218(fp)
   85770:	00839100 	call	83910 <sd_card_read>
   85774:	e0bfc78d 	sth	r2,-226(fp)

			data1 = sd_card_read(file_handle1);
   85778:	e13fc98f 	ldh	r4,-218(fp)
   8577c:	00839100 	call	83910 <sd_card_read>
   85780:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.data_offset = data1;
   85784:	e0bfc78b 	ldhu	r2,-226(fp)
   85788:	e0bfda15 	stw	r2,-152(fp)
			data1 = sd_card_read(file_handle1);
   8578c:	e13fc98f 	ldh	r4,-218(fp)
   85790:	00839100 	call	83910 <sd_card_read>
   85794:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.data_offset = bmp_header1.data_offset | data1 << 8;
   85798:	e0ffda17 	ldw	r3,-152(fp)
   8579c:	e0bfc78b 	ldhu	r2,-226(fp)
   857a0:	1004923a 	slli	r2,r2,8
   857a4:	1884b03a 	or	r2,r3,r2
   857a8:	e0bfda15 	stw	r2,-152(fp)
			data1 = sd_card_read(file_handle1);
   857ac:	e13fc98f 	ldh	r4,-218(fp)
   857b0:	00839100 	call	83910 <sd_card_read>
   857b4:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.data_offset = bmp_header1.data_offset | data1 << 16;
   857b8:	e0ffda17 	ldw	r3,-152(fp)
   857bc:	e0bfc78b 	ldhu	r2,-226(fp)
   857c0:	1004943a 	slli	r2,r2,16
   857c4:	1884b03a 	or	r2,r3,r2
   857c8:	e0bfda15 	stw	r2,-152(fp)
			data1 = sd_card_read(file_handle1);
   857cc:	e13fc98f 	ldh	r4,-218(fp)
   857d0:	00839100 	call	83910 <sd_card_read>
   857d4:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.data_offset = bmp_header1.data_offset | data1 << 24;
   857d8:	e0ffda17 	ldw	r3,-152(fp)
   857dc:	e0bfc78b 	ldhu	r2,-226(fp)
   857e0:	1004963a 	slli	r2,r2,24
   857e4:	1884b03a 	or	r2,r3,r2
   857e8:	e0bfda15 	stw	r2,-152(fp)

			data1 = sd_card_read(file_handle1);
   857ec:	e13fc98f 	ldh	r4,-218(fp)
   857f0:	00839100 	call	83910 <sd_card_read>
   857f4:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.header_size = data1;
   857f8:	e0bfc78b 	ldhu	r2,-226(fp)
   857fc:	e0bfdb15 	stw	r2,-148(fp)
			data1 = sd_card_read(file_handle1);
   85800:	e13fc98f 	ldh	r4,-218(fp)
   85804:	00839100 	call	83910 <sd_card_read>
   85808:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.header_size = bmp_header1.header_size | data1 << 8;
   8580c:	e0ffdb17 	ldw	r3,-148(fp)
   85810:	e0bfc78b 	ldhu	r2,-226(fp)
   85814:	1004923a 	slli	r2,r2,8
   85818:	1884b03a 	or	r2,r3,r2
   8581c:	e0bfdb15 	stw	r2,-148(fp)
			data1 = sd_card_read(file_handle1);
   85820:	e13fc98f 	ldh	r4,-218(fp)
   85824:	00839100 	call	83910 <sd_card_read>
   85828:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.header_size = bmp_header1.header_size | data1 << 16;
   8582c:	e0ffdb17 	ldw	r3,-148(fp)
   85830:	e0bfc78b 	ldhu	r2,-226(fp)
   85834:	1004943a 	slli	r2,r2,16
   85838:	1884b03a 	or	r2,r3,r2
   8583c:	e0bfdb15 	stw	r2,-148(fp)
			data1 = sd_card_read(file_handle1);
   85840:	e13fc98f 	ldh	r4,-218(fp)
   85844:	00839100 	call	83910 <sd_card_read>
   85848:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.header_size = bmp_header1.header_size | data1 << 24;
   8584c:	e0ffdb17 	ldw	r3,-148(fp)
   85850:	e0bfc78b 	ldhu	r2,-226(fp)
   85854:	1004963a 	slli	r2,r2,24
   85858:	1884b03a 	or	r2,r3,r2
   8585c:	e0bfdb15 	stw	r2,-148(fp)

			data1 = sd_card_read(file_handle1);
   85860:	e13fc98f 	ldh	r4,-218(fp)
   85864:	00839100 	call	83910 <sd_card_read>
   85868:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.width = data1;
   8586c:	e0bfc78b 	ldhu	r2,-226(fp)
   85870:	e0bfdc15 	stw	r2,-144(fp)
			data1 = sd_card_read(file_handle1);
   85874:	e13fc98f 	ldh	r4,-218(fp)
   85878:	00839100 	call	83910 <sd_card_read>
   8587c:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.width = bmp_header1.width | data1 << 8;
   85880:	e0ffdc17 	ldw	r3,-144(fp)
   85884:	e0bfc78b 	ldhu	r2,-226(fp)
   85888:	1004923a 	slli	r2,r2,8
   8588c:	1884b03a 	or	r2,r3,r2
   85890:	e0bfdc15 	stw	r2,-144(fp)
			data1 = sd_card_read(file_handle1);
   85894:	e13fc98f 	ldh	r4,-218(fp)
   85898:	00839100 	call	83910 <sd_card_read>
   8589c:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.width = bmp_header1.width | data1 << 16;
   858a0:	e0ffdc17 	ldw	r3,-144(fp)
   858a4:	e0bfc78b 	ldhu	r2,-226(fp)
   858a8:	1004943a 	slli	r2,r2,16
   858ac:	1884b03a 	or	r2,r3,r2
   858b0:	e0bfdc15 	stw	r2,-144(fp)
			data1 = sd_card_read(file_handle1);
   858b4:	e13fc98f 	ldh	r4,-218(fp)
   858b8:	00839100 	call	83910 <sd_card_read>
   858bc:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.width = bmp_header1.width | data1 << 24;
   858c0:	e0ffdc17 	ldw	r3,-144(fp)
   858c4:	e0bfc78b 	ldhu	r2,-226(fp)
   858c8:	1004963a 	slli	r2,r2,24
   858cc:	1884b03a 	or	r2,r3,r2
   858d0:	e0bfdc15 	stw	r2,-144(fp)

			data1 = sd_card_read(file_handle1);
   858d4:	e13fc98f 	ldh	r4,-218(fp)
   858d8:	00839100 	call	83910 <sd_card_read>
   858dc:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.height = data1;
   858e0:	e0bfc78b 	ldhu	r2,-226(fp)
   858e4:	e0bfdd15 	stw	r2,-140(fp)
			data1 = sd_card_read(file_handle1);
   858e8:	e13fc98f 	ldh	r4,-218(fp)
   858ec:	00839100 	call	83910 <sd_card_read>
   858f0:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.height = bmp_header1.height | data1 << 8;
   858f4:	e0ffdd17 	ldw	r3,-140(fp)
   858f8:	e0bfc78b 	ldhu	r2,-226(fp)
   858fc:	1004923a 	slli	r2,r2,8
   85900:	1884b03a 	or	r2,r3,r2
   85904:	e0bfdd15 	stw	r2,-140(fp)
			data1 = sd_card_read(file_handle1);
   85908:	e13fc98f 	ldh	r4,-218(fp)
   8590c:	00839100 	call	83910 <sd_card_read>
   85910:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.height = bmp_header1.height | data1 << 16;
   85914:	e0ffdd17 	ldw	r3,-140(fp)
   85918:	e0bfc78b 	ldhu	r2,-226(fp)
   8591c:	1004943a 	slli	r2,r2,16
   85920:	1884b03a 	or	r2,r3,r2
   85924:	e0bfdd15 	stw	r2,-140(fp)
			data1 = sd_card_read(file_handle1);
   85928:	e13fc98f 	ldh	r4,-218(fp)
   8592c:	00839100 	call	83910 <sd_card_read>
   85930:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.height = bmp_header1.height | data1 << 24;
   85934:	e0ffdd17 	ldw	r3,-140(fp)
   85938:	e0bfc78b 	ldhu	r2,-226(fp)
   8593c:	1004963a 	slli	r2,r2,24
   85940:	1884b03a 	or	r2,r3,r2
   85944:	e0bfdd15 	stw	r2,-140(fp)


			data1 = sd_card_read(file_handle1);
   85948:	e13fc98f 	ldh	r4,-218(fp)
   8594c:	00839100 	call	83910 <sd_card_read>
   85950:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.num_plane = data1;
   85954:	e0bfc78b 	ldhu	r2,-226(fp)
   85958:	e0bfde0d 	sth	r2,-136(fp)
			data1 = sd_card_read(file_handle1);
   8595c:	e13fc98f 	ldh	r4,-218(fp)
   85960:	00839100 	call	83910 <sd_card_read>
   85964:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.num_plane = bmp_header1.num_plane | data1 << 8;
   85968:	e0ffde0b 	ldhu	r3,-136(fp)
   8596c:	e0bfc78b 	ldhu	r2,-226(fp)
   85970:	1004923a 	slli	r2,r2,8
   85974:	1884b03a 	or	r2,r3,r2
   85978:	e0bfde0d 	sth	r2,-136(fp)

			data1 = sd_card_read(file_handle1);
   8597c:	e13fc98f 	ldh	r4,-218(fp)
   85980:	00839100 	call	83910 <sd_card_read>
   85984:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.num_bits_per_pixel = data1;
   85988:	e0bfc78b 	ldhu	r2,-226(fp)
   8598c:	e0bfde8d 	sth	r2,-134(fp)
			data1 = sd_card_read(file_handle1);
   85990:	e13fc98f 	ldh	r4,-218(fp)
   85994:	00839100 	call	83910 <sd_card_read>
   85998:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.num_bits_per_pixel = bmp_header1.num_bits_per_pixel | data1 << 8;
   8599c:	e0ffde8b 	ldhu	r3,-134(fp)
   859a0:	e0bfc78b 	ldhu	r2,-226(fp)
   859a4:	1004923a 	slli	r2,r2,8
   859a8:	1884b03a 	or	r2,r3,r2
   859ac:	e0bfde8d 	sth	r2,-134(fp)

			data1 = sd_card_read(file_handle1);
   859b0:	e13fc98f 	ldh	r4,-218(fp)
   859b4:	00839100 	call	83910 <sd_card_read>
   859b8:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.compress_mode = data1;
   859bc:	e0bfc78b 	ldhu	r2,-226(fp)
   859c0:	e0bfdf15 	stw	r2,-132(fp)
			data1 = sd_card_read(file_handle1);
   859c4:	e13fc98f 	ldh	r4,-218(fp)
   859c8:	00839100 	call	83910 <sd_card_read>
   859cc:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.compress_mode = bmp_header1.compress_mode | data1 << 8;
   859d0:	e0ffdf17 	ldw	r3,-132(fp)
   859d4:	e0bfc78b 	ldhu	r2,-226(fp)
   859d8:	1004923a 	slli	r2,r2,8
   859dc:	1884b03a 	or	r2,r3,r2
   859e0:	e0bfdf15 	stw	r2,-132(fp)
			data1 = sd_card_read(file_handle1);
   859e4:	e13fc98f 	ldh	r4,-218(fp)
   859e8:	00839100 	call	83910 <sd_card_read>
   859ec:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.compress_mode = bmp_header1.compress_mode | data1 << 16;
   859f0:	e0ffdf17 	ldw	r3,-132(fp)
   859f4:	e0bfc78b 	ldhu	r2,-226(fp)
   859f8:	1004943a 	slli	r2,r2,16
   859fc:	1884b03a 	or	r2,r3,r2
   85a00:	e0bfdf15 	stw	r2,-132(fp)
			data1 = sd_card_read(file_handle1);
   85a04:	e13fc98f 	ldh	r4,-218(fp)
   85a08:	00839100 	call	83910 <sd_card_read>
   85a0c:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.compress_mode = bmp_header1.compress_mode | data1 << 24;
   85a10:	e0ffdf17 	ldw	r3,-132(fp)
   85a14:	e0bfc78b 	ldhu	r2,-226(fp)
   85a18:	1004963a 	slli	r2,r2,24
   85a1c:	1884b03a 	or	r2,r3,r2
   85a20:	e0bfdf15 	stw	r2,-132(fp)

			data1 = sd_card_read(file_handle1);
   85a24:	e13fc98f 	ldh	r4,-218(fp)
   85a28:	00839100 	call	83910 <sd_card_read>
   85a2c:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.data_size = data1;
   85a30:	e0bfc78b 	ldhu	r2,-226(fp)
   85a34:	e0bfe015 	stw	r2,-128(fp)
			data1 = sd_card_read(file_handle1);
   85a38:	e13fc98f 	ldh	r4,-218(fp)
   85a3c:	00839100 	call	83910 <sd_card_read>
   85a40:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.data_size = bmp_header1.data_size | data1 << 8;
   85a44:	e0ffe017 	ldw	r3,-128(fp)
   85a48:	e0bfc78b 	ldhu	r2,-226(fp)
   85a4c:	1004923a 	slli	r2,r2,8
   85a50:	1884b03a 	or	r2,r3,r2
   85a54:	e0bfe015 	stw	r2,-128(fp)
			data1 = sd_card_read(file_handle1);
   85a58:	e13fc98f 	ldh	r4,-218(fp)
   85a5c:	00839100 	call	83910 <sd_card_read>
   85a60:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.data_size = bmp_header1.data_size | data1 << 16;
   85a64:	e0ffe017 	ldw	r3,-128(fp)
   85a68:	e0bfc78b 	ldhu	r2,-226(fp)
   85a6c:	1004943a 	slli	r2,r2,16
   85a70:	1884b03a 	or	r2,r3,r2
   85a74:	e0bfe015 	stw	r2,-128(fp)
			data1 = sd_card_read(file_handle1);
   85a78:	e13fc98f 	ldh	r4,-218(fp)
   85a7c:	00839100 	call	83910 <sd_card_read>
   85a80:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.data_size = bmp_header1.data_size | data1 << 24;
   85a84:	e0ffe017 	ldw	r3,-128(fp)
   85a88:	e0bfc78b 	ldhu	r2,-226(fp)
   85a8c:	1004963a 	slli	r2,r2,24
   85a90:	1884b03a 	or	r2,r3,r2
   85a94:	e0bfe015 	stw	r2,-128(fp)

			data1 = sd_card_read(file_handle1);
   85a98:	e13fc98f 	ldh	r4,-218(fp)
   85a9c:	00839100 	call	83910 <sd_card_read>
   85aa0:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.hor_resolution = data1;
   85aa4:	e0bfc78b 	ldhu	r2,-226(fp)
   85aa8:	e0bfe115 	stw	r2,-124(fp)
			data1 = sd_card_read(file_handle1);
   85aac:	e13fc98f 	ldh	r4,-218(fp)
   85ab0:	00839100 	call	83910 <sd_card_read>
   85ab4:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.hor_resolution = bmp_header1.hor_resolution | data1 << 8;
   85ab8:	e0ffe117 	ldw	r3,-124(fp)
   85abc:	e0bfc78b 	ldhu	r2,-226(fp)
   85ac0:	1004923a 	slli	r2,r2,8
   85ac4:	1884b03a 	or	r2,r3,r2
   85ac8:	e0bfe115 	stw	r2,-124(fp)
			data1 = sd_card_read(file_handle1);
   85acc:	e13fc98f 	ldh	r4,-218(fp)
   85ad0:	00839100 	call	83910 <sd_card_read>
   85ad4:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.hor_resolution = bmp_header1.hor_resolution | data1 << 16;
   85ad8:	e0ffe117 	ldw	r3,-124(fp)
   85adc:	e0bfc78b 	ldhu	r2,-226(fp)
   85ae0:	1004943a 	slli	r2,r2,16
   85ae4:	1884b03a 	or	r2,r3,r2
   85ae8:	e0bfe115 	stw	r2,-124(fp)
			data1 = sd_card_read(file_handle1);
   85aec:	e13fc98f 	ldh	r4,-218(fp)
   85af0:	00839100 	call	83910 <sd_card_read>
   85af4:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.hor_resolution = bmp_header1.hor_resolution | data1 << 24;
   85af8:	e0ffe117 	ldw	r3,-124(fp)
   85afc:	e0bfc78b 	ldhu	r2,-226(fp)
   85b00:	1004963a 	slli	r2,r2,24
   85b04:	1884b03a 	or	r2,r3,r2
   85b08:	e0bfe115 	stw	r2,-124(fp)

			data1 = sd_card_read(file_handle1);
   85b0c:	e13fc98f 	ldh	r4,-218(fp)
   85b10:	00839100 	call	83910 <sd_card_read>
   85b14:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.ver_resolution = data1;
   85b18:	e0bfc78b 	ldhu	r2,-226(fp)
   85b1c:	e0bfe215 	stw	r2,-120(fp)
			data1 = sd_card_read(file_handle1);
   85b20:	e13fc98f 	ldh	r4,-218(fp)
   85b24:	00839100 	call	83910 <sd_card_read>
   85b28:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.ver_resolution = bmp_header1.ver_resolution | data1 << 8;
   85b2c:	e0ffe217 	ldw	r3,-120(fp)
   85b30:	e0bfc78b 	ldhu	r2,-226(fp)
   85b34:	1004923a 	slli	r2,r2,8
   85b38:	1884b03a 	or	r2,r3,r2
   85b3c:	e0bfe215 	stw	r2,-120(fp)
			data1 = sd_card_read(file_handle1);
   85b40:	e13fc98f 	ldh	r4,-218(fp)
   85b44:	00839100 	call	83910 <sd_card_read>
   85b48:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.ver_resolution = bmp_header1.ver_resolution | data1 << 16;
   85b4c:	e0ffe217 	ldw	r3,-120(fp)
   85b50:	e0bfc78b 	ldhu	r2,-226(fp)
   85b54:	1004943a 	slli	r2,r2,16
   85b58:	1884b03a 	or	r2,r3,r2
   85b5c:	e0bfe215 	stw	r2,-120(fp)
			data1 = sd_card_read(file_handle1);
   85b60:	e13fc98f 	ldh	r4,-218(fp)
   85b64:	00839100 	call	83910 <sd_card_read>
   85b68:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.ver_resolution = bmp_header1.ver_resolution | data1 << 24;
   85b6c:	e0ffe217 	ldw	r3,-120(fp)
   85b70:	e0bfc78b 	ldhu	r2,-226(fp)
   85b74:	1004963a 	slli	r2,r2,24
   85b78:	1884b03a 	or	r2,r3,r2
   85b7c:	e0bfe215 	stw	r2,-120(fp)

			data1 = sd_card_read(file_handle1);
   85b80:	e13fc98f 	ldh	r4,-218(fp)
   85b84:	00839100 	call	83910 <sd_card_read>
   85b88:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.num_color_in_palette = data1;
   85b8c:	e0bfc78b 	ldhu	r2,-226(fp)
   85b90:	e0bfe315 	stw	r2,-116(fp)
			data1 = sd_card_read(file_handle1);
   85b94:	e13fc98f 	ldh	r4,-218(fp)
   85b98:	00839100 	call	83910 <sd_card_read>
   85b9c:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.num_color_in_palette = bmp_header1.num_color_in_palette | data1 << 8;
   85ba0:	e0ffe317 	ldw	r3,-116(fp)
   85ba4:	e0bfc78b 	ldhu	r2,-226(fp)
   85ba8:	1004923a 	slli	r2,r2,8
   85bac:	1884b03a 	or	r2,r3,r2
   85bb0:	e0bfe315 	stw	r2,-116(fp)
			data1 = sd_card_read(file_handle1);
   85bb4:	e13fc98f 	ldh	r4,-218(fp)
   85bb8:	00839100 	call	83910 <sd_card_read>
   85bbc:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.num_color_in_palette = bmp_header1.num_color_in_palette | data1 << 16;
   85bc0:	e0ffe317 	ldw	r3,-116(fp)
   85bc4:	e0bfc78b 	ldhu	r2,-226(fp)
   85bc8:	1004943a 	slli	r2,r2,16
   85bcc:	1884b03a 	or	r2,r3,r2
   85bd0:	e0bfe315 	stw	r2,-116(fp)
			data1 = sd_card_read(file_handle1);
   85bd4:	e13fc98f 	ldh	r4,-218(fp)
   85bd8:	00839100 	call	83910 <sd_card_read>
   85bdc:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.num_color_in_palette = bmp_header1.num_color_in_palette | data1 << 24;
   85be0:	e0ffe317 	ldw	r3,-116(fp)
   85be4:	e0bfc78b 	ldhu	r2,-226(fp)
   85be8:	1004963a 	slli	r2,r2,24
   85bec:	1884b03a 	or	r2,r3,r2
   85bf0:	e0bfe315 	stw	r2,-116(fp)

			data1 = sd_card_read(file_handle1);
   85bf4:	e13fc98f 	ldh	r4,-218(fp)
   85bf8:	00839100 	call	83910 <sd_card_read>
   85bfc:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.important_color = data1;
   85c00:	e0bfc78b 	ldhu	r2,-226(fp)
   85c04:	e0bfe415 	stw	r2,-112(fp)
			data1 = sd_card_read(file_handle1);
   85c08:	e13fc98f 	ldh	r4,-218(fp)
   85c0c:	00839100 	call	83910 <sd_card_read>
   85c10:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.important_color = bmp_header1.important_color | data1 << 8;
   85c14:	e0ffe417 	ldw	r3,-112(fp)
   85c18:	e0bfc78b 	ldhu	r2,-226(fp)
   85c1c:	1004923a 	slli	r2,r2,8
   85c20:	1884b03a 	or	r2,r3,r2
   85c24:	e0bfe415 	stw	r2,-112(fp)
			data1 = sd_card_read(file_handle1);
   85c28:	e13fc98f 	ldh	r4,-218(fp)
   85c2c:	00839100 	call	83910 <sd_card_read>
   85c30:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.important_color = bmp_header1.important_color | data1 << 16;
   85c34:	e0ffe417 	ldw	r3,-112(fp)
   85c38:	e0bfc78b 	ldhu	r2,-226(fp)
   85c3c:	1004943a 	slli	r2,r2,16
   85c40:	1884b03a 	or	r2,r3,r2
   85c44:	e0bfe415 	stw	r2,-112(fp)
			data1 = sd_card_read(file_handle1);
   85c48:	e13fc98f 	ldh	r4,-218(fp)
   85c4c:	00839100 	call	83910 <sd_card_read>
   85c50:	e0bfc78d 	sth	r2,-226(fp)
			bmp_header1.important_color = bmp_header1.important_color | data1 << 24;
   85c54:	e0ffe417 	ldw	r3,-112(fp)
   85c58:	e0bfc78b 	ldhu	r2,-226(fp)
   85c5c:	1004963a 	slli	r2,r2,24
   85c60:	1884b03a 	or	r2,r3,r2
   85c64:	e0bfe415 	stw	r2,-112(fp)

			printf("Reading image of dimension: %d x %d\n", bmp_header1.width, bmp_header1.height);
   85c68:	e17fdc17 	ldw	r5,-144(fp)
   85c6c:	e1bfdd17 	ldw	r6,-140(fp)
   85c70:	010002b4 	movhi	r4,10
   85c74:	21017c04 	addi	r4,r4,1520
   85c78:	00888340 	call	88834 <printf>
			if (bmp_header1.height > 0) {
   85c7c:	e0bfdd17 	ldw	r2,-140(fp)
   85c80:	10800050 	cmplti	r2,r2,1
   85c84:	1000031e 	bne	r2,zero,85c94 <SD_read_task+0xd94>
				printf("Positive height detected, image will be loaded as upside-down\n");
   85c88:	010002b4 	movhi	r4,10
   85c8c:	21018604 	addi	r4,r4,1560
   85c90:	00889700 	call	88970 <puts>
			}


			printf("Image opened: INPIC2.BMP\n");
   85c94:	010002b4 	movhi	r4,10
   85c98:	21019d04 	addi	r4,r4,1652
   85c9c:	00889700 	call	88970 <puts>
			// BMP header
			data2 = sd_card_read(file_handle2);
   85ca0:	e13fc90f 	ldh	r4,-220(fp)
   85ca4:	00839100 	call	83910 <sd_card_read>
   85ca8:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.magic_number = data2 << 8;
   85cac:	e0bfc70b 	ldhu	r2,-228(fp)
   85cb0:	1004923a 	slli	r2,r2,8
   85cb4:	e0bfe50d 	sth	r2,-108(fp)
			data2 = sd_card_read(file_handle2);
   85cb8:	e13fc90f 	ldh	r4,-220(fp)
   85cbc:	00839100 	call	83910 <sd_card_read>
   85cc0:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.magic_number = bmp_header2.magic_number | data2;
   85cc4:	e0ffe50b 	ldhu	r3,-108(fp)
   85cc8:	e0bfc70b 	ldhu	r2,-228(fp)
   85ccc:	1884b03a 	or	r2,r3,r2
   85cd0:	e0bfe50d 	sth	r2,-108(fp)

			data2 = sd_card_read(file_handle2);
   85cd4:	e13fc90f 	ldh	r4,-220(fp)
   85cd8:	00839100 	call	83910 <sd_card_read>
   85cdc:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.file_size = data2;
   85ce0:	e0bfc70b 	ldhu	r2,-228(fp)
   85ce4:	e0bfe615 	stw	r2,-104(fp)
			data2 = sd_card_read(file_handle2);
   85ce8:	e13fc90f 	ldh	r4,-220(fp)
   85cec:	00839100 	call	83910 <sd_card_read>
   85cf0:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.file_size = bmp_header2.file_size | data2 << 8;
   85cf4:	e0ffe617 	ldw	r3,-104(fp)
   85cf8:	e0bfc70b 	ldhu	r2,-228(fp)
   85cfc:	1004923a 	slli	r2,r2,8
   85d00:	1884b03a 	or	r2,r3,r2
   85d04:	e0bfe615 	stw	r2,-104(fp)
			data2 = sd_card_read(file_handle2);
   85d08:	e13fc90f 	ldh	r4,-220(fp)
   85d0c:	00839100 	call	83910 <sd_card_read>
   85d10:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.file_size = bmp_header2.file_size | data2 << 16;
   85d14:	e0ffe617 	ldw	r3,-104(fp)
   85d18:	e0bfc70b 	ldhu	r2,-228(fp)
   85d1c:	1004943a 	slli	r2,r2,16
   85d20:	1884b03a 	or	r2,r3,r2
   85d24:	e0bfe615 	stw	r2,-104(fp)
			data2 = sd_card_read(file_handle2);
   85d28:	e13fc90f 	ldh	r4,-220(fp)
   85d2c:	00839100 	call	83910 <sd_card_read>
   85d30:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.file_size = bmp_header2.file_size | data2 << 24;
   85d34:	e0ffe617 	ldw	r3,-104(fp)
   85d38:	e0bfc70b 	ldhu	r2,-228(fp)
   85d3c:	1004963a 	slli	r2,r2,24
   85d40:	1884b03a 	or	r2,r3,r2
   85d44:	e0bfe615 	stw	r2,-104(fp)

			// unused
			data2 = sd_card_read(file_handle2);
   85d48:	e13fc90f 	ldh	r4,-220(fp)
   85d4c:	00839100 	call	83910 <sd_card_read>
   85d50:	e0bfc70d 	sth	r2,-228(fp)
			data2 = sd_card_read(file_handle2);
   85d54:	e13fc90f 	ldh	r4,-220(fp)
   85d58:	00839100 	call	83910 <sd_card_read>
   85d5c:	e0bfc70d 	sth	r2,-228(fp)
			data2 = sd_card_read(file_handle2);
   85d60:	e13fc90f 	ldh	r4,-220(fp)
   85d64:	00839100 	call	83910 <sd_card_read>
   85d68:	e0bfc70d 	sth	r2,-228(fp)
			data2 = sd_card_read(file_handle2);
   85d6c:	e13fc90f 	ldh	r4,-220(fp)
   85d70:	00839100 	call	83910 <sd_card_read>
   85d74:	e0bfc70d 	sth	r2,-228(fp)

			data2 = sd_card_read(file_handle2);
   85d78:	e13fc90f 	ldh	r4,-220(fp)
   85d7c:	00839100 	call	83910 <sd_card_read>
   85d80:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.data_offset = data2;
   85d84:	e0bfc70b 	ldhu	r2,-228(fp)
   85d88:	e0bfe715 	stw	r2,-100(fp)
			data2 = sd_card_read(file_handle2);
   85d8c:	e13fc90f 	ldh	r4,-220(fp)
   85d90:	00839100 	call	83910 <sd_card_read>
   85d94:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.data_offset = bmp_header2.data_offset | data2 << 8;
   85d98:	e0ffe717 	ldw	r3,-100(fp)
   85d9c:	e0bfc70b 	ldhu	r2,-228(fp)
   85da0:	1004923a 	slli	r2,r2,8
   85da4:	1884b03a 	or	r2,r3,r2
   85da8:	e0bfe715 	stw	r2,-100(fp)
			data2 = sd_card_read(file_handle2);
   85dac:	e13fc90f 	ldh	r4,-220(fp)
   85db0:	00839100 	call	83910 <sd_card_read>
   85db4:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.data_offset = bmp_header2.data_offset | data2 << 16;
   85db8:	e0ffe717 	ldw	r3,-100(fp)
   85dbc:	e0bfc70b 	ldhu	r2,-228(fp)
   85dc0:	1004943a 	slli	r2,r2,16
   85dc4:	1884b03a 	or	r2,r3,r2
   85dc8:	e0bfe715 	stw	r2,-100(fp)
			data2 = sd_card_read(file_handle2);
   85dcc:	e13fc90f 	ldh	r4,-220(fp)
   85dd0:	00839100 	call	83910 <sd_card_read>
   85dd4:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.data_offset = bmp_header2.data_offset | data2 << 24;
   85dd8:	e0ffe717 	ldw	r3,-100(fp)
   85ddc:	e0bfc70b 	ldhu	r2,-228(fp)
   85de0:	1004963a 	slli	r2,r2,24
   85de4:	1884b03a 	or	r2,r3,r2
   85de8:	e0bfe715 	stw	r2,-100(fp)

			data2 = sd_card_read(file_handle2);
   85dec:	e13fc90f 	ldh	r4,-220(fp)
   85df0:	00839100 	call	83910 <sd_card_read>
   85df4:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.header_size = data2;
   85df8:	e0bfc70b 	ldhu	r2,-228(fp)
   85dfc:	e0bfe815 	stw	r2,-96(fp)
			data2 = sd_card_read(file_handle2);
   85e00:	e13fc90f 	ldh	r4,-220(fp)
   85e04:	00839100 	call	83910 <sd_card_read>
   85e08:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.header_size = bmp_header2.header_size | data2 << 8;
   85e0c:	e0ffe817 	ldw	r3,-96(fp)
   85e10:	e0bfc70b 	ldhu	r2,-228(fp)
   85e14:	1004923a 	slli	r2,r2,8
   85e18:	1884b03a 	or	r2,r3,r2
   85e1c:	e0bfe815 	stw	r2,-96(fp)
			data2 = sd_card_read(file_handle2);
   85e20:	e13fc90f 	ldh	r4,-220(fp)
   85e24:	00839100 	call	83910 <sd_card_read>
   85e28:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.header_size = bmp_header2.header_size | data2 << 16;
   85e2c:	e0ffe817 	ldw	r3,-96(fp)
   85e30:	e0bfc70b 	ldhu	r2,-228(fp)
   85e34:	1004943a 	slli	r2,r2,16
   85e38:	1884b03a 	or	r2,r3,r2
   85e3c:	e0bfe815 	stw	r2,-96(fp)
			data2 = sd_card_read(file_handle2);
   85e40:	e13fc90f 	ldh	r4,-220(fp)
   85e44:	00839100 	call	83910 <sd_card_read>
   85e48:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.header_size = bmp_header2.header_size | data2 << 24;
   85e4c:	e0ffe817 	ldw	r3,-96(fp)
   85e50:	e0bfc70b 	ldhu	r2,-228(fp)
   85e54:	1004963a 	slli	r2,r2,24
   85e58:	1884b03a 	or	r2,r3,r2
   85e5c:	e0bfe815 	stw	r2,-96(fp)

			data2 = sd_card_read(file_handle2);
   85e60:	e13fc90f 	ldh	r4,-220(fp)
   85e64:	00839100 	call	83910 <sd_card_read>
   85e68:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.width = data2;
   85e6c:	e0bfc70b 	ldhu	r2,-228(fp)
   85e70:	e0bfe915 	stw	r2,-92(fp)
			data2 = sd_card_read(file_handle2);
   85e74:	e13fc90f 	ldh	r4,-220(fp)
   85e78:	00839100 	call	83910 <sd_card_read>
   85e7c:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.width = bmp_header2.width | data2 << 8;
   85e80:	e0ffe917 	ldw	r3,-92(fp)
   85e84:	e0bfc70b 	ldhu	r2,-228(fp)
   85e88:	1004923a 	slli	r2,r2,8
   85e8c:	1884b03a 	or	r2,r3,r2
   85e90:	e0bfe915 	stw	r2,-92(fp)
			data2 = sd_card_read(file_handle2);
   85e94:	e13fc90f 	ldh	r4,-220(fp)
   85e98:	00839100 	call	83910 <sd_card_read>
   85e9c:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.width = bmp_header2.width | data2 << 16;
   85ea0:	e0ffe917 	ldw	r3,-92(fp)
   85ea4:	e0bfc70b 	ldhu	r2,-228(fp)
   85ea8:	1004943a 	slli	r2,r2,16
   85eac:	1884b03a 	or	r2,r3,r2
   85eb0:	e0bfe915 	stw	r2,-92(fp)
			data2 = sd_card_read(file_handle2);
   85eb4:	e13fc90f 	ldh	r4,-220(fp)
   85eb8:	00839100 	call	83910 <sd_card_read>
   85ebc:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.width = bmp_header2.width | data2 << 24;
   85ec0:	e0ffe917 	ldw	r3,-92(fp)
   85ec4:	e0bfc70b 	ldhu	r2,-228(fp)
   85ec8:	1004963a 	slli	r2,r2,24
   85ecc:	1884b03a 	or	r2,r3,r2
   85ed0:	e0bfe915 	stw	r2,-92(fp)

			data2 = sd_card_read(file_handle2);
   85ed4:	e13fc90f 	ldh	r4,-220(fp)
   85ed8:	00839100 	call	83910 <sd_card_read>
   85edc:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.height = data2;
   85ee0:	e0bfc70b 	ldhu	r2,-228(fp)
   85ee4:	e0bfea15 	stw	r2,-88(fp)
			data2 = sd_card_read(file_handle2);
   85ee8:	e13fc90f 	ldh	r4,-220(fp)
   85eec:	00839100 	call	83910 <sd_card_read>
   85ef0:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.height = bmp_header2.height | data2 << 8;
   85ef4:	e0ffea17 	ldw	r3,-88(fp)
   85ef8:	e0bfc70b 	ldhu	r2,-228(fp)
   85efc:	1004923a 	slli	r2,r2,8
   85f00:	1884b03a 	or	r2,r3,r2
   85f04:	e0bfea15 	stw	r2,-88(fp)
			data2 = sd_card_read(file_handle2);
   85f08:	e13fc90f 	ldh	r4,-220(fp)
   85f0c:	00839100 	call	83910 <sd_card_read>
   85f10:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.height = bmp_header2.height | data2 << 16;
   85f14:	e0ffea17 	ldw	r3,-88(fp)
   85f18:	e0bfc70b 	ldhu	r2,-228(fp)
   85f1c:	1004943a 	slli	r2,r2,16
   85f20:	1884b03a 	or	r2,r3,r2
   85f24:	e0bfea15 	stw	r2,-88(fp)
			data2 = sd_card_read(file_handle2);
   85f28:	e13fc90f 	ldh	r4,-220(fp)
   85f2c:	00839100 	call	83910 <sd_card_read>
   85f30:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.height = bmp_header2.height | data2 << 24;
   85f34:	e0ffea17 	ldw	r3,-88(fp)
   85f38:	e0bfc70b 	ldhu	r2,-228(fp)
   85f3c:	1004963a 	slli	r2,r2,24
   85f40:	1884b03a 	or	r2,r3,r2
   85f44:	e0bfea15 	stw	r2,-88(fp)


			data2 = sd_card_read(file_handle2);
   85f48:	e13fc90f 	ldh	r4,-220(fp)
   85f4c:	00839100 	call	83910 <sd_card_read>
   85f50:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.num_plane = data2;
   85f54:	e0bfc70b 	ldhu	r2,-228(fp)
   85f58:	e0bfeb0d 	sth	r2,-84(fp)
			data2 = sd_card_read(file_handle2);
   85f5c:	e13fc90f 	ldh	r4,-220(fp)
   85f60:	00839100 	call	83910 <sd_card_read>
   85f64:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.num_plane = bmp_header2.num_plane | data2 << 8;
   85f68:	e0ffeb0b 	ldhu	r3,-84(fp)
   85f6c:	e0bfc70b 	ldhu	r2,-228(fp)
   85f70:	1004923a 	slli	r2,r2,8
   85f74:	1884b03a 	or	r2,r3,r2
   85f78:	e0bfeb0d 	sth	r2,-84(fp)

			data2 = sd_card_read(file_handle2);
   85f7c:	e13fc90f 	ldh	r4,-220(fp)
   85f80:	00839100 	call	83910 <sd_card_read>
   85f84:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.num_bits_per_pixel = data2;
   85f88:	e0bfc70b 	ldhu	r2,-228(fp)
   85f8c:	e0bfeb8d 	sth	r2,-82(fp)
			data2 = sd_card_read(file_handle2);
   85f90:	e13fc90f 	ldh	r4,-220(fp)
   85f94:	00839100 	call	83910 <sd_card_read>
   85f98:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.num_bits_per_pixel = bmp_header2.num_bits_per_pixel | data2 << 8;
   85f9c:	e0ffeb8b 	ldhu	r3,-82(fp)
   85fa0:	e0bfc70b 	ldhu	r2,-228(fp)
   85fa4:	1004923a 	slli	r2,r2,8
   85fa8:	1884b03a 	or	r2,r3,r2
   85fac:	e0bfeb8d 	sth	r2,-82(fp)

			data2 = sd_card_read(file_handle2);
   85fb0:	e13fc90f 	ldh	r4,-220(fp)
   85fb4:	00839100 	call	83910 <sd_card_read>
   85fb8:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.compress_mode = data2;
   85fbc:	e0bfc70b 	ldhu	r2,-228(fp)
   85fc0:	e0bfec15 	stw	r2,-80(fp)
			data2 = sd_card_read(file_handle2);
   85fc4:	e13fc90f 	ldh	r4,-220(fp)
   85fc8:	00839100 	call	83910 <sd_card_read>
   85fcc:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.compress_mode = bmp_header2.compress_mode | data2 << 8;
   85fd0:	e0ffec17 	ldw	r3,-80(fp)
   85fd4:	e0bfc70b 	ldhu	r2,-228(fp)
   85fd8:	1004923a 	slli	r2,r2,8
   85fdc:	1884b03a 	or	r2,r3,r2
   85fe0:	e0bfec15 	stw	r2,-80(fp)
			data2 = sd_card_read(file_handle2);
   85fe4:	e13fc90f 	ldh	r4,-220(fp)
   85fe8:	00839100 	call	83910 <sd_card_read>
   85fec:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.compress_mode = bmp_header2.compress_mode | data2 << 16;
   85ff0:	e0ffec17 	ldw	r3,-80(fp)
   85ff4:	e0bfc70b 	ldhu	r2,-228(fp)
   85ff8:	1004943a 	slli	r2,r2,16
   85ffc:	1884b03a 	or	r2,r3,r2
   86000:	e0bfec15 	stw	r2,-80(fp)
			data2 = sd_card_read(file_handle2);
   86004:	e13fc90f 	ldh	r4,-220(fp)
   86008:	00839100 	call	83910 <sd_card_read>
   8600c:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.compress_mode = bmp_header2.compress_mode | data2 << 24;
   86010:	e0ffec17 	ldw	r3,-80(fp)
   86014:	e0bfc70b 	ldhu	r2,-228(fp)
   86018:	1004963a 	slli	r2,r2,24
   8601c:	1884b03a 	or	r2,r3,r2
   86020:	e0bfec15 	stw	r2,-80(fp)

			data2 = sd_card_read(file_handle2);
   86024:	e13fc90f 	ldh	r4,-220(fp)
   86028:	00839100 	call	83910 <sd_card_read>
   8602c:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.data_size = data2;
   86030:	e0bfc70b 	ldhu	r2,-228(fp)
   86034:	e0bfed15 	stw	r2,-76(fp)
			data2 = sd_card_read(file_handle2);
   86038:	e13fc90f 	ldh	r4,-220(fp)
   8603c:	00839100 	call	83910 <sd_card_read>
   86040:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.data_size = bmp_header2.data_size | data2 << 8;
   86044:	e0ffed17 	ldw	r3,-76(fp)
   86048:	e0bfc70b 	ldhu	r2,-228(fp)
   8604c:	1004923a 	slli	r2,r2,8
   86050:	1884b03a 	or	r2,r3,r2
   86054:	e0bfed15 	stw	r2,-76(fp)
			data2 = sd_card_read(file_handle2);
   86058:	e13fc90f 	ldh	r4,-220(fp)
   8605c:	00839100 	call	83910 <sd_card_read>
   86060:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.data_size = bmp_header2.data_size | data2 << 16;
   86064:	e0ffed17 	ldw	r3,-76(fp)
   86068:	e0bfc70b 	ldhu	r2,-228(fp)
   8606c:	1004943a 	slli	r2,r2,16
   86070:	1884b03a 	or	r2,r3,r2
   86074:	e0bfed15 	stw	r2,-76(fp)
			data2 = sd_card_read(file_handle2);
   86078:	e13fc90f 	ldh	r4,-220(fp)
   8607c:	00839100 	call	83910 <sd_card_read>
   86080:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.data_size = bmp_header2.data_size | data2 << 24;
   86084:	e0ffed17 	ldw	r3,-76(fp)
   86088:	e0bfc70b 	ldhu	r2,-228(fp)
   8608c:	1004963a 	slli	r2,r2,24
   86090:	1884b03a 	or	r2,r3,r2
   86094:	e0bfed15 	stw	r2,-76(fp)

			data2 = sd_card_read(file_handle2);
   86098:	e13fc90f 	ldh	r4,-220(fp)
   8609c:	00839100 	call	83910 <sd_card_read>
   860a0:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.hor_resolution = data2;
   860a4:	e0bfc70b 	ldhu	r2,-228(fp)
   860a8:	e0bfee15 	stw	r2,-72(fp)
			data2 = sd_card_read(file_handle2);
   860ac:	e13fc90f 	ldh	r4,-220(fp)
   860b0:	00839100 	call	83910 <sd_card_read>
   860b4:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.hor_resolution = bmp_header2.hor_resolution | data2 << 8;
   860b8:	e0ffee17 	ldw	r3,-72(fp)
   860bc:	e0bfc70b 	ldhu	r2,-228(fp)
   860c0:	1004923a 	slli	r2,r2,8
   860c4:	1884b03a 	or	r2,r3,r2
   860c8:	e0bfee15 	stw	r2,-72(fp)
			data2 = sd_card_read(file_handle2);
   860cc:	e13fc90f 	ldh	r4,-220(fp)
   860d0:	00839100 	call	83910 <sd_card_read>
   860d4:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.hor_resolution = bmp_header2.hor_resolution | data2 << 16;
   860d8:	e0ffee17 	ldw	r3,-72(fp)
   860dc:	e0bfc70b 	ldhu	r2,-228(fp)
   860e0:	1004943a 	slli	r2,r2,16
   860e4:	1884b03a 	or	r2,r3,r2
   860e8:	e0bfee15 	stw	r2,-72(fp)
			data2 = sd_card_read(file_handle2);
   860ec:	e13fc90f 	ldh	r4,-220(fp)
   860f0:	00839100 	call	83910 <sd_card_read>
   860f4:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.hor_resolution = bmp_header2.hor_resolution | data2 << 24;
   860f8:	e0ffee17 	ldw	r3,-72(fp)
   860fc:	e0bfc70b 	ldhu	r2,-228(fp)
   86100:	1004963a 	slli	r2,r2,24
   86104:	1884b03a 	or	r2,r3,r2
   86108:	e0bfee15 	stw	r2,-72(fp)

			data2 = sd_card_read(file_handle2);
   8610c:	e13fc90f 	ldh	r4,-220(fp)
   86110:	00839100 	call	83910 <sd_card_read>
   86114:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.ver_resolution = data2;
   86118:	e0bfc70b 	ldhu	r2,-228(fp)
   8611c:	e0bfef15 	stw	r2,-68(fp)
			data2 = sd_card_read(file_handle2);
   86120:	e13fc90f 	ldh	r4,-220(fp)
   86124:	00839100 	call	83910 <sd_card_read>
   86128:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.ver_resolution = bmp_header2.ver_resolution | data2 << 8;
   8612c:	e0ffef17 	ldw	r3,-68(fp)
   86130:	e0bfc70b 	ldhu	r2,-228(fp)
   86134:	1004923a 	slli	r2,r2,8
   86138:	1884b03a 	or	r2,r3,r2
   8613c:	e0bfef15 	stw	r2,-68(fp)
			data2 = sd_card_read(file_handle2);
   86140:	e13fc90f 	ldh	r4,-220(fp)
   86144:	00839100 	call	83910 <sd_card_read>
   86148:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.ver_resolution = bmp_header2.ver_resolution | data2 << 16;
   8614c:	e0ffef17 	ldw	r3,-68(fp)
   86150:	e0bfc70b 	ldhu	r2,-228(fp)
   86154:	1004943a 	slli	r2,r2,16
   86158:	1884b03a 	or	r2,r3,r2
   8615c:	e0bfef15 	stw	r2,-68(fp)
			data2 = sd_card_read(file_handle2);
   86160:	e13fc90f 	ldh	r4,-220(fp)
   86164:	00839100 	call	83910 <sd_card_read>
   86168:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.ver_resolution = bmp_header2.ver_resolution | data2 << 24;
   8616c:	e0ffef17 	ldw	r3,-68(fp)
   86170:	e0bfc70b 	ldhu	r2,-228(fp)
   86174:	1004963a 	slli	r2,r2,24
   86178:	1884b03a 	or	r2,r3,r2
   8617c:	e0bfef15 	stw	r2,-68(fp)

			data2 = sd_card_read(file_handle2);
   86180:	e13fc90f 	ldh	r4,-220(fp)
   86184:	00839100 	call	83910 <sd_card_read>
   86188:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.num_color_in_palette = data2;
   8618c:	e0bfc70b 	ldhu	r2,-228(fp)
   86190:	e0bff015 	stw	r2,-64(fp)
			data2 = sd_card_read(file_handle2);
   86194:	e13fc90f 	ldh	r4,-220(fp)
   86198:	00839100 	call	83910 <sd_card_read>
   8619c:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.num_color_in_palette = bmp_header2.num_color_in_palette | data2 << 8;
   861a0:	e0fff017 	ldw	r3,-64(fp)
   861a4:	e0bfc70b 	ldhu	r2,-228(fp)
   861a8:	1004923a 	slli	r2,r2,8
   861ac:	1884b03a 	or	r2,r3,r2
   861b0:	e0bff015 	stw	r2,-64(fp)
			data2 = sd_card_read(file_handle2);
   861b4:	e13fc90f 	ldh	r4,-220(fp)
   861b8:	00839100 	call	83910 <sd_card_read>
   861bc:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.num_color_in_palette = bmp_header2.num_color_in_palette | data2 << 16;
   861c0:	e0fff017 	ldw	r3,-64(fp)
   861c4:	e0bfc70b 	ldhu	r2,-228(fp)
   861c8:	1004943a 	slli	r2,r2,16
   861cc:	1884b03a 	or	r2,r3,r2
   861d0:	e0bff015 	stw	r2,-64(fp)
			data2 = sd_card_read(file_handle2);
   861d4:	e13fc90f 	ldh	r4,-220(fp)
   861d8:	00839100 	call	83910 <sd_card_read>
   861dc:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.num_color_in_palette = bmp_header2.num_color_in_palette | data2 << 24;
   861e0:	e0fff017 	ldw	r3,-64(fp)
   861e4:	e0bfc70b 	ldhu	r2,-228(fp)
   861e8:	1004963a 	slli	r2,r2,24
   861ec:	1884b03a 	or	r2,r3,r2
   861f0:	e0bff015 	stw	r2,-64(fp)

			data2 = sd_card_read(file_handle2);
   861f4:	e13fc90f 	ldh	r4,-220(fp)
   861f8:	00839100 	call	83910 <sd_card_read>
   861fc:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.important_color = data2;
   86200:	e0bfc70b 	ldhu	r2,-228(fp)
   86204:	e0bff115 	stw	r2,-60(fp)
			data2 = sd_card_read(file_handle2);
   86208:	e13fc90f 	ldh	r4,-220(fp)
   8620c:	00839100 	call	83910 <sd_card_read>
   86210:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.important_color = bmp_header2.important_color | data2 << 8;
   86214:	e0fff117 	ldw	r3,-60(fp)
   86218:	e0bfc70b 	ldhu	r2,-228(fp)
   8621c:	1004923a 	slli	r2,r2,8
   86220:	1884b03a 	or	r2,r3,r2
   86224:	e0bff115 	stw	r2,-60(fp)
			data2 = sd_card_read(file_handle2);
   86228:	e13fc90f 	ldh	r4,-220(fp)
   8622c:	00839100 	call	83910 <sd_card_read>
   86230:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.important_color = bmp_header2.important_color | data2 << 16;
   86234:	e0fff117 	ldw	r3,-60(fp)
   86238:	e0bfc70b 	ldhu	r2,-228(fp)
   8623c:	1004943a 	slli	r2,r2,16
   86240:	1884b03a 	or	r2,r3,r2
   86244:	e0bff115 	stw	r2,-60(fp)
			data2 = sd_card_read(file_handle2);
   86248:	e13fc90f 	ldh	r4,-220(fp)
   8624c:	00839100 	call	83910 <sd_card_read>
   86250:	e0bfc70d 	sth	r2,-228(fp)
			bmp_header2.important_color = bmp_header2.important_color | data2 << 24;
   86254:	e0fff117 	ldw	r3,-60(fp)
   86258:	e0bfc70b 	ldhu	r2,-228(fp)
   8625c:	1004963a 	slli	r2,r2,24
   86260:	1884b03a 	or	r2,r3,r2
   86264:	e0bff115 	stw	r2,-60(fp)

			printf("Reading image of dimension: %d x %d\n", bmp_header2.width, bmp_header2.height);
   86268:	e17fe917 	ldw	r5,-92(fp)
   8626c:	e1bfea17 	ldw	r6,-88(fp)
   86270:	010002b4 	movhi	r4,10
   86274:	21017c04 	addi	r4,r4,1520
   86278:	00888340 	call	88834 <printf>
			if (bmp_header2.height > 0) {
   8627c:	e0bfea17 	ldw	r2,-88(fp)
   86280:	10800050 	cmplti	r2,r2,1
   86284:	1000031e 	bne	r2,zero,86294 <SD_read_task+0x1394>
				printf("Positive height detected, image will be loaded as upside-down\n");
   86288:	010002b4 	movhi	r4,10
   8628c:	21018604 	addi	r4,r4,1560
   86290:	00889700 	call	88970 <puts>
			}

			printf("Image opened: INPIC3.BMP\n");
   86294:	010002b4 	movhi	r4,10
   86298:	2101a404 	addi	r4,r4,1680
   8629c:	00889700 	call	88970 <puts>
			// BMP header
			data3 = sd_card_read(file_handle3);
   862a0:	e13fc88f 	ldh	r4,-222(fp)
   862a4:	00839100 	call	83910 <sd_card_read>
   862a8:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.magic_number = data3 << 8;
   862ac:	e0bfc68b 	ldhu	r2,-230(fp)
   862b0:	1004923a 	slli	r2,r2,8
   862b4:	e0bff20d 	sth	r2,-56(fp)
			data3 = sd_card_read(file_handle3);
   862b8:	e13fc88f 	ldh	r4,-222(fp)
   862bc:	00839100 	call	83910 <sd_card_read>
   862c0:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.magic_number = bmp_header3.magic_number | data3;
   862c4:	e0fff20b 	ldhu	r3,-56(fp)
   862c8:	e0bfc68b 	ldhu	r2,-230(fp)
   862cc:	1884b03a 	or	r2,r3,r2
   862d0:	e0bff20d 	sth	r2,-56(fp)

			data3 = sd_card_read(file_handle3);
   862d4:	e13fc88f 	ldh	r4,-222(fp)
   862d8:	00839100 	call	83910 <sd_card_read>
   862dc:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.file_size = data3;
   862e0:	e0bfc68b 	ldhu	r2,-230(fp)
   862e4:	e0bff315 	stw	r2,-52(fp)
			data3 = sd_card_read(file_handle3);
   862e8:	e13fc88f 	ldh	r4,-222(fp)
   862ec:	00839100 	call	83910 <sd_card_read>
   862f0:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.file_size = bmp_header3.file_size | data3 << 8;
   862f4:	e0fff317 	ldw	r3,-52(fp)
   862f8:	e0bfc68b 	ldhu	r2,-230(fp)
   862fc:	1004923a 	slli	r2,r2,8
   86300:	1884b03a 	or	r2,r3,r2
   86304:	e0bff315 	stw	r2,-52(fp)
			data3 = sd_card_read(file_handle3);
   86308:	e13fc88f 	ldh	r4,-222(fp)
   8630c:	00839100 	call	83910 <sd_card_read>
   86310:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.file_size = bmp_header3.file_size | data3 << 16;
   86314:	e0fff317 	ldw	r3,-52(fp)
   86318:	e0bfc68b 	ldhu	r2,-230(fp)
   8631c:	1004943a 	slli	r2,r2,16
   86320:	1884b03a 	or	r2,r3,r2
   86324:	e0bff315 	stw	r2,-52(fp)
			data3 = sd_card_read(file_handle3);
   86328:	e13fc88f 	ldh	r4,-222(fp)
   8632c:	00839100 	call	83910 <sd_card_read>
   86330:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.file_size = bmp_header3.file_size | data3 << 24;
   86334:	e0fff317 	ldw	r3,-52(fp)
   86338:	e0bfc68b 	ldhu	r2,-230(fp)
   8633c:	1004963a 	slli	r2,r2,24
   86340:	1884b03a 	or	r2,r3,r2
   86344:	e0bff315 	stw	r2,-52(fp)

			// unused
			data3 = sd_card_read(file_handle3);
   86348:	e13fc88f 	ldh	r4,-222(fp)
   8634c:	00839100 	call	83910 <sd_card_read>
   86350:	e0bfc68d 	sth	r2,-230(fp)
			data3 = sd_card_read(file_handle3);
   86354:	e13fc88f 	ldh	r4,-222(fp)
   86358:	00839100 	call	83910 <sd_card_read>
   8635c:	e0bfc68d 	sth	r2,-230(fp)
			data3 = sd_card_read(file_handle3);
   86360:	e13fc88f 	ldh	r4,-222(fp)
   86364:	00839100 	call	83910 <sd_card_read>
   86368:	e0bfc68d 	sth	r2,-230(fp)
			data3 = sd_card_read(file_handle3);
   8636c:	e13fc88f 	ldh	r4,-222(fp)
   86370:	00839100 	call	83910 <sd_card_read>
   86374:	e0bfc68d 	sth	r2,-230(fp)

			data3 = sd_card_read(file_handle3);
   86378:	e13fc88f 	ldh	r4,-222(fp)
   8637c:	00839100 	call	83910 <sd_card_read>
   86380:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.data_offset = data3;
   86384:	e0bfc68b 	ldhu	r2,-230(fp)
   86388:	e0bff415 	stw	r2,-48(fp)
			data3 = sd_card_read(file_handle3);
   8638c:	e13fc88f 	ldh	r4,-222(fp)
   86390:	00839100 	call	83910 <sd_card_read>
   86394:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.data_offset = bmp_header3.data_offset | data3 << 8;
   86398:	e0fff417 	ldw	r3,-48(fp)
   8639c:	e0bfc68b 	ldhu	r2,-230(fp)
   863a0:	1004923a 	slli	r2,r2,8
   863a4:	1884b03a 	or	r2,r3,r2
   863a8:	e0bff415 	stw	r2,-48(fp)
			data3 = sd_card_read(file_handle3);
   863ac:	e13fc88f 	ldh	r4,-222(fp)
   863b0:	00839100 	call	83910 <sd_card_read>
   863b4:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.data_offset = bmp_header3.data_offset | data3 << 16;
   863b8:	e0fff417 	ldw	r3,-48(fp)
   863bc:	e0bfc68b 	ldhu	r2,-230(fp)
   863c0:	1004943a 	slli	r2,r2,16
   863c4:	1884b03a 	or	r2,r3,r2
   863c8:	e0bff415 	stw	r2,-48(fp)
			data3 = sd_card_read(file_handle3);
   863cc:	e13fc88f 	ldh	r4,-222(fp)
   863d0:	00839100 	call	83910 <sd_card_read>
   863d4:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.data_offset = bmp_header3.data_offset | data3 << 24;
   863d8:	e0fff417 	ldw	r3,-48(fp)
   863dc:	e0bfc68b 	ldhu	r2,-230(fp)
   863e0:	1004963a 	slli	r2,r2,24
   863e4:	1884b03a 	or	r2,r3,r2
   863e8:	e0bff415 	stw	r2,-48(fp)

			data3 = sd_card_read(file_handle3);
   863ec:	e13fc88f 	ldh	r4,-222(fp)
   863f0:	00839100 	call	83910 <sd_card_read>
   863f4:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.header_size = data3;
   863f8:	e0bfc68b 	ldhu	r2,-230(fp)
   863fc:	e0bff515 	stw	r2,-44(fp)
			data3 = sd_card_read(file_handle3);
   86400:	e13fc88f 	ldh	r4,-222(fp)
   86404:	00839100 	call	83910 <sd_card_read>
   86408:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.header_size = bmp_header3.header_size | data3 << 8;
   8640c:	e0fff517 	ldw	r3,-44(fp)
   86410:	e0bfc68b 	ldhu	r2,-230(fp)
   86414:	1004923a 	slli	r2,r2,8
   86418:	1884b03a 	or	r2,r3,r2
   8641c:	e0bff515 	stw	r2,-44(fp)
			data3 = sd_card_read(file_handle3);
   86420:	e13fc88f 	ldh	r4,-222(fp)
   86424:	00839100 	call	83910 <sd_card_read>
   86428:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.header_size = bmp_header3.header_size | data3 << 16;
   8642c:	e0fff517 	ldw	r3,-44(fp)
   86430:	e0bfc68b 	ldhu	r2,-230(fp)
   86434:	1004943a 	slli	r2,r2,16
   86438:	1884b03a 	or	r2,r3,r2
   8643c:	e0bff515 	stw	r2,-44(fp)
			data3 = sd_card_read(file_handle3);
   86440:	e13fc88f 	ldh	r4,-222(fp)
   86444:	00839100 	call	83910 <sd_card_read>
   86448:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.header_size = bmp_header3.header_size | data3 << 24;
   8644c:	e0fff517 	ldw	r3,-44(fp)
   86450:	e0bfc68b 	ldhu	r2,-230(fp)
   86454:	1004963a 	slli	r2,r2,24
   86458:	1884b03a 	or	r2,r3,r2
   8645c:	e0bff515 	stw	r2,-44(fp)

			data3 = sd_card_read(file_handle3);
   86460:	e13fc88f 	ldh	r4,-222(fp)
   86464:	00839100 	call	83910 <sd_card_read>
   86468:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.width = data3;
   8646c:	e0bfc68b 	ldhu	r2,-230(fp)
   86470:	e0bff615 	stw	r2,-40(fp)
			data3 = sd_card_read(file_handle3);
   86474:	e13fc88f 	ldh	r4,-222(fp)
   86478:	00839100 	call	83910 <sd_card_read>
   8647c:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.width = bmp_header3.width | data3 << 8;
   86480:	e0fff617 	ldw	r3,-40(fp)
   86484:	e0bfc68b 	ldhu	r2,-230(fp)
   86488:	1004923a 	slli	r2,r2,8
   8648c:	1884b03a 	or	r2,r3,r2
   86490:	e0bff615 	stw	r2,-40(fp)
			data3 = sd_card_read(file_handle3);
   86494:	e13fc88f 	ldh	r4,-222(fp)
   86498:	00839100 	call	83910 <sd_card_read>
   8649c:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.width = bmp_header3.width | data3 << 16;
   864a0:	e0fff617 	ldw	r3,-40(fp)
   864a4:	e0bfc68b 	ldhu	r2,-230(fp)
   864a8:	1004943a 	slli	r2,r2,16
   864ac:	1884b03a 	or	r2,r3,r2
   864b0:	e0bff615 	stw	r2,-40(fp)
			data3 = sd_card_read(file_handle3);
   864b4:	e13fc88f 	ldh	r4,-222(fp)
   864b8:	00839100 	call	83910 <sd_card_read>
   864bc:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.width = bmp_header3.width | data3 << 24;
   864c0:	e0fff617 	ldw	r3,-40(fp)
   864c4:	e0bfc68b 	ldhu	r2,-230(fp)
   864c8:	1004963a 	slli	r2,r2,24
   864cc:	1884b03a 	or	r2,r3,r2
   864d0:	e0bff615 	stw	r2,-40(fp)

			data3 = sd_card_read(file_handle3);
   864d4:	e13fc88f 	ldh	r4,-222(fp)
   864d8:	00839100 	call	83910 <sd_card_read>
   864dc:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.height = data3;
   864e0:	e0bfc68b 	ldhu	r2,-230(fp)
   864e4:	e0bff715 	stw	r2,-36(fp)
			data3 = sd_card_read(file_handle3);
   864e8:	e13fc88f 	ldh	r4,-222(fp)
   864ec:	00839100 	call	83910 <sd_card_read>
   864f0:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.height = bmp_header3.height | data3 << 8;
   864f4:	e0fff717 	ldw	r3,-36(fp)
   864f8:	e0bfc68b 	ldhu	r2,-230(fp)
   864fc:	1004923a 	slli	r2,r2,8
   86500:	1884b03a 	or	r2,r3,r2
   86504:	e0bff715 	stw	r2,-36(fp)
			data3 = sd_card_read(file_handle3);
   86508:	e13fc88f 	ldh	r4,-222(fp)
   8650c:	00839100 	call	83910 <sd_card_read>
   86510:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.height = bmp_header3.height | data3 << 16;
   86514:	e0fff717 	ldw	r3,-36(fp)
   86518:	e0bfc68b 	ldhu	r2,-230(fp)
   8651c:	1004943a 	slli	r2,r2,16
   86520:	1884b03a 	or	r2,r3,r2
   86524:	e0bff715 	stw	r2,-36(fp)
			data3 = sd_card_read(file_handle3);
   86528:	e13fc88f 	ldh	r4,-222(fp)
   8652c:	00839100 	call	83910 <sd_card_read>
   86530:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.height = bmp_header3.height | data3 << 24;
   86534:	e0fff717 	ldw	r3,-36(fp)
   86538:	e0bfc68b 	ldhu	r2,-230(fp)
   8653c:	1004963a 	slli	r2,r2,24
   86540:	1884b03a 	or	r2,r3,r2
   86544:	e0bff715 	stw	r2,-36(fp)


			data3 = sd_card_read(file_handle3);
   86548:	e13fc88f 	ldh	r4,-222(fp)
   8654c:	00839100 	call	83910 <sd_card_read>
   86550:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.num_plane = data3;
   86554:	e0bfc68b 	ldhu	r2,-230(fp)
   86558:	e0bff80d 	sth	r2,-32(fp)
			data3 = sd_card_read(file_handle3);
   8655c:	e13fc88f 	ldh	r4,-222(fp)
   86560:	00839100 	call	83910 <sd_card_read>
   86564:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.num_plane = bmp_header3.num_plane | data3 << 8;
   86568:	e0fff80b 	ldhu	r3,-32(fp)
   8656c:	e0bfc68b 	ldhu	r2,-230(fp)
   86570:	1004923a 	slli	r2,r2,8
   86574:	1884b03a 	or	r2,r3,r2
   86578:	e0bff80d 	sth	r2,-32(fp)

			data3 = sd_card_read(file_handle3);
   8657c:	e13fc88f 	ldh	r4,-222(fp)
   86580:	00839100 	call	83910 <sd_card_read>
   86584:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.num_bits_per_pixel = data3;
   86588:	e0bfc68b 	ldhu	r2,-230(fp)
   8658c:	e0bff88d 	sth	r2,-30(fp)
			data3 = sd_card_read(file_handle3);
   86590:	e13fc88f 	ldh	r4,-222(fp)
   86594:	00839100 	call	83910 <sd_card_read>
   86598:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.num_bits_per_pixel = bmp_header3.num_bits_per_pixel | data3 << 8;
   8659c:	e0fff88b 	ldhu	r3,-30(fp)
   865a0:	e0bfc68b 	ldhu	r2,-230(fp)
   865a4:	1004923a 	slli	r2,r2,8
   865a8:	1884b03a 	or	r2,r3,r2
   865ac:	e0bff88d 	sth	r2,-30(fp)

			data3 = sd_card_read(file_handle3);
   865b0:	e13fc88f 	ldh	r4,-222(fp)
   865b4:	00839100 	call	83910 <sd_card_read>
   865b8:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.compress_mode = data3;
   865bc:	e0bfc68b 	ldhu	r2,-230(fp)
   865c0:	e0bff915 	stw	r2,-28(fp)
			data3 = sd_card_read(file_handle3);
   865c4:	e13fc88f 	ldh	r4,-222(fp)
   865c8:	00839100 	call	83910 <sd_card_read>
   865cc:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.compress_mode = bmp_header3.compress_mode | data3 << 8;
   865d0:	e0fff917 	ldw	r3,-28(fp)
   865d4:	e0bfc68b 	ldhu	r2,-230(fp)
   865d8:	1004923a 	slli	r2,r2,8
   865dc:	1884b03a 	or	r2,r3,r2
   865e0:	e0bff915 	stw	r2,-28(fp)
			data3 = sd_card_read(file_handle3);
   865e4:	e13fc88f 	ldh	r4,-222(fp)
   865e8:	00839100 	call	83910 <sd_card_read>
   865ec:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.compress_mode = bmp_header3.compress_mode | data3 << 16;
   865f0:	e0fff917 	ldw	r3,-28(fp)
   865f4:	e0bfc68b 	ldhu	r2,-230(fp)
   865f8:	1004943a 	slli	r2,r2,16
   865fc:	1884b03a 	or	r2,r3,r2
   86600:	e0bff915 	stw	r2,-28(fp)
			data3 = sd_card_read(file_handle3);
   86604:	e13fc88f 	ldh	r4,-222(fp)
   86608:	00839100 	call	83910 <sd_card_read>
   8660c:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.compress_mode = bmp_header3.compress_mode | data3 << 24;
   86610:	e0fff917 	ldw	r3,-28(fp)
   86614:	e0bfc68b 	ldhu	r2,-230(fp)
   86618:	1004963a 	slli	r2,r2,24
   8661c:	1884b03a 	or	r2,r3,r2
   86620:	e0bff915 	stw	r2,-28(fp)

			data3 = sd_card_read(file_handle3);
   86624:	e13fc88f 	ldh	r4,-222(fp)
   86628:	00839100 	call	83910 <sd_card_read>
   8662c:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.data_size = data3;
   86630:	e0bfc68b 	ldhu	r2,-230(fp)
   86634:	e0bffa15 	stw	r2,-24(fp)
			data3 = sd_card_read(file_handle3);
   86638:	e13fc88f 	ldh	r4,-222(fp)
   8663c:	00839100 	call	83910 <sd_card_read>
   86640:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.data_size = bmp_header3.data_size | data3 << 8;
   86644:	e0fffa17 	ldw	r3,-24(fp)
   86648:	e0bfc68b 	ldhu	r2,-230(fp)
   8664c:	1004923a 	slli	r2,r2,8
   86650:	1884b03a 	or	r2,r3,r2
   86654:	e0bffa15 	stw	r2,-24(fp)
			data3 = sd_card_read(file_handle3);
   86658:	e13fc88f 	ldh	r4,-222(fp)
   8665c:	00839100 	call	83910 <sd_card_read>
   86660:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.data_size = bmp_header3.data_size | data3 << 16;
   86664:	e0fffa17 	ldw	r3,-24(fp)
   86668:	e0bfc68b 	ldhu	r2,-230(fp)
   8666c:	1004943a 	slli	r2,r2,16
   86670:	1884b03a 	or	r2,r3,r2
   86674:	e0bffa15 	stw	r2,-24(fp)
			data3 = sd_card_read(file_handle3);
   86678:	e13fc88f 	ldh	r4,-222(fp)
   8667c:	00839100 	call	83910 <sd_card_read>
   86680:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.data_size = bmp_header3.data_size | data3 << 24;
   86684:	e0fffa17 	ldw	r3,-24(fp)
   86688:	e0bfc68b 	ldhu	r2,-230(fp)
   8668c:	1004963a 	slli	r2,r2,24
   86690:	1884b03a 	or	r2,r3,r2
   86694:	e0bffa15 	stw	r2,-24(fp)

			data3 = sd_card_read(file_handle3);
   86698:	e13fc88f 	ldh	r4,-222(fp)
   8669c:	00839100 	call	83910 <sd_card_read>
   866a0:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.hor_resolution = data3;
   866a4:	e0bfc68b 	ldhu	r2,-230(fp)
   866a8:	e0bffb15 	stw	r2,-20(fp)
			data3 = sd_card_read(file_handle3);
   866ac:	e13fc88f 	ldh	r4,-222(fp)
   866b0:	00839100 	call	83910 <sd_card_read>
   866b4:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.hor_resolution = bmp_header3.hor_resolution | data3 << 8;
   866b8:	e0fffb17 	ldw	r3,-20(fp)
   866bc:	e0bfc68b 	ldhu	r2,-230(fp)
   866c0:	1004923a 	slli	r2,r2,8
   866c4:	1884b03a 	or	r2,r3,r2
   866c8:	e0bffb15 	stw	r2,-20(fp)
			data3 = sd_card_read(file_handle3);
   866cc:	e13fc88f 	ldh	r4,-222(fp)
   866d0:	00839100 	call	83910 <sd_card_read>
   866d4:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.hor_resolution = bmp_header3.hor_resolution | data3 << 16;
   866d8:	e0fffb17 	ldw	r3,-20(fp)
   866dc:	e0bfc68b 	ldhu	r2,-230(fp)
   866e0:	1004943a 	slli	r2,r2,16
   866e4:	1884b03a 	or	r2,r3,r2
   866e8:	e0bffb15 	stw	r2,-20(fp)
			data3 = sd_card_read(file_handle3);
   866ec:	e13fc88f 	ldh	r4,-222(fp)
   866f0:	00839100 	call	83910 <sd_card_read>
   866f4:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.hor_resolution = bmp_header3.hor_resolution | data3 << 24;
   866f8:	e0fffb17 	ldw	r3,-20(fp)
   866fc:	e0bfc68b 	ldhu	r2,-230(fp)
   86700:	1004963a 	slli	r2,r2,24
   86704:	1884b03a 	or	r2,r3,r2
   86708:	e0bffb15 	stw	r2,-20(fp)

			data3 = sd_card_read(file_handle3);
   8670c:	e13fc88f 	ldh	r4,-222(fp)
   86710:	00839100 	call	83910 <sd_card_read>
   86714:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.ver_resolution = data3;
   86718:	e0bfc68b 	ldhu	r2,-230(fp)
   8671c:	e0bffc15 	stw	r2,-16(fp)
			data3 = sd_card_read(file_handle3);
   86720:	e13fc88f 	ldh	r4,-222(fp)
   86724:	00839100 	call	83910 <sd_card_read>
   86728:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.ver_resolution = bmp_header3.ver_resolution | data3 << 8;
   8672c:	e0fffc17 	ldw	r3,-16(fp)
   86730:	e0bfc68b 	ldhu	r2,-230(fp)
   86734:	1004923a 	slli	r2,r2,8
   86738:	1884b03a 	or	r2,r3,r2
   8673c:	e0bffc15 	stw	r2,-16(fp)
			data3 = sd_card_read(file_handle3);
   86740:	e13fc88f 	ldh	r4,-222(fp)
   86744:	00839100 	call	83910 <sd_card_read>
   86748:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.ver_resolution = bmp_header3.ver_resolution | data3 << 16;
   8674c:	e0fffc17 	ldw	r3,-16(fp)
   86750:	e0bfc68b 	ldhu	r2,-230(fp)
   86754:	1004943a 	slli	r2,r2,16
   86758:	1884b03a 	or	r2,r3,r2
   8675c:	e0bffc15 	stw	r2,-16(fp)
			data3 = sd_card_read(file_handle3);
   86760:	e13fc88f 	ldh	r4,-222(fp)
   86764:	00839100 	call	83910 <sd_card_read>
   86768:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.ver_resolution = bmp_header3.ver_resolution | data3 << 24;
   8676c:	e0fffc17 	ldw	r3,-16(fp)
   86770:	e0bfc68b 	ldhu	r2,-230(fp)
   86774:	1004963a 	slli	r2,r2,24
   86778:	1884b03a 	or	r2,r3,r2
   8677c:	e0bffc15 	stw	r2,-16(fp)

			data3 = sd_card_read(file_handle3);
   86780:	e13fc88f 	ldh	r4,-222(fp)
   86784:	00839100 	call	83910 <sd_card_read>
   86788:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.num_color_in_palette = data3;
   8678c:	e0bfc68b 	ldhu	r2,-230(fp)
   86790:	e0bffd15 	stw	r2,-12(fp)
			data3 = sd_card_read(file_handle3);
   86794:	e13fc88f 	ldh	r4,-222(fp)
   86798:	00839100 	call	83910 <sd_card_read>
   8679c:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.num_color_in_palette = bmp_header3.num_color_in_palette | data3 << 8;
   867a0:	e0fffd17 	ldw	r3,-12(fp)
   867a4:	e0bfc68b 	ldhu	r2,-230(fp)
   867a8:	1004923a 	slli	r2,r2,8
   867ac:	1884b03a 	or	r2,r3,r2
   867b0:	e0bffd15 	stw	r2,-12(fp)
			data3 = sd_card_read(file_handle3);
   867b4:	e13fc88f 	ldh	r4,-222(fp)
   867b8:	00839100 	call	83910 <sd_card_read>
   867bc:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.num_color_in_palette = bmp_header3.num_color_in_palette | data3 << 16;
   867c0:	e0fffd17 	ldw	r3,-12(fp)
   867c4:	e0bfc68b 	ldhu	r2,-230(fp)
   867c8:	1004943a 	slli	r2,r2,16
   867cc:	1884b03a 	or	r2,r3,r2
   867d0:	e0bffd15 	stw	r2,-12(fp)
			data3 = sd_card_read(file_handle3);
   867d4:	e13fc88f 	ldh	r4,-222(fp)
   867d8:	00839100 	call	83910 <sd_card_read>
   867dc:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.num_color_in_palette = bmp_header3.num_color_in_palette | data3 << 24;
   867e0:	e0fffd17 	ldw	r3,-12(fp)
   867e4:	e0bfc68b 	ldhu	r2,-230(fp)
   867e8:	1004963a 	slli	r2,r2,24
   867ec:	1884b03a 	or	r2,r3,r2
   867f0:	e0bffd15 	stw	r2,-12(fp)

			data3 = sd_card_read(file_handle3);
   867f4:	e13fc88f 	ldh	r4,-222(fp)
   867f8:	00839100 	call	83910 <sd_card_read>
   867fc:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.important_color = data3;
   86800:	e0bfc68b 	ldhu	r2,-230(fp)
   86804:	e0bffe15 	stw	r2,-8(fp)
			data3 = sd_card_read(file_handle3);
   86808:	e13fc88f 	ldh	r4,-222(fp)
   8680c:	00839100 	call	83910 <sd_card_read>
   86810:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.important_color = bmp_header3.important_color | data3 << 8;
   86814:	e0fffe17 	ldw	r3,-8(fp)
   86818:	e0bfc68b 	ldhu	r2,-230(fp)
   8681c:	1004923a 	slli	r2,r2,8
   86820:	1884b03a 	or	r2,r3,r2
   86824:	e0bffe15 	stw	r2,-8(fp)
			data3 = sd_card_read(file_handle3);
   86828:	e13fc88f 	ldh	r4,-222(fp)
   8682c:	00839100 	call	83910 <sd_card_read>
   86830:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.important_color = bmp_header3.important_color | data3 << 16;
   86834:	e0fffe17 	ldw	r3,-8(fp)
   86838:	e0bfc68b 	ldhu	r2,-230(fp)
   8683c:	1004943a 	slli	r2,r2,16
   86840:	1884b03a 	or	r2,r3,r2
   86844:	e0bffe15 	stw	r2,-8(fp)
			data3 = sd_card_read(file_handle3);
   86848:	e13fc88f 	ldh	r4,-222(fp)
   8684c:	00839100 	call	83910 <sd_card_read>
   86850:	e0bfc68d 	sth	r2,-230(fp)
			bmp_header3.important_color = bmp_header3.important_color | data3 << 24;
   86854:	e0fffe17 	ldw	r3,-8(fp)
   86858:	e0bfc68b 	ldhu	r2,-230(fp)
   8685c:	1004963a 	slli	r2,r2,24
   86860:	1884b03a 	or	r2,r3,r2
   86864:	e0bffe15 	stw	r2,-8(fp)

			printf("Reading image of dimension: %d x %d\n", bmp_header3.width, bmp_header3.height);
   86868:	e17ff617 	ldw	r5,-40(fp)
   8686c:	e1bff717 	ldw	r6,-36(fp)
   86870:	010002b4 	movhi	r4,10
   86874:	21017c04 	addi	r4,r4,1520
   86878:	00888340 	call	88834 <printf>
			if (bmp_header3.height > 0) {
   8687c:	e0bff717 	ldw	r2,-36(fp)
   86880:	10800050 	cmplti	r2,r2,1
   86884:	1000031e 	bne	r2,zero,86894 <SD_read_task+0x1994>
				printf("Positive height detected, image will be loaded as upside-down\n");
   86888:	010002b4 	movhi	r4,10
   8688c:	21018604 	addi	r4,r4,1560
   86890:	00889700 	call	88970 <puts>
			}

			printf("Done reading images, sending data to SDReadQueue!\n");
   86894:	010002b4 	movhi	r4,10
   86898:	2101ab04 	addi	r4,r4,1708
   8689c:	00889700 	call	88970 <puts>

			bmp_header.width = 640;
   868a0:	0080a004 	movi	r2,640
   868a4:	e0bfcf15 	stw	r2,-196(fp)
			bmp_header.height = 480;
   868a8:	00807804 	movi	r2,480
   868ac:	e0bfd015 	stw	r2,-192(fp)
			printf("We are here!\n");
   868b0:	010002b4 	movhi	r4,10
   868b4:	2101b804 	addi	r4,r4,1760
   868b8:	00889700 	call	88970 <puts>
			// This is for posting the width and height info to compute_Y_task
			return_code = OSMboxPost(ReadImageWidthMailbox, (void *)(bmp_header.width));
   868bc:	d1271017 	ldw	r4,-25536(gp)
   868c0:	e0bfcf17 	ldw	r2,-196(fp)
   868c4:	100b883a 	mov	r5,r2
   868c8:	00979a40 	call	979a4 <OSMboxPost>
   868cc:	e0bfca85 	stb	r2,-214(fp)
			alt_ucosii_check_return_code(return_code);
   868d0:	e0bfca83 	ldbu	r2,-214(fp)
   868d4:	11003fcc 	andi	r4,r2,255
   868d8:	00844440 	call	84444 <alt_ucosii_check_return_code>
			return_code = OSMboxPost(ReadImageHeightMailbox, (void *)(bmp_header.height));
   868dc:	d1270b17 	ldw	r4,-25556(gp)
   868e0:	e0bfd017 	ldw	r2,-192(fp)
   868e4:	100b883a 	mov	r5,r2
   868e8:	00979a40 	call	979a4 <OSMboxPost>
   868ec:	e0bfca85 	stb	r2,-214(fp)
			alt_ucosii_check_return_code(return_code);
   868f0:	e0bfca83 	ldbu	r2,-214(fp)
   868f4:	11003fcc 	andi	r4,r2,255
   868f8:	00844440 	call	84444 <alt_ucosii_check_return_code>
			
			// This is the first data for posting to the queue
			finalImageData = sd_card_read(file_handle);
   868fc:	e13fca0f 	ldh	r4,-216(fp)
   86900:	00839100 	call	83910 <sd_card_read>
   86904:	e0bfc60d 	sth	r2,-232(fp)
			image_size = 1;
   86908:	00800044 	movi	r2,1
   8690c:	e0bfc415 	stw	r2,-240(fp)

			file_opened = 1;
   86910:	00800044 	movi	r2,1
   86914:	e0bfc515 	stw	r2,-236(fp)
			printf("file_opened is %d\n", file_opened);
   86918:	010002b4 	movhi	r4,10
   8691c:	2101bc04 	addi	r4,r4,1776
   86920:	e17fc517 	ldw	r5,-236(fp)
   86924:	00888340 	call	88834 <printf>
		}
		
		// =640*480*3? check if the value is actually
		int totalDataSize = bmp_header.data_size+bmp_header1.data_size+bmp_header2.data_size+bmp_header3.data_size;
   86928:	e0ffd317 	ldw	r3,-180(fp)
   8692c:	e0bfe017 	ldw	r2,-128(fp)
   86930:	1887883a 	add	r3,r3,r2
   86934:	e0bfed17 	ldw	r2,-76(fp)
   86938:	1887883a 	add	r3,r3,r2
   8693c:	e0bffa17 	ldw	r2,-24(fp)
   86940:	1885883a 	add	r2,r3,r2
   86944:	e0bfc015 	stw	r2,-256(fp)
		totalDataSize = 640*480*3;
   86948:	008003b4 	movhi	r2,14
   8694c:	10840004 	addi	r2,r2,4096
   86950:	e0bfc015 	stw	r2,-256(fp)
		//totalDataSize = 230400 + 230400 + 230400 + 230400 = 640(*480*3
		//this while loop is the arrow in diagram from SD_read() to SDReadQueue
		while (((return_code = OSQPost(SDReadQueue, (void *)(finalImageData & 0xFF))) == OS_NO_ERR) && (image_size < totalDataSize)){
   86954:	00002906 	br	869fc <SD_read_task+0x1afc>
			if(image_size < (460800)){ //top half, 460800 bytes of data
   86958:	e0ffc417 	ldw	r3,-240(fp)
   8695c:	008001f4 	movhi	r2,7
   86960:	1081ffc4 	addi	r2,r2,2047
   86964:	10c01316 	blt	r2,r3,869b4 <SD_read_task+0x1ab4>
				if(image_size%(640*3) < ((640*3)/2)){ //left half
   86968:	e13fc417 	ldw	r4,-240(fp)
   8696c:	0141e004 	movi	r5,1920
   86970:	00886400 	call	88640 <__modsi3>
   86974:	1080f008 	cmpgei	r2,r2,960
   86978:	1000071e 	bne	r2,zero,86998 <SD_read_task+0x1a98>
					finalImageData = sd_card_read(file_handle); //read one of the three subpixel
   8697c:	e13fca0f 	ldh	r4,-216(fp)
   86980:	00839100 	call	83910 <sd_card_read>
   86984:	e0bfc60d 	sth	r2,-232(fp)
					image_size++;
   86988:	e0bfc417 	ldw	r2,-240(fp)
   8698c:	10800044 	addi	r2,r2,1
   86990:	e0bfc415 	stw	r2,-240(fp)
   86994:	00001906 	br	869fc <SD_read_task+0x1afc>
				}else{	//right half
					finalImageData = sd_card_read(file_handle1); //read one of the three subpixel
   86998:	e13fc98f 	ldh	r4,-218(fp)
   8699c:	00839100 	call	83910 <sd_card_read>
   869a0:	e0bfc60d 	sth	r2,-232(fp)
					image_size++;
   869a4:	e0bfc417 	ldw	r2,-240(fp)
   869a8:	10800044 	addi	r2,r2,1
   869ac:	e0bfc415 	stw	r2,-240(fp)
   869b0:	00001206 	br	869fc <SD_read_task+0x1afc>
				}
			}else{	//bottom half, 921600 bytes of data
				if(image_size%(640*3) < ((640*3)/2)){ //left half
   869b4:	e13fc417 	ldw	r4,-240(fp)
   869b8:	0141e004 	movi	r5,1920
   869bc:	00886400 	call	88640 <__modsi3>
   869c0:	1080f008 	cmpgei	r2,r2,960
   869c4:	1000071e 	bne	r2,zero,869e4 <SD_read_task+0x1ae4>
					finalImageData = sd_card_read(file_handle2); //read one of the three subpixel
   869c8:	e13fc90f 	ldh	r4,-220(fp)
   869cc:	00839100 	call	83910 <sd_card_read>
   869d0:	e0bfc60d 	sth	r2,-232(fp)
					image_size++;
   869d4:	e0bfc417 	ldw	r2,-240(fp)
   869d8:	10800044 	addi	r2,r2,1
   869dc:	e0bfc415 	stw	r2,-240(fp)
   869e0:	00000606 	br	869fc <SD_read_task+0x1afc>
				}else{	//right half
					finalImageData = sd_card_read(file_handle3); //read one of the three subpixel
   869e4:	e13fc88f 	ldh	r4,-222(fp)
   869e8:	00839100 	call	83910 <sd_card_read>
   869ec:	e0bfc60d 	sth	r2,-232(fp)
					image_size++;
   869f0:	e0bfc417 	ldw	r2,-240(fp)
   869f4:	10800044 	addi	r2,r2,1
   869f8:	e0bfc415 	stw	r2,-240(fp)
		// =640*480*3? check if the value is actually
		int totalDataSize = bmp_header.data_size+bmp_header1.data_size+bmp_header2.data_size+bmp_header3.data_size;
		totalDataSize = 640*480*3;
		//totalDataSize = 230400 + 230400 + 230400 + 230400 = 640(*480*3
		//this while loop is the arrow in diagram from SD_read() to SDReadQueue
		while (((return_code = OSQPost(SDReadQueue, (void *)(finalImageData & 0xFF))) == OS_NO_ERR) && (image_size < totalDataSize)){
   869fc:	d1270c17 	ldw	r4,-25552(gp)
   86a00:	e0bfc60b 	ldhu	r2,-232(fp)
   86a04:	10803fcc 	andi	r2,r2,255
   86a08:	100b883a 	mov	r5,r2
   86a0c:	009a5140 	call	9a514 <OSQPost>
   86a10:	e0bfca85 	stb	r2,-214(fp)
   86a14:	e0bfca83 	ldbu	r2,-214(fp)
   86a18:	10803fcc 	andi	r2,r2,255
   86a1c:	1004c03a 	cmpne	r2,r2,zero
   86a20:	1000031e 	bne	r2,zero,86a30 <SD_read_task+0x1b30>
   86a24:	e0ffc417 	ldw	r3,-240(fp)
   86a28:	e0bfc017 	ldw	r2,-256(fp)
   86a2c:	18bfca16 	blt	r3,r2,86958 <SD_read_task+0x1a58>
		}
		//printf("my image_size before if statement is: %d\n", image_size);
		/*if(image_size==129){
				OSTimeDlyHMSM(0,0,10,0);
		}*/
		if (image_size == 640*480*3) {
   86a30:	e0ffc417 	ldw	r3,-240(fp)
   86a34:	008003b4 	movhi	r2,14
   86a38:	10840004 	addi	r2,r2,4096
   86a3c:	1880111e 	bne	r3,r2,86a84 <SD_read_task+0x1b84>
			sd_card_fclose(file_handle);
   86a40:	e13fca0f 	ldh	r4,-216(fp)
   86a44:	00842700 	call	84270 <sd_card_fclose>
			sd_card_fclose(file_handle1);
   86a48:	e13fc98f 	ldh	r4,-218(fp)
   86a4c:	00842700 	call	84270 <sd_card_fclose>
			sd_card_fclose(file_handle2);
   86a50:	e13fc90f 	ldh	r4,-220(fp)
   86a54:	00842700 	call	84270 <sd_card_fclose>
			sd_card_fclose(file_handle3);
   86a58:	e13fc88f 	ldh	r4,-222(fp)
   86a5c:	00842700 	call	84270 <sd_card_fclose>
			printf("Done reading image3: (%d bytes)\n", bmp_header3.data_size);
   86a60:	e17ffa17 	ldw	r5,-24(fp)
   86a64:	010002b4 	movhi	r4,10
   86a68:	2101c104 	addi	r4,r4,1796
   86a6c:	00888340 	call	88834 <printf>
			printf("Total Image Data sent was: (%d bytes)\n", image_size);
   86a70:	010002b4 	movhi	r4,10
   86a74:	2101ca04 	addi	r4,r4,1832
   86a78:	e17fc417 	ldw	r5,-240(fp)
   86a7c:	00888340 	call	88834 <printf>
			file_opened = 0;
   86a80:	e03fc515 	stw	zero,-236(fp)
		}
		
		// printf("RQ filled (%d bytes)\n", image_size);
		return_code = OSMutexPost(SDMutex);
   86a84:	d1270317 	ldw	r4,-25588(gp)
   86a88:	00993740 	call	99374 <OSMutexPost>
   86a8c:	e0bfca85 	stb	r2,-214(fp)
		alt_ucosii_check_return_code(return_code);
   86a90:	e0bfca83 	ldbu	r2,-214(fp)
   86a94:	11003fcc 	andi	r4,r2,255
   86a98:	00844440 	call	84444 <alt_ucosii_check_return_code>
		
		OSFlagPost(SDCardFlag, SD_READ_NEED_FILL, OS_FLAG_CLR, &return_code);
   86a9c:	d1270417 	ldw	r4,-25584(gp)
   86aa0:	e1ffca84 	addi	r7,fp,-214
   86aa4:	01400104 	movi	r5,4
   86aa8:	000d883a 	mov	r6,zero
   86aac:	00968280 	call	96828 <OSFlagPost>
		alt_ucosii_check_return_code(return_code);
   86ab0:	e0bfca83 	ldbu	r2,-214(fp)
   86ab4:	11003fcc 	andi	r4,r2,255
   86ab8:	00844440 	call	84444 <alt_ucosii_check_return_code>
		OSFlagPost(SDCardFlag, SD_READ_DATA_READY, OS_FLAG_SET, &return_code);
   86abc:	d1270417 	ldw	r4,-25584(gp)
   86ac0:	e1ffca84 	addi	r7,fp,-214
   86ac4:	01400204 	movi	r5,8
   86ac8:	01800044 	movi	r6,1
   86acc:	00968280 	call	96828 <OSFlagPost>
		alt_ucosii_check_return_code(return_code);
   86ad0:	e0bfca83 	ldbu	r2,-214(fp)
   86ad4:	11003fcc 	andi	r4,r2,255
   86ad8:	00844440 	call	84444 <alt_ucosii_check_return_code>
	}
   86adc:	00391506 	br	84f34 <SD_read_task+0x34>
}
   86ae0:	e037883a 	mov	sp,fp
   86ae4:	dfc00117 	ldw	ra,4(sp)
   86ae8:	df000017 	ldw	fp,0(sp)
   86aec:	dec00204 	addi	sp,sp,8
   86af0:	f800283a 	ret

00086af4 <SD_write_task>:

void SD_write_task(void *pdata) {
   86af4:	deffe304 	addi	sp,sp,-116
   86af8:	dfc01c15 	stw	ra,112(sp)
   86afc:	df001b15 	stw	fp,108(sp)
   86b00:	df001b04 	addi	fp,sp,108
   86b04:	e13fff15 	stw	r4,-4(fp)
	INT8U return_code = OS_NO_ERR;
   86b08:	e03fee85 	stb	zero,-70(fp)
	short int file_handle;
	unsigned short int data, dataR, dataG, dataB;
	int file_opened = 0;
   86b0c:	e03feb15 	stw	zero,-84(fp)
	int file_number = 0;
   86b10:	e03fea15 	stw	zero,-88(fp)
	bmp_header_struct bmp_header;
	int status;
	int image_size;
	int image_width, image_height;
	
	printf("We are in SD_write_task()!\n");
   86b14:	010002b4 	movhi	r4,10
   86b18:	2101d404 	addi	r4,r4,1872
   86b1c:	00889700 	call	88970 <puts>

	while (1) {
		OSFlagPend(SDCardFlag, SD_PRESENCE_FLAG | SD_FILESYSTEM_FLAG | SD_WRITE_DATA_READY, OS_FLAG_WAIT_SET_ALL, 0, &return_code);
   86b20:	d1270417 	ldw	r4,-25584(gp)
   86b24:	e0bfee84 	addi	r2,fp,-70
   86b28:	d8800015 	stw	r2,0(sp)
   86b2c:	014008c4 	movi	r5,35
   86b30:	01800084 	movi	r6,2
   86b34:	000f883a 	mov	r7,zero
   86b38:	009617c0 	call	9617c <OSFlagPend>
		alt_ucosii_check_return_code(return_code);
   86b3c:	e0bfee83 	ldbu	r2,-70(fp)
   86b40:	11003fcc 	andi	r4,r2,255
   86b44:	00844440 	call	84444 <alt_ucosii_check_return_code>
				
		// printf("W: getting SDMutex\n");
		OSMutexPend(SDMutex, 0, &return_code);
   86b48:	d1270317 	ldw	r4,-25588(gp)
   86b4c:	e1bfee84 	addi	r6,fp,-70
   86b50:	000b883a 	mov	r5,zero
   86b54:	0098ce40 	call	98ce4 <OSMutexPend>
		alt_ucosii_check_return_code(return_code);
   86b58:	e0bfee83 	ldbu	r2,-70(fp)
   86b5c:	11003fcc 	andi	r4,r2,255
   86b60:	00844440 	call	84444 <alt_ucosii_check_return_code>
		
		if (file_opened == 0) {
   86b64:	e0bfeb17 	ldw	r2,-84(fp)
   86b68:	1004c03a 	cmpne	r2,r2,zero
   86b6c:	10026e1e 	bne	r2,zero,87528 <SD_write_task+0xa34>
			sprintf(filename, "OUTPIC%d.bmp", file_number++);
   86b70:	e1bfea17 	ldw	r6,-88(fp)
   86b74:	e0bfea17 	ldw	r2,-88(fp)
   86b78:	10800044 	addi	r2,r2,1
   86b7c:	e0bfea15 	stw	r2,-88(fp)
   86b80:	e13feec4 	addi	r4,fp,-69
   86b84:	014002b4 	movhi	r5,10
   86b88:	2941db04 	addi	r5,r5,1900
   86b8c:	00889840 	call	88984 <sprintf>
            
			while ((file_handle = sd_card_fopen(filename, 1)) < 0) {
   86b90:	00000806 	br	86bb4 <SD_write_task+0xc0>
				sprintf(filename, "OUTPIC%d.bmp", file_number++);
   86b94:	e1bfea17 	ldw	r6,-88(fp)
   86b98:	e0bfea17 	ldw	r2,-88(fp)
   86b9c:	10800044 	addi	r2,r2,1
   86ba0:	e0bfea15 	stw	r2,-88(fp)
   86ba4:	e13feec4 	addi	r4,fp,-69
   86ba8:	014002b4 	movhi	r5,10
   86bac:	2941db04 	addi	r5,r5,1900
   86bb0:	00889840 	call	88984 <sprintf>
		alt_ucosii_check_return_code(return_code);
		
		if (file_opened == 0) {
			sprintf(filename, "OUTPIC%d.bmp", file_number++);
            
			while ((file_handle = sd_card_fopen(filename, 1)) < 0) {
   86bb4:	e13feec4 	addi	r4,fp,-69
   86bb8:	01400044 	movi	r5,1
   86bbc:	008344c0 	call	8344c <sd_card_fopen>
   86bc0:	e0bfee0d 	sth	r2,-72(fp)
   86bc4:	e0bfee0f 	ldh	r2,-72(fp)
   86bc8:	1004803a 	cmplt	r2,r2,zero
   86bcc:	103ff11e 	bne	r2,zero,86b94 <SD_write_task+0xa0>
				sprintf(filename, "OUTPIC%d.bmp", file_number++);
			}

			file_opened = 1;
   86bd0:	00800044 	movi	r2,1
   86bd4:	e0bfeb15 	stw	r2,-84(fp)
			
			printf("Saving image to file (%s)...\n", filename);
   86bd8:	e17feec4 	addi	r5,fp,-69
   86bdc:	010002b4 	movhi	r4,10
   86be0:	2101df04 	addi	r4,r4,1916
   86be4:	00888340 	call	88834 <printf>
            
			bmp_header.width = (int)OSMboxPend(WriteImageWidthMailbox, 0, &return_code);
   86be8:	d1270d17 	ldw	r4,-25548(gp)
   86bec:	e1bfee84 	addi	r6,fp,-70
   86bf0:	000b883a 	mov	r5,zero
   86bf4:	00975600 	call	97560 <OSMboxPend>
   86bf8:	e0bff615 	stw	r2,-40(fp)
			alt_ucosii_check_return_code(return_code);
   86bfc:	e0bfee83 	ldbu	r2,-70(fp)
   86c00:	11003fcc 	andi	r4,r2,255
   86c04:	00844440 	call	84444 <alt_ucosii_check_return_code>
			bmp_header.height = (int)OSMboxPend(WriteImageHeightMailbox, 0, &return_code);
   86c08:	d1270717 	ldw	r4,-25572(gp)
   86c0c:	e1bfee84 	addi	r6,fp,-70
   86c10:	000b883a 	mov	r5,zero
   86c14:	00975600 	call	97560 <OSMboxPend>
   86c18:	e0bff715 	stw	r2,-36(fp)
			alt_ucosii_check_return_code(return_code);
   86c1c:	e0bfee83 	ldbu	r2,-70(fp)
   86c20:	11003fcc 	andi	r4,r2,255
   86c24:	00844440 	call	84444 <alt_ucosii_check_return_code>
			
			image_width = bmp_header.width;
   86c28:	e0bff617 	ldw	r2,-40(fp)
   86c2c:	e0bfe715 	stw	r2,-100(fp)
			if (bmp_header.height < 0) image_height = -bmp_header.height;
   86c30:	e0bff717 	ldw	r2,-36(fp)
   86c34:	1004403a 	cmpge	r2,r2,zero
   86c38:	1000041e 	bne	r2,zero,86c4c <SD_write_task+0x158>
   86c3c:	e0bff717 	ldw	r2,-36(fp)
   86c40:	0085c83a 	sub	r2,zero,r2
   86c44:	e0bfe615 	stw	r2,-104(fp)
   86c48:	00000206 	br	86c54 <SD_write_task+0x160>
			else image_height = bmp_header.height;
   86c4c:	e0bff717 	ldw	r2,-36(fp)
   86c50:	e0bfe615 	stw	r2,-104(fp)
			bmp_header.width = 640;
   86c54:	0080a004 	movi	r2,640
   86c58:	e0bff615 	stw	r2,-40(fp)
			bmp_header.height = 480;
   86c5c:	00807804 	movi	r2,480
   86c60:	e0bff715 	stw	r2,-36(fp)
			image_width = 640;
   86c64:	0080a004 	movi	r2,640
   86c68:	e0bfe715 	stw	r2,-100(fp)
			image_height = 480;
   86c6c:	00807804 	movi	r2,480
   86c70:	e0bfe615 	stw	r2,-104(fp)
			
			// BMP header
			bmp_header.magic_number = 'B' << 8 | 'M';
   86c74:	00909344 	movi	r2,16973
   86c78:	e0bff20d 	sth	r2,-56(fp)
			bmp_header.file_size = image_height * image_width * 3 + 54;
   86c7c:	e13fe617 	ldw	r4,-104(fp)
   86c80:	e17fe717 	ldw	r5,-100(fp)
   86c84:	00886b00 	call	886b0 <__mulsi3>
   86c88:	1007883a 	mov	r3,r2
   86c8c:	1805883a 	mov	r2,r3
   86c90:	1085883a 	add	r2,r2,r2
   86c94:	10c5883a 	add	r2,r2,r3
   86c98:	10800d84 	addi	r2,r2,54
   86c9c:	e0bff315 	stw	r2,-52(fp)
			bmp_header.data_offset = 54;
   86ca0:	00800d84 	movi	r2,54
   86ca4:	e0bff415 	stw	r2,-48(fp)
			bmp_header.header_size = 40;
   86ca8:	00800a04 	movi	r2,40
   86cac:	e0bff515 	stw	r2,-44(fp)
			// bmp_header.width = 640;
			// bmp_header.height = -480;
			bmp_header.num_plane = 1;
   86cb0:	00800044 	movi	r2,1
   86cb4:	e0bff80d 	sth	r2,-32(fp)
			bmp_header.num_bits_per_pixel = 24;
   86cb8:	00800604 	movi	r2,24
   86cbc:	e0bff88d 	sth	r2,-30(fp)
			bmp_header.compress_mode = 0;
   86cc0:	e03ff915 	stw	zero,-28(fp)
			bmp_header.data_size = image_height * image_width * 3;
   86cc4:	e13fe617 	ldw	r4,-104(fp)
   86cc8:	e17fe717 	ldw	r5,-100(fp)
   86ccc:	00886b00 	call	886b0 <__mulsi3>
   86cd0:	1007883a 	mov	r3,r2
   86cd4:	1805883a 	mov	r2,r3
   86cd8:	1085883a 	add	r2,r2,r2
   86cdc:	10c5883a 	add	r2,r2,r3
   86ce0:	e0bffa15 	stw	r2,-24(fp)
			bmp_header.hor_resolution = 0;
   86ce4:	e03ffb15 	stw	zero,-20(fp)
			bmp_header.ver_resolution = 0;
   86ce8:	e03ffc15 	stw	zero,-16(fp)
			bmp_header.num_color_in_palette = 0;
   86cec:	e03ffd15 	stw	zero,-12(fp)
			bmp_header.important_color = 0;
   86cf0:	e03ffe15 	stw	zero,-8(fp)

			status = sd_card_write(file_handle, (char)((bmp_header.magic_number >> 8) & 0xFF));
   86cf4:	e13fee0f 	ldh	r4,-72(fp)
   86cf8:	e0bff20b 	ldhu	r2,-56(fp)
   86cfc:	10bfffcc 	andi	r2,r2,65535
   86d00:	1004d23a 	srli	r2,r2,8
   86d04:	1007883a 	mov	r3,r2
   86d08:	00bfffc4 	movi	r2,-1
   86d0c:	1884703a 	and	r2,r3,r2
   86d10:	11403fcc 	andi	r5,r2,255
   86d14:	2940201c 	xori	r5,r5,128
   86d18:	297fe004 	addi	r5,r5,-128
   86d1c:	0083c800 	call	83c80 <sd_card_write>
   86d20:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.magic_number) & 0xFF));
   86d24:	e13fee0f 	ldh	r4,-72(fp)
   86d28:	e0bff20b 	ldhu	r2,-56(fp)
   86d2c:	1007883a 	mov	r3,r2
   86d30:	00bfffc4 	movi	r2,-1
   86d34:	1884703a 	and	r2,r3,r2
   86d38:	11403fcc 	andi	r5,r2,255
   86d3c:	2940201c 	xori	r5,r5,128
   86d40:	297fe004 	addi	r5,r5,-128
   86d44:	0083c800 	call	83c80 <sd_card_write>
   86d48:	e0bfe915 	stw	r2,-92(fp)

			status = sd_card_write(file_handle, (char)((bmp_header.file_size) & 0xFF));
   86d4c:	e13fee0f 	ldh	r4,-72(fp)
   86d50:	e0bff317 	ldw	r2,-52(fp)
   86d54:	11403fcc 	andi	r5,r2,255
   86d58:	2940201c 	xori	r5,r5,128
   86d5c:	297fe004 	addi	r5,r5,-128
   86d60:	0083c800 	call	83c80 <sd_card_write>
   86d64:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.file_size >> 8) & 0xFF));
   86d68:	e13fee0f 	ldh	r4,-72(fp)
   86d6c:	e0bff317 	ldw	r2,-52(fp)
   86d70:	1004d23a 	srli	r2,r2,8
   86d74:	11403fcc 	andi	r5,r2,255
   86d78:	2940201c 	xori	r5,r5,128
   86d7c:	297fe004 	addi	r5,r5,-128
   86d80:	0083c800 	call	83c80 <sd_card_write>
   86d84:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.file_size >> 16) & 0xFF));
   86d88:	e13fee0f 	ldh	r4,-72(fp)
   86d8c:	e0bff317 	ldw	r2,-52(fp)
   86d90:	1004d43a 	srli	r2,r2,16
   86d94:	11403fcc 	andi	r5,r2,255
   86d98:	2940201c 	xori	r5,r5,128
   86d9c:	297fe004 	addi	r5,r5,-128
   86da0:	0083c800 	call	83c80 <sd_card_write>
   86da4:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.file_size >> 24) & 0xFF));
   86da8:	e13fee0f 	ldh	r4,-72(fp)
   86dac:	e0bff317 	ldw	r2,-52(fp)
   86db0:	1004d63a 	srli	r2,r2,24
   86db4:	11403fcc 	andi	r5,r2,255
   86db8:	2940201c 	xori	r5,r5,128
   86dbc:	297fe004 	addi	r5,r5,-128
   86dc0:	0083c800 	call	83c80 <sd_card_write>
   86dc4:	e0bfe915 	stw	r2,-92(fp)

			// unused
			status = sd_card_write(file_handle, 0);
   86dc8:	e13fee0f 	ldh	r4,-72(fp)
   86dcc:	000b883a 	mov	r5,zero
   86dd0:	0083c800 	call	83c80 <sd_card_write>
   86dd4:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, 0);
   86dd8:	e13fee0f 	ldh	r4,-72(fp)
   86ddc:	000b883a 	mov	r5,zero
   86de0:	0083c800 	call	83c80 <sd_card_write>
   86de4:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, 0);
   86de8:	e13fee0f 	ldh	r4,-72(fp)
   86dec:	000b883a 	mov	r5,zero
   86df0:	0083c800 	call	83c80 <sd_card_write>
   86df4:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, 0);
   86df8:	e13fee0f 	ldh	r4,-72(fp)
   86dfc:	000b883a 	mov	r5,zero
   86e00:	0083c800 	call	83c80 <sd_card_write>
   86e04:	e0bfe915 	stw	r2,-92(fp)

			status = sd_card_write(file_handle, (char)((bmp_header.data_offset) & 0xFF));
   86e08:	e13fee0f 	ldh	r4,-72(fp)
   86e0c:	e0bff417 	ldw	r2,-48(fp)
   86e10:	11403fcc 	andi	r5,r2,255
   86e14:	2940201c 	xori	r5,r5,128
   86e18:	297fe004 	addi	r5,r5,-128
   86e1c:	0083c800 	call	83c80 <sd_card_write>
   86e20:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.data_offset >> 8) & 0xFF));
   86e24:	e13fee0f 	ldh	r4,-72(fp)
   86e28:	e0bff417 	ldw	r2,-48(fp)
   86e2c:	1004d23a 	srli	r2,r2,8
   86e30:	11403fcc 	andi	r5,r2,255
   86e34:	2940201c 	xori	r5,r5,128
   86e38:	297fe004 	addi	r5,r5,-128
   86e3c:	0083c800 	call	83c80 <sd_card_write>
   86e40:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.data_offset >> 16) & 0xFF));
   86e44:	e13fee0f 	ldh	r4,-72(fp)
   86e48:	e0bff417 	ldw	r2,-48(fp)
   86e4c:	1004d43a 	srli	r2,r2,16
   86e50:	11403fcc 	andi	r5,r2,255
   86e54:	2940201c 	xori	r5,r5,128
   86e58:	297fe004 	addi	r5,r5,-128
   86e5c:	0083c800 	call	83c80 <sd_card_write>
   86e60:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.data_offset >> 24) & 0xFF));
   86e64:	e13fee0f 	ldh	r4,-72(fp)
   86e68:	e0bff417 	ldw	r2,-48(fp)
   86e6c:	1004d63a 	srli	r2,r2,24
   86e70:	11403fcc 	andi	r5,r2,255
   86e74:	2940201c 	xori	r5,r5,128
   86e78:	297fe004 	addi	r5,r5,-128
   86e7c:	0083c800 	call	83c80 <sd_card_write>
   86e80:	e0bfe915 	stw	r2,-92(fp)

			status = sd_card_write(file_handle, (char)((bmp_header.header_size) & 0xFF));
   86e84:	e13fee0f 	ldh	r4,-72(fp)
   86e88:	e0bff517 	ldw	r2,-44(fp)
   86e8c:	11403fcc 	andi	r5,r2,255
   86e90:	2940201c 	xori	r5,r5,128
   86e94:	297fe004 	addi	r5,r5,-128
   86e98:	0083c800 	call	83c80 <sd_card_write>
   86e9c:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.header_size >> 8) & 0xFF));
   86ea0:	e13fee0f 	ldh	r4,-72(fp)
   86ea4:	e0bff517 	ldw	r2,-44(fp)
   86ea8:	1004d23a 	srli	r2,r2,8
   86eac:	11403fcc 	andi	r5,r2,255
   86eb0:	2940201c 	xori	r5,r5,128
   86eb4:	297fe004 	addi	r5,r5,-128
   86eb8:	0083c800 	call	83c80 <sd_card_write>
   86ebc:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.header_size >> 16) & 0xFF));
   86ec0:	e13fee0f 	ldh	r4,-72(fp)
   86ec4:	e0bff517 	ldw	r2,-44(fp)
   86ec8:	1004d43a 	srli	r2,r2,16
   86ecc:	11403fcc 	andi	r5,r2,255
   86ed0:	2940201c 	xori	r5,r5,128
   86ed4:	297fe004 	addi	r5,r5,-128
   86ed8:	0083c800 	call	83c80 <sd_card_write>
   86edc:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.header_size >> 24) & 0xFF));
   86ee0:	e13fee0f 	ldh	r4,-72(fp)
   86ee4:	e0bff517 	ldw	r2,-44(fp)
   86ee8:	1004d63a 	srli	r2,r2,24
   86eec:	11403fcc 	andi	r5,r2,255
   86ef0:	2940201c 	xori	r5,r5,128
   86ef4:	297fe004 	addi	r5,r5,-128
   86ef8:	0083c800 	call	83c80 <sd_card_write>
   86efc:	e0bfe915 	stw	r2,-92(fp)

			status = sd_card_write(file_handle, (char)((bmp_header.width) & 0xFF));
   86f00:	e13fee0f 	ldh	r4,-72(fp)
   86f04:	e0bff617 	ldw	r2,-40(fp)
   86f08:	1007883a 	mov	r3,r2
   86f0c:	00bfffc4 	movi	r2,-1
   86f10:	1884703a 	and	r2,r3,r2
   86f14:	11403fcc 	andi	r5,r2,255
   86f18:	2940201c 	xori	r5,r5,128
   86f1c:	297fe004 	addi	r5,r5,-128
   86f20:	0083c800 	call	83c80 <sd_card_write>
   86f24:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.width >> 8) & 0xFF));
   86f28:	e13fee0f 	ldh	r4,-72(fp)
   86f2c:	e0bff617 	ldw	r2,-40(fp)
   86f30:	1005d23a 	srai	r2,r2,8
   86f34:	1007883a 	mov	r3,r2
   86f38:	00bfffc4 	movi	r2,-1
   86f3c:	1884703a 	and	r2,r3,r2
   86f40:	11403fcc 	andi	r5,r2,255
   86f44:	2940201c 	xori	r5,r5,128
   86f48:	297fe004 	addi	r5,r5,-128
   86f4c:	0083c800 	call	83c80 <sd_card_write>
   86f50:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.width >> 16) & 0xFF));
   86f54:	e13fee0f 	ldh	r4,-72(fp)
   86f58:	e0bff617 	ldw	r2,-40(fp)
   86f5c:	1005d43a 	srai	r2,r2,16
   86f60:	1007883a 	mov	r3,r2
   86f64:	00bfffc4 	movi	r2,-1
   86f68:	1884703a 	and	r2,r3,r2
   86f6c:	11403fcc 	andi	r5,r2,255
   86f70:	2940201c 	xori	r5,r5,128
   86f74:	297fe004 	addi	r5,r5,-128
   86f78:	0083c800 	call	83c80 <sd_card_write>
   86f7c:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.width >> 24) & 0xFF));
   86f80:	e13fee0f 	ldh	r4,-72(fp)
   86f84:	e0bff617 	ldw	r2,-40(fp)
   86f88:	1005d63a 	srai	r2,r2,24
   86f8c:	1007883a 	mov	r3,r2
   86f90:	00bfffc4 	movi	r2,-1
   86f94:	1884703a 	and	r2,r3,r2
   86f98:	11403fcc 	andi	r5,r2,255
   86f9c:	2940201c 	xori	r5,r5,128
   86fa0:	297fe004 	addi	r5,r5,-128
   86fa4:	0083c800 	call	83c80 <sd_card_write>
   86fa8:	e0bfe915 	stw	r2,-92(fp)

			status = sd_card_write(file_handle, (char)((bmp_header.height) & 0xFF));
   86fac:	e13fee0f 	ldh	r4,-72(fp)
   86fb0:	e0bff717 	ldw	r2,-36(fp)
   86fb4:	1007883a 	mov	r3,r2
   86fb8:	00bfffc4 	movi	r2,-1
   86fbc:	1884703a 	and	r2,r3,r2
   86fc0:	11403fcc 	andi	r5,r2,255
   86fc4:	2940201c 	xori	r5,r5,128
   86fc8:	297fe004 	addi	r5,r5,-128
   86fcc:	0083c800 	call	83c80 <sd_card_write>
   86fd0:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.height >> 8) & 0xFF));
   86fd4:	e13fee0f 	ldh	r4,-72(fp)
   86fd8:	e0bff717 	ldw	r2,-36(fp)
   86fdc:	1005d23a 	srai	r2,r2,8
   86fe0:	1007883a 	mov	r3,r2
   86fe4:	00bfffc4 	movi	r2,-1
   86fe8:	1884703a 	and	r2,r3,r2
   86fec:	11403fcc 	andi	r5,r2,255
   86ff0:	2940201c 	xori	r5,r5,128
   86ff4:	297fe004 	addi	r5,r5,-128
   86ff8:	0083c800 	call	83c80 <sd_card_write>
   86ffc:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.height >> 16) & 0xFF));
   87000:	e13fee0f 	ldh	r4,-72(fp)
   87004:	e0bff717 	ldw	r2,-36(fp)
   87008:	1005d43a 	srai	r2,r2,16
   8700c:	1007883a 	mov	r3,r2
   87010:	00bfffc4 	movi	r2,-1
   87014:	1884703a 	and	r2,r3,r2
   87018:	11403fcc 	andi	r5,r2,255
   8701c:	2940201c 	xori	r5,r5,128
   87020:	297fe004 	addi	r5,r5,-128
   87024:	0083c800 	call	83c80 <sd_card_write>
   87028:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.height >> 24) & 0xFF));
   8702c:	e13fee0f 	ldh	r4,-72(fp)
   87030:	e0bff717 	ldw	r2,-36(fp)
   87034:	1005d63a 	srai	r2,r2,24
   87038:	1007883a 	mov	r3,r2
   8703c:	00bfffc4 	movi	r2,-1
   87040:	1884703a 	and	r2,r3,r2
   87044:	11403fcc 	andi	r5,r2,255
   87048:	2940201c 	xori	r5,r5,128
   8704c:	297fe004 	addi	r5,r5,-128
   87050:	0083c800 	call	83c80 <sd_card_write>
   87054:	e0bfe915 	stw	r2,-92(fp)

			status = sd_card_write(file_handle, (char)((bmp_header.num_plane) & 0xFF));
   87058:	e13fee0f 	ldh	r4,-72(fp)
   8705c:	e0bff80b 	ldhu	r2,-32(fp)
   87060:	1007883a 	mov	r3,r2
   87064:	00bfffc4 	movi	r2,-1
   87068:	1884703a 	and	r2,r3,r2
   8706c:	11403fcc 	andi	r5,r2,255
   87070:	2940201c 	xori	r5,r5,128
   87074:	297fe004 	addi	r5,r5,-128
   87078:	0083c800 	call	83c80 <sd_card_write>
   8707c:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.num_plane >> 8) & 0xFF));
   87080:	e13fee0f 	ldh	r4,-72(fp)
   87084:	e0bff80b 	ldhu	r2,-32(fp)
   87088:	10bfffcc 	andi	r2,r2,65535
   8708c:	10a0001c 	xori	r2,r2,32768
   87090:	10a00004 	addi	r2,r2,-32768
   87094:	1005d23a 	srai	r2,r2,8
   87098:	1007883a 	mov	r3,r2
   8709c:	00bfffc4 	movi	r2,-1
   870a0:	1884703a 	and	r2,r3,r2
   870a4:	11403fcc 	andi	r5,r2,255
   870a8:	2940201c 	xori	r5,r5,128
   870ac:	297fe004 	addi	r5,r5,-128
   870b0:	0083c800 	call	83c80 <sd_card_write>
   870b4:	e0bfe915 	stw	r2,-92(fp)

			status = sd_card_write(file_handle, (char)((bmp_header.num_bits_per_pixel) & 0xFF));
   870b8:	e13fee0f 	ldh	r4,-72(fp)
   870bc:	e0bff88b 	ldhu	r2,-30(fp)
   870c0:	1007883a 	mov	r3,r2
   870c4:	00bfffc4 	movi	r2,-1
   870c8:	1884703a 	and	r2,r3,r2
   870cc:	11403fcc 	andi	r5,r2,255
   870d0:	2940201c 	xori	r5,r5,128
   870d4:	297fe004 	addi	r5,r5,-128
   870d8:	0083c800 	call	83c80 <sd_card_write>
   870dc:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.num_bits_per_pixel >> 8) & 0xFF));
   870e0:	e13fee0f 	ldh	r4,-72(fp)
   870e4:	e0bff88b 	ldhu	r2,-30(fp)
   870e8:	10bfffcc 	andi	r2,r2,65535
   870ec:	10a0001c 	xori	r2,r2,32768
   870f0:	10a00004 	addi	r2,r2,-32768
   870f4:	1005d23a 	srai	r2,r2,8
   870f8:	1007883a 	mov	r3,r2
   870fc:	00bfffc4 	movi	r2,-1
   87100:	1884703a 	and	r2,r3,r2
   87104:	11403fcc 	andi	r5,r2,255
   87108:	2940201c 	xori	r5,r5,128
   8710c:	297fe004 	addi	r5,r5,-128
   87110:	0083c800 	call	83c80 <sd_card_write>
   87114:	e0bfe915 	stw	r2,-92(fp)

			status = sd_card_write(file_handle, (char)((bmp_header.compress_mode) & 0xFF));
   87118:	e13fee0f 	ldh	r4,-72(fp)
   8711c:	e0bff917 	ldw	r2,-28(fp)
   87120:	1007883a 	mov	r3,r2
   87124:	00bfffc4 	movi	r2,-1
   87128:	1884703a 	and	r2,r3,r2
   8712c:	11403fcc 	andi	r5,r2,255
   87130:	2940201c 	xori	r5,r5,128
   87134:	297fe004 	addi	r5,r5,-128
   87138:	0083c800 	call	83c80 <sd_card_write>
   8713c:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.compress_mode >> 8) & 0xFF));
   87140:	e13fee0f 	ldh	r4,-72(fp)
   87144:	e0bff917 	ldw	r2,-28(fp)
   87148:	1005d23a 	srai	r2,r2,8
   8714c:	1007883a 	mov	r3,r2
   87150:	00bfffc4 	movi	r2,-1
   87154:	1884703a 	and	r2,r3,r2
   87158:	11403fcc 	andi	r5,r2,255
   8715c:	2940201c 	xori	r5,r5,128
   87160:	297fe004 	addi	r5,r5,-128
   87164:	0083c800 	call	83c80 <sd_card_write>
   87168:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.compress_mode >> 16) & 0xFF));
   8716c:	e13fee0f 	ldh	r4,-72(fp)
   87170:	e0bff917 	ldw	r2,-28(fp)
   87174:	1005d43a 	srai	r2,r2,16
   87178:	1007883a 	mov	r3,r2
   8717c:	00bfffc4 	movi	r2,-1
   87180:	1884703a 	and	r2,r3,r2
   87184:	11403fcc 	andi	r5,r2,255
   87188:	2940201c 	xori	r5,r5,128
   8718c:	297fe004 	addi	r5,r5,-128
   87190:	0083c800 	call	83c80 <sd_card_write>
   87194:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.compress_mode >> 24) & 0xFF));
   87198:	e13fee0f 	ldh	r4,-72(fp)
   8719c:	e0bff917 	ldw	r2,-28(fp)
   871a0:	1005d63a 	srai	r2,r2,24
   871a4:	1007883a 	mov	r3,r2
   871a8:	00bfffc4 	movi	r2,-1
   871ac:	1884703a 	and	r2,r3,r2
   871b0:	11403fcc 	andi	r5,r2,255
   871b4:	2940201c 	xori	r5,r5,128
   871b8:	297fe004 	addi	r5,r5,-128
   871bc:	0083c800 	call	83c80 <sd_card_write>
   871c0:	e0bfe915 	stw	r2,-92(fp)

			status = sd_card_write(file_handle, (char)((bmp_header.data_size) & 0xFF));
   871c4:	e13fee0f 	ldh	r4,-72(fp)
   871c8:	e0bffa17 	ldw	r2,-24(fp)
   871cc:	1007883a 	mov	r3,r2
   871d0:	00bfffc4 	movi	r2,-1
   871d4:	1884703a 	and	r2,r3,r2
   871d8:	11403fcc 	andi	r5,r2,255
   871dc:	2940201c 	xori	r5,r5,128
   871e0:	297fe004 	addi	r5,r5,-128
   871e4:	0083c800 	call	83c80 <sd_card_write>
   871e8:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.data_size >> 8) & 0xFF));
   871ec:	e13fee0f 	ldh	r4,-72(fp)
   871f0:	e0bffa17 	ldw	r2,-24(fp)
   871f4:	1005d23a 	srai	r2,r2,8
   871f8:	1007883a 	mov	r3,r2
   871fc:	00bfffc4 	movi	r2,-1
   87200:	1884703a 	and	r2,r3,r2
   87204:	11403fcc 	andi	r5,r2,255
   87208:	2940201c 	xori	r5,r5,128
   8720c:	297fe004 	addi	r5,r5,-128
   87210:	0083c800 	call	83c80 <sd_card_write>
   87214:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.data_size >> 16) & 0xFF));
   87218:	e13fee0f 	ldh	r4,-72(fp)
   8721c:	e0bffa17 	ldw	r2,-24(fp)
   87220:	1005d43a 	srai	r2,r2,16
   87224:	1007883a 	mov	r3,r2
   87228:	00bfffc4 	movi	r2,-1
   8722c:	1884703a 	and	r2,r3,r2
   87230:	11403fcc 	andi	r5,r2,255
   87234:	2940201c 	xori	r5,r5,128
   87238:	297fe004 	addi	r5,r5,-128
   8723c:	0083c800 	call	83c80 <sd_card_write>
   87240:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.data_size >> 24) & 0xFF));
   87244:	e13fee0f 	ldh	r4,-72(fp)
   87248:	e0bffa17 	ldw	r2,-24(fp)
   8724c:	1005d63a 	srai	r2,r2,24
   87250:	1007883a 	mov	r3,r2
   87254:	00bfffc4 	movi	r2,-1
   87258:	1884703a 	and	r2,r3,r2
   8725c:	11403fcc 	andi	r5,r2,255
   87260:	2940201c 	xori	r5,r5,128
   87264:	297fe004 	addi	r5,r5,-128
   87268:	0083c800 	call	83c80 <sd_card_write>
   8726c:	e0bfe915 	stw	r2,-92(fp)

			status = sd_card_write(file_handle, (char)((bmp_header.hor_resolution) & 0xFF));
   87270:	e13fee0f 	ldh	r4,-72(fp)
   87274:	e0bffb17 	ldw	r2,-20(fp)
   87278:	1007883a 	mov	r3,r2
   8727c:	00bfffc4 	movi	r2,-1
   87280:	1884703a 	and	r2,r3,r2
   87284:	11403fcc 	andi	r5,r2,255
   87288:	2940201c 	xori	r5,r5,128
   8728c:	297fe004 	addi	r5,r5,-128
   87290:	0083c800 	call	83c80 <sd_card_write>
   87294:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.hor_resolution >> 8) & 0xFF));
   87298:	e13fee0f 	ldh	r4,-72(fp)
   8729c:	e0bffb17 	ldw	r2,-20(fp)
   872a0:	1005d23a 	srai	r2,r2,8
   872a4:	1007883a 	mov	r3,r2
   872a8:	00bfffc4 	movi	r2,-1
   872ac:	1884703a 	and	r2,r3,r2
   872b0:	11403fcc 	andi	r5,r2,255
   872b4:	2940201c 	xori	r5,r5,128
   872b8:	297fe004 	addi	r5,r5,-128
   872bc:	0083c800 	call	83c80 <sd_card_write>
   872c0:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.hor_resolution >> 16) & 0xFF));
   872c4:	e13fee0f 	ldh	r4,-72(fp)
   872c8:	e0bffb17 	ldw	r2,-20(fp)
   872cc:	1005d43a 	srai	r2,r2,16
   872d0:	1007883a 	mov	r3,r2
   872d4:	00bfffc4 	movi	r2,-1
   872d8:	1884703a 	and	r2,r3,r2
   872dc:	11403fcc 	andi	r5,r2,255
   872e0:	2940201c 	xori	r5,r5,128
   872e4:	297fe004 	addi	r5,r5,-128
   872e8:	0083c800 	call	83c80 <sd_card_write>
   872ec:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.hor_resolution >> 24) & 0xFF));
   872f0:	e13fee0f 	ldh	r4,-72(fp)
   872f4:	e0bffb17 	ldw	r2,-20(fp)
   872f8:	1005d63a 	srai	r2,r2,24
   872fc:	1007883a 	mov	r3,r2
   87300:	00bfffc4 	movi	r2,-1
   87304:	1884703a 	and	r2,r3,r2
   87308:	11403fcc 	andi	r5,r2,255
   8730c:	2940201c 	xori	r5,r5,128
   87310:	297fe004 	addi	r5,r5,-128
   87314:	0083c800 	call	83c80 <sd_card_write>
   87318:	e0bfe915 	stw	r2,-92(fp)

			status = sd_card_write(file_handle, (char)((bmp_header.ver_resolution) & 0xFF));
   8731c:	e13fee0f 	ldh	r4,-72(fp)
   87320:	e0bffc17 	ldw	r2,-16(fp)
   87324:	1007883a 	mov	r3,r2
   87328:	00bfffc4 	movi	r2,-1
   8732c:	1884703a 	and	r2,r3,r2
   87330:	11403fcc 	andi	r5,r2,255
   87334:	2940201c 	xori	r5,r5,128
   87338:	297fe004 	addi	r5,r5,-128
   8733c:	0083c800 	call	83c80 <sd_card_write>
   87340:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.ver_resolution >> 8) & 0xFF));
   87344:	e13fee0f 	ldh	r4,-72(fp)
   87348:	e0bffc17 	ldw	r2,-16(fp)
   8734c:	1005d23a 	srai	r2,r2,8
   87350:	1007883a 	mov	r3,r2
   87354:	00bfffc4 	movi	r2,-1
   87358:	1884703a 	and	r2,r3,r2
   8735c:	11403fcc 	andi	r5,r2,255
   87360:	2940201c 	xori	r5,r5,128
   87364:	297fe004 	addi	r5,r5,-128
   87368:	0083c800 	call	83c80 <sd_card_write>
   8736c:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.ver_resolution >> 16) & 0xFF));
   87370:	e13fee0f 	ldh	r4,-72(fp)
   87374:	e0bffc17 	ldw	r2,-16(fp)
   87378:	1005d43a 	srai	r2,r2,16
   8737c:	1007883a 	mov	r3,r2
   87380:	00bfffc4 	movi	r2,-1
   87384:	1884703a 	and	r2,r3,r2
   87388:	11403fcc 	andi	r5,r2,255
   8738c:	2940201c 	xori	r5,r5,128
   87390:	297fe004 	addi	r5,r5,-128
   87394:	0083c800 	call	83c80 <sd_card_write>
   87398:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.ver_resolution >> 24) & 0xFF));
   8739c:	e13fee0f 	ldh	r4,-72(fp)
   873a0:	e0bffc17 	ldw	r2,-16(fp)
   873a4:	1005d63a 	srai	r2,r2,24
   873a8:	1007883a 	mov	r3,r2
   873ac:	00bfffc4 	movi	r2,-1
   873b0:	1884703a 	and	r2,r3,r2
   873b4:	11403fcc 	andi	r5,r2,255
   873b8:	2940201c 	xori	r5,r5,128
   873bc:	297fe004 	addi	r5,r5,-128
   873c0:	0083c800 	call	83c80 <sd_card_write>
   873c4:	e0bfe915 	stw	r2,-92(fp)

			status = sd_card_write(file_handle, (char)((bmp_header.num_color_in_palette) & 0xFF));
   873c8:	e13fee0f 	ldh	r4,-72(fp)
   873cc:	e0bffd17 	ldw	r2,-12(fp)
   873d0:	1007883a 	mov	r3,r2
   873d4:	00bfffc4 	movi	r2,-1
   873d8:	1884703a 	and	r2,r3,r2
   873dc:	11403fcc 	andi	r5,r2,255
   873e0:	2940201c 	xori	r5,r5,128
   873e4:	297fe004 	addi	r5,r5,-128
   873e8:	0083c800 	call	83c80 <sd_card_write>
   873ec:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.num_color_in_palette >> 8) & 0xFF));
   873f0:	e13fee0f 	ldh	r4,-72(fp)
   873f4:	e0bffd17 	ldw	r2,-12(fp)
   873f8:	1005d23a 	srai	r2,r2,8
   873fc:	1007883a 	mov	r3,r2
   87400:	00bfffc4 	movi	r2,-1
   87404:	1884703a 	and	r2,r3,r2
   87408:	11403fcc 	andi	r5,r2,255
   8740c:	2940201c 	xori	r5,r5,128
   87410:	297fe004 	addi	r5,r5,-128
   87414:	0083c800 	call	83c80 <sd_card_write>
   87418:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.num_color_in_palette >> 16) & 0xFF));
   8741c:	e13fee0f 	ldh	r4,-72(fp)
   87420:	e0bffd17 	ldw	r2,-12(fp)
   87424:	1005d43a 	srai	r2,r2,16
   87428:	1007883a 	mov	r3,r2
   8742c:	00bfffc4 	movi	r2,-1
   87430:	1884703a 	and	r2,r3,r2
   87434:	11403fcc 	andi	r5,r2,255
   87438:	2940201c 	xori	r5,r5,128
   8743c:	297fe004 	addi	r5,r5,-128
   87440:	0083c800 	call	83c80 <sd_card_write>
   87444:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.num_color_in_palette >> 24) & 0xFF));
   87448:	e13fee0f 	ldh	r4,-72(fp)
   8744c:	e0bffd17 	ldw	r2,-12(fp)
   87450:	1005d63a 	srai	r2,r2,24
   87454:	1007883a 	mov	r3,r2
   87458:	00bfffc4 	movi	r2,-1
   8745c:	1884703a 	and	r2,r3,r2
   87460:	11403fcc 	andi	r5,r2,255
   87464:	2940201c 	xori	r5,r5,128
   87468:	297fe004 	addi	r5,r5,-128
   8746c:	0083c800 	call	83c80 <sd_card_write>
   87470:	e0bfe915 	stw	r2,-92(fp)

			status = sd_card_write(file_handle, (char)((bmp_header.important_color) & 0xFF));
   87474:	e13fee0f 	ldh	r4,-72(fp)
   87478:	e0bffe17 	ldw	r2,-8(fp)
   8747c:	1007883a 	mov	r3,r2
   87480:	00bfffc4 	movi	r2,-1
   87484:	1884703a 	and	r2,r3,r2
   87488:	11403fcc 	andi	r5,r2,255
   8748c:	2940201c 	xori	r5,r5,128
   87490:	297fe004 	addi	r5,r5,-128
   87494:	0083c800 	call	83c80 <sd_card_write>
   87498:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.important_color >> 8) & 0xFF));
   8749c:	e13fee0f 	ldh	r4,-72(fp)
   874a0:	e0bffe17 	ldw	r2,-8(fp)
   874a4:	1005d23a 	srai	r2,r2,8
   874a8:	1007883a 	mov	r3,r2
   874ac:	00bfffc4 	movi	r2,-1
   874b0:	1884703a 	and	r2,r3,r2
   874b4:	11403fcc 	andi	r5,r2,255
   874b8:	2940201c 	xori	r5,r5,128
   874bc:	297fe004 	addi	r5,r5,-128
   874c0:	0083c800 	call	83c80 <sd_card_write>
   874c4:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.important_color >> 16) & 0xFF));
   874c8:	e13fee0f 	ldh	r4,-72(fp)
   874cc:	e0bffe17 	ldw	r2,-8(fp)
   874d0:	1005d43a 	srai	r2,r2,16
   874d4:	1007883a 	mov	r3,r2
   874d8:	00bfffc4 	movi	r2,-1
   874dc:	1884703a 	and	r2,r3,r2
   874e0:	11403fcc 	andi	r5,r2,255
   874e4:	2940201c 	xori	r5,r5,128
   874e8:	297fe004 	addi	r5,r5,-128
   874ec:	0083c800 	call	83c80 <sd_card_write>
   874f0:	e0bfe915 	stw	r2,-92(fp)
			status = sd_card_write(file_handle, (char)((bmp_header.important_color >> 24) & 0xFF));
   874f4:	e13fee0f 	ldh	r4,-72(fp)
   874f8:	e0bffe17 	ldw	r2,-8(fp)
   874fc:	1005d63a 	srai	r2,r2,24
   87500:	1007883a 	mov	r3,r2
   87504:	00bfffc4 	movi	r2,-1
   87508:	1884703a 	and	r2,r3,r2
   8750c:	11403fcc 	andi	r5,r2,255
   87510:	2940201c 	xori	r5,r5,128
   87514:	297fe004 	addi	r5,r5,-128
   87518:	0083c800 	call	83c80 <sd_card_write>
   8751c:	e0bfe915 	stw	r2,-92(fp)

			image_size = 0;
   87520:	e03fe815 	stw	zero,-96(fp)
   87524:	00000a06 	br	87550 <SD_write_task+0xa5c>
		} else {
			image_width = (int)OSMboxAccept(WriteImageWidthMailbox);
   87528:	d1270d17 	ldw	r4,-25548(gp)
   8752c:	00971080 	call	97108 <OSMboxAccept>
   87530:	e0bfe715 	stw	r2,-100(fp)
			image_height = (int)OSMboxAccept(WriteImageHeightMailbox);
   87534:	d1270717 	ldw	r4,-25572(gp)
   87538:	00971080 	call	97108 <OSMboxAccept>
   8753c:	e0bfe615 	stw	r2,-104(fp)
			image_width = 640;
   87540:	0080a004 	movi	r2,640
   87544:	e0bfe715 	stw	r2,-100(fp)
			image_height = 480;
   87548:	00807804 	movi	r2,480
   8754c:	e0bfe615 	stw	r2,-104(fp)

		do {
			// 3 data


			dataB = (unsigned short int)OSQAccept(SDWriteQueueB, &return_code);
   87550:	d1270117 	ldw	r4,-25596(gp)
   87554:	e17fee84 	addi	r5,fp,-70
   87558:	00999480 	call	99948 <OSQAccept>
   8755c:	e0bfec0d 	sth	r2,-80(fp)

			dataG = (unsigned short int)OSQAccept(SDWriteQueueG, &return_code);
   87560:	d1270e17 	ldw	r4,-25544(gp)
   87564:	e17fee84 	addi	r5,fp,-70
   87568:	00999480 	call	99948 <OSQAccept>
   8756c:	e0bfec8d 	sth	r2,-78(fp)
			dataR = (unsigned short int)OSQAccept(SDWriteQueueR, &return_code);
   87570:	d1270917 	ldw	r4,-25564(gp)
   87574:	e17fee84 	addi	r5,fp,-70
   87578:	00999480 	call	99948 <OSQAccept>
   8757c:	e0bfed0d 	sth	r2,-76(fp)

			//data = (unsigned short int)OSQAccept(SDWriteQueue, &return_code);
			if (return_code == OS_NO_ERR) {
   87580:	e0bfee83 	ldbu	r2,-70(fp)
   87584:	10803fcc 	andi	r2,r2,255
   87588:	1004c03a 	cmpne	r2,r2,zero
   8758c:	1000211e 	bne	r2,zero,87614 <SD_write_task+0xb20>




				status = sd_card_write(file_handle, (char)(dataR & 0xFF)); //R
   87590:	e13fee0f 	ldh	r4,-72(fp)
   87594:	e0bfed0b 	ldhu	r2,-76(fp)
   87598:	1007883a 	mov	r3,r2
   8759c:	00bfffc4 	movi	r2,-1
   875a0:	1884703a 	and	r2,r3,r2
   875a4:	11403fcc 	andi	r5,r2,255
   875a8:	2940201c 	xori	r5,r5,128
   875ac:	297fe004 	addi	r5,r5,-128
   875b0:	0083c800 	call	83c80 <sd_card_write>
   875b4:	e0bfe915 	stw	r2,-92(fp)
				status = sd_card_write(file_handle, (char)(dataG & 0xFF)); //G
   875b8:	e13fee0f 	ldh	r4,-72(fp)
   875bc:	e0bfec8b 	ldhu	r2,-78(fp)
   875c0:	1007883a 	mov	r3,r2
   875c4:	00bfffc4 	movi	r2,-1
   875c8:	1884703a 	and	r2,r3,r2
   875cc:	11403fcc 	andi	r5,r2,255
   875d0:	2940201c 	xori	r5,r5,128
   875d4:	297fe004 	addi	r5,r5,-128
   875d8:	0083c800 	call	83c80 <sd_card_write>
   875dc:	e0bfe915 	stw	r2,-92(fp)
				status = sd_card_write(file_handle, (char)(dataB & 0xFF)); //B
   875e0:	e13fee0f 	ldh	r4,-72(fp)
   875e4:	e0bfec0b 	ldhu	r2,-80(fp)
   875e8:	1007883a 	mov	r3,r2
   875ec:	00bfffc4 	movi	r2,-1
   875f0:	1884703a 	and	r2,r3,r2
   875f4:	11403fcc 	andi	r5,r2,255
   875f8:	2940201c 	xori	r5,r5,128
   875fc:	297fe004 	addi	r5,r5,-128
   87600:	0083c800 	call	83c80 <sd_card_write>
   87604:	e0bfe915 	stw	r2,-92(fp)
				//image_size++;
				//image_size+=3;

				// 3 status
				image_size+=3;
   87608:	e0bfe817 	ldw	r2,-96(fp)
   8760c:	108000c4 	addi	r2,r2,3
   87610:	e0bfe815 	stw	r2,-96(fp)
			}
		} while ((return_code == OS_NO_ERR) && (image_size < 3*640*480)); //bmp_header.data_size
   87614:	e0bfee83 	ldbu	r2,-70(fp)
   87618:	10803fcc 	andi	r2,r2,255
   8761c:	1004c03a 	cmpne	r2,r2,zero
   87620:	1000041e 	bne	r2,zero,87634 <SD_write_task+0xb40>
   87624:	e0ffe817 	ldw	r3,-96(fp)
   87628:	008003b4 	movhi	r2,14
   8762c:	1083ffc4 	addi	r2,r2,4095
   87630:	10ffc70e 	bge	r2,r3,87550 <SD_write_task+0xa5c>
				
		if (image_size == 3*640*480) { //bmp_header.data_size
   87634:	e0ffe817 	ldw	r3,-96(fp)
   87638:	008003b4 	movhi	r2,14
   8763c:	10840004 	addi	r2,r2,4096
   87640:	1880071e 	bne	r3,r2,87660 <SD_write_task+0xb6c>
			file_opened = 0;
   87644:	e03feb15 	stw	zero,-84(fp)
			sd_card_fclose(file_handle);
   87648:	e13fee0f 	ldh	r4,-72(fp)
   8764c:	00842700 	call	84270 <sd_card_fclose>

			printf("Writing image done (%d bytes)\n", image_size);
   87650:	010002b4 	movhi	r4,10
   87654:	2101e704 	addi	r4,r4,1948
   87658:	e17fe817 	ldw	r5,-96(fp)
   8765c:	00888340 	call	88834 <printf>
		}
		// printf("WQ emptied (%d bytes)\n", image_size);
		
		return_code = OSMutexPost(SDMutex);
   87660:	d1270317 	ldw	r4,-25588(gp)
   87664:	00993740 	call	99374 <OSMutexPost>
   87668:	e0bfee85 	stb	r2,-70(fp)
		alt_ucosii_check_return_code(return_code);
   8766c:	e0bfee83 	ldbu	r2,-70(fp)
   87670:	11003fcc 	andi	r4,r2,255
   87674:	00844440 	call	84444 <alt_ucosii_check_return_code>
		
		OSFlagPost(SDCardFlag, SD_WRITE_DATA_READY, OS_FLAG_CLR, &return_code);
   87678:	d1270417 	ldw	r4,-25584(gp)
   8767c:	e1ffee84 	addi	r7,fp,-70
   87680:	01400804 	movi	r5,32
   87684:	000d883a 	mov	r6,zero
   87688:	00968280 	call	96828 <OSFlagPost>
		alt_ucosii_check_return_code(return_code);
   8768c:	e0bfee83 	ldbu	r2,-70(fp)
   87690:	11003fcc 	andi	r4,r2,255
   87694:	00844440 	call	84444 <alt_ucosii_check_return_code>
		
		OSFlagPost(SDCardFlag, SD_WRITE_NEED_FILL, OS_FLAG_SET, &return_code);
   87698:	d1270417 	ldw	r4,-25584(gp)
   8769c:	e1ffee84 	addi	r7,fp,-70
   876a0:	01400404 	movi	r5,16
   876a4:	01800044 	movi	r6,1
   876a8:	00968280 	call	96828 <OSFlagPost>
		alt_ucosii_check_return_code(return_code);
   876ac:	e0bfee83 	ldbu	r2,-70(fp)
   876b0:	11003fcc 	andi	r4,r2,255
   876b4:	00844440 	call	84444 <alt_ucosii_check_return_code>
	}
   876b8:	003d1906 	br	86b20 <SD_write_task+0x2c>

000876bc <compute_Y_task>:
}

void compute_Y_task(void *pdata) {
   876bc:	deffe904 	addi	sp,sp,-92
   876c0:	dfc01615 	stw	ra,88(sp)
   876c4:	df001515 	stw	fp,84(sp)
   876c8:	dc401415 	stw	r17,80(sp)
   876cc:	dc001315 	stw	r16,76(sp)
   876d0:	df001304 	addi	fp,sp,76
   876d4:	e13ffd15 	stw	r4,-12(fp)
	INT8U return_code = OS_NO_ERR;
   876d8:	e03ffc05 	stb	zero,-16(fp)
	alt_u8 *R_val, *G_val, *B_val, *Y_val;
	alt_u8 *R_temp, *G_temp, *B_temp, *Y_temp;
	unsigned short int data;
	int i, j, RGB_count;
	int image_height, image_width;
	printf("We are in compute_Y_task()!\n");
   876dc:	010002b4 	movhi	r4,10
   876e0:	2101ef04 	addi	r4,r4,1980
   876e4:	00889700 	call	88970 <puts>
	while (1) {
		OSSemPend(PBSemaphore[0], 0, &return_code);
   876e8:	008002f4 	movhi	r2,11
   876ec:	10a10704 	addi	r2,r2,-31716
   876f0:	11000017 	ldw	r4,0(r2)
   876f4:	e1bffc04 	addi	r6,fp,-16
   876f8:	000b883a 	mov	r5,zero
   876fc:	009b0f00 	call	9b0f0 <OSSemPend>
		alt_ucosii_check_return_code(return_code);					
   87700:	e0bffc03 	ldbu	r2,-16(fp)
   87704:	11003fcc 	andi	r4,r2,255
   87708:	00844440 	call	84444 <alt_ucosii_check_return_code>
		
		printf("Compute Y task start\n");
   8770c:	010002b4 	movhi	r4,10
   87710:	2101f604 	addi	r4,r4,2008
   87714:	00889700 	call	88970 <puts>
		
		OSFlagPend(SDCardFlag, SD_PRESENCE_FLAG | SD_FILESYSTEM_FLAG, OS_FLAG_WAIT_SET_ALL, 0, &return_code);
   87718:	d1270417 	ldw	r4,-25584(gp)
   8771c:	e0bffc04 	addi	r2,fp,-16
   87720:	d8800015 	stw	r2,0(sp)
   87724:	014000c4 	movi	r5,3
   87728:	01800084 	movi	r6,2
   8772c:	000f883a 	mov	r7,zero
   87730:	009617c0 	call	9617c <OSFlagPend>
		alt_ucosii_check_return_code(return_code);
   87734:	e0bffc03 	ldbu	r2,-16(fp)
   87738:	11003fcc 	andi	r4,r2,255
   8773c:	00844440 	call	84444 <alt_ucosii_check_return_code>
		
		printf("SD card present and filesystem ok\n");
   87740:	010002b4 	movhi	r4,10
   87744:	2101fc04 	addi	r4,r4,2032
   87748:	00889700 	call	88970 <puts>

		// get the first queue of data
		OSFlagPost(SDCardFlag, SD_READ_DATA_READY, OS_FLAG_CLR, &return_code);
   8774c:	d1270417 	ldw	r4,-25584(gp)
   87750:	e1fffc04 	addi	r7,fp,-16
   87754:	01400204 	movi	r5,8
   87758:	000d883a 	mov	r6,zero
   8775c:	00968280 	call	96828 <OSFlagPost>
		alt_ucosii_check_return_code(return_code);
   87760:	e0bffc03 	ldbu	r2,-16(fp)
   87764:	11003fcc 	andi	r4,r2,255
   87768:	00844440 	call	84444 <alt_ucosii_check_return_code>

		OSFlagPost(SDCardFlag, SD_READ_NEED_FILL, OS_FLAG_SET, &return_code);
   8776c:	d1270417 	ldw	r4,-25584(gp)
   87770:	e1fffc04 	addi	r7,fp,-16
   87774:	01400104 	movi	r5,4
   87778:	01800044 	movi	r6,1
   8777c:	00968280 	call	96828 <OSFlagPost>
		alt_ucosii_check_return_code(return_code);
   87780:	e0bffc03 	ldbu	r2,-16(fp)
   87784:	11003fcc 	andi	r4,r2,255
   87788:	00844440 	call	84444 <alt_ucosii_check_return_code>
		
		image_width = (int)OSMboxPend(ReadImageWidthMailbox, 0, &return_code);
   8778c:	d1271017 	ldw	r4,-25536(gp)
   87790:	e1bffc04 	addi	r6,fp,-16
   87794:	000b883a 	mov	r5,zero
   87798:	00975600 	call	97560 <OSMboxPend>
   8779c:	e0bfee15 	stw	r2,-72(fp)
		alt_ucosii_check_return_code(return_code);
   877a0:	e0bffc03 	ldbu	r2,-16(fp)
   877a4:	11003fcc 	andi	r4,r2,255
   877a8:	00844440 	call	84444 <alt_ucosii_check_return_code>
		image_height = (int)OSMboxPend(ReadImageHeightMailbox, 0, &return_code);
   877ac:	d1270b17 	ldw	r4,-25556(gp)
   877b0:	e1bffc04 	addi	r6,fp,-16
   877b4:	000b883a 	mov	r5,zero
   877b8:	00975600 	call	97560 <OSMboxPend>
   877bc:	e0bfef15 	stw	r2,-68(fp)
		alt_ucosii_check_return_code(return_code);
   877c0:	e0bffc03 	ldbu	r2,-16(fp)
   877c4:	11003fcc 	andi	r4,r2,255
   877c8:	00844440 	call	84444 <alt_ucosii_check_return_code>
		image_width = 640;
   877cc:	0080a004 	movi	r2,640
   877d0:	e0bfee15 	stw	r2,-72(fp)
		image_height = 480;
   877d4:	00807804 	movi	r2,480
   877d8:	e0bfef15 	stw	r2,-68(fp)
		/*Y_val = OSMemGet(MemoryPartition, &return_code);
		alt_ucosii_check_return_code(return_code);*/


		// create RGB temp outside
		R_temp = OSMemGet(MemoryPartition, &return_code); //should be outside?
   877dc:	d1270017 	ldw	r4,-25600(gp)
   877e0:	e17ffc04 	addi	r5,fp,-16
   877e4:	0097fb00 	call	97fb0 <OSMemGet>
   877e8:	e0bff715 	stw	r2,-36(fp)
		alt_ucosii_check_return_code(return_code);
   877ec:	e0bffc03 	ldbu	r2,-16(fp)
   877f0:	11003fcc 	andi	r4,r2,255
   877f4:	00844440 	call	84444 <alt_ucosii_check_return_code>
		G_temp = OSMemGet(MemoryPartition, &return_code);
   877f8:	d1270017 	ldw	r4,-25600(gp)
   877fc:	e17ffc04 	addi	r5,fp,-16
   87800:	0097fb00 	call	97fb0 <OSMemGet>
   87804:	e0bff615 	stw	r2,-40(fp)
		alt_ucosii_check_return_code(return_code);
   87808:	e0bffc03 	ldbu	r2,-16(fp)
   8780c:	11003fcc 	andi	r4,r2,255
   87810:	00844440 	call	84444 <alt_ucosii_check_return_code>
		B_temp = OSMemGet(MemoryPartition, &return_code);
   87814:	d1270017 	ldw	r4,-25600(gp)
   87818:	e17ffc04 	addi	r5,fp,-16
   8781c:	0097fb00 	call	97fb0 <OSMemGet>
   87820:	e0bff515 	stw	r2,-44(fp)
		alt_ucosii_check_return_code(return_code);
   87824:	e0bffc03 	ldbu	r2,-16(fp)
   87828:	11003fcc 	andi	r4,r2,255
   8782c:	00844440 	call	84444 <alt_ucosii_check_return_code>

		for (i = 0; i < ((image_height < 0) ? -image_height : image_height); i++) {
   87830:	e03ff215 	stw	zero,-56(fp)
   87834:	0001d606 	br	87f90 <compute_Y_task+0x8d4>

			R_val = OSMemGet(MemoryPartition, &return_code); //should be outside?
   87838:	d1270017 	ldw	r4,-25600(gp)
   8783c:	e17ffc04 	addi	r5,fp,-16
   87840:	0097fb00 	call	97fb0 <OSMemGet>
   87844:	e0bffb15 	stw	r2,-20(fp)
			alt_ucosii_check_return_code(return_code);
   87848:	e0bffc03 	ldbu	r2,-16(fp)
   8784c:	11003fcc 	andi	r4,r2,255
   87850:	00844440 	call	84444 <alt_ucosii_check_return_code>
			G_val = OSMemGet(MemoryPartition, &return_code);
   87854:	d1270017 	ldw	r4,-25600(gp)
   87858:	e17ffc04 	addi	r5,fp,-16
   8785c:	0097fb00 	call	97fb0 <OSMemGet>
   87860:	e0bffa15 	stw	r2,-24(fp)
			alt_ucosii_check_return_code(return_code);
   87864:	e0bffc03 	ldbu	r2,-16(fp)
   87868:	11003fcc 	andi	r4,r2,255
   8786c:	00844440 	call	84444 <alt_ucosii_check_return_code>
			B_val = OSMemGet(MemoryPartition, &return_code);
   87870:	d1270017 	ldw	r4,-25600(gp)
   87874:	e17ffc04 	addi	r5,fp,-16
   87878:	0097fb00 	call	97fb0 <OSMemGet>
   8787c:	e0bff915 	stw	r2,-28(fp)
			alt_ucosii_check_return_code(return_code);
   87880:	e0bffc03 	ldbu	r2,-16(fp)
   87884:	11003fcc 	andi	r4,r2,255
   87888:	00844440 	call	84444 <alt_ucosii_check_return_code>


			for (j = 0; j < image_width; j++) {
   8788c:	e03ff115 	stw	zero,-60(fp)
   87890:	00016b06 	br	87e40 <compute_Y_task+0x784>
				for (RGB_count = 0; RGB_count < 3; ) {
   87894:	e03ff015 	stw	zero,-64(fp)
   87898:	00004f06 	br	879d8 <compute_Y_task+0x31c>
					data = (unsigned short int)OSQAccept(SDReadQueue, &return_code);
   8789c:	d1270c17 	ldw	r4,-25552(gp)
   878a0:	e17ffc04 	addi	r5,fp,-16
   878a4:	00999480 	call	99948 <OSQAccept>
   878a8:	e0bff30d 	sth	r2,-52(fp)
				
					if (return_code == OS_Q_EMPTY) {
   878ac:	e0bffc03 	ldbu	r2,-16(fp)
   878b0:	10803fcc 	andi	r2,r2,255
   878b4:	108007d8 	cmpnei	r2,r2,31
   878b8:	10001b1e 	bne	r2,zero,87928 <compute_Y_task+0x26c>
						// printf("Need to fill ReadQueue\n");
						OSFlagPost(SDCardFlag, SD_READ_DATA_READY, OS_FLAG_CLR, &return_code);
   878bc:	d1270417 	ldw	r4,-25584(gp)
   878c0:	e1fffc04 	addi	r7,fp,-16
   878c4:	01400204 	movi	r5,8
   878c8:	000d883a 	mov	r6,zero
   878cc:	00968280 	call	96828 <OSFlagPost>
						alt_ucosii_check_return_code(return_code);
   878d0:	e0bffc03 	ldbu	r2,-16(fp)
   878d4:	11003fcc 	andi	r4,r2,255
   878d8:	00844440 	call	84444 <alt_ucosii_check_return_code>
						OSFlagPost(SDCardFlag, SD_READ_NEED_FILL, OS_FLAG_SET, &return_code);
   878dc:	d1270417 	ldw	r4,-25584(gp)
   878e0:	e1fffc04 	addi	r7,fp,-16
   878e4:	01400104 	movi	r5,4
   878e8:	01800044 	movi	r6,1
   878ec:	00968280 	call	96828 <OSFlagPost>
						alt_ucosii_check_return_code(return_code);
   878f0:	e0bffc03 	ldbu	r2,-16(fp)
   878f4:	11003fcc 	andi	r4,r2,255
   878f8:	00844440 	call	84444 <alt_ucosii_check_return_code>
						OSFlagPend(SDCardFlag, SD_PRESENCE_FLAG | SD_FILESYSTEM_FLAG | SD_READ_DATA_READY, OS_FLAG_WAIT_SET_ALL, 0, &return_code);
   878fc:	d1270417 	ldw	r4,-25584(gp)
   87900:	e0bffc04 	addi	r2,fp,-16
   87904:	d8800015 	stw	r2,0(sp)
   87908:	014002c4 	movi	r5,11
   8790c:	01800084 	movi	r6,2
   87910:	000f883a 	mov	r7,zero
   87914:	009617c0 	call	9617c <OSFlagPend>
						alt_ucosii_check_return_code(return_code);	
   87918:	e0bffc03 	ldbu	r2,-16(fp)
   8791c:	11003fcc 	andi	r4,r2,255
   87920:	00844440 	call	84444 <alt_ucosii_check_return_code>
   87924:	00002c06 	br	879d8 <compute_Y_task+0x31c>
					} else {
						switch (RGB_count) {
   87928:	e0bff017 	ldw	r2,-64(fp)
   8792c:	e0bfff15 	stw	r2,-4(fp)
   87930:	e0ffff17 	ldw	r3,-4(fp)
   87934:	18800060 	cmpeqi	r2,r3,1
   87938:	1000111e 	bne	r2,zero,87980 <compute_Y_task+0x2c4>
   8793c:	e0ffff17 	ldw	r3,-4(fp)
   87940:	188000a0 	cmpeqi	r2,r3,2
   87944:	1000181e 	bne	r2,zero,879a8 <compute_Y_task+0x2ec>
   87948:	e0ffff17 	ldw	r3,-4(fp)
   8794c:	1805003a 	cmpeq	r2,r3,zero
   87950:	1000011e 	bne	r2,zero,87958 <compute_Y_task+0x29c>
   87954:	00001d06 	br	879cc <compute_Y_task+0x310>
							case 0: B_val[j] = (char)(data & 0xFF); break;
   87958:	e0bff117 	ldw	r2,-60(fp)
   8795c:	1007883a 	mov	r3,r2
   87960:	e0bff917 	ldw	r2,-28(fp)
   87964:	1889883a 	add	r4,r3,r2
   87968:	e0bff30b 	ldhu	r2,-52(fp)
   8796c:	1007883a 	mov	r3,r2
   87970:	00bfffc4 	movi	r2,-1
   87974:	1884703a 	and	r2,r3,r2
   87978:	20800005 	stb	r2,0(r4)
   8797c:	00001306 	br	879cc <compute_Y_task+0x310>
							case 1: G_val[j] = (char)(data & 0xFF); break;
   87980:	e0bff117 	ldw	r2,-60(fp)
   87984:	1007883a 	mov	r3,r2
   87988:	e0bffa17 	ldw	r2,-24(fp)
   8798c:	1889883a 	add	r4,r3,r2
   87990:	e0bff30b 	ldhu	r2,-52(fp)
   87994:	1007883a 	mov	r3,r2
   87998:	00bfffc4 	movi	r2,-1
   8799c:	1884703a 	and	r2,r3,r2
   879a0:	20800005 	stb	r2,0(r4)
   879a4:	00000906 	br	879cc <compute_Y_task+0x310>
							case 2: R_val[j] = (char)(data & 0xFF); break;
   879a8:	e0bff117 	ldw	r2,-60(fp)
   879ac:	1007883a 	mov	r3,r2
   879b0:	e0bffb17 	ldw	r2,-20(fp)
   879b4:	1889883a 	add	r4,r3,r2
   879b8:	e0bff30b 	ldhu	r2,-52(fp)
   879bc:	1007883a 	mov	r3,r2
   879c0:	00bfffc4 	movi	r2,-1
   879c4:	1884703a 	and	r2,r3,r2
   879c8:	20800005 	stb	r2,0(r4)
						}
						RGB_count++;
   879cc:	e0bff017 	ldw	r2,-64(fp)
   879d0:	10800044 	addi	r2,r2,1
   879d4:	e0bff015 	stw	r2,-64(fp)
			B_val = OSMemGet(MemoryPartition, &return_code);
			alt_ucosii_check_return_code(return_code);


			for (j = 0; j < image_width; j++) {
				for (RGB_count = 0; RGB_count < 3; ) {
   879d8:	e0bff017 	ldw	r2,-64(fp)
   879dc:	108000d0 	cmplti	r2,r2,3
   879e0:	103fae1e 	bne	r2,zero,8789c <compute_Y_task+0x1e0>
							case 2: R_val[j] = (char)(data & 0xFF); break;
						}
						RGB_count++;
					}
				}
				if(i<240){ //due to the order of the reading of the image (bottom up), changed the filter equation ordering accordingly
   879e4:	e0bff217 	ldw	r2,-56(fp)
   879e8:	10803c08 	cmpgei	r2,r2,240
   879ec:	10008c1e 	bne	r2,zero,87c20 <compute_Y_task+0x564>
					if(j<320){
   879f0:	e0bff117 	ldw	r2,-60(fp)
   879f4:	10805008 	cmpgei	r2,r2,320
   879f8:	1000671e 	bne	r2,zero,87b98 <compute_Y_task+0x4dc>
						//Original
						//negative GS* now
						B_val[j] = 255 - ((1052*R_val[j] + 2064*G_val[j] + 401*B_val[j]) >> 12);
   879fc:	e0bff117 	ldw	r2,-60(fp)
   87a00:	1007883a 	mov	r3,r2
   87a04:	e0bff917 	ldw	r2,-28(fp)
   87a08:	18a1883a 	add	r16,r3,r2
   87a0c:	e0bff117 	ldw	r2,-60(fp)
   87a10:	1007883a 	mov	r3,r2
   87a14:	e0bffb17 	ldw	r2,-20(fp)
   87a18:	1885883a 	add	r2,r3,r2
   87a1c:	10800003 	ldbu	r2,0(r2)
   87a20:	11003fcc 	andi	r4,r2,255
   87a24:	01410704 	movi	r5,1052
   87a28:	00886b00 	call	886b0 <__mulsi3>
   87a2c:	1023883a 	mov	r17,r2
   87a30:	e0bff117 	ldw	r2,-60(fp)
   87a34:	1007883a 	mov	r3,r2
   87a38:	e0bffa17 	ldw	r2,-24(fp)
   87a3c:	1885883a 	add	r2,r3,r2
   87a40:	10800003 	ldbu	r2,0(r2)
   87a44:	11003fcc 	andi	r4,r2,255
   87a48:	01420404 	movi	r5,2064
   87a4c:	00886b00 	call	886b0 <__mulsi3>
   87a50:	88a3883a 	add	r17,r17,r2
   87a54:	e0bff117 	ldw	r2,-60(fp)
   87a58:	1007883a 	mov	r3,r2
   87a5c:	e0bff917 	ldw	r2,-28(fp)
   87a60:	1885883a 	add	r2,r3,r2
   87a64:	10800003 	ldbu	r2,0(r2)
   87a68:	11003fcc 	andi	r4,r2,255
   87a6c:	01406444 	movi	r5,401
   87a70:	00886b00 	call	886b0 <__mulsi3>
   87a74:	8885883a 	add	r2,r17,r2
   87a78:	1005d33a 	srai	r2,r2,12
   87a7c:	0084303a 	nor	r2,zero,r2
   87a80:	80800005 	stb	r2,0(r16)
						G_val[j] = 255 - ((1052*R_val[j] + 2064*G_val[j] + 401*B_val[j]) >> 12);
   87a84:	e0bff117 	ldw	r2,-60(fp)
   87a88:	1007883a 	mov	r3,r2
   87a8c:	e0bffa17 	ldw	r2,-24(fp)
   87a90:	18a1883a 	add	r16,r3,r2
   87a94:	e0bff117 	ldw	r2,-60(fp)
   87a98:	1007883a 	mov	r3,r2
   87a9c:	e0bffb17 	ldw	r2,-20(fp)
   87aa0:	1885883a 	add	r2,r3,r2
   87aa4:	10800003 	ldbu	r2,0(r2)
   87aa8:	11003fcc 	andi	r4,r2,255
   87aac:	01410704 	movi	r5,1052
   87ab0:	00886b00 	call	886b0 <__mulsi3>
   87ab4:	1023883a 	mov	r17,r2
   87ab8:	e0bff117 	ldw	r2,-60(fp)
   87abc:	1007883a 	mov	r3,r2
   87ac0:	e0bffa17 	ldw	r2,-24(fp)
   87ac4:	1885883a 	add	r2,r3,r2
   87ac8:	10800003 	ldbu	r2,0(r2)
   87acc:	11003fcc 	andi	r4,r2,255
   87ad0:	01420404 	movi	r5,2064
   87ad4:	00886b00 	call	886b0 <__mulsi3>
   87ad8:	88a3883a 	add	r17,r17,r2
   87adc:	e0bff117 	ldw	r2,-60(fp)
   87ae0:	1007883a 	mov	r3,r2
   87ae4:	e0bff917 	ldw	r2,-28(fp)
   87ae8:	1885883a 	add	r2,r3,r2
   87aec:	10800003 	ldbu	r2,0(r2)
   87af0:	11003fcc 	andi	r4,r2,255
   87af4:	01406444 	movi	r5,401
   87af8:	00886b00 	call	886b0 <__mulsi3>
   87afc:	8885883a 	add	r2,r17,r2
   87b00:	1005d33a 	srai	r2,r2,12
   87b04:	0084303a 	nor	r2,zero,r2
   87b08:	80800005 	stb	r2,0(r16)
						R_val[j] = 255 - ((1052*R_val[j] + 2064*G_val[j] + 401*B_val[j]) >> 12);
   87b0c:	e0bff117 	ldw	r2,-60(fp)
   87b10:	1007883a 	mov	r3,r2
   87b14:	e0bffb17 	ldw	r2,-20(fp)
   87b18:	18a1883a 	add	r16,r3,r2
   87b1c:	e0bff117 	ldw	r2,-60(fp)
   87b20:	1007883a 	mov	r3,r2
   87b24:	e0bffb17 	ldw	r2,-20(fp)
   87b28:	1885883a 	add	r2,r3,r2
   87b2c:	10800003 	ldbu	r2,0(r2)
   87b30:	11003fcc 	andi	r4,r2,255
   87b34:	01410704 	movi	r5,1052
   87b38:	00886b00 	call	886b0 <__mulsi3>
   87b3c:	1023883a 	mov	r17,r2
   87b40:	e0bff117 	ldw	r2,-60(fp)
   87b44:	1007883a 	mov	r3,r2
   87b48:	e0bffa17 	ldw	r2,-24(fp)
   87b4c:	1885883a 	add	r2,r3,r2
   87b50:	10800003 	ldbu	r2,0(r2)
   87b54:	11003fcc 	andi	r4,r2,255
   87b58:	01420404 	movi	r5,2064
   87b5c:	00886b00 	call	886b0 <__mulsi3>
   87b60:	88a3883a 	add	r17,r17,r2
   87b64:	e0bff117 	ldw	r2,-60(fp)
   87b68:	1007883a 	mov	r3,r2
   87b6c:	e0bff917 	ldw	r2,-28(fp)
   87b70:	1885883a 	add	r2,r3,r2
   87b74:	10800003 	ldbu	r2,0(r2)
   87b78:	11003fcc 	andi	r4,r2,255
   87b7c:	01406444 	movi	r5,401
   87b80:	00886b00 	call	886b0 <__mulsi3>
   87b84:	8885883a 	add	r2,r17,r2
   87b88:	1005d33a 	srai	r2,r2,12
   87b8c:	0084303a 	nor	r2,zero,r2
   87b90:	80800005 	stb	r2,0(r16)
   87b94:	0000a706 	br	87e34 <compute_Y_task+0x778>
						//Grayscale
						//negative original* now
						/*B_val[j] = B_val[j];
						G_val[j] = G_val[j];
						R_val[j] = R_val[j];*/
						B_val[j] = 255 - B_val[j];
   87b98:	e0bff117 	ldw	r2,-60(fp)
   87b9c:	1007883a 	mov	r3,r2
   87ba0:	e0bff917 	ldw	r2,-28(fp)
   87ba4:	1889883a 	add	r4,r3,r2
   87ba8:	e0bff117 	ldw	r2,-60(fp)
   87bac:	1007883a 	mov	r3,r2
   87bb0:	e0bff917 	ldw	r2,-28(fp)
   87bb4:	1885883a 	add	r2,r3,r2
   87bb8:	10800003 	ldbu	r2,0(r2)
   87bbc:	0084303a 	nor	r2,zero,r2
   87bc0:	20800005 	stb	r2,0(r4)
						G_val[j] = 255 - G_val[j];
   87bc4:	e0bff117 	ldw	r2,-60(fp)
   87bc8:	1007883a 	mov	r3,r2
   87bcc:	e0bffa17 	ldw	r2,-24(fp)
   87bd0:	1889883a 	add	r4,r3,r2
   87bd4:	e0bff117 	ldw	r2,-60(fp)
   87bd8:	1007883a 	mov	r3,r2
   87bdc:	e0bffa17 	ldw	r2,-24(fp)
   87be0:	1885883a 	add	r2,r3,r2
   87be4:	10800003 	ldbu	r2,0(r2)
   87be8:	0084303a 	nor	r2,zero,r2
   87bec:	20800005 	stb	r2,0(r4)
						R_val[j] = 255 - R_val[j];
   87bf0:	e0bff117 	ldw	r2,-60(fp)
   87bf4:	1007883a 	mov	r3,r2
   87bf8:	e0bffb17 	ldw	r2,-20(fp)
   87bfc:	1889883a 	add	r4,r3,r2
   87c00:	e0bff117 	ldw	r2,-60(fp)
   87c04:	1007883a 	mov	r3,r2
   87c08:	e0bffb17 	ldw	r2,-20(fp)
   87c0c:	1885883a 	add	r2,r3,r2
   87c10:	10800003 	ldbu	r2,0(r2)
   87c14:	0084303a 	nor	r2,zero,r2
   87c18:	20800005 	stb	r2,0(r4)
   87c1c:	00008506 	br	87e34 <compute_Y_task+0x778>
					}
				}else{
					if(j<320){
   87c20:	e0bff117 	ldw	r2,-60(fp)
   87c24:	10805008 	cmpgei	r2,r2,320
   87c28:	10001f1e 	bne	r2,zero,87ca8 <compute_Y_task+0x5ec>
						//Negative of Grayscale
						//original* now
						B_val[j] = B_val[j];
   87c2c:	e0bff117 	ldw	r2,-60(fp)
   87c30:	1007883a 	mov	r3,r2
   87c34:	e0bff917 	ldw	r2,-28(fp)
   87c38:	1889883a 	add	r4,r3,r2
   87c3c:	e0bff117 	ldw	r2,-60(fp)
   87c40:	1007883a 	mov	r3,r2
   87c44:	e0bff917 	ldw	r2,-28(fp)
   87c48:	1885883a 	add	r2,r3,r2
   87c4c:	10800003 	ldbu	r2,0(r2)
   87c50:	20800005 	stb	r2,0(r4)
						G_val[j] = G_val[j];
   87c54:	e0bff117 	ldw	r2,-60(fp)
   87c58:	1007883a 	mov	r3,r2
   87c5c:	e0bffa17 	ldw	r2,-24(fp)
   87c60:	1889883a 	add	r4,r3,r2
   87c64:	e0bff117 	ldw	r2,-60(fp)
   87c68:	1007883a 	mov	r3,r2
   87c6c:	e0bffa17 	ldw	r2,-24(fp)
   87c70:	1885883a 	add	r2,r3,r2
   87c74:	10800003 	ldbu	r2,0(r2)
   87c78:	20800005 	stb	r2,0(r4)
						R_val[j] = R_val[j];
   87c7c:	e0bff117 	ldw	r2,-60(fp)
   87c80:	1007883a 	mov	r3,r2
   87c84:	e0bffb17 	ldw	r2,-20(fp)
   87c88:	1889883a 	add	r4,r3,r2
   87c8c:	e0bff117 	ldw	r2,-60(fp)
   87c90:	1007883a 	mov	r3,r2
   87c94:	e0bffb17 	ldw	r2,-20(fp)
   87c98:	1885883a 	add	r2,r3,r2
   87c9c:	10800003 	ldbu	r2,0(r2)
   87ca0:	20800005 	stb	r2,0(r4)
   87ca4:	00006306 	br	87e34 <compute_Y_task+0x778>
						//Negative of Original
						//GS* now
						/*B_val[j] = B_val[j];
						G_val[j] = G_val[j];
						R_val[j] = R_val[j];*/
						B_val[j] = (1052*R_val[j] + 2064*G_val[j] + 401*B_val[j]) >> 12;
   87ca8:	e0bff117 	ldw	r2,-60(fp)
   87cac:	1007883a 	mov	r3,r2
   87cb0:	e0bff917 	ldw	r2,-28(fp)
   87cb4:	18a1883a 	add	r16,r3,r2
   87cb8:	e0bff117 	ldw	r2,-60(fp)
   87cbc:	1007883a 	mov	r3,r2
   87cc0:	e0bffb17 	ldw	r2,-20(fp)
   87cc4:	1885883a 	add	r2,r3,r2
   87cc8:	10800003 	ldbu	r2,0(r2)
   87ccc:	11003fcc 	andi	r4,r2,255
   87cd0:	01410704 	movi	r5,1052
   87cd4:	00886b00 	call	886b0 <__mulsi3>
   87cd8:	1023883a 	mov	r17,r2
   87cdc:	e0bff117 	ldw	r2,-60(fp)
   87ce0:	1007883a 	mov	r3,r2
   87ce4:	e0bffa17 	ldw	r2,-24(fp)
   87ce8:	1885883a 	add	r2,r3,r2
   87cec:	10800003 	ldbu	r2,0(r2)
   87cf0:	11003fcc 	andi	r4,r2,255
   87cf4:	01420404 	movi	r5,2064
   87cf8:	00886b00 	call	886b0 <__mulsi3>
   87cfc:	88a3883a 	add	r17,r17,r2
   87d00:	e0bff117 	ldw	r2,-60(fp)
   87d04:	1007883a 	mov	r3,r2
   87d08:	e0bff917 	ldw	r2,-28(fp)
   87d0c:	1885883a 	add	r2,r3,r2
   87d10:	10800003 	ldbu	r2,0(r2)
   87d14:	11003fcc 	andi	r4,r2,255
   87d18:	01406444 	movi	r5,401
   87d1c:	00886b00 	call	886b0 <__mulsi3>
   87d20:	8885883a 	add	r2,r17,r2
   87d24:	1005d33a 	srai	r2,r2,12
   87d28:	80800005 	stb	r2,0(r16)
						G_val[j] = (1052*R_val[j] + 2064*G_val[j] + 401*B_val[j]) >> 12;
   87d2c:	e0bff117 	ldw	r2,-60(fp)
   87d30:	1007883a 	mov	r3,r2
   87d34:	e0bffa17 	ldw	r2,-24(fp)
   87d38:	18a1883a 	add	r16,r3,r2
   87d3c:	e0bff117 	ldw	r2,-60(fp)
   87d40:	1007883a 	mov	r3,r2
   87d44:	e0bffb17 	ldw	r2,-20(fp)
   87d48:	1885883a 	add	r2,r3,r2
   87d4c:	10800003 	ldbu	r2,0(r2)
   87d50:	11003fcc 	andi	r4,r2,255
   87d54:	01410704 	movi	r5,1052
   87d58:	00886b00 	call	886b0 <__mulsi3>
   87d5c:	1023883a 	mov	r17,r2
   87d60:	e0bff117 	ldw	r2,-60(fp)
   87d64:	1007883a 	mov	r3,r2
   87d68:	e0bffa17 	ldw	r2,-24(fp)
   87d6c:	1885883a 	add	r2,r3,r2
   87d70:	10800003 	ldbu	r2,0(r2)
   87d74:	11003fcc 	andi	r4,r2,255
   87d78:	01420404 	movi	r5,2064
   87d7c:	00886b00 	call	886b0 <__mulsi3>
   87d80:	88a3883a 	add	r17,r17,r2
   87d84:	e0bff117 	ldw	r2,-60(fp)
   87d88:	1007883a 	mov	r3,r2
   87d8c:	e0bff917 	ldw	r2,-28(fp)
   87d90:	1885883a 	add	r2,r3,r2
   87d94:	10800003 	ldbu	r2,0(r2)
   87d98:	11003fcc 	andi	r4,r2,255
   87d9c:	01406444 	movi	r5,401
   87da0:	00886b00 	call	886b0 <__mulsi3>
   87da4:	8885883a 	add	r2,r17,r2
   87da8:	1005d33a 	srai	r2,r2,12
   87dac:	80800005 	stb	r2,0(r16)
						R_val[j] = (1052*R_val[j] + 2064*G_val[j] + 401*B_val[j]) >> 12;
   87db0:	e0bff117 	ldw	r2,-60(fp)
   87db4:	1007883a 	mov	r3,r2
   87db8:	e0bffb17 	ldw	r2,-20(fp)
   87dbc:	18a1883a 	add	r16,r3,r2
   87dc0:	e0bff117 	ldw	r2,-60(fp)
   87dc4:	1007883a 	mov	r3,r2
   87dc8:	e0bffb17 	ldw	r2,-20(fp)
   87dcc:	1885883a 	add	r2,r3,r2
   87dd0:	10800003 	ldbu	r2,0(r2)
   87dd4:	11003fcc 	andi	r4,r2,255
   87dd8:	01410704 	movi	r5,1052
   87ddc:	00886b00 	call	886b0 <__mulsi3>
   87de0:	1023883a 	mov	r17,r2
   87de4:	e0bff117 	ldw	r2,-60(fp)
   87de8:	1007883a 	mov	r3,r2
   87dec:	e0bffa17 	ldw	r2,-24(fp)
   87df0:	1885883a 	add	r2,r3,r2
   87df4:	10800003 	ldbu	r2,0(r2)
   87df8:	11003fcc 	andi	r4,r2,255
   87dfc:	01420404 	movi	r5,2064
   87e00:	00886b00 	call	886b0 <__mulsi3>
   87e04:	88a3883a 	add	r17,r17,r2
   87e08:	e0bff117 	ldw	r2,-60(fp)
   87e0c:	1007883a 	mov	r3,r2
   87e10:	e0bff917 	ldw	r2,-28(fp)
   87e14:	1885883a 	add	r2,r3,r2
   87e18:	10800003 	ldbu	r2,0(r2)
   87e1c:	11003fcc 	andi	r4,r2,255
   87e20:	01406444 	movi	r5,401
   87e24:	00886b00 	call	886b0 <__mulsi3>
   87e28:	8885883a 	add	r2,r17,r2
   87e2c:	1005d33a 	srai	r2,r2,12
   87e30:	80800005 	stb	r2,0(r16)
			alt_ucosii_check_return_code(return_code);
			B_val = OSMemGet(MemoryPartition, &return_code);
			alt_ucosii_check_return_code(return_code);


			for (j = 0; j < image_width; j++) {
   87e34:	e0bff117 	ldw	r2,-60(fp)
   87e38:	10800044 	addi	r2,r2,1
   87e3c:	e0bff115 	stw	r2,-60(fp)
   87e40:	e0fff117 	ldw	r3,-60(fp)
   87e44:	e0bfee17 	ldw	r2,-72(fp)
   87e48:	18be9216 	blt	r3,r2,87894 <compute_Y_task+0x1d8>
			alt_ucosii_check_return_code(return_code);
			return_code = OSMemPut(MemoryPartition, (void *)B_val);
			alt_ucosii_check_return_code(return_code);*/

			// One line of Y is ready
			seg7_show(SEG7_DISPLAY_0_BASE, i);
   87e4c:	00c00434 	movhi	r3,16
   87e50:	18c52a04 	addi	r3,r3,5288
   87e54:	e0bff217 	ldw	r2,-56(fp)
   87e58:	18800035 	stwio	r2,0(r3)
			// printf("line %d of Y computed\n", i);
			return_code = OSMboxPost(YImageWidthMailbox, (void *)(image_width));
   87e5c:	d1270517 	ldw	r4,-25580(gp)
   87e60:	e17fee17 	ldw	r5,-72(fp)
   87e64:	00979a40 	call	979a4 <OSMboxPost>
   87e68:	e0bffc05 	stb	r2,-16(fp)
			alt_ucosii_check_return_code(return_code);
   87e6c:	e0bffc03 	ldbu	r2,-16(fp)
   87e70:	11003fcc 	andi	r4,r2,255
   87e74:	00844440 	call	84444 <alt_ucosii_check_return_code>
			return_code = OSMboxPost(YImageHeightMailbox, (void *)(image_height));
   87e78:	d1270617 	ldw	r4,-25576(gp)
   87e7c:	e17fef17 	ldw	r5,-68(fp)
   87e80:	00979a40 	call	979a4 <OSMboxPost>
   87e84:	e0bffc05 	stb	r2,-16(fp)
			alt_ucosii_check_return_code(return_code);
   87e88:	e0bffc03 	ldbu	r2,-16(fp)
   87e8c:	11003fcc 	andi	r4,r2,255
   87e90:	00844440 	call	84444 <alt_ucosii_check_return_code>
			/*return_code = OSMboxPost(YMailbox, (void *)(Y_val));
			alt_ucosii_check_return_code(return_code);*/
			return_code = OSMboxPost(RMailbox, (void *)(R_temp));
   87e94:	d1270817 	ldw	r4,-25568(gp)
   87e98:	e17ff717 	ldw	r5,-36(fp)
   87e9c:	00979a40 	call	979a4 <OSMboxPost>
   87ea0:	e0bffc05 	stb	r2,-16(fp)
			alt_ucosii_check_return_code(return_code);
   87ea4:	e0bffc03 	ldbu	r2,-16(fp)
   87ea8:	11003fcc 	andi	r4,r2,255
   87eac:	00844440 	call	84444 <alt_ucosii_check_return_code>
			return_code = OSMboxPost(GMailbox, (void *)(G_temp));
   87eb0:	d1270217 	ldw	r4,-25592(gp)
   87eb4:	e17ff617 	ldw	r5,-40(fp)
   87eb8:	00979a40 	call	979a4 <OSMboxPost>
   87ebc:	e0bffc05 	stb	r2,-16(fp)
			alt_ucosii_check_return_code(return_code);
   87ec0:	e0bffc03 	ldbu	r2,-16(fp)
   87ec4:	11003fcc 	andi	r4,r2,255
   87ec8:	00844440 	call	84444 <alt_ucosii_check_return_code>
			return_code = OSMboxPost(BMailbox, (void *)(B_temp));
   87ecc:	d1270a17 	ldw	r4,-25560(gp)
   87ed0:	e17ff517 	ldw	r5,-44(fp)
   87ed4:	00979a40 	call	979a4 <OSMboxPost>
   87ed8:	e0bffc05 	stb	r2,-16(fp)
			alt_ucosii_check_return_code(return_code);
   87edc:	e0bffc03 	ldbu	r2,-16(fp)
   87ee0:	11003fcc 	andi	r4,r2,255
   87ee4:	00844440 	call	84444 <alt_ucosii_check_return_code>
			
			OSFlagPost(SDCardFlag, SD_PROCESS_Y_READY, OS_FLAG_CLR, &return_code);
   87ee8:	d1270417 	ldw	r4,-25584(gp)
   87eec:	e1fffc04 	addi	r7,fp,-16
   87ef0:	01401004 	movi	r5,64
   87ef4:	000d883a 	mov	r6,zero
   87ef8:	00968280 	call	96828 <OSFlagPost>
			alt_ucosii_check_return_code(return_code);
   87efc:	e0bffc03 	ldbu	r2,-16(fp)
   87f00:	11003fcc 	andi	r4,r2,255
   87f04:	00844440 	call	84444 <alt_ucosii_check_return_code>

			OSFlagPend(SDCardFlag, SD_PRESENCE_FLAG | SD_FILESYSTEM_FLAG | SD_PROCESS_Y_READY, OS_FLAG_WAIT_SET_ALL, 0, &return_code);
   87f08:	d1270417 	ldw	r4,-25584(gp)
   87f0c:	e0bffc04 	addi	r2,fp,-16
   87f10:	d8800015 	stw	r2,0(sp)
   87f14:	014010c4 	movi	r5,67
   87f18:	01800084 	movi	r6,2
   87f1c:	000f883a 	mov	r7,zero
   87f20:	009617c0 	call	9617c <OSFlagPend>
			alt_ucosii_check_return_code(return_code);
   87f24:	e0bffc03 	ldbu	r2,-16(fp)
   87f28:	11003fcc 	andi	r4,r2,255
   87f2c:	00844440 	call	84444 <alt_ucosii_check_return_code>

			//free temp RGB either here or
			//****************
			return_code = OSMemPut(MemoryPartition, (void *)R_temp);
   87f30:	d1270017 	ldw	r4,-25600(gp)
   87f34:	e17ff717 	ldw	r5,-36(fp)
   87f38:	00982e00 	call	982e0 <OSMemPut>
   87f3c:	e0bffc05 	stb	r2,-16(fp)
			alt_ucosii_check_return_code(return_code);
   87f40:	e0bffc03 	ldbu	r2,-16(fp)
   87f44:	11003fcc 	andi	r4,r2,255
   87f48:	00844440 	call	84444 <alt_ucosii_check_return_code>
			return_code = OSMemPut(MemoryPartition, (void *)G_temp);
   87f4c:	d1270017 	ldw	r4,-25600(gp)
   87f50:	e17ff617 	ldw	r5,-40(fp)
   87f54:	00982e00 	call	982e0 <OSMemPut>
   87f58:	e0bffc05 	stb	r2,-16(fp)
			alt_ucosii_check_return_code(return_code);
   87f5c:	e0bffc03 	ldbu	r2,-16(fp)
   87f60:	11003fcc 	andi	r4,r2,255
   87f64:	00844440 	call	84444 <alt_ucosii_check_return_code>
			return_code = OSMemPut(MemoryPartition, (void *)B_temp);
   87f68:	d1270017 	ldw	r4,-25600(gp)
   87f6c:	e17ff517 	ldw	r5,-44(fp)
   87f70:	00982e00 	call	982e0 <OSMemPut>
   87f74:	e0bffc05 	stb	r2,-16(fp)
			alt_ucosii_check_return_code(return_code);
   87f78:	e0bffc03 	ldbu	r2,-16(fp)
   87f7c:	11003fcc 	andi	r4,r2,255
   87f80:	00844440 	call	84444 <alt_ucosii_check_return_code>
		G_temp = OSMemGet(MemoryPartition, &return_code);
		alt_ucosii_check_return_code(return_code);
		B_temp = OSMemGet(MemoryPartition, &return_code);
		alt_ucosii_check_return_code(return_code);

		for (i = 0; i < ((image_height < 0) ? -image_height : image_height); i++) {
   87f84:	e0bff217 	ldw	r2,-56(fp)
   87f88:	10800044 	addi	r2,r2,1
   87f8c:	e0bff215 	stw	r2,-56(fp)
   87f90:	e0bfef17 	ldw	r2,-68(fp)
   87f94:	e0bffe15 	stw	r2,-8(fp)
   87f98:	e0fffe17 	ldw	r3,-8(fp)
   87f9c:	1804403a 	cmpge	r2,r3,zero
   87fa0:	1000031e 	bne	r2,zero,87fb0 <compute_Y_task+0x8f4>
   87fa4:	e0bffe17 	ldw	r2,-8(fp)
   87fa8:	0085c83a 	sub	r2,zero,r2
   87fac:	e0bffe15 	stw	r2,-8(fp)
   87fb0:	e0bff217 	ldw	r2,-56(fp)
   87fb4:	e0fffe17 	ldw	r3,-8(fp)
   87fb8:	10fe1f16 	blt	r2,r3,87838 <compute_Y_task+0x17c>
			alt_ucosii_check_return_code(return_code);
			return_code = OSMemPut(MemoryPartition, (void *)B_temp);
			alt_ucosii_check_return_code(return_code);
		}

		printf("Compute Y done\n");
   87fbc:	010002b4 	movhi	r4,10
   87fc0:	21020504 	addi	r4,r4,2068
   87fc4:	00889700 	call	88970 <puts>
		return_code = OSMemPut(MemoryPartition, (void *)G_temp);
		alt_ucosii_check_return_code(return_code);
		return_code = OSMemPut(MemoryPartition, (void *)B_temp);
		alt_ucosii_check_return_code(return_code);*/

		return_code = OSMemPut(MemoryPartition, (void *)R_val);
   87fc8:	d1270017 	ldw	r4,-25600(gp)
   87fcc:	e17ffb17 	ldw	r5,-20(fp)
   87fd0:	00982e00 	call	982e0 <OSMemPut>
   87fd4:	e0bffc05 	stb	r2,-16(fp)
		alt_ucosii_check_return_code(return_code);
   87fd8:	e0bffc03 	ldbu	r2,-16(fp)
   87fdc:	11003fcc 	andi	r4,r2,255
   87fe0:	00844440 	call	84444 <alt_ucosii_check_return_code>
		return_code = OSMemPut(MemoryPartition, (void *)G_val);
   87fe4:	d1270017 	ldw	r4,-25600(gp)
   87fe8:	e17ffa17 	ldw	r5,-24(fp)
   87fec:	00982e00 	call	982e0 <OSMemPut>
   87ff0:	e0bffc05 	stb	r2,-16(fp)
		alt_ucosii_check_return_code(return_code);
   87ff4:	e0bffc03 	ldbu	r2,-16(fp)
   87ff8:	11003fcc 	andi	r4,r2,255
   87ffc:	00844440 	call	84444 <alt_ucosii_check_return_code>
		return_code = OSMemPut(MemoryPartition, (void *)B_val);
   88000:	d1270017 	ldw	r4,-25600(gp)
   88004:	e17ff917 	ldw	r5,-28(fp)
   88008:	00982e00 	call	982e0 <OSMemPut>
   8800c:	e0bffc05 	stb	r2,-16(fp)
		alt_ucosii_check_return_code(return_code);
   88010:	e0bffc03 	ldbu	r2,-16(fp)
   88014:	11003fcc 	andi	r4,r2,255
   88018:	00844440 	call	84444 <alt_ucosii_check_return_code>
		alt_ucosii_check_return_code(return_code);
		return_code = OSMemPut(MemoryPartition, (void *)G_temp);
		alt_ucosii_check_return_code(return_code);
		return_code = OSMemPut(MemoryPartition, (void *)B_temp);
		alt_ucosii_check_return_code(return_code);*/
	}
   8801c:	003db206 	br	876e8 <compute_Y_task+0x2c>

00088020 <process_Y_task>:
}

void process_Y_task(void *pdata) {
   88020:	defff104 	addi	sp,sp,-60
   88024:	dfc00e15 	stw	ra,56(sp)
   88028:	df000d15 	stw	fp,52(sp)
   8802c:	df000d04 	addi	fp,sp,52
   88030:	e13fff15 	stw	r4,-4(fp)
	INT8U return_code = OS_NO_ERR;
   88034:	e03ffe05 	stb	zero,-8(fp)
	alt_u8 *Y_val,*R_val,*G_val,*B_val;
	int i,j;
	int didItSend = 0;
   88038:	e03ff715 	stw	zero,-36(fp)
	unsigned short int data;
	int image_width, image_height;
	printf("We are in process_Y_task()!\n");
   8803c:	010002b4 	movhi	r4,10
   88040:	21020904 	addi	r4,r4,2084
   88044:	00889700 	call	88970 <puts>
		alt_ucosii_check_return_code(return_code);*/




		R_val = (alt_u8 *)OSMboxPend(RMailbox, 0, &return_code);
   88048:	d1270817 	ldw	r4,-25568(gp)
   8804c:	e1bffe04 	addi	r6,fp,-8
   88050:	000b883a 	mov	r5,zero
   88054:	00975600 	call	97560 <OSMboxPend>
   88058:	e0bffc15 	stw	r2,-16(fp)
				alt_ucosii_check_return_code(return_code);
   8805c:	e0bffe03 	ldbu	r2,-8(fp)
   88060:	11003fcc 	andi	r4,r2,255
   88064:	00844440 	call	84444 <alt_ucosii_check_return_code>
		G_val = (alt_u8 *)OSMboxPend(GMailbox, 0, &return_code);
   88068:	d1270217 	ldw	r4,-25592(gp)
   8806c:	e1bffe04 	addi	r6,fp,-8
   88070:	000b883a 	mov	r5,zero
   88074:	00975600 	call	97560 <OSMboxPend>
   88078:	e0bffb15 	stw	r2,-20(fp)
				alt_ucosii_check_return_code(return_code);
   8807c:	e0bffe03 	ldbu	r2,-8(fp)
   88080:	11003fcc 	andi	r4,r2,255
   88084:	00844440 	call	84444 <alt_ucosii_check_return_code>
		B_val = (alt_u8 *)OSMboxPend(BMailbox, 0, &return_code);
   88088:	d1270a17 	ldw	r4,-25560(gp)
   8808c:	e1bffe04 	addi	r6,fp,-8
   88090:	000b883a 	mov	r5,zero
   88094:	00975600 	call	97560 <OSMboxPend>
   88098:	e0bffa15 	stw	r2,-24(fp)
				alt_ucosii_check_return_code(return_code);
   8809c:	e0bffe03 	ldbu	r2,-8(fp)
   880a0:	11003fcc 	andi	r4,r2,255
   880a4:	00844440 	call	84444 <alt_ucosii_check_return_code>

		OSFlagPost(SDCardFlag, SD_WRITE_DATA_READY, OS_FLAG_CLR, &return_code);
   880a8:	d1270417 	ldw	r4,-25584(gp)
   880ac:	e1fffe04 	addi	r7,fp,-8
   880b0:	01400804 	movi	r5,32
   880b4:	000d883a 	mov	r6,zero
   880b8:	00968280 	call	96828 <OSFlagPost>
		alt_ucosii_check_return_code(return_code);
   880bc:	e0bffe03 	ldbu	r2,-8(fp)
   880c0:	11003fcc 	andi	r4,r2,255
   880c4:	00844440 	call	84444 <alt_ucosii_check_return_code>

		image_width = (int)OSMboxPend(YImageWidthMailbox, 0, &return_code);
   880c8:	d1270517 	ldw	r4,-25580(gp)
   880cc:	e1bffe04 	addi	r6,fp,-8
   880d0:	000b883a 	mov	r5,zero
   880d4:	00975600 	call	97560 <OSMboxPend>
   880d8:	e0bff515 	stw	r2,-44(fp)
		image_width = 640;
   880dc:	0080a004 	movi	r2,640
   880e0:	e0bff515 	stw	r2,-44(fp)
		alt_ucosii_check_return_code(return_code);
   880e4:	e0bffe03 	ldbu	r2,-8(fp)
   880e8:	11003fcc 	andi	r4,r2,255
   880ec:	00844440 	call	84444 <alt_ucosii_check_return_code>
		image_height = (int)OSMboxPend(YImageHeightMailbox, 0, &return_code);
   880f0:	d1270617 	ldw	r4,-25576(gp)
   880f4:	e1bffe04 	addi	r6,fp,-8
   880f8:	000b883a 	mov	r5,zero
   880fc:	00975600 	call	97560 <OSMboxPend>
   88100:	e0bff415 	stw	r2,-48(fp)
		alt_ucosii_check_return_code(return_code);
   88104:	e0bffe03 	ldbu	r2,-8(fp)
   88108:	11003fcc 	andi	r4,r2,255
   8810c:	00844440 	call	84444 <alt_ucosii_check_return_code>
		image_height = 480;
   88110:	00807804 	movi	r2,480
   88114:	e0bff415 	stw	r2,-48(fp)

		return_code = OSMboxPost(WriteImageWidthMailbox, (void *)(image_width));
   88118:	d1270d17 	ldw	r4,-25548(gp)
   8811c:	e17ff517 	ldw	r5,-44(fp)
   88120:	00979a40 	call	979a4 <OSMboxPost>
   88124:	e0bffe05 	stb	r2,-8(fp)
		alt_ucosii_check_return_code(return_code);
   88128:	e0bffe03 	ldbu	r2,-8(fp)
   8812c:	11003fcc 	andi	r4,r2,255
   88130:	00844440 	call	84444 <alt_ucosii_check_return_code>
		return_code = OSMboxPost(WriteImageHeightMailbox, (void *)(image_height));
   88134:	d1270717 	ldw	r4,-25572(gp)
   88138:	e17ff417 	ldw	r5,-48(fp)
   8813c:	00979a40 	call	979a4 <OSMboxPost>
   88140:	e0bffe05 	stb	r2,-8(fp)
		alt_ucosii_check_return_code(return_code);
   88144:	e0bffe03 	ldbu	r2,-8(fp)
   88148:	11003fcc 	andi	r4,r2,255
   8814c:	00844440 	call	84444 <alt_ucosii_check_return_code>
		
		OSFlagPend(SDCardFlag, SD_PRESENCE_FLAG | SD_FILESYSTEM_FLAG, OS_FLAG_WAIT_SET_ALL, 0, &return_code);
   88150:	d1270417 	ldw	r4,-25584(gp)
   88154:	e0bffe04 	addi	r2,fp,-8
   88158:	d8800015 	stw	r2,0(sp)
   8815c:	014000c4 	movi	r5,3
   88160:	01800084 	movi	r6,2
   88164:	000f883a 	mov	r7,zero
   88168:	009617c0 	call	9617c <OSFlagPend>
		alt_ucosii_check_return_code(return_code);
   8816c:	e0bffe03 	ldbu	r2,-8(fp)
   88170:	11003fcc 	andi	r4,r2,255
   88174:	00844440 	call	84444 <alt_ucosii_check_return_code>
		

		for (i = 0; i < image_width; ) {
   88178:	e03ff915 	stw	zero,-28(fp)
   8817c:	00004206 	br	88288 <process_Y_task+0x268>
				alt_ucosii_check_return_code(return_code);
			} else {
				i++;
			}*/
			// RGB write queue
			if ((OSQPost(SDWriteQueueB, (void *)(B_val[i] & 0xFF)) != OS_Q_FULL) && (OSQPost(SDWriteQueueG, (void *)(G_val[i] & 0xFF)) != OS_Q_FULL)
   88180:	d1270117 	ldw	r4,-25596(gp)
   88184:	e0bff917 	ldw	r2,-28(fp)
   88188:	1007883a 	mov	r3,r2
   8818c:	e0bffa17 	ldw	r2,-24(fp)
   88190:	1885883a 	add	r2,r3,r2
   88194:	10800003 	ldbu	r2,0(r2)
   88198:	10803fcc 	andi	r2,r2,255
   8819c:	100b883a 	mov	r5,r2
   881a0:	009a5140 	call	9a514 <OSQPost>
   881a4:	10803fcc 	andi	r2,r2,255
   881a8:	108007a0 	cmpeqi	r2,r2,30
   881ac:	10001c1e 	bne	r2,zero,88220 <process_Y_task+0x200>
   881b0:	d1270e17 	ldw	r4,-25544(gp)
   881b4:	e0bff917 	ldw	r2,-28(fp)
   881b8:	1007883a 	mov	r3,r2
   881bc:	e0bffb17 	ldw	r2,-20(fp)
   881c0:	1885883a 	add	r2,r3,r2
   881c4:	10800003 	ldbu	r2,0(r2)
   881c8:	10803fcc 	andi	r2,r2,255
   881cc:	100b883a 	mov	r5,r2
   881d0:	009a5140 	call	9a514 <OSQPost>
   881d4:	10803fcc 	andi	r2,r2,255
   881d8:	108007a0 	cmpeqi	r2,r2,30
   881dc:	1000101e 	bne	r2,zero,88220 <process_Y_task+0x200>
   881e0:	d1270917 	ldw	r4,-25564(gp)
   881e4:	e0bff917 	ldw	r2,-28(fp)
   881e8:	1007883a 	mov	r3,r2
   881ec:	e0bffc17 	ldw	r2,-16(fp)
   881f0:	1885883a 	add	r2,r3,r2
   881f4:	10800003 	ldbu	r2,0(r2)
   881f8:	10803fcc 	andi	r2,r2,255
   881fc:	100b883a 	mov	r5,r2
   88200:	009a5140 	call	9a514 <OSQPost>
   88204:	10803fcc 	andi	r2,r2,255
   88208:	108007a0 	cmpeqi	r2,r2,30
   8820c:	1000041e 	bne	r2,zero,88220 <process_Y_task+0x200>
					&& (OSQPost(SDWriteQueueR, (void *)(R_val[i] & 0xFF)) != OS_Q_FULL)){
						i++; //only increment the queue pointer long as none of the queues are full
   88210:	e0bff917 	ldw	r2,-28(fp)
   88214:	10800044 	addi	r2,r2,1
   88218:	e0bff915 	stw	r2,-28(fp)
				alt_ucosii_check_return_code(return_code);
			} else {
				i++;
			}*/
			// RGB write queue
			if ((OSQPost(SDWriteQueueB, (void *)(B_val[i] & 0xFF)) != OS_Q_FULL) && (OSQPost(SDWriteQueueG, (void *)(G_val[i] & 0xFF)) != OS_Q_FULL)
   8821c:	00001a06 	br	88288 <process_Y_task+0x268>
					&& (OSQPost(SDWriteQueueR, (void *)(R_val[i] & 0xFF)) != OS_Q_FULL)){
						i++; //only increment the queue pointer long as none of the queues are full
			}else{ //otherwise if full, signal OS to empty the queue
						OSFlagPost(SDCardFlag, SD_WRITE_NEED_FILL, OS_FLAG_CLR, &return_code);
   88220:	d1270417 	ldw	r4,-25584(gp)
   88224:	e1fffe04 	addi	r7,fp,-8
   88228:	01400404 	movi	r5,16
   8822c:	000d883a 	mov	r6,zero
   88230:	00968280 	call	96828 <OSFlagPost>
						alt_ucosii_check_return_code(return_code);
   88234:	e0bffe03 	ldbu	r2,-8(fp)
   88238:	11003fcc 	andi	r4,r2,255
   8823c:	00844440 	call	84444 <alt_ucosii_check_return_code>
						OSFlagPost(SDCardFlag, SD_WRITE_DATA_READY, OS_FLAG_SET, &return_code);
   88240:	d1270417 	ldw	r4,-25584(gp)
   88244:	e1fffe04 	addi	r7,fp,-8
   88248:	01400804 	movi	r5,32
   8824c:	01800044 	movi	r6,1
   88250:	00968280 	call	96828 <OSFlagPost>
						alt_ucosii_check_return_code(return_code);
   88254:	e0bffe03 	ldbu	r2,-8(fp)
   88258:	11003fcc 	andi	r4,r2,255
   8825c:	00844440 	call	84444 <alt_ucosii_check_return_code>
						OSFlagPend(SDCardFlag, SD_PRESENCE_FLAG | SD_FILESYSTEM_FLAG | SD_WRITE_NEED_FILL, OS_FLAG_WAIT_SET_ALL, 0, &return_code);
   88260:	d1270417 	ldw	r4,-25584(gp)
   88264:	e0bffe04 	addi	r2,fp,-8
   88268:	d8800015 	stw	r2,0(sp)
   8826c:	014004c4 	movi	r5,19
   88270:	01800084 	movi	r6,2
   88274:	000f883a 	mov	r7,zero
   88278:	009617c0 	call	9617c <OSFlagPend>
						alt_ucosii_check_return_code(return_code);
   8827c:	e0bffe03 	ldbu	r2,-8(fp)
   88280:	11003fcc 	andi	r4,r2,255
   88284:	00844440 	call	84444 <alt_ucosii_check_return_code>
		
		OSFlagPend(SDCardFlag, SD_PRESENCE_FLAG | SD_FILESYSTEM_FLAG, OS_FLAG_WAIT_SET_ALL, 0, &return_code);
		alt_ucosii_check_return_code(return_code);
		

		for (i = 0; i < image_width; ) {
   88288:	e0fff917 	ldw	r3,-28(fp)
   8828c:	e0bff517 	ldw	r2,-44(fp)
   88290:	18bfbb16 	blt	r3,r2,88180 <process_Y_task+0x160>

		}


		// Let the SD write task to finish writing the remaining data in the queue
		OSFlagPost(SDCardFlag, SD_WRITE_NEED_FILL, OS_FLAG_CLR, &return_code);
   88294:	d1270417 	ldw	r4,-25584(gp)
   88298:	e1fffe04 	addi	r7,fp,-8
   8829c:	01400404 	movi	r5,16
   882a0:	000d883a 	mov	r6,zero
   882a4:	00968280 	call	96828 <OSFlagPost>
		alt_ucosii_check_return_code(return_code);
   882a8:	e0bffe03 	ldbu	r2,-8(fp)
   882ac:	11003fcc 	andi	r4,r2,255
   882b0:	00844440 	call	84444 <alt_ucosii_check_return_code>
		OSFlagPost(SDCardFlag, SD_WRITE_DATA_READY, OS_FLAG_SET, &return_code);
   882b4:	d1270417 	ldw	r4,-25584(gp)
   882b8:	e1fffe04 	addi	r7,fp,-8
   882bc:	01400804 	movi	r5,32
   882c0:	01800044 	movi	r6,1
   882c4:	00968280 	call	96828 <OSFlagPost>
		alt_ucosii_check_return_code(return_code);
   882c8:	e0bffe03 	ldbu	r2,-8(fp)
   882cc:	11003fcc 	andi	r4,r2,255
   882d0:	00844440 	call	84444 <alt_ucosii_check_return_code>
		OSFlagPend(SDCardFlag, SD_PRESENCE_FLAG | SD_FILESYSTEM_FLAG | SD_WRITE_NEED_FILL, OS_FLAG_WAIT_SET_ALL, 0, &return_code);
   882d4:	d1270417 	ldw	r4,-25584(gp)
   882d8:	e0bffe04 	addi	r2,fp,-8
   882dc:	d8800015 	stw	r2,0(sp)
   882e0:	014004c4 	movi	r5,19
   882e4:	01800084 	movi	r6,2
   882e8:	000f883a 	mov	r7,zero
   882ec:	009617c0 	call	9617c <OSFlagPend>
		alt_ucosii_check_return_code(return_code);
   882f0:	e0bffe03 	ldbu	r2,-8(fp)
   882f4:	11003fcc 	andi	r4,r2,255
   882f8:	00844440 	call	84444 <alt_ucosii_check_return_code>
		
		// printf("One line Y written\n");
		OSFlagPost(SDCardFlag, SD_PROCESS_Y_READY, OS_FLAG_SET, &return_code);
   882fc:	d1270417 	ldw	r4,-25584(gp)
   88300:	e1fffe04 	addi	r7,fp,-8
   88304:	01401004 	movi	r5,64
   88308:	01800044 	movi	r6,1
   8830c:	00968280 	call	96828 <OSFlagPost>
		alt_ucosii_check_return_code(return_code);
   88310:	e0bffe03 	ldbu	r2,-8(fp)
   88314:	11003fcc 	andi	r4,r2,255
   88318:	00844440 	call	84444 <alt_ucosii_check_return_code>
	}
   8831c:	003f4a06 	br	88048 <process_Y_task+0x28>

00088320 <task_launcher>:
}

// Task launcher
// It creates all the custom tasks
// And then it deletes itself
void task_launcher(void *pdata) {
   88320:	defff404 	addi	sp,sp,-48
   88324:	dfc00b15 	stw	ra,44(sp)
   88328:	df000a15 	stw	fp,40(sp)
   8832c:	df000a04 	addi	fp,sp,40
   88330:	e13fff15 	stw	r4,-4(fp)
	INT8U return_code = OS_NO_ERR;
   88334:	e03ffe05 	stb	zero,-8(fp)

	#if OS_CRITICAL_METHOD == 3
			OS_CPU_SR cpu_sr;
	#endif

	printf("Starting task launcher...\n");
   88338:	010002b4 	movhi	r4,10
   8833c:	21021004 	addi	r4,r4,2112
   88340:	00889700 	call	88970 <puts>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   88344:	0005303a 	rdctl	r2,status
   88348:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8834c:	e0fffc17 	ldw	r3,-16(fp)
   88350:	00bfff84 	movi	r2,-2
   88354:	1884703a 	and	r2,r3,r2
   88358:	1001703a 	wrctl	status,r2
  
  return context;
   8835c:	e0bffc17 	ldw	r2,-16(fp)
	while (1) {
		OS_ENTER_CRITICAL();
   88360:	e0bffd15 	stw	r2,-12(fp)
		printf("Creating tasks...\n");
   88364:	010002b4 	movhi	r4,10
   88368:	21021704 	addi	r4,r4,2140
   8836c:	00889700 	call	88970 <puts>

		return_code = OSTaskCreateExt(SD_presence_detect_task,
   88370:	018002f4 	movhi	r6,11
   88374:	31a90a04 	addi	r6,r6,-23512
   88378:	008002c4 	movi	r2,11
   8837c:	d8800015 	stw	r2,0(sp)
   88380:	008002f4 	movhi	r2,11
   88384:	10a10b04 	addi	r2,r2,-31700
   88388:	d8800115 	stw	r2,4(sp)
   8838c:	00820004 	movi	r2,2048
   88390:	d8800215 	stw	r2,8(sp)
   88394:	008002f4 	movhi	r2,11
   88398:	10812604 	addi	r2,r2,1176
   8839c:	d8800315 	stw	r2,12(sp)
   883a0:	d8000415 	stw	zero,16(sp)
   883a4:	01000234 	movhi	r4,8
   883a8:	21135f04 	addi	r4,r4,19836
   883ac:	000b883a 	mov	r5,zero
   883b0:	01c002c4 	movi	r7,11
   883b4:	009bf8c0 	call	9bf8c <OSTaskCreateExt>
   883b8:	e0bffe05 	stb	r2,-8(fp)
			SD_PRESENCE_DETECT_PRIORITY,
			&SD_presence_detect_stk[0],
			TASK_STACKSIZE,
			&SD_presence_detect_tcb,
			0);
		alt_ucosii_check_return_code(return_code);
   883bc:	e13ffe03 	ldbu	r4,-8(fp)
   883c0:	00844440 	call	84444 <alt_ucosii_check_return_code>

		return_code = OSTaskCreateExt(SD_read_task,
   883c4:	018002f4 	movhi	r6,11
   883c8:	31b90a04 	addi	r6,r6,-7128
   883cc:	00800304 	movi	r2,12
   883d0:	d8800015 	stw	r2,0(sp)
   883d4:	008002f4 	movhi	r2,11
   883d8:	10b10b04 	addi	r2,r2,-15316
   883dc:	d8800115 	stw	r2,4(sp)
   883e0:	00820004 	movi	r2,2048
   883e4:	d8800215 	stw	r2,8(sp)
   883e8:	008002f4 	movhi	r2,11
   883ec:	10b90b04 	addi	r2,r2,-7124
   883f0:	d8800315 	stw	r2,12(sp)
   883f4:	d8000415 	stw	zero,16(sp)
   883f8:	01000234 	movhi	r4,8
   883fc:	2113c004 	addi	r4,r4,20224
   88400:	000b883a 	mov	r5,zero
   88404:	01c00304 	movi	r7,12
   88408:	009bf8c0 	call	9bf8c <OSTaskCreateExt>
   8840c:	e0bffe05 	stb	r2,-8(fp)
			SD_READ_PRIORITY,
			&SD_read_stk[0],
			TASK_STACKSIZE,
			&SD_read_tcb,
			0);
		alt_ucosii_check_return_code(return_code);
   88410:	e13ffe03 	ldbu	r4,-8(fp)
   88414:	00844440 	call	84444 <alt_ucosii_check_return_code>

		return_code = OSTaskCreateExt(SD_write_task,
   88418:	018002f4 	movhi	r6,11
   8841c:	31812504 	addi	r6,r6,1172
   88420:	008003c4 	movi	r2,15
   88424:	d8800015 	stw	r2,0(sp)
   88428:	008002f4 	movhi	r2,11
   8842c:	10b92604 	addi	r2,r2,-7016
   88430:	d8800115 	stw	r2,4(sp)
   88434:	00820004 	movi	r2,2048
   88438:	d8800215 	stw	r2,8(sp)
   8843c:	008002f4 	movhi	r2,11
   88440:	10894104 	addi	r2,r2,9476
   88444:	d8800315 	stw	r2,12(sp)
   88448:	d8000415 	stw	zero,16(sp)
   8844c:	01000234 	movhi	r4,8
   88450:	211abd04 	addi	r4,r4,27380
   88454:	000b883a 	mov	r5,zero
   88458:	01c003c4 	movi	r7,15
   8845c:	009bf8c0 	call	9bf8c <OSTaskCreateExt>
   88460:	e0bffe05 	stb	r2,-8(fp)
			SD_WRITE_PRIORITY,
			&SD_write_stk[0],
			TASK_STACKSIZE,
			&SD_write_tcb,
			0);
		alt_ucosii_check_return_code(return_code);
   88464:	e13ffe03 	ldbu	r4,-8(fp)
   88468:	00844440 	call	84444 <alt_ucosii_check_return_code>

		return_code = OSTaskCreateExt(compute_Y_task,
   8846c:	018002f4 	movhi	r6,11
   88470:	31a0eb04 	addi	r6,r6,-31828
   88474:	00800344 	movi	r2,13
   88478:	d8800015 	stw	r2,0(sp)
   8847c:	008002b4 	movhi	r2,10
   88480:	1098ec04 	addi	r2,r2,25520
   88484:	d8800115 	stw	r2,4(sp)
   88488:	00820004 	movi	r2,2048
   8848c:	d8800215 	stw	r2,8(sp)
   88490:	008002b4 	movhi	r2,10
   88494:	1098d104 	addi	r2,r2,25412
   88498:	d8800315 	stw	r2,12(sp)
   8849c:	d8000415 	stw	zero,16(sp)
   884a0:	01000234 	movhi	r4,8
   884a4:	211daf04 	addi	r4,r4,30396
   884a8:	000b883a 	mov	r5,zero
   884ac:	01c00344 	movi	r7,13
   884b0:	009bf8c0 	call	9bf8c <OSTaskCreateExt>
   884b4:	e0bffe05 	stb	r2,-8(fp)
			COMPUTE_Y_PRIORITY,
			&compute_Y_stk[0],
			TASK_STACKSIZE,
			&compute_Y_tcb,
			0);
		alt_ucosii_check_return_code(return_code);
   884b8:	e13ffe03 	ldbu	r4,-8(fp)
   884bc:	00844440 	call	84444 <alt_ucosii_check_return_code>

		return_code = OSTaskCreateExt(process_Y_task,
   884c0:	018002f4 	movhi	r6,11
   884c4:	31b10a04 	addi	r6,r6,-15320
   884c8:	00800384 	movi	r2,14
   884cc:	d8800015 	stw	r2,0(sp)
   884d0:	008002f4 	movhi	r2,11
   884d4:	10a90b04 	addi	r2,r2,-23508
   884d8:	d8800115 	stw	r2,4(sp)
   884dc:	00820004 	movi	r2,2048
   884e0:	d8800215 	stw	r2,8(sp)
   884e4:	008002f4 	movhi	r2,11
   884e8:	10a0ec04 	addi	r2,r2,-31824
   884ec:	d8800315 	stw	r2,12(sp)
   884f0:	d8000415 	stw	zero,16(sp)
   884f4:	01000274 	movhi	r4,9
   884f8:	21200804 	addi	r4,r4,-32736
   884fc:	000b883a 	mov	r5,zero
   88500:	01c00384 	movi	r7,14
   88504:	009bf8c0 	call	9bf8c <OSTaskCreateExt>
   88508:	e0bffe05 	stb	r2,-8(fp)
			PROCESS_Y_PRIORITY,
			&process_Y_stk[0],
			TASK_STACKSIZE,
			&process_Y_tcb,
			0);
		alt_ucosii_check_return_code(return_code);
   8850c:	e13ffe03 	ldbu	r4,-8(fp)
   88510:	00844440 	call	84444 <alt_ucosii_check_return_code>

		printf("Finish creating tasks...\n");
   88514:	010002b4 	movhi	r4,10
   88518:	21021c04 	addi	r4,r4,2160
   8851c:	00889700 	call	88970 <puts>

		printf("\n");
   88520:	01000284 	movi	r4,10
   88524:	00888ac0 	call	888ac <putchar>
		OSTimeDlyHMSM(0, 0, 1, 0);
   88528:	0009883a 	mov	r4,zero
   8852c:	000b883a 	mov	r5,zero
   88530:	01800044 	movi	r6,1
   88534:	000f883a 	mov	r7,zero
   88538:	009d3d00 	call	9d3d0 <OSTimeDlyHMSM>

		return_code = OSTaskDel(OS_PRIO_SELF);
   8853c:	01003fc4 	movi	r4,255
   88540:	009c18c0 	call	9c18c <OSTaskDel>
   88544:	e0bffe05 	stb	r2,-8(fp)
		alt_ucosii_check_return_code(return_code);
   88548:	e13ffe03 	ldbu	r4,-8(fp)
   8854c:	00844440 	call	84444 <alt_ucosii_check_return_code>
   88550:	e0bffd17 	ldw	r2,-12(fp)
   88554:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   88558:	e0bffb17 	ldw	r2,-20(fp)
   8855c:	1001703a 	wrctl	status,r2

		OS_EXIT_CRITICAL();
	}
   88560:	003f7806 	br	88344 <task_launcher+0x24>

00088564 <udivmodsi4>:
   88564:	29001b2e 	bgeu	r5,r4,885d4 <udivmodsi4+0x70>
   88568:	28001a16 	blt	r5,zero,885d4 <udivmodsi4+0x70>
   8856c:	00800044 	movi	r2,1
   88570:	0007883a 	mov	r3,zero
   88574:	01c007c4 	movi	r7,31
   88578:	00000306 	br	88588 <udivmodsi4+0x24>
   8857c:	19c01326 	beq	r3,r7,885cc <udivmodsi4+0x68>
   88580:	18c00044 	addi	r3,r3,1
   88584:	28000416 	blt	r5,zero,88598 <udivmodsi4+0x34>
   88588:	294b883a 	add	r5,r5,r5
   8858c:	1085883a 	add	r2,r2,r2
   88590:	293ffa36 	bltu	r5,r4,8857c <udivmodsi4+0x18>
   88594:	10000d26 	beq	r2,zero,885cc <udivmodsi4+0x68>
   88598:	0007883a 	mov	r3,zero
   8859c:	21400236 	bltu	r4,r5,885a8 <udivmodsi4+0x44>
   885a0:	2149c83a 	sub	r4,r4,r5
   885a4:	1886b03a 	or	r3,r3,r2
   885a8:	1004d07a 	srli	r2,r2,1
   885ac:	280ad07a 	srli	r5,r5,1
   885b0:	103ffa1e 	bne	r2,zero,8859c <udivmodsi4+0x38>
   885b4:	30000226 	beq	r6,zero,885c0 <udivmodsi4+0x5c>
   885b8:	2005883a 	mov	r2,r4
   885bc:	f800283a 	ret
   885c0:	1809883a 	mov	r4,r3
   885c4:	2005883a 	mov	r2,r4
   885c8:	f800283a 	ret
   885cc:	0007883a 	mov	r3,zero
   885d0:	003ff806 	br	885b4 <udivmodsi4+0x50>
   885d4:	00800044 	movi	r2,1
   885d8:	0007883a 	mov	r3,zero
   885dc:	003fef06 	br	8859c <udivmodsi4+0x38>

000885e0 <__divsi3>:
   885e0:	defffe04 	addi	sp,sp,-8
   885e4:	dc000015 	stw	r16,0(sp)
   885e8:	dfc00115 	stw	ra,4(sp)
   885ec:	0021883a 	mov	r16,zero
   885f0:	20000c16 	blt	r4,zero,88624 <__divsi3+0x44>
   885f4:	000d883a 	mov	r6,zero
   885f8:	28000e16 	blt	r5,zero,88634 <__divsi3+0x54>
   885fc:	00885640 	call	88564 <udivmodsi4>
   88600:	1007883a 	mov	r3,r2
   88604:	8005003a 	cmpeq	r2,r16,zero
   88608:	1000011e 	bne	r2,zero,88610 <__divsi3+0x30>
   8860c:	00c7c83a 	sub	r3,zero,r3
   88610:	1805883a 	mov	r2,r3
   88614:	dfc00117 	ldw	ra,4(sp)
   88618:	dc000017 	ldw	r16,0(sp)
   8861c:	dec00204 	addi	sp,sp,8
   88620:	f800283a 	ret
   88624:	0109c83a 	sub	r4,zero,r4
   88628:	04000044 	movi	r16,1
   8862c:	000d883a 	mov	r6,zero
   88630:	283ff20e 	bge	r5,zero,885fc <__divsi3+0x1c>
   88634:	014bc83a 	sub	r5,zero,r5
   88638:	8021003a 	cmpeq	r16,r16,zero
   8863c:	003fef06 	br	885fc <__divsi3+0x1c>

00088640 <__modsi3>:
   88640:	deffff04 	addi	sp,sp,-4
   88644:	dfc00015 	stw	ra,0(sp)
   88648:	01800044 	movi	r6,1
   8864c:	2807883a 	mov	r3,r5
   88650:	20000416 	blt	r4,zero,88664 <__modsi3+0x24>
   88654:	28000c16 	blt	r5,zero,88688 <__modsi3+0x48>
   88658:	dfc00017 	ldw	ra,0(sp)
   8865c:	dec00104 	addi	sp,sp,4
   88660:	00885641 	jmpi	88564 <udivmodsi4>
   88664:	0109c83a 	sub	r4,zero,r4
   88668:	28000b16 	blt	r5,zero,88698 <__modsi3+0x58>
   8866c:	180b883a 	mov	r5,r3
   88670:	01800044 	movi	r6,1
   88674:	00885640 	call	88564 <udivmodsi4>
   88678:	0085c83a 	sub	r2,zero,r2
   8867c:	dfc00017 	ldw	ra,0(sp)
   88680:	dec00104 	addi	sp,sp,4
   88684:	f800283a 	ret
   88688:	014bc83a 	sub	r5,zero,r5
   8868c:	dfc00017 	ldw	ra,0(sp)
   88690:	dec00104 	addi	sp,sp,4
   88694:	00885641 	jmpi	88564 <udivmodsi4>
   88698:	0147c83a 	sub	r3,zero,r5
   8869c:	003ff306 	br	8866c <__modsi3+0x2c>

000886a0 <__udivsi3>:
   886a0:	000d883a 	mov	r6,zero
   886a4:	00885641 	jmpi	88564 <udivmodsi4>

000886a8 <__umodsi3>:
   886a8:	01800044 	movi	r6,1
   886ac:	00885641 	jmpi	88564 <udivmodsi4>

000886b0 <__mulsi3>:
   886b0:	20000a26 	beq	r4,zero,886dc <__mulsi3+0x2c>
   886b4:	0007883a 	mov	r3,zero
   886b8:	2080004c 	andi	r2,r4,1
   886bc:	1005003a 	cmpeq	r2,r2,zero
   886c0:	2008d07a 	srli	r4,r4,1
   886c4:	1000011e 	bne	r2,zero,886cc <__mulsi3+0x1c>
   886c8:	1947883a 	add	r3,r3,r5
   886cc:	294b883a 	add	r5,r5,r5
   886d0:	203ff91e 	bne	r4,zero,886b8 <__mulsi3+0x8>
   886d4:	1805883a 	mov	r2,r3
   886d8:	f800283a 	ret
   886dc:	0007883a 	mov	r3,zero
   886e0:	1805883a 	mov	r2,r3
   886e4:	f800283a 	ret

000886e8 <fprintf>:
   886e8:	defffc04 	addi	sp,sp,-16
   886ec:	dfc00115 	stw	ra,4(sp)
   886f0:	d9800215 	stw	r6,8(sp)
   886f4:	d9c00315 	stw	r7,12(sp)
   886f8:	d8800204 	addi	r2,sp,8
   886fc:	100d883a 	mov	r6,r2
   88700:	d8800015 	stw	r2,0(sp)
   88704:	008a9e80 	call	8a9e8 <__vfprintf_internal>
   88708:	dfc00117 	ldw	ra,4(sp)
   8870c:	dec00404 	addi	sp,sp,16
   88710:	f800283a 	ret

00088714 <_fprintf_r>:
   88714:	defffd04 	addi	sp,sp,-12
   88718:	2807883a 	mov	r3,r5
   8871c:	dfc00115 	stw	ra,4(sp)
   88720:	d9c00215 	stw	r7,8(sp)
   88724:	d8800204 	addi	r2,sp,8
   88728:	300b883a 	mov	r5,r6
   8872c:	1809883a 	mov	r4,r3
   88730:	100d883a 	mov	r6,r2
   88734:	d8800015 	stw	r2,0(sp)
   88738:	008a9e80 	call	8a9e8 <__vfprintf_internal>
   8873c:	dfc00117 	ldw	ra,4(sp)
   88740:	dec00304 	addi	sp,sp,12
   88744:	f800283a 	ret

00088748 <_fwrite_r>:
   88748:	defff604 	addi	sp,sp,-40
   8874c:	dc000515 	stw	r16,20(sp)
   88750:	d9400015 	stw	r5,0(sp)
   88754:	2021883a 	mov	r16,r4
   88758:	300b883a 	mov	r5,r6
   8875c:	3809883a 	mov	r4,r7
   88760:	dcc00815 	stw	r19,32(sp)
   88764:	dc800715 	stw	r18,28(sp)
   88768:	dc400615 	stw	r17,24(sp)
   8876c:	dfc00915 	stw	ra,36(sp)
   88770:	3825883a 	mov	r18,r7
   88774:	3027883a 	mov	r19,r6
   88778:	00886b00 	call	886b0 <__mulsi3>
   8877c:	1023883a 	mov	r17,r2
   88780:	00800044 	movi	r2,1
   88784:	d8800315 	stw	r2,12(sp)
   88788:	dc400115 	stw	r17,4(sp)
   8878c:	dc400415 	stw	r17,16(sp)
   88790:	dec00215 	stw	sp,8(sp)
   88794:	80000326 	beq	r16,zero,887a4 <_fwrite_r+0x5c>
   88798:	80800e17 	ldw	r2,56(r16)
   8879c:	8009883a 	mov	r4,r16
   887a0:	10001226 	beq	r2,zero,887ec <_fwrite_r+0xa4>
   887a4:	d9400a17 	ldw	r5,40(sp)
   887a8:	8009883a 	mov	r4,r16
   887ac:	d9800204 	addi	r6,sp,8
   887b0:	008cca40 	call	8cca4 <__sfvwrite_r>
   887b4:	980b883a 	mov	r5,r19
   887b8:	10000426 	beq	r2,zero,887cc <_fwrite_r+0x84>
   887bc:	d9000417 	ldw	r4,16(sp)
   887c0:	8909c83a 	sub	r4,r17,r4
   887c4:	00886a00 	call	886a0 <__udivsi3>
   887c8:	1025883a 	mov	r18,r2
   887cc:	9005883a 	mov	r2,r18
   887d0:	dfc00917 	ldw	ra,36(sp)
   887d4:	dcc00817 	ldw	r19,32(sp)
   887d8:	dc800717 	ldw	r18,28(sp)
   887dc:	dc400617 	ldw	r17,24(sp)
   887e0:	dc000517 	ldw	r16,20(sp)
   887e4:	dec00a04 	addi	sp,sp,40
   887e8:	f800283a 	ret
   887ec:	008c5d80 	call	8c5d8 <__sinit>
   887f0:	003fec06 	br	887a4 <_fwrite_r+0x5c>

000887f4 <fwrite>:
   887f4:	008002b4 	movhi	r2,10
   887f8:	1089d704 	addi	r2,r2,10076
   887fc:	2017883a 	mov	r11,r4
   88800:	11000017 	ldw	r4,0(r2)
   88804:	defffe04 	addi	sp,sp,-8
   88808:	3013883a 	mov	r9,r6
   8880c:	2805883a 	mov	r2,r5
   88810:	d9c00015 	stw	r7,0(sp)
   88814:	580b883a 	mov	r5,r11
   88818:	100d883a 	mov	r6,r2
   8881c:	480f883a 	mov	r7,r9
   88820:	dfc00115 	stw	ra,4(sp)
   88824:	00887480 	call	88748 <_fwrite_r>
   88828:	dfc00117 	ldw	ra,4(sp)
   8882c:	dec00204 	addi	sp,sp,8
   88830:	f800283a 	ret

00088834 <printf>:
   88834:	defffb04 	addi	sp,sp,-20
   88838:	dfc00115 	stw	ra,4(sp)
   8883c:	d9400215 	stw	r5,8(sp)
   88840:	d9800315 	stw	r6,12(sp)
   88844:	d9c00415 	stw	r7,16(sp)
   88848:	008002b4 	movhi	r2,10
   8884c:	1089d704 	addi	r2,r2,10076
   88850:	10c00017 	ldw	r3,0(r2)
   88854:	200b883a 	mov	r5,r4
   88858:	d8800204 	addi	r2,sp,8
   8885c:	19000217 	ldw	r4,8(r3)
   88860:	100d883a 	mov	r6,r2
   88864:	d8800015 	stw	r2,0(sp)
   88868:	008a9e80 	call	8a9e8 <__vfprintf_internal>
   8886c:	dfc00117 	ldw	ra,4(sp)
   88870:	dec00504 	addi	sp,sp,20
   88874:	f800283a 	ret

00088878 <_printf_r>:
   88878:	defffc04 	addi	sp,sp,-16
   8887c:	dfc00115 	stw	ra,4(sp)
   88880:	d9800215 	stw	r6,8(sp)
   88884:	d9c00315 	stw	r7,12(sp)
   88888:	280d883a 	mov	r6,r5
   8888c:	21400217 	ldw	r5,8(r4)
   88890:	d8c00204 	addi	r3,sp,8
   88894:	180f883a 	mov	r7,r3
   88898:	d8c00015 	stw	r3,0(sp)
   8889c:	0088b240 	call	88b24 <___vfprintf_internal_r>
   888a0:	dfc00117 	ldw	ra,4(sp)
   888a4:	dec00404 	addi	sp,sp,16
   888a8:	f800283a 	ret

000888ac <putchar>:
   888ac:	008002b4 	movhi	r2,10
   888b0:	1089d704 	addi	r2,r2,10076
   888b4:	11800017 	ldw	r6,0(r2)
   888b8:	200b883a 	mov	r5,r4
   888bc:	3009883a 	mov	r4,r6
   888c0:	31800217 	ldw	r6,8(r6)
   888c4:	008f0e41 	jmpi	8f0e4 <_putc_r>

000888c8 <_putchar_r>:
   888c8:	21800217 	ldw	r6,8(r4)
   888cc:	008f0e41 	jmpi	8f0e4 <_putc_r>

000888d0 <_puts_r>:
   888d0:	defff604 	addi	sp,sp,-40
   888d4:	dc400715 	stw	r17,28(sp)
   888d8:	2023883a 	mov	r17,r4
   888dc:	2809883a 	mov	r4,r5
   888e0:	dfc00915 	stw	ra,36(sp)
   888e4:	dcc00815 	stw	r19,32(sp)
   888e8:	2827883a 	mov	r19,r5
   888ec:	0088a580 	call	88a58 <strlen>
   888f0:	89400217 	ldw	r5,8(r17)
   888f4:	00c002b4 	movhi	r3,10
   888f8:	18c22404 	addi	r3,r3,2192
   888fc:	01c00044 	movi	r7,1
   88900:	12000044 	addi	r8,r2,1
   88904:	d8c00515 	stw	r3,20(sp)
   88908:	d9c00615 	stw	r7,24(sp)
   8890c:	d8c00304 	addi	r3,sp,12
   88910:	01c00084 	movi	r7,2
   88914:	8809883a 	mov	r4,r17
   88918:	d80d883a 	mov	r6,sp
   8891c:	d8c00015 	stw	r3,0(sp)
   88920:	dcc00315 	stw	r19,12(sp)
   88924:	da000215 	stw	r8,8(sp)
   88928:	d9c00115 	stw	r7,4(sp)
   8892c:	d8800415 	stw	r2,16(sp)
   88930:	008cca40 	call	8cca4 <__sfvwrite_r>
   88934:	00ffffc4 	movi	r3,-1
   88938:	10000626 	beq	r2,zero,88954 <_puts_r+0x84>
   8893c:	1805883a 	mov	r2,r3
   88940:	dfc00917 	ldw	ra,36(sp)
   88944:	dcc00817 	ldw	r19,32(sp)
   88948:	dc400717 	ldw	r17,28(sp)
   8894c:	dec00a04 	addi	sp,sp,40
   88950:	f800283a 	ret
   88954:	00c00284 	movi	r3,10
   88958:	1805883a 	mov	r2,r3
   8895c:	dfc00917 	ldw	ra,36(sp)
   88960:	dcc00817 	ldw	r19,32(sp)
   88964:	dc400717 	ldw	r17,28(sp)
   88968:	dec00a04 	addi	sp,sp,40
   8896c:	f800283a 	ret

00088970 <puts>:
   88970:	008002b4 	movhi	r2,10
   88974:	1089d704 	addi	r2,r2,10076
   88978:	200b883a 	mov	r5,r4
   8897c:	11000017 	ldw	r4,0(r2)
   88980:	00888d01 	jmpi	888d0 <_puts_r>

00088984 <sprintf>:
   88984:	deffe504 	addi	sp,sp,-108
   88988:	2013883a 	mov	r9,r4
   8898c:	dfc01815 	stw	ra,96(sp)
   88990:	d9801915 	stw	r6,100(sp)
   88994:	d9c01a15 	stw	r7,104(sp)
   88998:	d8801904 	addi	r2,sp,100
   8899c:	d8800015 	stw	r2,0(sp)
   889a0:	008002b4 	movhi	r2,10
   889a4:	1089d704 	addi	r2,r2,10076
   889a8:	11000017 	ldw	r4,0(r2)
   889ac:	d9c00017 	ldw	r7,0(sp)
   889b0:	00808204 	movi	r2,520
   889b4:	00e00034 	movhi	r3,32768
   889b8:	18ffffc4 	addi	r3,r3,-1
   889bc:	280d883a 	mov	r6,r5
   889c0:	d880040d 	sth	r2,16(sp)
   889c4:	d9400104 	addi	r5,sp,4
   889c8:	00bfffc4 	movi	r2,-1
   889cc:	d8c00615 	stw	r3,24(sp)
   889d0:	d8c00315 	stw	r3,12(sp)
   889d4:	da400515 	stw	r9,20(sp)
   889d8:	d880048d 	sth	r2,18(sp)
   889dc:	da400115 	stw	r9,4(sp)
   889e0:	0088b240 	call	88b24 <___vfprintf_internal_r>
   889e4:	d8c00117 	ldw	r3,4(sp)
   889e8:	18000005 	stb	zero,0(r3)
   889ec:	dfc01817 	ldw	ra,96(sp)
   889f0:	dec01b04 	addi	sp,sp,108
   889f4:	f800283a 	ret

000889f8 <_sprintf_r>:
   889f8:	deffe604 	addi	sp,sp,-104
   889fc:	2813883a 	mov	r9,r5
   88a00:	dfc01815 	stw	ra,96(sp)
   88a04:	d9c01915 	stw	r7,100(sp)
   88a08:	d8801904 	addi	r2,sp,100
   88a0c:	d8800015 	stw	r2,0(sp)
   88a10:	100f883a 	mov	r7,r2
   88a14:	00808204 	movi	r2,520
   88a18:	00e00034 	movhi	r3,32768
   88a1c:	18ffffc4 	addi	r3,r3,-1
   88a20:	d880040d 	sth	r2,16(sp)
   88a24:	d9400104 	addi	r5,sp,4
   88a28:	00bfffc4 	movi	r2,-1
   88a2c:	d8c00615 	stw	r3,24(sp)
   88a30:	d8c00315 	stw	r3,12(sp)
   88a34:	da400515 	stw	r9,20(sp)
   88a38:	d880048d 	sth	r2,18(sp)
   88a3c:	da400115 	stw	r9,4(sp)
   88a40:	0088b240 	call	88b24 <___vfprintf_internal_r>
   88a44:	d8c00117 	ldw	r3,4(sp)
   88a48:	18000005 	stb	zero,0(r3)
   88a4c:	dfc01817 	ldw	ra,96(sp)
   88a50:	dec01a04 	addi	sp,sp,104
   88a54:	f800283a 	ret

00088a58 <strlen>:
   88a58:	208000cc 	andi	r2,r4,3
   88a5c:	2011883a 	mov	r8,r4
   88a60:	1000161e 	bne	r2,zero,88abc <strlen+0x64>
   88a64:	20c00017 	ldw	r3,0(r4)
   88a68:	017fbff4 	movhi	r5,65279
   88a6c:	297fbfc4 	addi	r5,r5,-257
   88a70:	01e02074 	movhi	r7,32897
   88a74:	39e02004 	addi	r7,r7,-32640
   88a78:	1945883a 	add	r2,r3,r5
   88a7c:	11c4703a 	and	r2,r2,r7
   88a80:	00c6303a 	nor	r3,zero,r3
   88a84:	1886703a 	and	r3,r3,r2
   88a88:	18000c1e 	bne	r3,zero,88abc <strlen+0x64>
   88a8c:	280d883a 	mov	r6,r5
   88a90:	380b883a 	mov	r5,r7
   88a94:	21000104 	addi	r4,r4,4
   88a98:	20800017 	ldw	r2,0(r4)
   88a9c:	1187883a 	add	r3,r2,r6
   88aa0:	1946703a 	and	r3,r3,r5
   88aa4:	0084303a 	nor	r2,zero,r2
   88aa8:	10c4703a 	and	r2,r2,r3
   88aac:	103ff926 	beq	r2,zero,88a94 <strlen+0x3c>
   88ab0:	20800007 	ldb	r2,0(r4)
   88ab4:	10000326 	beq	r2,zero,88ac4 <strlen+0x6c>
   88ab8:	21000044 	addi	r4,r4,1
   88abc:	20800007 	ldb	r2,0(r4)
   88ac0:	103ffd1e 	bne	r2,zero,88ab8 <strlen+0x60>
   88ac4:	2205c83a 	sub	r2,r4,r8
   88ac8:	f800283a 	ret

00088acc <__sprint_r>:
   88acc:	30800217 	ldw	r2,8(r6)
   88ad0:	defffe04 	addi	sp,sp,-8
   88ad4:	dc000015 	stw	r16,0(sp)
   88ad8:	dfc00115 	stw	ra,4(sp)
   88adc:	3021883a 	mov	r16,r6
   88ae0:	0007883a 	mov	r3,zero
   88ae4:	1000061e 	bne	r2,zero,88b00 <__sprint_r+0x34>
   88ae8:	1805883a 	mov	r2,r3
   88aec:	30000115 	stw	zero,4(r6)
   88af0:	dfc00117 	ldw	ra,4(sp)
   88af4:	dc000017 	ldw	r16,0(sp)
   88af8:	dec00204 	addi	sp,sp,8
   88afc:	f800283a 	ret
   88b00:	008cca40 	call	8cca4 <__sfvwrite_r>
   88b04:	1007883a 	mov	r3,r2
   88b08:	1805883a 	mov	r2,r3
   88b0c:	80000115 	stw	zero,4(r16)
   88b10:	80000215 	stw	zero,8(r16)
   88b14:	dfc00117 	ldw	ra,4(sp)
   88b18:	dc000017 	ldw	r16,0(sp)
   88b1c:	dec00204 	addi	sp,sp,8
   88b20:	f800283a 	ret

00088b24 <___vfprintf_internal_r>:
   88b24:	defea404 	addi	sp,sp,-1392
   88b28:	dd815815 	stw	r22,1376(sp)
   88b2c:	dc015215 	stw	r16,1352(sp)
   88b30:	d9c15115 	stw	r7,1348(sp)
   88b34:	dfc15b15 	stw	ra,1388(sp)
   88b38:	df015a15 	stw	fp,1384(sp)
   88b3c:	ddc15915 	stw	r23,1380(sp)
   88b40:	dd415715 	stw	r21,1372(sp)
   88b44:	dd015615 	stw	r20,1368(sp)
   88b48:	dcc15515 	stw	r19,1364(sp)
   88b4c:	dc815415 	stw	r18,1360(sp)
   88b50:	dc415315 	stw	r17,1356(sp)
   88b54:	282d883a 	mov	r22,r5
   88b58:	3021883a 	mov	r16,r6
   88b5c:	d9014f15 	stw	r4,1340(sp)
   88b60:	008d2c80 	call	8d2c8 <_localeconv_r>
   88b64:	10800017 	ldw	r2,0(r2)
   88b68:	d9c15117 	ldw	r7,1348(sp)
   88b6c:	d8814915 	stw	r2,1316(sp)
   88b70:	d8814f17 	ldw	r2,1340(sp)
   88b74:	10000226 	beq	r2,zero,88b80 <___vfprintf_internal_r+0x5c>
   88b78:	10800e17 	ldw	r2,56(r2)
   88b7c:	10020d26 	beq	r2,zero,893b4 <___vfprintf_internal_r+0x890>
   88b80:	b080030b 	ldhu	r2,12(r22)
   88b84:	1080020c 	andi	r2,r2,8
   88b88:	10020e26 	beq	r2,zero,893c4 <___vfprintf_internal_r+0x8a0>
   88b8c:	b0800417 	ldw	r2,16(r22)
   88b90:	10020c26 	beq	r2,zero,893c4 <___vfprintf_internal_r+0x8a0>
   88b94:	b200030b 	ldhu	r8,12(r22)
   88b98:	00800284 	movi	r2,10
   88b9c:	40c0068c 	andi	r3,r8,26
   88ba0:	18802f1e 	bne	r3,r2,88c60 <___vfprintf_internal_r+0x13c>
   88ba4:	b080038f 	ldh	r2,14(r22)
   88ba8:	10002d16 	blt	r2,zero,88c60 <___vfprintf_internal_r+0x13c>
   88bac:	b240038b 	ldhu	r9,14(r22)
   88bb0:	b2800717 	ldw	r10,28(r22)
   88bb4:	b2c00917 	ldw	r11,36(r22)
   88bb8:	d9014f17 	ldw	r4,1340(sp)
   88bbc:	dc402904 	addi	r17,sp,164
   88bc0:	d8804004 	addi	r2,sp,256
   88bc4:	00c10004 	movi	r3,1024
   88bc8:	423fff4c 	andi	r8,r8,65533
   88bcc:	800d883a 	mov	r6,r16
   88bd0:	880b883a 	mov	r5,r17
   88bd4:	da002c0d 	sth	r8,176(sp)
   88bd8:	da402c8d 	sth	r9,178(sp)
   88bdc:	da803015 	stw	r10,192(sp)
   88be0:	dac03215 	stw	r11,200(sp)
   88be4:	d8802d15 	stw	r2,180(sp)
   88be8:	d8c02e15 	stw	r3,184(sp)
   88bec:	d8802915 	stw	r2,164(sp)
   88bf0:	d8c02b15 	stw	r3,172(sp)
   88bf4:	d8002f15 	stw	zero,188(sp)
   88bf8:	0088b240 	call	88b24 <___vfprintf_internal_r>
   88bfc:	d8814b15 	stw	r2,1324(sp)
   88c00:	10000416 	blt	r2,zero,88c14 <___vfprintf_internal_r+0xf0>
   88c04:	d9014f17 	ldw	r4,1340(sp)
   88c08:	880b883a 	mov	r5,r17
   88c0c:	008c3400 	call	8c340 <_fflush_r>
   88c10:	1002321e 	bne	r2,zero,894dc <___vfprintf_internal_r+0x9b8>
   88c14:	d8802c0b 	ldhu	r2,176(sp)
   88c18:	1080100c 	andi	r2,r2,64
   88c1c:	10000326 	beq	r2,zero,88c2c <___vfprintf_internal_r+0x108>
   88c20:	b080030b 	ldhu	r2,12(r22)
   88c24:	10801014 	ori	r2,r2,64
   88c28:	b080030d 	sth	r2,12(r22)
   88c2c:	d8814b17 	ldw	r2,1324(sp)
   88c30:	dfc15b17 	ldw	ra,1388(sp)
   88c34:	df015a17 	ldw	fp,1384(sp)
   88c38:	ddc15917 	ldw	r23,1380(sp)
   88c3c:	dd815817 	ldw	r22,1376(sp)
   88c40:	dd415717 	ldw	r21,1372(sp)
   88c44:	dd015617 	ldw	r20,1368(sp)
   88c48:	dcc15517 	ldw	r19,1364(sp)
   88c4c:	dc815417 	ldw	r18,1360(sp)
   88c50:	dc415317 	ldw	r17,1356(sp)
   88c54:	dc015217 	ldw	r16,1352(sp)
   88c58:	dec15c04 	addi	sp,sp,1392
   88c5c:	f800283a 	ret
   88c60:	0005883a 	mov	r2,zero
   88c64:	0007883a 	mov	r3,zero
   88c68:	dd401904 	addi	r21,sp,100
   88c6c:	d8814215 	stw	r2,1288(sp)
   88c70:	802f883a 	mov	r23,r16
   88c74:	d8c14315 	stw	r3,1292(sp)
   88c78:	d8014b15 	stw	zero,1324(sp)
   88c7c:	d8014815 	stw	zero,1312(sp)
   88c80:	d8014415 	stw	zero,1296(sp)
   88c84:	d8014715 	stw	zero,1308(sp)
   88c88:	dd400c15 	stw	r21,48(sp)
   88c8c:	d8000e15 	stw	zero,56(sp)
   88c90:	d8000d15 	stw	zero,52(sp)
   88c94:	b8800007 	ldb	r2,0(r23)
   88c98:	10001926 	beq	r2,zero,88d00 <___vfprintf_internal_r+0x1dc>
   88c9c:	00c00944 	movi	r3,37
   88ca0:	10c01726 	beq	r2,r3,88d00 <___vfprintf_internal_r+0x1dc>
   88ca4:	b821883a 	mov	r16,r23
   88ca8:	00000106 	br	88cb0 <___vfprintf_internal_r+0x18c>
   88cac:	10c00326 	beq	r2,r3,88cbc <___vfprintf_internal_r+0x198>
   88cb0:	84000044 	addi	r16,r16,1
   88cb4:	80800007 	ldb	r2,0(r16)
   88cb8:	103ffc1e 	bne	r2,zero,88cac <___vfprintf_internal_r+0x188>
   88cbc:	85e7c83a 	sub	r19,r16,r23
   88cc0:	98000e26 	beq	r19,zero,88cfc <___vfprintf_internal_r+0x1d8>
   88cc4:	dc800e17 	ldw	r18,56(sp)
   88cc8:	dc400d17 	ldw	r17,52(sp)
   88ccc:	008001c4 	movi	r2,7
   88cd0:	94e5883a 	add	r18,r18,r19
   88cd4:	8c400044 	addi	r17,r17,1
   88cd8:	adc00015 	stw	r23,0(r21)
   88cdc:	dc800e15 	stw	r18,56(sp)
   88ce0:	acc00115 	stw	r19,4(r21)
   88ce4:	dc400d15 	stw	r17,52(sp)
   88ce8:	14428b16 	blt	r2,r17,89718 <___vfprintf_internal_r+0xbf4>
   88cec:	ad400204 	addi	r21,r21,8
   88cf0:	d9014b17 	ldw	r4,1324(sp)
   88cf4:	24c9883a 	add	r4,r4,r19
   88cf8:	d9014b15 	stw	r4,1324(sp)
   88cfc:	802f883a 	mov	r23,r16
   88d00:	b8800007 	ldb	r2,0(r23)
   88d04:	10013c26 	beq	r2,zero,891f8 <___vfprintf_internal_r+0x6d4>
   88d08:	bdc00044 	addi	r23,r23,1
   88d0c:	d8000405 	stb	zero,16(sp)
   88d10:	b8c00007 	ldb	r3,0(r23)
   88d14:	04ffffc4 	movi	r19,-1
   88d18:	d8014c15 	stw	zero,1328(sp)
   88d1c:	d8014a15 	stw	zero,1320(sp)
   88d20:	d8c14d15 	stw	r3,1332(sp)
   88d24:	bdc00044 	addi	r23,r23,1
   88d28:	d9414d17 	ldw	r5,1332(sp)
   88d2c:	00801604 	movi	r2,88
   88d30:	28fff804 	addi	r3,r5,-32
   88d34:	10c06036 	bltu	r2,r3,88eb8 <___vfprintf_internal_r+0x394>
   88d38:	18c5883a 	add	r2,r3,r3
   88d3c:	1085883a 	add	r2,r2,r2
   88d40:	00c00274 	movhi	r3,9
   88d44:	18e35504 	addi	r3,r3,-29356
   88d48:	10c5883a 	add	r2,r2,r3
   88d4c:	11000017 	ldw	r4,0(r2)
   88d50:	2000683a 	jmp	r4
   88d54:	00089cc8 	cmpgei	zero,zero,8819
   88d58:	00088eb8 	rdprs	zero,zero,8762
   88d5c:	00088eb8 	rdprs	zero,zero,8762
   88d60:	00089cb4 	movhi	zero,8818
   88d64:	00088eb8 	rdprs	zero,zero,8762
   88d68:	00088eb8 	rdprs	zero,zero,8762
   88d6c:	00088eb8 	rdprs	zero,zero,8762
   88d70:	00088eb8 	rdprs	zero,zero,8762
   88d74:	00088eb8 	rdprs	zero,zero,8762
   88d78:	00088eb8 	rdprs	zero,zero,8762
   88d7c:	00089a94 	movui	zero,8810
   88d80:	00089ca4 	muli	zero,zero,8818
   88d84:	00088eb8 	rdprs	zero,zero,8762
   88d88:	00089aac 	andhi	zero,zero,8810
   88d8c:	00089d4c 	andi	zero,zero,8821
   88d90:	00088eb8 	rdprs	zero,zero,8762
   88d94:	00089d38 	rdprs	zero,zero,8820
   88d98:	00089cf4 	movhi	zero,8819
   88d9c:	00089cf4 	movhi	zero,8819
   88da0:	00089cf4 	movhi	zero,8819
   88da4:	00089cf4 	movhi	zero,8819
   88da8:	00089cf4 	movhi	zero,8819
   88dac:	00089cf4 	movhi	zero,8819
   88db0:	00089cf4 	movhi	zero,8819
   88db4:	00089cf4 	movhi	zero,8819
   88db8:	00089cf4 	movhi	zero,8819
   88dbc:	00088eb8 	rdprs	zero,zero,8762
   88dc0:	00088eb8 	rdprs	zero,zero,8762
   88dc4:	00088eb8 	rdprs	zero,zero,8762
   88dc8:	00088eb8 	rdprs	zero,zero,8762
   88dcc:	00088eb8 	rdprs	zero,zero,8762
   88dd0:	00088eb8 	rdprs	zero,zero,8762
   88dd4:	00088eb8 	rdprs	zero,zero,8762
   88dd8:	00088eb8 	rdprs	zero,zero,8762
   88ddc:	00088eb8 	rdprs	zero,zero,8762
   88de0:	00088eb8 	rdprs	zero,zero,8762
   88de4:	00089510 	cmplti	zero,zero,8788
   88de8:	00089b7c 	xorhi	zero,zero,8813
   88dec:	00088eb8 	rdprs	zero,zero,8762
   88df0:	00089b7c 	xorhi	zero,zero,8813
   88df4:	00088eb8 	rdprs	zero,zero,8762
   88df8:	00088eb8 	rdprs	zero,zero,8762
   88dfc:	00088eb8 	rdprs	zero,zero,8762
   88e00:	00088eb8 	rdprs	zero,zero,8762
   88e04:	00089ce0 	cmpeqi	zero,zero,8819
   88e08:	00088eb8 	rdprs	zero,zero,8762
   88e0c:	00088eb8 	rdprs	zero,zero,8762
   88e10:	000895c4 	movi	zero,8791
   88e14:	00088eb8 	rdprs	zero,zero,8762
   88e18:	00088eb8 	rdprs	zero,zero,8762
   88e1c:	00088eb8 	rdprs	zero,zero,8762
   88e20:	00088eb8 	rdprs	zero,zero,8762
   88e24:	00088eb8 	rdprs	zero,zero,8762
   88e28:	00089610 	cmplti	zero,zero,8792
   88e2c:	00088eb8 	rdprs	zero,zero,8762
   88e30:	00088eb8 	rdprs	zero,zero,8762
   88e34:	00089c30 	cmpltui	zero,zero,8816
   88e38:	00088eb8 	rdprs	zero,zero,8762
   88e3c:	00088eb8 	rdprs	zero,zero,8762
   88e40:	00088eb8 	rdprs	zero,zero,8762
   88e44:	00088eb8 	rdprs	zero,zero,8762
   88e48:	00088eb8 	rdprs	zero,zero,8762
   88e4c:	00088eb8 	rdprs	zero,zero,8762
   88e50:	00088eb8 	rdprs	zero,zero,8762
   88e54:	00088eb8 	rdprs	zero,zero,8762
   88e58:	00088eb8 	rdprs	zero,zero,8762
   88e5c:	00088eb8 	rdprs	zero,zero,8762
   88e60:	00089c04 	movi	zero,8816
   88e64:	0008951c 	xori	zero,zero,8788
   88e68:	00089b7c 	xorhi	zero,zero,8813
   88e6c:	00089b7c 	xorhi	zero,zero,8813
   88e70:	00089b7c 	xorhi	zero,zero,8813
   88e74:	00089b68 	cmpgeui	zero,zero,8813
   88e78:	0008951c 	xori	zero,zero,8788
   88e7c:	00088eb8 	rdprs	zero,zero,8762
   88e80:	00088eb8 	rdprs	zero,zero,8762
   88e84:	00089af0 	cmpltui	zero,zero,8811
   88e88:	00088eb8 	rdprs	zero,zero,8762
   88e8c:	00089ac0 	call	89ac <OSCtxSw_SWITCH_PC+0x896c>
   88e90:	000895d0 	cmplti	zero,zero,8791
   88e94:	00089b20 	cmpeqi	zero,zero,8812
   88e98:	00089b0c 	andi	zero,zero,8812
   88e9c:	00088eb8 	rdprs	zero,zero,8762
   88ea0:	00089db4 	movhi	zero,8822
   88ea4:	00088eb8 	rdprs	zero,zero,8762
   88ea8:	0008961c 	xori	zero,zero,8792
   88eac:	00088eb8 	rdprs	zero,zero,8762
   88eb0:	00088eb8 	rdprs	zero,zero,8762
   88eb4:	00089c94 	movui	zero,8818
   88eb8:	d9014d17 	ldw	r4,1332(sp)
   88ebc:	2000ce26 	beq	r4,zero,891f8 <___vfprintf_internal_r+0x6d4>
   88ec0:	01400044 	movi	r5,1
   88ec4:	d9800f04 	addi	r6,sp,60
   88ec8:	d9c14015 	stw	r7,1280(sp)
   88ecc:	d9414515 	stw	r5,1300(sp)
   88ed0:	d9814115 	stw	r6,1284(sp)
   88ed4:	280f883a 	mov	r7,r5
   88ed8:	d9000f05 	stb	r4,60(sp)
   88edc:	d8000405 	stb	zero,16(sp)
   88ee0:	d8014615 	stw	zero,1304(sp)
   88ee4:	d8c14c17 	ldw	r3,1328(sp)
   88ee8:	1880008c 	andi	r2,r3,2
   88eec:	1005003a 	cmpeq	r2,r2,zero
   88ef0:	d8815015 	stw	r2,1344(sp)
   88ef4:	1000031e 	bne	r2,zero,88f04 <___vfprintf_internal_r+0x3e0>
   88ef8:	d9014517 	ldw	r4,1300(sp)
   88efc:	21000084 	addi	r4,r4,2
   88f00:	d9014515 	stw	r4,1300(sp)
   88f04:	d9414c17 	ldw	r5,1328(sp)
   88f08:	2940210c 	andi	r5,r5,132
   88f0c:	d9414e15 	stw	r5,1336(sp)
   88f10:	28002d1e 	bne	r5,zero,88fc8 <___vfprintf_internal_r+0x4a4>
   88f14:	d9814a17 	ldw	r6,1320(sp)
   88f18:	d8814517 	ldw	r2,1300(sp)
   88f1c:	30a1c83a 	sub	r16,r6,r2
   88f20:	0400290e 	bge	zero,r16,88fc8 <___vfprintf_internal_r+0x4a4>
   88f24:	00800404 	movi	r2,16
   88f28:	14045e0e 	bge	r2,r16,8a0a4 <___vfprintf_internal_r+0x1580>
   88f2c:	dc800e17 	ldw	r18,56(sp)
   88f30:	dc400d17 	ldw	r17,52(sp)
   88f34:	1027883a 	mov	r19,r2
   88f38:	070002b4 	movhi	fp,10
   88f3c:	e7024084 	addi	fp,fp,2306
   88f40:	050001c4 	movi	r20,7
   88f44:	00000306 	br	88f54 <___vfprintf_internal_r+0x430>
   88f48:	843ffc04 	addi	r16,r16,-16
   88f4c:	ad400204 	addi	r21,r21,8
   88f50:	9c00130e 	bge	r19,r16,88fa0 <___vfprintf_internal_r+0x47c>
   88f54:	94800404 	addi	r18,r18,16
   88f58:	8c400044 	addi	r17,r17,1
   88f5c:	af000015 	stw	fp,0(r21)
   88f60:	acc00115 	stw	r19,4(r21)
   88f64:	dc800e15 	stw	r18,56(sp)
   88f68:	dc400d15 	stw	r17,52(sp)
   88f6c:	a47ff60e 	bge	r20,r17,88f48 <___vfprintf_internal_r+0x424>
   88f70:	d9014f17 	ldw	r4,1340(sp)
   88f74:	b00b883a 	mov	r5,r22
   88f78:	d9800c04 	addi	r6,sp,48
   88f7c:	d9c15115 	stw	r7,1348(sp)
   88f80:	0088acc0 	call	88acc <__sprint_r>
   88f84:	d9c15117 	ldw	r7,1348(sp)
   88f88:	10009e1e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   88f8c:	843ffc04 	addi	r16,r16,-16
   88f90:	dc800e17 	ldw	r18,56(sp)
   88f94:	dc400d17 	ldw	r17,52(sp)
   88f98:	dd401904 	addi	r21,sp,100
   88f9c:	9c3fed16 	blt	r19,r16,88f54 <___vfprintf_internal_r+0x430>
   88fa0:	9425883a 	add	r18,r18,r16
   88fa4:	8c400044 	addi	r17,r17,1
   88fa8:	008001c4 	movi	r2,7
   88fac:	af000015 	stw	fp,0(r21)
   88fb0:	ac000115 	stw	r16,4(r21)
   88fb4:	dc800e15 	stw	r18,56(sp)
   88fb8:	dc400d15 	stw	r17,52(sp)
   88fbc:	1441f516 	blt	r2,r17,89794 <___vfprintf_internal_r+0xc70>
   88fc0:	ad400204 	addi	r21,r21,8
   88fc4:	00000206 	br	88fd0 <___vfprintf_internal_r+0x4ac>
   88fc8:	dc800e17 	ldw	r18,56(sp)
   88fcc:	dc400d17 	ldw	r17,52(sp)
   88fd0:	d8800407 	ldb	r2,16(sp)
   88fd4:	10000b26 	beq	r2,zero,89004 <___vfprintf_internal_r+0x4e0>
   88fd8:	00800044 	movi	r2,1
   88fdc:	94800044 	addi	r18,r18,1
   88fe0:	8c400044 	addi	r17,r17,1
   88fe4:	a8800115 	stw	r2,4(r21)
   88fe8:	d8c00404 	addi	r3,sp,16
   88fec:	008001c4 	movi	r2,7
   88ff0:	a8c00015 	stw	r3,0(r21)
   88ff4:	dc800e15 	stw	r18,56(sp)
   88ff8:	dc400d15 	stw	r17,52(sp)
   88ffc:	1441da16 	blt	r2,r17,89768 <___vfprintf_internal_r+0xc44>
   89000:	ad400204 	addi	r21,r21,8
   89004:	d9015017 	ldw	r4,1344(sp)
   89008:	20000b1e 	bne	r4,zero,89038 <___vfprintf_internal_r+0x514>
   8900c:	d8800444 	addi	r2,sp,17
   89010:	94800084 	addi	r18,r18,2
   89014:	8c400044 	addi	r17,r17,1
   89018:	a8800015 	stw	r2,0(r21)
   8901c:	00c00084 	movi	r3,2
   89020:	008001c4 	movi	r2,7
   89024:	a8c00115 	stw	r3,4(r21)
   89028:	dc800e15 	stw	r18,56(sp)
   8902c:	dc400d15 	stw	r17,52(sp)
   89030:	1441c216 	blt	r2,r17,8973c <___vfprintf_internal_r+0xc18>
   89034:	ad400204 	addi	r21,r21,8
   89038:	d9414e17 	ldw	r5,1336(sp)
   8903c:	00802004 	movi	r2,128
   89040:	2880b126 	beq	r5,r2,89308 <___vfprintf_internal_r+0x7e4>
   89044:	d8c14617 	ldw	r3,1304(sp)
   89048:	19e1c83a 	sub	r16,r3,r7
   8904c:	0400260e 	bge	zero,r16,890e8 <___vfprintf_internal_r+0x5c4>
   89050:	00800404 	movi	r2,16
   89054:	1403cf0e 	bge	r2,r16,89f94 <___vfprintf_internal_r+0x1470>
   89058:	1027883a 	mov	r19,r2
   8905c:	070002b4 	movhi	fp,10
   89060:	e7023c84 	addi	fp,fp,2290
   89064:	050001c4 	movi	r20,7
   89068:	00000306 	br	89078 <___vfprintf_internal_r+0x554>
   8906c:	843ffc04 	addi	r16,r16,-16
   89070:	ad400204 	addi	r21,r21,8
   89074:	9c00130e 	bge	r19,r16,890c4 <___vfprintf_internal_r+0x5a0>
   89078:	94800404 	addi	r18,r18,16
   8907c:	8c400044 	addi	r17,r17,1
   89080:	af000015 	stw	fp,0(r21)
   89084:	acc00115 	stw	r19,4(r21)
   89088:	dc800e15 	stw	r18,56(sp)
   8908c:	dc400d15 	stw	r17,52(sp)
   89090:	a47ff60e 	bge	r20,r17,8906c <___vfprintf_internal_r+0x548>
   89094:	d9014f17 	ldw	r4,1340(sp)
   89098:	b00b883a 	mov	r5,r22
   8909c:	d9800c04 	addi	r6,sp,48
   890a0:	d9c15115 	stw	r7,1348(sp)
   890a4:	0088acc0 	call	88acc <__sprint_r>
   890a8:	d9c15117 	ldw	r7,1348(sp)
   890ac:	1000551e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   890b0:	843ffc04 	addi	r16,r16,-16
   890b4:	dc800e17 	ldw	r18,56(sp)
   890b8:	dc400d17 	ldw	r17,52(sp)
   890bc:	dd401904 	addi	r21,sp,100
   890c0:	9c3fed16 	blt	r19,r16,89078 <___vfprintf_internal_r+0x554>
   890c4:	9425883a 	add	r18,r18,r16
   890c8:	8c400044 	addi	r17,r17,1
   890cc:	008001c4 	movi	r2,7
   890d0:	af000015 	stw	fp,0(r21)
   890d4:	ac000115 	stw	r16,4(r21)
   890d8:	dc800e15 	stw	r18,56(sp)
   890dc:	dc400d15 	stw	r17,52(sp)
   890e0:	14418216 	blt	r2,r17,896ec <___vfprintf_internal_r+0xbc8>
   890e4:	ad400204 	addi	r21,r21,8
   890e8:	d9014c17 	ldw	r4,1328(sp)
   890ec:	2080400c 	andi	r2,r4,256
   890f0:	10004a1e 	bne	r2,zero,8921c <___vfprintf_internal_r+0x6f8>
   890f4:	d9414117 	ldw	r5,1284(sp)
   890f8:	91e5883a 	add	r18,r18,r7
   890fc:	8c400044 	addi	r17,r17,1
   89100:	008001c4 	movi	r2,7
   89104:	a9400015 	stw	r5,0(r21)
   89108:	a9c00115 	stw	r7,4(r21)
   8910c:	dc800e15 	stw	r18,56(sp)
   89110:	dc400d15 	stw	r17,52(sp)
   89114:	14416716 	blt	r2,r17,896b4 <___vfprintf_internal_r+0xb90>
   89118:	a8c00204 	addi	r3,r21,8
   8911c:	d9814c17 	ldw	r6,1328(sp)
   89120:	3080010c 	andi	r2,r6,4
   89124:	10002826 	beq	r2,zero,891c8 <___vfprintf_internal_r+0x6a4>
   89128:	d8814a17 	ldw	r2,1320(sp)
   8912c:	d9014517 	ldw	r4,1300(sp)
   89130:	1121c83a 	sub	r16,r2,r4
   89134:	0400240e 	bge	zero,r16,891c8 <___vfprintf_internal_r+0x6a4>
   89138:	00800404 	movi	r2,16
   8913c:	1404550e 	bge	r2,r16,8a294 <___vfprintf_internal_r+0x1770>
   89140:	dc400d17 	ldw	r17,52(sp)
   89144:	1027883a 	mov	r19,r2
   89148:	070002b4 	movhi	fp,10
   8914c:	e7024084 	addi	fp,fp,2306
   89150:	050001c4 	movi	r20,7
   89154:	00000306 	br	89164 <___vfprintf_internal_r+0x640>
   89158:	843ffc04 	addi	r16,r16,-16
   8915c:	18c00204 	addi	r3,r3,8
   89160:	9c00110e 	bge	r19,r16,891a8 <___vfprintf_internal_r+0x684>
   89164:	94800404 	addi	r18,r18,16
   89168:	8c400044 	addi	r17,r17,1
   8916c:	1f000015 	stw	fp,0(r3)
   89170:	1cc00115 	stw	r19,4(r3)
   89174:	dc800e15 	stw	r18,56(sp)
   89178:	dc400d15 	stw	r17,52(sp)
   8917c:	a47ff60e 	bge	r20,r17,89158 <___vfprintf_internal_r+0x634>
   89180:	d9014f17 	ldw	r4,1340(sp)
   89184:	b00b883a 	mov	r5,r22
   89188:	d9800c04 	addi	r6,sp,48
   8918c:	0088acc0 	call	88acc <__sprint_r>
   89190:	10001c1e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   89194:	843ffc04 	addi	r16,r16,-16
   89198:	dc800e17 	ldw	r18,56(sp)
   8919c:	dc400d17 	ldw	r17,52(sp)
   891a0:	d8c01904 	addi	r3,sp,100
   891a4:	9c3fef16 	blt	r19,r16,89164 <___vfprintf_internal_r+0x640>
   891a8:	9425883a 	add	r18,r18,r16
   891ac:	8c400044 	addi	r17,r17,1
   891b0:	008001c4 	movi	r2,7
   891b4:	1f000015 	stw	fp,0(r3)
   891b8:	1c000115 	stw	r16,4(r3)
   891bc:	dc800e15 	stw	r18,56(sp)
   891c0:	dc400d15 	stw	r17,52(sp)
   891c4:	1440cb16 	blt	r2,r17,894f4 <___vfprintf_internal_r+0x9d0>
   891c8:	d8814a17 	ldw	r2,1320(sp)
   891cc:	d9414517 	ldw	r5,1300(sp)
   891d0:	1140010e 	bge	r2,r5,891d8 <___vfprintf_internal_r+0x6b4>
   891d4:	2805883a 	mov	r2,r5
   891d8:	d9814b17 	ldw	r6,1324(sp)
   891dc:	308d883a 	add	r6,r6,r2
   891e0:	d9814b15 	stw	r6,1324(sp)
   891e4:	90013b1e 	bne	r18,zero,896d4 <___vfprintf_internal_r+0xbb0>
   891e8:	d9c14017 	ldw	r7,1280(sp)
   891ec:	dd401904 	addi	r21,sp,100
   891f0:	d8000d15 	stw	zero,52(sp)
   891f4:	003ea706 	br	88c94 <___vfprintf_internal_r+0x170>
   891f8:	d8800e17 	ldw	r2,56(sp)
   891fc:	1005451e 	bne	r2,zero,8a714 <___vfprintf_internal_r+0x1bf0>
   89200:	d8000d15 	stw	zero,52(sp)
   89204:	b080030b 	ldhu	r2,12(r22)
   89208:	1080100c 	andi	r2,r2,64
   8920c:	103e8726 	beq	r2,zero,88c2c <___vfprintf_internal_r+0x108>
   89210:	00bfffc4 	movi	r2,-1
   89214:	d8814b15 	stw	r2,1324(sp)
   89218:	003e8406 	br	88c2c <___vfprintf_internal_r+0x108>
   8921c:	d9814d17 	ldw	r6,1332(sp)
   89220:	00801944 	movi	r2,101
   89224:	11806e16 	blt	r2,r6,893e0 <___vfprintf_internal_r+0x8bc>
   89228:	d9414717 	ldw	r5,1308(sp)
   8922c:	00c00044 	movi	r3,1
   89230:	1943490e 	bge	r3,r5,89f58 <___vfprintf_internal_r+0x1434>
   89234:	d8814117 	ldw	r2,1284(sp)
   89238:	94800044 	addi	r18,r18,1
   8923c:	8c400044 	addi	r17,r17,1
   89240:	a8800015 	stw	r2,0(r21)
   89244:	008001c4 	movi	r2,7
   89248:	a8c00115 	stw	r3,4(r21)
   8924c:	dc800e15 	stw	r18,56(sp)
   89250:	dc400d15 	stw	r17,52(sp)
   89254:	1441ca16 	blt	r2,r17,89980 <___vfprintf_internal_r+0xe5c>
   89258:	a8c00204 	addi	r3,r21,8
   8925c:	d9014917 	ldw	r4,1316(sp)
   89260:	00800044 	movi	r2,1
   89264:	94800044 	addi	r18,r18,1
   89268:	8c400044 	addi	r17,r17,1
   8926c:	18800115 	stw	r2,4(r3)
   89270:	008001c4 	movi	r2,7
   89274:	19000015 	stw	r4,0(r3)
   89278:	dc800e15 	stw	r18,56(sp)
   8927c:	dc400d15 	stw	r17,52(sp)
   89280:	1441b616 	blt	r2,r17,8995c <___vfprintf_internal_r+0xe38>
   89284:	1cc00204 	addi	r19,r3,8
   89288:	d9014217 	ldw	r4,1288(sp)
   8928c:	d9414317 	ldw	r5,1292(sp)
   89290:	000d883a 	mov	r6,zero
   89294:	000f883a 	mov	r7,zero
   89298:	00919100 	call	91910 <__nedf2>
   8929c:	10017426 	beq	r2,zero,89870 <___vfprintf_internal_r+0xd4c>
   892a0:	d9414717 	ldw	r5,1308(sp)
   892a4:	d9814117 	ldw	r6,1284(sp)
   892a8:	8c400044 	addi	r17,r17,1
   892ac:	2c85883a 	add	r2,r5,r18
   892b0:	14bfffc4 	addi	r18,r2,-1
   892b4:	28bfffc4 	addi	r2,r5,-1
   892b8:	30c00044 	addi	r3,r6,1
   892bc:	98800115 	stw	r2,4(r19)
   892c0:	008001c4 	movi	r2,7
   892c4:	98c00015 	stw	r3,0(r19)
   892c8:	dc800e15 	stw	r18,56(sp)
   892cc:	dc400d15 	stw	r17,52(sp)
   892d0:	14418e16 	blt	r2,r17,8990c <___vfprintf_internal_r+0xde8>
   892d4:	9cc00204 	addi	r19,r19,8
   892d8:	d9414817 	ldw	r5,1312(sp)
   892dc:	d8800804 	addi	r2,sp,32
   892e0:	8c400044 	addi	r17,r17,1
   892e4:	9165883a 	add	r18,r18,r5
   892e8:	98800015 	stw	r2,0(r19)
   892ec:	008001c4 	movi	r2,7
   892f0:	99400115 	stw	r5,4(r19)
   892f4:	dc800e15 	stw	r18,56(sp)
   892f8:	dc400d15 	stw	r17,52(sp)
   892fc:	1440ed16 	blt	r2,r17,896b4 <___vfprintf_internal_r+0xb90>
   89300:	98c00204 	addi	r3,r19,8
   89304:	003f8506 	br	8911c <___vfprintf_internal_r+0x5f8>
   89308:	d9814a17 	ldw	r6,1320(sp)
   8930c:	d8814517 	ldw	r2,1300(sp)
   89310:	30a1c83a 	sub	r16,r6,r2
   89314:	043f4b0e 	bge	zero,r16,89044 <___vfprintf_internal_r+0x520>
   89318:	00800404 	movi	r2,16
   8931c:	14043a0e 	bge	r2,r16,8a408 <___vfprintf_internal_r+0x18e4>
   89320:	1027883a 	mov	r19,r2
   89324:	070002b4 	movhi	fp,10
   89328:	e7023c84 	addi	fp,fp,2290
   8932c:	050001c4 	movi	r20,7
   89330:	00000306 	br	89340 <___vfprintf_internal_r+0x81c>
   89334:	843ffc04 	addi	r16,r16,-16
   89338:	ad400204 	addi	r21,r21,8
   8933c:	9c00130e 	bge	r19,r16,8938c <___vfprintf_internal_r+0x868>
   89340:	94800404 	addi	r18,r18,16
   89344:	8c400044 	addi	r17,r17,1
   89348:	af000015 	stw	fp,0(r21)
   8934c:	acc00115 	stw	r19,4(r21)
   89350:	dc800e15 	stw	r18,56(sp)
   89354:	dc400d15 	stw	r17,52(sp)
   89358:	a47ff60e 	bge	r20,r17,89334 <___vfprintf_internal_r+0x810>
   8935c:	d9014f17 	ldw	r4,1340(sp)
   89360:	b00b883a 	mov	r5,r22
   89364:	d9800c04 	addi	r6,sp,48
   89368:	d9c15115 	stw	r7,1348(sp)
   8936c:	0088acc0 	call	88acc <__sprint_r>
   89370:	d9c15117 	ldw	r7,1348(sp)
   89374:	103fa31e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   89378:	843ffc04 	addi	r16,r16,-16
   8937c:	dc800e17 	ldw	r18,56(sp)
   89380:	dc400d17 	ldw	r17,52(sp)
   89384:	dd401904 	addi	r21,sp,100
   89388:	9c3fed16 	blt	r19,r16,89340 <___vfprintf_internal_r+0x81c>
   8938c:	9425883a 	add	r18,r18,r16
   89390:	8c400044 	addi	r17,r17,1
   89394:	008001c4 	movi	r2,7
   89398:	af000015 	stw	fp,0(r21)
   8939c:	ac000115 	stw	r16,4(r21)
   893a0:	dc800e15 	stw	r18,56(sp)
   893a4:	dc400d15 	stw	r17,52(sp)
   893a8:	14416116 	blt	r2,r17,89930 <___vfprintf_internal_r+0xe0c>
   893ac:	ad400204 	addi	r21,r21,8
   893b0:	003f2406 	br	89044 <___vfprintf_internal_r+0x520>
   893b4:	d9014f17 	ldw	r4,1340(sp)
   893b8:	008c5d80 	call	8c5d8 <__sinit>
   893bc:	d9c15117 	ldw	r7,1348(sp)
   893c0:	003def06 	br	88b80 <___vfprintf_internal_r+0x5c>
   893c4:	d9014f17 	ldw	r4,1340(sp)
   893c8:	b00b883a 	mov	r5,r22
   893cc:	d9c15115 	stw	r7,1348(sp)
   893d0:	008aa0c0 	call	8aa0c <__swsetup_r>
   893d4:	d9c15117 	ldw	r7,1348(sp)
   893d8:	103dee26 	beq	r2,zero,88b94 <___vfprintf_internal_r+0x70>
   893dc:	003f8c06 	br	89210 <___vfprintf_internal_r+0x6ec>
   893e0:	d9014217 	ldw	r4,1288(sp)
   893e4:	d9414317 	ldw	r5,1292(sp)
   893e8:	000d883a 	mov	r6,zero
   893ec:	000f883a 	mov	r7,zero
   893f0:	00918880 	call	91888 <__eqdf2>
   893f4:	1000f21e 	bne	r2,zero,897c0 <___vfprintf_internal_r+0xc9c>
   893f8:	008002b4 	movhi	r2,10
   893fc:	10823c04 	addi	r2,r2,2288
   89400:	94800044 	addi	r18,r18,1
   89404:	8c400044 	addi	r17,r17,1
   89408:	a8800015 	stw	r2,0(r21)
   8940c:	00c00044 	movi	r3,1
   89410:	008001c4 	movi	r2,7
   89414:	a8c00115 	stw	r3,4(r21)
   89418:	dc800e15 	stw	r18,56(sp)
   8941c:	dc400d15 	stw	r17,52(sp)
   89420:	14430016 	blt	r2,r17,8a024 <___vfprintf_internal_r+0x1500>
   89424:	a8c00204 	addi	r3,r21,8
   89428:	d8800517 	ldw	r2,20(sp)
   8942c:	d9014717 	ldw	r4,1308(sp)
   89430:	11015c0e 	bge	r2,r4,899a4 <___vfprintf_internal_r+0xe80>
   89434:	dc400d17 	ldw	r17,52(sp)
   89438:	d9814917 	ldw	r6,1316(sp)
   8943c:	00800044 	movi	r2,1
   89440:	94800044 	addi	r18,r18,1
   89444:	8c400044 	addi	r17,r17,1
   89448:	18800115 	stw	r2,4(r3)
   8944c:	008001c4 	movi	r2,7
   89450:	19800015 	stw	r6,0(r3)
   89454:	dc800e15 	stw	r18,56(sp)
   89458:	dc400d15 	stw	r17,52(sp)
   8945c:	14431616 	blt	r2,r17,8a0b8 <___vfprintf_internal_r+0x1594>
   89460:	18c00204 	addi	r3,r3,8
   89464:	d8814717 	ldw	r2,1308(sp)
   89468:	143fffc4 	addi	r16,r2,-1
   8946c:	043f2b0e 	bge	zero,r16,8911c <___vfprintf_internal_r+0x5f8>
   89470:	00800404 	movi	r2,16
   89474:	1402a80e 	bge	r2,r16,89f18 <___vfprintf_internal_r+0x13f4>
   89478:	dc400d17 	ldw	r17,52(sp)
   8947c:	1027883a 	mov	r19,r2
   89480:	070002b4 	movhi	fp,10
   89484:	e7023c84 	addi	fp,fp,2290
   89488:	050001c4 	movi	r20,7
   8948c:	00000306 	br	8949c <___vfprintf_internal_r+0x978>
   89490:	18c00204 	addi	r3,r3,8
   89494:	843ffc04 	addi	r16,r16,-16
   89498:	9c02a20e 	bge	r19,r16,89f24 <___vfprintf_internal_r+0x1400>
   8949c:	94800404 	addi	r18,r18,16
   894a0:	8c400044 	addi	r17,r17,1
   894a4:	1f000015 	stw	fp,0(r3)
   894a8:	1cc00115 	stw	r19,4(r3)
   894ac:	dc800e15 	stw	r18,56(sp)
   894b0:	dc400d15 	stw	r17,52(sp)
   894b4:	a47ff60e 	bge	r20,r17,89490 <___vfprintf_internal_r+0x96c>
   894b8:	d9014f17 	ldw	r4,1340(sp)
   894bc:	b00b883a 	mov	r5,r22
   894c0:	d9800c04 	addi	r6,sp,48
   894c4:	0088acc0 	call	88acc <__sprint_r>
   894c8:	103f4e1e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   894cc:	dc800e17 	ldw	r18,56(sp)
   894d0:	dc400d17 	ldw	r17,52(sp)
   894d4:	d8c01904 	addi	r3,sp,100
   894d8:	003fee06 	br	89494 <___vfprintf_internal_r+0x970>
   894dc:	d8802c0b 	ldhu	r2,176(sp)
   894e0:	00ffffc4 	movi	r3,-1
   894e4:	d8c14b15 	stw	r3,1324(sp)
   894e8:	1080100c 	andi	r2,r2,64
   894ec:	103dcc1e 	bne	r2,zero,88c20 <___vfprintf_internal_r+0xfc>
   894f0:	003dce06 	br	88c2c <___vfprintf_internal_r+0x108>
   894f4:	d9014f17 	ldw	r4,1340(sp)
   894f8:	b00b883a 	mov	r5,r22
   894fc:	d9800c04 	addi	r6,sp,48
   89500:	0088acc0 	call	88acc <__sprint_r>
   89504:	103f3f1e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   89508:	dc800e17 	ldw	r18,56(sp)
   8950c:	003f2e06 	br	891c8 <___vfprintf_internal_r+0x6a4>
   89510:	d9414c17 	ldw	r5,1328(sp)
   89514:	29400414 	ori	r5,r5,16
   89518:	d9414c15 	stw	r5,1328(sp)
   8951c:	d9814c17 	ldw	r6,1328(sp)
   89520:	3080080c 	andi	r2,r6,32
   89524:	10014f1e 	bne	r2,zero,89a64 <___vfprintf_internal_r+0xf40>
   89528:	d8c14c17 	ldw	r3,1328(sp)
   8952c:	1880040c 	andi	r2,r3,16
   89530:	1002f01e 	bne	r2,zero,8a0f4 <___vfprintf_internal_r+0x15d0>
   89534:	d9014c17 	ldw	r4,1328(sp)
   89538:	2080100c 	andi	r2,r4,64
   8953c:	1002ed26 	beq	r2,zero,8a0f4 <___vfprintf_internal_r+0x15d0>
   89540:	3880000f 	ldh	r2,0(r7)
   89544:	39c00104 	addi	r7,r7,4
   89548:	d9c14015 	stw	r7,1280(sp)
   8954c:	1023d7fa 	srai	r17,r2,31
   89550:	1021883a 	mov	r16,r2
   89554:	88037816 	blt	r17,zero,8a338 <___vfprintf_internal_r+0x1814>
   89558:	01000044 	movi	r4,1
   8955c:	98000416 	blt	r19,zero,89570 <___vfprintf_internal_r+0xa4c>
   89560:	d8c14c17 	ldw	r3,1328(sp)
   89564:	00bfdfc4 	movi	r2,-129
   89568:	1886703a 	and	r3,r3,r2
   8956c:	d8c14c15 	stw	r3,1328(sp)
   89570:	8444b03a 	or	r2,r16,r17
   89574:	10022c1e 	bne	r2,zero,89e28 <___vfprintf_internal_r+0x1304>
   89578:	98022b1e 	bne	r19,zero,89e28 <___vfprintf_internal_r+0x1304>
   8957c:	20803fcc 	andi	r2,r4,255
   89580:	1002a126 	beq	r2,zero,8a008 <___vfprintf_internal_r+0x14e4>
   89584:	d8c01904 	addi	r3,sp,100
   89588:	dd000f04 	addi	r20,sp,60
   8958c:	d8c14115 	stw	r3,1284(sp)
   89590:	d8c14117 	ldw	r3,1284(sp)
   89594:	dcc14515 	stw	r19,1300(sp)
   89598:	a0c5c83a 	sub	r2,r20,r3
   8959c:	11c00a04 	addi	r7,r2,40
   895a0:	99c0010e 	bge	r19,r7,895a8 <___vfprintf_internal_r+0xa84>
   895a4:	d9c14515 	stw	r7,1300(sp)
   895a8:	dcc14615 	stw	r19,1304(sp)
   895ac:	d8800407 	ldb	r2,16(sp)
   895b0:	103e4c26 	beq	r2,zero,88ee4 <___vfprintf_internal_r+0x3c0>
   895b4:	d8814517 	ldw	r2,1300(sp)
   895b8:	10800044 	addi	r2,r2,1
   895bc:	d8814515 	stw	r2,1300(sp)
   895c0:	003e4806 	br	88ee4 <___vfprintf_internal_r+0x3c0>
   895c4:	d9814c17 	ldw	r6,1328(sp)
   895c8:	31800414 	ori	r6,r6,16
   895cc:	d9814c15 	stw	r6,1328(sp)
   895d0:	d8c14c17 	ldw	r3,1328(sp)
   895d4:	1880080c 	andi	r2,r3,32
   895d8:	1001271e 	bne	r2,zero,89a78 <___vfprintf_internal_r+0xf54>
   895dc:	d9414c17 	ldw	r5,1328(sp)
   895e0:	2880040c 	andi	r2,r5,16
   895e4:	1002bc1e 	bne	r2,zero,8a0d8 <___vfprintf_internal_r+0x15b4>
   895e8:	d9814c17 	ldw	r6,1328(sp)
   895ec:	3080100c 	andi	r2,r6,64
   895f0:	1002b926 	beq	r2,zero,8a0d8 <___vfprintf_internal_r+0x15b4>
   895f4:	3c00000b 	ldhu	r16,0(r7)
   895f8:	0009883a 	mov	r4,zero
   895fc:	39c00104 	addi	r7,r7,4
   89600:	0023883a 	mov	r17,zero
   89604:	d9c14015 	stw	r7,1280(sp)
   89608:	d8000405 	stb	zero,16(sp)
   8960c:	003fd306 	br	8955c <___vfprintf_internal_r+0xa38>
   89610:	d9014c17 	ldw	r4,1328(sp)
   89614:	21000414 	ori	r4,r4,16
   89618:	d9014c15 	stw	r4,1328(sp)
   8961c:	d9414c17 	ldw	r5,1328(sp)
   89620:	2880080c 	andi	r2,r5,32
   89624:	1001081e 	bne	r2,zero,89a48 <___vfprintf_internal_r+0xf24>
   89628:	d8c14c17 	ldw	r3,1328(sp)
   8962c:	1880040c 	andi	r2,r3,16
   89630:	1002b61e 	bne	r2,zero,8a10c <___vfprintf_internal_r+0x15e8>
   89634:	d9014c17 	ldw	r4,1328(sp)
   89638:	2080100c 	andi	r2,r4,64
   8963c:	1002b326 	beq	r2,zero,8a10c <___vfprintf_internal_r+0x15e8>
   89640:	3c00000b 	ldhu	r16,0(r7)
   89644:	01000044 	movi	r4,1
   89648:	39c00104 	addi	r7,r7,4
   8964c:	0023883a 	mov	r17,zero
   89650:	d9c14015 	stw	r7,1280(sp)
   89654:	d8000405 	stb	zero,16(sp)
   89658:	003fc006 	br	8955c <___vfprintf_internal_r+0xa38>
   8965c:	d9014f17 	ldw	r4,1340(sp)
   89660:	b00b883a 	mov	r5,r22
   89664:	d9800c04 	addi	r6,sp,48
   89668:	0088acc0 	call	88acc <__sprint_r>
   8966c:	103ee51e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   89670:	dc800e17 	ldw	r18,56(sp)
   89674:	d8c01904 	addi	r3,sp,100
   89678:	d9814c17 	ldw	r6,1328(sp)
   8967c:	3080004c 	andi	r2,r6,1
   89680:	1005003a 	cmpeq	r2,r2,zero
   89684:	103ea51e 	bne	r2,zero,8911c <___vfprintf_internal_r+0x5f8>
   89688:	00800044 	movi	r2,1
   8968c:	dc400d17 	ldw	r17,52(sp)
   89690:	18800115 	stw	r2,4(r3)
   89694:	d8814917 	ldw	r2,1316(sp)
   89698:	94800044 	addi	r18,r18,1
   8969c:	8c400044 	addi	r17,r17,1
   896a0:	18800015 	stw	r2,0(r3)
   896a4:	008001c4 	movi	r2,7
   896a8:	dc800e15 	stw	r18,56(sp)
   896ac:	dc400d15 	stw	r17,52(sp)
   896b0:	1442240e 	bge	r2,r17,89f44 <___vfprintf_internal_r+0x1420>
   896b4:	d9014f17 	ldw	r4,1340(sp)
   896b8:	b00b883a 	mov	r5,r22
   896bc:	d9800c04 	addi	r6,sp,48
   896c0:	0088acc0 	call	88acc <__sprint_r>
   896c4:	103ecf1e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   896c8:	dc800e17 	ldw	r18,56(sp)
   896cc:	d8c01904 	addi	r3,sp,100
   896d0:	003e9206 	br	8911c <___vfprintf_internal_r+0x5f8>
   896d4:	d9014f17 	ldw	r4,1340(sp)
   896d8:	b00b883a 	mov	r5,r22
   896dc:	d9800c04 	addi	r6,sp,48
   896e0:	0088acc0 	call	88acc <__sprint_r>
   896e4:	103ec026 	beq	r2,zero,891e8 <___vfprintf_internal_r+0x6c4>
   896e8:	003ec606 	br	89204 <___vfprintf_internal_r+0x6e0>
   896ec:	d9014f17 	ldw	r4,1340(sp)
   896f0:	b00b883a 	mov	r5,r22
   896f4:	d9800c04 	addi	r6,sp,48
   896f8:	d9c15115 	stw	r7,1348(sp)
   896fc:	0088acc0 	call	88acc <__sprint_r>
   89700:	d9c15117 	ldw	r7,1348(sp)
   89704:	103ebf1e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   89708:	dc800e17 	ldw	r18,56(sp)
   8970c:	dc400d17 	ldw	r17,52(sp)
   89710:	dd401904 	addi	r21,sp,100
   89714:	003e7406 	br	890e8 <___vfprintf_internal_r+0x5c4>
   89718:	d9014f17 	ldw	r4,1340(sp)
   8971c:	b00b883a 	mov	r5,r22
   89720:	d9800c04 	addi	r6,sp,48
   89724:	d9c15115 	stw	r7,1348(sp)
   89728:	0088acc0 	call	88acc <__sprint_r>
   8972c:	d9c15117 	ldw	r7,1348(sp)
   89730:	103eb41e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   89734:	dd401904 	addi	r21,sp,100
   89738:	003d6d06 	br	88cf0 <___vfprintf_internal_r+0x1cc>
   8973c:	d9014f17 	ldw	r4,1340(sp)
   89740:	b00b883a 	mov	r5,r22
   89744:	d9800c04 	addi	r6,sp,48
   89748:	d9c15115 	stw	r7,1348(sp)
   8974c:	0088acc0 	call	88acc <__sprint_r>
   89750:	d9c15117 	ldw	r7,1348(sp)
   89754:	103eab1e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   89758:	dc800e17 	ldw	r18,56(sp)
   8975c:	dc400d17 	ldw	r17,52(sp)
   89760:	dd401904 	addi	r21,sp,100
   89764:	003e3406 	br	89038 <___vfprintf_internal_r+0x514>
   89768:	d9014f17 	ldw	r4,1340(sp)
   8976c:	b00b883a 	mov	r5,r22
   89770:	d9800c04 	addi	r6,sp,48
   89774:	d9c15115 	stw	r7,1348(sp)
   89778:	0088acc0 	call	88acc <__sprint_r>
   8977c:	d9c15117 	ldw	r7,1348(sp)
   89780:	103ea01e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   89784:	dc800e17 	ldw	r18,56(sp)
   89788:	dc400d17 	ldw	r17,52(sp)
   8978c:	dd401904 	addi	r21,sp,100
   89790:	003e1c06 	br	89004 <___vfprintf_internal_r+0x4e0>
   89794:	d9014f17 	ldw	r4,1340(sp)
   89798:	b00b883a 	mov	r5,r22
   8979c:	d9800c04 	addi	r6,sp,48
   897a0:	d9c15115 	stw	r7,1348(sp)
   897a4:	0088acc0 	call	88acc <__sprint_r>
   897a8:	d9c15117 	ldw	r7,1348(sp)
   897ac:	103e951e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   897b0:	dc800e17 	ldw	r18,56(sp)
   897b4:	dc400d17 	ldw	r17,52(sp)
   897b8:	dd401904 	addi	r21,sp,100
   897bc:	003e0406 	br	88fd0 <___vfprintf_internal_r+0x4ac>
   897c0:	d9000517 	ldw	r4,20(sp)
   897c4:	0102580e 	bge	zero,r4,8a128 <___vfprintf_internal_r+0x1604>
   897c8:	d9814717 	ldw	r6,1308(sp)
   897cc:	21807a16 	blt	r4,r6,899b8 <___vfprintf_internal_r+0xe94>
   897d0:	d8814117 	ldw	r2,1284(sp)
   897d4:	91a5883a 	add	r18,r18,r6
   897d8:	8c400044 	addi	r17,r17,1
   897dc:	a8800015 	stw	r2,0(r21)
   897e0:	008001c4 	movi	r2,7
   897e4:	a9800115 	stw	r6,4(r21)
   897e8:	dc800e15 	stw	r18,56(sp)
   897ec:	dc400d15 	stw	r17,52(sp)
   897f0:	1442fc16 	blt	r2,r17,8a3e4 <___vfprintf_internal_r+0x18c0>
   897f4:	a8c00204 	addi	r3,r21,8
   897f8:	d9414717 	ldw	r5,1308(sp)
   897fc:	2161c83a 	sub	r16,r4,r5
   89800:	043f9d0e 	bge	zero,r16,89678 <___vfprintf_internal_r+0xb54>
   89804:	00800404 	movi	r2,16
   89808:	1402190e 	bge	r2,r16,8a070 <___vfprintf_internal_r+0x154c>
   8980c:	dc400d17 	ldw	r17,52(sp)
   89810:	1027883a 	mov	r19,r2
   89814:	070002b4 	movhi	fp,10
   89818:	e7023c84 	addi	fp,fp,2290
   8981c:	050001c4 	movi	r20,7
   89820:	00000306 	br	89830 <___vfprintf_internal_r+0xd0c>
   89824:	18c00204 	addi	r3,r3,8
   89828:	843ffc04 	addi	r16,r16,-16
   8982c:	9c02130e 	bge	r19,r16,8a07c <___vfprintf_internal_r+0x1558>
   89830:	94800404 	addi	r18,r18,16
   89834:	8c400044 	addi	r17,r17,1
   89838:	1f000015 	stw	fp,0(r3)
   8983c:	1cc00115 	stw	r19,4(r3)
   89840:	dc800e15 	stw	r18,56(sp)
   89844:	dc400d15 	stw	r17,52(sp)
   89848:	a47ff60e 	bge	r20,r17,89824 <___vfprintf_internal_r+0xd00>
   8984c:	d9014f17 	ldw	r4,1340(sp)
   89850:	b00b883a 	mov	r5,r22
   89854:	d9800c04 	addi	r6,sp,48
   89858:	0088acc0 	call	88acc <__sprint_r>
   8985c:	103e691e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   89860:	dc800e17 	ldw	r18,56(sp)
   89864:	dc400d17 	ldw	r17,52(sp)
   89868:	d8c01904 	addi	r3,sp,100
   8986c:	003fee06 	br	89828 <___vfprintf_internal_r+0xd04>
   89870:	d8814717 	ldw	r2,1308(sp)
   89874:	143fffc4 	addi	r16,r2,-1
   89878:	043e970e 	bge	zero,r16,892d8 <___vfprintf_internal_r+0x7b4>
   8987c:	00800404 	movi	r2,16
   89880:	1400180e 	bge	r2,r16,898e4 <___vfprintf_internal_r+0xdc0>
   89884:	1029883a 	mov	r20,r2
   89888:	070002b4 	movhi	fp,10
   8988c:	e7023c84 	addi	fp,fp,2290
   89890:	054001c4 	movi	r21,7
   89894:	00000306 	br	898a4 <___vfprintf_internal_r+0xd80>
   89898:	9cc00204 	addi	r19,r19,8
   8989c:	843ffc04 	addi	r16,r16,-16
   898a0:	a400120e 	bge	r20,r16,898ec <___vfprintf_internal_r+0xdc8>
   898a4:	94800404 	addi	r18,r18,16
   898a8:	8c400044 	addi	r17,r17,1
   898ac:	9f000015 	stw	fp,0(r19)
   898b0:	9d000115 	stw	r20,4(r19)
   898b4:	dc800e15 	stw	r18,56(sp)
   898b8:	dc400d15 	stw	r17,52(sp)
   898bc:	ac7ff60e 	bge	r21,r17,89898 <___vfprintf_internal_r+0xd74>
   898c0:	d9014f17 	ldw	r4,1340(sp)
   898c4:	b00b883a 	mov	r5,r22
   898c8:	d9800c04 	addi	r6,sp,48
   898cc:	0088acc0 	call	88acc <__sprint_r>
   898d0:	103e4c1e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   898d4:	dc800e17 	ldw	r18,56(sp)
   898d8:	dc400d17 	ldw	r17,52(sp)
   898dc:	dcc01904 	addi	r19,sp,100
   898e0:	003fee06 	br	8989c <___vfprintf_internal_r+0xd78>
   898e4:	070002b4 	movhi	fp,10
   898e8:	e7023c84 	addi	fp,fp,2290
   898ec:	9425883a 	add	r18,r18,r16
   898f0:	8c400044 	addi	r17,r17,1
   898f4:	008001c4 	movi	r2,7
   898f8:	9f000015 	stw	fp,0(r19)
   898fc:	9c000115 	stw	r16,4(r19)
   89900:	dc800e15 	stw	r18,56(sp)
   89904:	dc400d15 	stw	r17,52(sp)
   89908:	147e720e 	bge	r2,r17,892d4 <___vfprintf_internal_r+0x7b0>
   8990c:	d9014f17 	ldw	r4,1340(sp)
   89910:	b00b883a 	mov	r5,r22
   89914:	d9800c04 	addi	r6,sp,48
   89918:	0088acc0 	call	88acc <__sprint_r>
   8991c:	103e391e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   89920:	dc800e17 	ldw	r18,56(sp)
   89924:	dc400d17 	ldw	r17,52(sp)
   89928:	dcc01904 	addi	r19,sp,100
   8992c:	003e6a06 	br	892d8 <___vfprintf_internal_r+0x7b4>
   89930:	d9014f17 	ldw	r4,1340(sp)
   89934:	b00b883a 	mov	r5,r22
   89938:	d9800c04 	addi	r6,sp,48
   8993c:	d9c15115 	stw	r7,1348(sp)
   89940:	0088acc0 	call	88acc <__sprint_r>
   89944:	d9c15117 	ldw	r7,1348(sp)
   89948:	103e2e1e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   8994c:	dc800e17 	ldw	r18,56(sp)
   89950:	dc400d17 	ldw	r17,52(sp)
   89954:	dd401904 	addi	r21,sp,100
   89958:	003dba06 	br	89044 <___vfprintf_internal_r+0x520>
   8995c:	d9014f17 	ldw	r4,1340(sp)
   89960:	b00b883a 	mov	r5,r22
   89964:	d9800c04 	addi	r6,sp,48
   89968:	0088acc0 	call	88acc <__sprint_r>
   8996c:	103e251e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   89970:	dc800e17 	ldw	r18,56(sp)
   89974:	dc400d17 	ldw	r17,52(sp)
   89978:	dcc01904 	addi	r19,sp,100
   8997c:	003e4206 	br	89288 <___vfprintf_internal_r+0x764>
   89980:	d9014f17 	ldw	r4,1340(sp)
   89984:	b00b883a 	mov	r5,r22
   89988:	d9800c04 	addi	r6,sp,48
   8998c:	0088acc0 	call	88acc <__sprint_r>
   89990:	103e1c1e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   89994:	dc800e17 	ldw	r18,56(sp)
   89998:	dc400d17 	ldw	r17,52(sp)
   8999c:	d8c01904 	addi	r3,sp,100
   899a0:	003e2e06 	br	8925c <___vfprintf_internal_r+0x738>
   899a4:	d9414c17 	ldw	r5,1328(sp)
   899a8:	2880004c 	andi	r2,r5,1
   899ac:	1005003a 	cmpeq	r2,r2,zero
   899b0:	103dda1e 	bne	r2,zero,8911c <___vfprintf_internal_r+0x5f8>
   899b4:	003e9f06 	br	89434 <___vfprintf_internal_r+0x910>
   899b8:	d8c14117 	ldw	r3,1284(sp)
   899bc:	9125883a 	add	r18,r18,r4
   899c0:	8c400044 	addi	r17,r17,1
   899c4:	008001c4 	movi	r2,7
   899c8:	a8c00015 	stw	r3,0(r21)
   899cc:	a9000115 	stw	r4,4(r21)
   899d0:	dc800e15 	stw	r18,56(sp)
   899d4:	dc400d15 	stw	r17,52(sp)
   899d8:	14426c16 	blt	r2,r17,8a38c <___vfprintf_internal_r+0x1868>
   899dc:	a8c00204 	addi	r3,r21,8
   899e0:	d9414917 	ldw	r5,1316(sp)
   899e4:	00800044 	movi	r2,1
   899e8:	94800044 	addi	r18,r18,1
   899ec:	8c400044 	addi	r17,r17,1
   899f0:	18800115 	stw	r2,4(r3)
   899f4:	008001c4 	movi	r2,7
   899f8:	19400015 	stw	r5,0(r3)
   899fc:	dc800e15 	stw	r18,56(sp)
   89a00:	dc400d15 	stw	r17,52(sp)
   89a04:	2021883a 	mov	r16,r4
   89a08:	14425616 	blt	r2,r17,8a364 <___vfprintf_internal_r+0x1840>
   89a0c:	19400204 	addi	r5,r3,8
   89a10:	d9814717 	ldw	r6,1308(sp)
   89a14:	8c400044 	addi	r17,r17,1
   89a18:	dc400d15 	stw	r17,52(sp)
   89a1c:	3107c83a 	sub	r3,r6,r4
   89a20:	d9014117 	ldw	r4,1284(sp)
   89a24:	90e5883a 	add	r18,r18,r3
   89a28:	28c00115 	stw	r3,4(r5)
   89a2c:	8105883a 	add	r2,r16,r4
   89a30:	28800015 	stw	r2,0(r5)
   89a34:	008001c4 	movi	r2,7
   89a38:	dc800e15 	stw	r18,56(sp)
   89a3c:	147f1d16 	blt	r2,r17,896b4 <___vfprintf_internal_r+0xb90>
   89a40:	28c00204 	addi	r3,r5,8
   89a44:	003db506 	br	8911c <___vfprintf_internal_r+0x5f8>
   89a48:	3c000017 	ldw	r16,0(r7)
   89a4c:	3c400117 	ldw	r17,4(r7)
   89a50:	39800204 	addi	r6,r7,8
   89a54:	01000044 	movi	r4,1
   89a58:	d9814015 	stw	r6,1280(sp)
   89a5c:	d8000405 	stb	zero,16(sp)
   89a60:	003ebe06 	br	8955c <___vfprintf_internal_r+0xa38>
   89a64:	3c000017 	ldw	r16,0(r7)
   89a68:	3c400117 	ldw	r17,4(r7)
   89a6c:	38800204 	addi	r2,r7,8
   89a70:	d8814015 	stw	r2,1280(sp)
   89a74:	003eb706 	br	89554 <___vfprintf_internal_r+0xa30>
   89a78:	3c000017 	ldw	r16,0(r7)
   89a7c:	3c400117 	ldw	r17,4(r7)
   89a80:	39000204 	addi	r4,r7,8
   89a84:	d9014015 	stw	r4,1280(sp)
   89a88:	0009883a 	mov	r4,zero
   89a8c:	d8000405 	stb	zero,16(sp)
   89a90:	003eb206 	br	8955c <___vfprintf_internal_r+0xa38>
   89a94:	38c00017 	ldw	r3,0(r7)
   89a98:	39c00104 	addi	r7,r7,4
   89a9c:	d8c14a15 	stw	r3,1320(sp)
   89aa0:	1800d70e 	bge	r3,zero,89e00 <___vfprintf_internal_r+0x12dc>
   89aa4:	00c7c83a 	sub	r3,zero,r3
   89aa8:	d8c14a15 	stw	r3,1320(sp)
   89aac:	d9014c17 	ldw	r4,1328(sp)
   89ab0:	b8c00007 	ldb	r3,0(r23)
   89ab4:	21000114 	ori	r4,r4,4
   89ab8:	d9014c15 	stw	r4,1328(sp)
   89abc:	003c9806 	br	88d20 <___vfprintf_internal_r+0x1fc>
   89ac0:	d9814c17 	ldw	r6,1328(sp)
   89ac4:	3080080c 	andi	r2,r6,32
   89ac8:	1001f626 	beq	r2,zero,8a2a4 <___vfprintf_internal_r+0x1780>
   89acc:	d9014b17 	ldw	r4,1324(sp)
   89ad0:	38800017 	ldw	r2,0(r7)
   89ad4:	39c00104 	addi	r7,r7,4
   89ad8:	d9c14015 	stw	r7,1280(sp)
   89adc:	2007d7fa 	srai	r3,r4,31
   89ae0:	d9c14017 	ldw	r7,1280(sp)
   89ae4:	11000015 	stw	r4,0(r2)
   89ae8:	10c00115 	stw	r3,4(r2)
   89aec:	003c6906 	br	88c94 <___vfprintf_internal_r+0x170>
   89af0:	b8c00007 	ldb	r3,0(r23)
   89af4:	00801b04 	movi	r2,108
   89af8:	18825526 	beq	r3,r2,8a450 <___vfprintf_internal_r+0x192c>
   89afc:	d9414c17 	ldw	r5,1328(sp)
   89b00:	29400414 	ori	r5,r5,16
   89b04:	d9414c15 	stw	r5,1328(sp)
   89b08:	003c8506 	br	88d20 <___vfprintf_internal_r+0x1fc>
   89b0c:	d9814c17 	ldw	r6,1328(sp)
   89b10:	b8c00007 	ldb	r3,0(r23)
   89b14:	31800814 	ori	r6,r6,32
   89b18:	d9814c15 	stw	r6,1328(sp)
   89b1c:	003c8006 	br	88d20 <___vfprintf_internal_r+0x1fc>
   89b20:	d8814c17 	ldw	r2,1328(sp)
   89b24:	3c000017 	ldw	r16,0(r7)
   89b28:	00c01e04 	movi	r3,120
   89b2c:	10800094 	ori	r2,r2,2
   89b30:	d8814c15 	stw	r2,1328(sp)
   89b34:	39c00104 	addi	r7,r7,4
   89b38:	014002b4 	movhi	r5,10
   89b3c:	29422504 	addi	r5,r5,2196
   89b40:	00800c04 	movi	r2,48
   89b44:	0023883a 	mov	r17,zero
   89b48:	01000084 	movi	r4,2
   89b4c:	d9c14015 	stw	r7,1280(sp)
   89b50:	d8c14d15 	stw	r3,1332(sp)
   89b54:	d9414415 	stw	r5,1296(sp)
   89b58:	d8800445 	stb	r2,17(sp)
   89b5c:	d8c00485 	stb	r3,18(sp)
   89b60:	d8000405 	stb	zero,16(sp)
   89b64:	003e7d06 	br	8955c <___vfprintf_internal_r+0xa38>
   89b68:	d8814c17 	ldw	r2,1328(sp)
   89b6c:	b8c00007 	ldb	r3,0(r23)
   89b70:	10801014 	ori	r2,r2,64
   89b74:	d8814c15 	stw	r2,1328(sp)
   89b78:	003c6906 	br	88d20 <___vfprintf_internal_r+0x1fc>
   89b7c:	d9414c17 	ldw	r5,1328(sp)
   89b80:	2880020c 	andi	r2,r5,8
   89b84:	1001e526 	beq	r2,zero,8a31c <___vfprintf_internal_r+0x17f8>
   89b88:	39800017 	ldw	r6,0(r7)
   89b8c:	38800204 	addi	r2,r7,8
   89b90:	d8814015 	stw	r2,1280(sp)
   89b94:	d9814215 	stw	r6,1288(sp)
   89b98:	39c00117 	ldw	r7,4(r7)
   89b9c:	d9c14315 	stw	r7,1292(sp)
   89ba0:	d9014217 	ldw	r4,1288(sp)
   89ba4:	d9414317 	ldw	r5,1292(sp)
   89ba8:	008f7c00 	call	8f7c0 <__isinfd>
   89bac:	10021d26 	beq	r2,zero,8a424 <___vfprintf_internal_r+0x1900>
   89bb0:	d9014217 	ldw	r4,1288(sp)
   89bb4:	d9414317 	ldw	r5,1292(sp)
   89bb8:	000d883a 	mov	r6,zero
   89bbc:	000f883a 	mov	r7,zero
   89bc0:	0091aa80 	call	91aa8 <__ltdf2>
   89bc4:	1002d016 	blt	r2,zero,8a708 <___vfprintf_internal_r+0x1be4>
   89bc8:	d9414d17 	ldw	r5,1332(sp)
   89bcc:	008011c4 	movi	r2,71
   89bd0:	11421016 	blt	r2,r5,8a414 <___vfprintf_internal_r+0x18f0>
   89bd4:	018002b4 	movhi	r6,10
   89bd8:	31822a04 	addi	r6,r6,2216
   89bdc:	d9814115 	stw	r6,1284(sp)
   89be0:	d9014c17 	ldw	r4,1328(sp)
   89be4:	00c000c4 	movi	r3,3
   89be8:	00bfdfc4 	movi	r2,-129
   89bec:	2088703a 	and	r4,r4,r2
   89bf0:	180f883a 	mov	r7,r3
   89bf4:	d8c14515 	stw	r3,1300(sp)
   89bf8:	d9014c15 	stw	r4,1328(sp)
   89bfc:	d8014615 	stw	zero,1304(sp)
   89c00:	003e6a06 	br	895ac <___vfprintf_internal_r+0xa88>
   89c04:	38800017 	ldw	r2,0(r7)
   89c08:	00c00044 	movi	r3,1
   89c0c:	39c00104 	addi	r7,r7,4
   89c10:	d9c14015 	stw	r7,1280(sp)
   89c14:	d9000f04 	addi	r4,sp,60
   89c18:	180f883a 	mov	r7,r3
   89c1c:	d8c14515 	stw	r3,1300(sp)
   89c20:	d9014115 	stw	r4,1284(sp)
   89c24:	d8800f05 	stb	r2,60(sp)
   89c28:	d8000405 	stb	zero,16(sp)
   89c2c:	003cac06 	br	88ee0 <___vfprintf_internal_r+0x3bc>
   89c30:	014002b4 	movhi	r5,10
   89c34:	29423004 	addi	r5,r5,2240
   89c38:	d9414415 	stw	r5,1296(sp)
   89c3c:	d9814c17 	ldw	r6,1328(sp)
   89c40:	3080080c 	andi	r2,r6,32
   89c44:	1000ff26 	beq	r2,zero,8a044 <___vfprintf_internal_r+0x1520>
   89c48:	3c000017 	ldw	r16,0(r7)
   89c4c:	3c400117 	ldw	r17,4(r7)
   89c50:	38800204 	addi	r2,r7,8
   89c54:	d8814015 	stw	r2,1280(sp)
   89c58:	d9414c17 	ldw	r5,1328(sp)
   89c5c:	2880004c 	andi	r2,r5,1
   89c60:	1005003a 	cmpeq	r2,r2,zero
   89c64:	1000b91e 	bne	r2,zero,89f4c <___vfprintf_internal_r+0x1428>
   89c68:	8444b03a 	or	r2,r16,r17
   89c6c:	1000b726 	beq	r2,zero,89f4c <___vfprintf_internal_r+0x1428>
   89c70:	d9814d17 	ldw	r6,1332(sp)
   89c74:	29400094 	ori	r5,r5,2
   89c78:	00800c04 	movi	r2,48
   89c7c:	01000084 	movi	r4,2
   89c80:	d9414c15 	stw	r5,1328(sp)
   89c84:	d8800445 	stb	r2,17(sp)
   89c88:	d9800485 	stb	r6,18(sp)
   89c8c:	d8000405 	stb	zero,16(sp)
   89c90:	003e3206 	br	8955c <___vfprintf_internal_r+0xa38>
   89c94:	018002b4 	movhi	r6,10
   89c98:	31822504 	addi	r6,r6,2196
   89c9c:	d9814415 	stw	r6,1296(sp)
   89ca0:	003fe606 	br	89c3c <___vfprintf_internal_r+0x1118>
   89ca4:	00800ac4 	movi	r2,43
   89ca8:	d8800405 	stb	r2,16(sp)
   89cac:	b8c00007 	ldb	r3,0(r23)
   89cb0:	003c1b06 	br	88d20 <___vfprintf_internal_r+0x1fc>
   89cb4:	d8814c17 	ldw	r2,1328(sp)
   89cb8:	b8c00007 	ldb	r3,0(r23)
   89cbc:	10800054 	ori	r2,r2,1
   89cc0:	d8814c15 	stw	r2,1328(sp)
   89cc4:	003c1606 	br	88d20 <___vfprintf_internal_r+0x1fc>
   89cc8:	d8800407 	ldb	r2,16(sp)
   89ccc:	10004c1e 	bne	r2,zero,89e00 <___vfprintf_internal_r+0x12dc>
   89cd0:	00800804 	movi	r2,32
   89cd4:	d8800405 	stb	r2,16(sp)
   89cd8:	b8c00007 	ldb	r3,0(r23)
   89cdc:	003c1006 	br	88d20 <___vfprintf_internal_r+0x1fc>
   89ce0:	d9814c17 	ldw	r6,1328(sp)
   89ce4:	b8c00007 	ldb	r3,0(r23)
   89ce8:	31800214 	ori	r6,r6,8
   89cec:	d9814c15 	stw	r6,1328(sp)
   89cf0:	003c0b06 	br	88d20 <___vfprintf_internal_r+0x1fc>
   89cf4:	0009883a 	mov	r4,zero
   89cf8:	04000244 	movi	r16,9
   89cfc:	01400284 	movi	r5,10
   89d00:	d9c15115 	stw	r7,1348(sp)
   89d04:	00886b00 	call	886b0 <__mulsi3>
   89d08:	b9000007 	ldb	r4,0(r23)
   89d0c:	d8c14d17 	ldw	r3,1332(sp)
   89d10:	bdc00044 	addi	r23,r23,1
   89d14:	d9014d15 	stw	r4,1332(sp)
   89d18:	d9414d17 	ldw	r5,1332(sp)
   89d1c:	1885883a 	add	r2,r3,r2
   89d20:	113ff404 	addi	r4,r2,-48
   89d24:	28bff404 	addi	r2,r5,-48
   89d28:	d9c15117 	ldw	r7,1348(sp)
   89d2c:	80bff32e 	bgeu	r16,r2,89cfc <___vfprintf_internal_r+0x11d8>
   89d30:	d9014a15 	stw	r4,1320(sp)
   89d34:	003bfc06 	br	88d28 <___vfprintf_internal_r+0x204>
   89d38:	d8814c17 	ldw	r2,1328(sp)
   89d3c:	b8c00007 	ldb	r3,0(r23)
   89d40:	10802014 	ori	r2,r2,128
   89d44:	d8814c15 	stw	r2,1328(sp)
   89d48:	003bf506 	br	88d20 <___vfprintf_internal_r+0x1fc>
   89d4c:	b8c00007 	ldb	r3,0(r23)
   89d50:	00800a84 	movi	r2,42
   89d54:	bdc00044 	addi	r23,r23,1
   89d58:	18831826 	beq	r3,r2,8a9bc <___vfprintf_internal_r+0x1e98>
   89d5c:	d8c14d15 	stw	r3,1332(sp)
   89d60:	18bff404 	addi	r2,r3,-48
   89d64:	00c00244 	movi	r3,9
   89d68:	18827b36 	bltu	r3,r2,8a758 <___vfprintf_internal_r+0x1c34>
   89d6c:	1821883a 	mov	r16,r3
   89d70:	0009883a 	mov	r4,zero
   89d74:	01400284 	movi	r5,10
   89d78:	d9c15115 	stw	r7,1348(sp)
   89d7c:	00886b00 	call	886b0 <__mulsi3>
   89d80:	d9414d17 	ldw	r5,1332(sp)
   89d84:	b9800007 	ldb	r6,0(r23)
   89d88:	d9c15117 	ldw	r7,1348(sp)
   89d8c:	1145883a 	add	r2,r2,r5
   89d90:	113ff404 	addi	r4,r2,-48
   89d94:	30bff404 	addi	r2,r6,-48
   89d98:	d9814d15 	stw	r6,1332(sp)
   89d9c:	bdc00044 	addi	r23,r23,1
   89da0:	80bff42e 	bgeu	r16,r2,89d74 <___vfprintf_internal_r+0x1250>
   89da4:	2027883a 	mov	r19,r4
   89da8:	203bdf0e 	bge	r4,zero,88d28 <___vfprintf_internal_r+0x204>
   89dac:	04ffffc4 	movi	r19,-1
   89db0:	003bdd06 	br	88d28 <___vfprintf_internal_r+0x204>
   89db4:	d8000405 	stb	zero,16(sp)
   89db8:	39800017 	ldw	r6,0(r7)
   89dbc:	39c00104 	addi	r7,r7,4
   89dc0:	d9c14015 	stw	r7,1280(sp)
   89dc4:	d9814115 	stw	r6,1284(sp)
   89dc8:	3001c926 	beq	r6,zero,8a4f0 <___vfprintf_internal_r+0x19cc>
   89dcc:	98000e16 	blt	r19,zero,89e08 <___vfprintf_internal_r+0x12e4>
   89dd0:	d9014117 	ldw	r4,1284(sp)
   89dd4:	000b883a 	mov	r5,zero
   89dd8:	980d883a 	mov	r6,r19
   89ddc:	008dc580 	call	8dc58 <memchr>
   89de0:	10025926 	beq	r2,zero,8a748 <___vfprintf_internal_r+0x1c24>
   89de4:	d8c14117 	ldw	r3,1284(sp)
   89de8:	10cfc83a 	sub	r7,r2,r3
   89dec:	99c19e16 	blt	r19,r7,8a468 <___vfprintf_internal_r+0x1944>
   89df0:	d9c14515 	stw	r7,1300(sp)
   89df4:	38000916 	blt	r7,zero,89e1c <___vfprintf_internal_r+0x12f8>
   89df8:	d8014615 	stw	zero,1304(sp)
   89dfc:	003deb06 	br	895ac <___vfprintf_internal_r+0xa88>
   89e00:	b8c00007 	ldb	r3,0(r23)
   89e04:	003bc606 	br	88d20 <___vfprintf_internal_r+0x1fc>
   89e08:	d9014117 	ldw	r4,1284(sp)
   89e0c:	0088a580 	call	88a58 <strlen>
   89e10:	d8814515 	stw	r2,1300(sp)
   89e14:	100f883a 	mov	r7,r2
   89e18:	103ff70e 	bge	r2,zero,89df8 <___vfprintf_internal_r+0x12d4>
   89e1c:	d8014515 	stw	zero,1300(sp)
   89e20:	d8014615 	stw	zero,1304(sp)
   89e24:	003de106 	br	895ac <___vfprintf_internal_r+0xa88>
   89e28:	20c03fcc 	andi	r3,r4,255
   89e2c:	00800044 	movi	r2,1
   89e30:	18802d26 	beq	r3,r2,89ee8 <___vfprintf_internal_r+0x13c4>
   89e34:	18800e36 	bltu	r3,r2,89e70 <___vfprintf_internal_r+0x134c>
   89e38:	00800084 	movi	r2,2
   89e3c:	1880fa26 	beq	r3,r2,8a228 <___vfprintf_internal_r+0x1704>
   89e40:	010002b4 	movhi	r4,10
   89e44:	21023504 	addi	r4,r4,2260
   89e48:	0088a580 	call	88a58 <strlen>
   89e4c:	100f883a 	mov	r7,r2
   89e50:	dcc14515 	stw	r19,1300(sp)
   89e54:	9880010e 	bge	r19,r2,89e5c <___vfprintf_internal_r+0x1338>
   89e58:	d8814515 	stw	r2,1300(sp)
   89e5c:	008002b4 	movhi	r2,10
   89e60:	10823504 	addi	r2,r2,2260
   89e64:	dcc14615 	stw	r19,1304(sp)
   89e68:	d8814115 	stw	r2,1284(sp)
   89e6c:	003dcf06 	br	895ac <___vfprintf_internal_r+0xa88>
   89e70:	d9401904 	addi	r5,sp,100
   89e74:	dd000f04 	addi	r20,sp,60
   89e78:	d9414115 	stw	r5,1284(sp)
   89e7c:	880a977a 	slli	r5,r17,29
   89e80:	d9814117 	ldw	r6,1284(sp)
   89e84:	8004d0fa 	srli	r2,r16,3
   89e88:	8806d0fa 	srli	r3,r17,3
   89e8c:	810001cc 	andi	r4,r16,7
   89e90:	2884b03a 	or	r2,r5,r2
   89e94:	31bfffc4 	addi	r6,r6,-1
   89e98:	21000c04 	addi	r4,r4,48
   89e9c:	d9814115 	stw	r6,1284(sp)
   89ea0:	10cab03a 	or	r5,r2,r3
   89ea4:	31000005 	stb	r4,0(r6)
   89ea8:	1021883a 	mov	r16,r2
   89eac:	1823883a 	mov	r17,r3
   89eb0:	283ff21e 	bne	r5,zero,89e7c <___vfprintf_internal_r+0x1358>
   89eb4:	d8c14c17 	ldw	r3,1328(sp)
   89eb8:	1880004c 	andi	r2,r3,1
   89ebc:	1005003a 	cmpeq	r2,r2,zero
   89ec0:	103db31e 	bne	r2,zero,89590 <___vfprintf_internal_r+0xa6c>
   89ec4:	20803fcc 	andi	r2,r4,255
   89ec8:	1080201c 	xori	r2,r2,128
   89ecc:	10bfe004 	addi	r2,r2,-128
   89ed0:	00c00c04 	movi	r3,48
   89ed4:	10fdae26 	beq	r2,r3,89590 <___vfprintf_internal_r+0xa6c>
   89ed8:	31bfffc4 	addi	r6,r6,-1
   89edc:	d9814115 	stw	r6,1284(sp)
   89ee0:	30c00005 	stb	r3,0(r6)
   89ee4:	003daa06 	br	89590 <___vfprintf_internal_r+0xa6c>
   89ee8:	88800068 	cmpgeui	r2,r17,1
   89eec:	10002c1e 	bne	r2,zero,89fa0 <___vfprintf_internal_r+0x147c>
   89ef0:	8800021e 	bne	r17,zero,89efc <___vfprintf_internal_r+0x13d8>
   89ef4:	00800244 	movi	r2,9
   89ef8:	14002936 	bltu	r2,r16,89fa0 <___vfprintf_internal_r+0x147c>
   89efc:	d90018c4 	addi	r4,sp,99
   89f00:	dd000f04 	addi	r20,sp,60
   89f04:	d9014115 	stw	r4,1284(sp)
   89f08:	d9014117 	ldw	r4,1284(sp)
   89f0c:	80800c04 	addi	r2,r16,48
   89f10:	20800005 	stb	r2,0(r4)
   89f14:	003d9e06 	br	89590 <___vfprintf_internal_r+0xa6c>
   89f18:	dc400d17 	ldw	r17,52(sp)
   89f1c:	070002b4 	movhi	fp,10
   89f20:	e7023c84 	addi	fp,fp,2290
   89f24:	9425883a 	add	r18,r18,r16
   89f28:	8c400044 	addi	r17,r17,1
   89f2c:	008001c4 	movi	r2,7
   89f30:	1f000015 	stw	fp,0(r3)
   89f34:	1c000115 	stw	r16,4(r3)
   89f38:	dc800e15 	stw	r18,56(sp)
   89f3c:	dc400d15 	stw	r17,52(sp)
   89f40:	147ddc16 	blt	r2,r17,896b4 <___vfprintf_internal_r+0xb90>
   89f44:	18c00204 	addi	r3,r3,8
   89f48:	003c7406 	br	8911c <___vfprintf_internal_r+0x5f8>
   89f4c:	01000084 	movi	r4,2
   89f50:	d8000405 	stb	zero,16(sp)
   89f54:	003d8106 	br	8955c <___vfprintf_internal_r+0xa38>
   89f58:	d9814c17 	ldw	r6,1328(sp)
   89f5c:	30c4703a 	and	r2,r6,r3
   89f60:	1005003a 	cmpeq	r2,r2,zero
   89f64:	103cb326 	beq	r2,zero,89234 <___vfprintf_internal_r+0x710>
   89f68:	d9014117 	ldw	r4,1284(sp)
   89f6c:	94800044 	addi	r18,r18,1
   89f70:	8c400044 	addi	r17,r17,1
   89f74:	008001c4 	movi	r2,7
   89f78:	a9000015 	stw	r4,0(r21)
   89f7c:	a8c00115 	stw	r3,4(r21)
   89f80:	dc800e15 	stw	r18,56(sp)
   89f84:	dc400d15 	stw	r17,52(sp)
   89f88:	147e6016 	blt	r2,r17,8990c <___vfprintf_internal_r+0xde8>
   89f8c:	acc00204 	addi	r19,r21,8
   89f90:	003cd106 	br	892d8 <___vfprintf_internal_r+0x7b4>
   89f94:	070002b4 	movhi	fp,10
   89f98:	e7023c84 	addi	fp,fp,2290
   89f9c:	003c4906 	br	890c4 <___vfprintf_internal_r+0x5a0>
   89fa0:	dd000f04 	addi	r20,sp,60
   89fa4:	dc801904 	addi	r18,sp,100
   89fa8:	8009883a 	mov	r4,r16
   89fac:	880b883a 	mov	r5,r17
   89fb0:	01800284 	movi	r6,10
   89fb4:	000f883a 	mov	r7,zero
   89fb8:	00907080 	call	90708 <__umoddi3>
   89fbc:	12000c04 	addi	r8,r2,48
   89fc0:	94bfffc4 	addi	r18,r18,-1
   89fc4:	8009883a 	mov	r4,r16
   89fc8:	880b883a 	mov	r5,r17
   89fcc:	01800284 	movi	r6,10
   89fd0:	000f883a 	mov	r7,zero
   89fd4:	92000005 	stb	r8,0(r18)
   89fd8:	009009c0 	call	9009c <__udivdi3>
   89fdc:	1009883a 	mov	r4,r2
   89fe0:	1021883a 	mov	r16,r2
   89fe4:	18800068 	cmpgeui	r2,r3,1
   89fe8:	1823883a 	mov	r17,r3
   89fec:	103fee1e 	bne	r2,zero,89fa8 <___vfprintf_internal_r+0x1484>
   89ff0:	1800021e 	bne	r3,zero,89ffc <___vfprintf_internal_r+0x14d8>
   89ff4:	00800244 	movi	r2,9
   89ff8:	113feb36 	bltu	r2,r4,89fa8 <___vfprintf_internal_r+0x1484>
   89ffc:	94bfffc4 	addi	r18,r18,-1
   8a000:	dc814115 	stw	r18,1284(sp)
   8a004:	003fc006 	br	89f08 <___vfprintf_internal_r+0x13e4>
   8a008:	d9014c17 	ldw	r4,1328(sp)
   8a00c:	2080004c 	andi	r2,r4,1
   8a010:	10009a1e 	bne	r2,zero,8a27c <___vfprintf_internal_r+0x1758>
   8a014:	d9401904 	addi	r5,sp,100
   8a018:	dd000f04 	addi	r20,sp,60
   8a01c:	d9414115 	stw	r5,1284(sp)
   8a020:	003d5b06 	br	89590 <___vfprintf_internal_r+0xa6c>
   8a024:	d9014f17 	ldw	r4,1340(sp)
   8a028:	b00b883a 	mov	r5,r22
   8a02c:	d9800c04 	addi	r6,sp,48
   8a030:	0088acc0 	call	88acc <__sprint_r>
   8a034:	103c731e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   8a038:	dc800e17 	ldw	r18,56(sp)
   8a03c:	d8c01904 	addi	r3,sp,100
   8a040:	003cf906 	br	89428 <___vfprintf_internal_r+0x904>
   8a044:	d8c14c17 	ldw	r3,1328(sp)
   8a048:	1880040c 	andi	r2,r3,16
   8a04c:	1000711e 	bne	r2,zero,8a214 <___vfprintf_internal_r+0x16f0>
   8a050:	d9014c17 	ldw	r4,1328(sp)
   8a054:	2080100c 	andi	r2,r4,64
   8a058:	10006e26 	beq	r2,zero,8a214 <___vfprintf_internal_r+0x16f0>
   8a05c:	3c00000b 	ldhu	r16,0(r7)
   8a060:	0023883a 	mov	r17,zero
   8a064:	39c00104 	addi	r7,r7,4
   8a068:	d9c14015 	stw	r7,1280(sp)
   8a06c:	003efa06 	br	89c58 <___vfprintf_internal_r+0x1134>
   8a070:	dc400d17 	ldw	r17,52(sp)
   8a074:	070002b4 	movhi	fp,10
   8a078:	e7023c84 	addi	fp,fp,2290
   8a07c:	9425883a 	add	r18,r18,r16
   8a080:	8c400044 	addi	r17,r17,1
   8a084:	008001c4 	movi	r2,7
   8a088:	1f000015 	stw	fp,0(r3)
   8a08c:	1c000115 	stw	r16,4(r3)
   8a090:	dc800e15 	stw	r18,56(sp)
   8a094:	dc400d15 	stw	r17,52(sp)
   8a098:	147d7016 	blt	r2,r17,8965c <___vfprintf_internal_r+0xb38>
   8a09c:	18c00204 	addi	r3,r3,8
   8a0a0:	003d7506 	br	89678 <___vfprintf_internal_r+0xb54>
   8a0a4:	dc800e17 	ldw	r18,56(sp)
   8a0a8:	dc400d17 	ldw	r17,52(sp)
   8a0ac:	070002b4 	movhi	fp,10
   8a0b0:	e7024084 	addi	fp,fp,2306
   8a0b4:	003bba06 	br	88fa0 <___vfprintf_internal_r+0x47c>
   8a0b8:	d9014f17 	ldw	r4,1340(sp)
   8a0bc:	b00b883a 	mov	r5,r22
   8a0c0:	d9800c04 	addi	r6,sp,48
   8a0c4:	0088acc0 	call	88acc <__sprint_r>
   8a0c8:	103c4e1e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   8a0cc:	dc800e17 	ldw	r18,56(sp)
   8a0d0:	d8c01904 	addi	r3,sp,100
   8a0d4:	003ce306 	br	89464 <___vfprintf_internal_r+0x940>
   8a0d8:	3c000017 	ldw	r16,0(r7)
   8a0dc:	0009883a 	mov	r4,zero
   8a0e0:	39c00104 	addi	r7,r7,4
   8a0e4:	0023883a 	mov	r17,zero
   8a0e8:	d9c14015 	stw	r7,1280(sp)
   8a0ec:	d8000405 	stb	zero,16(sp)
   8a0f0:	003d1a06 	br	8955c <___vfprintf_internal_r+0xa38>
   8a0f4:	38800017 	ldw	r2,0(r7)
   8a0f8:	39c00104 	addi	r7,r7,4
   8a0fc:	d9c14015 	stw	r7,1280(sp)
   8a100:	1023d7fa 	srai	r17,r2,31
   8a104:	1021883a 	mov	r16,r2
   8a108:	003d1206 	br	89554 <___vfprintf_internal_r+0xa30>
   8a10c:	3c000017 	ldw	r16,0(r7)
   8a110:	01000044 	movi	r4,1
   8a114:	39c00104 	addi	r7,r7,4
   8a118:	0023883a 	mov	r17,zero
   8a11c:	d9c14015 	stw	r7,1280(sp)
   8a120:	d8000405 	stb	zero,16(sp)
   8a124:	003d0d06 	br	8955c <___vfprintf_internal_r+0xa38>
   8a128:	008002b4 	movhi	r2,10
   8a12c:	10823c04 	addi	r2,r2,2288
   8a130:	94800044 	addi	r18,r18,1
   8a134:	8c400044 	addi	r17,r17,1
   8a138:	a8800015 	stw	r2,0(r21)
   8a13c:	00c00044 	movi	r3,1
   8a140:	008001c4 	movi	r2,7
   8a144:	a8c00115 	stw	r3,4(r21)
   8a148:	dc800e15 	stw	r18,56(sp)
   8a14c:	dc400d15 	stw	r17,52(sp)
   8a150:	1440ca16 	blt	r2,r17,8a47c <___vfprintf_internal_r+0x1958>
   8a154:	a8c00204 	addi	r3,r21,8
   8a158:	2000061e 	bne	r4,zero,8a174 <___vfprintf_internal_r+0x1650>
   8a15c:	d9414717 	ldw	r5,1308(sp)
   8a160:	2800041e 	bne	r5,zero,8a174 <___vfprintf_internal_r+0x1650>
   8a164:	d9814c17 	ldw	r6,1328(sp)
   8a168:	3080004c 	andi	r2,r6,1
   8a16c:	1005003a 	cmpeq	r2,r2,zero
   8a170:	103bea1e 	bne	r2,zero,8911c <___vfprintf_internal_r+0x5f8>
   8a174:	00800044 	movi	r2,1
   8a178:	dc400d17 	ldw	r17,52(sp)
   8a17c:	18800115 	stw	r2,4(r3)
   8a180:	d8814917 	ldw	r2,1316(sp)
   8a184:	94800044 	addi	r18,r18,1
   8a188:	8c400044 	addi	r17,r17,1
   8a18c:	18800015 	stw	r2,0(r3)
   8a190:	008001c4 	movi	r2,7
   8a194:	dc800e15 	stw	r18,56(sp)
   8a198:	dc400d15 	stw	r17,52(sp)
   8a19c:	1440ca16 	blt	r2,r17,8a4c8 <___vfprintf_internal_r+0x19a4>
   8a1a0:	18c00204 	addi	r3,r3,8
   8a1a4:	0121c83a 	sub	r16,zero,r4
   8a1a8:	0400500e 	bge	zero,r16,8a2ec <___vfprintf_internal_r+0x17c8>
   8a1ac:	00800404 	movi	r2,16
   8a1b0:	1400800e 	bge	r2,r16,8a3b4 <___vfprintf_internal_r+0x1890>
   8a1b4:	1027883a 	mov	r19,r2
   8a1b8:	070002b4 	movhi	fp,10
   8a1bc:	e7023c84 	addi	fp,fp,2290
   8a1c0:	050001c4 	movi	r20,7
   8a1c4:	00000306 	br	8a1d4 <___vfprintf_internal_r+0x16b0>
   8a1c8:	18c00204 	addi	r3,r3,8
   8a1cc:	843ffc04 	addi	r16,r16,-16
   8a1d0:	9c007a0e 	bge	r19,r16,8a3bc <___vfprintf_internal_r+0x1898>
   8a1d4:	94800404 	addi	r18,r18,16
   8a1d8:	8c400044 	addi	r17,r17,1
   8a1dc:	1f000015 	stw	fp,0(r3)
   8a1e0:	1cc00115 	stw	r19,4(r3)
   8a1e4:	dc800e15 	stw	r18,56(sp)
   8a1e8:	dc400d15 	stw	r17,52(sp)
   8a1ec:	a47ff60e 	bge	r20,r17,8a1c8 <___vfprintf_internal_r+0x16a4>
   8a1f0:	d9014f17 	ldw	r4,1340(sp)
   8a1f4:	b00b883a 	mov	r5,r22
   8a1f8:	d9800c04 	addi	r6,sp,48
   8a1fc:	0088acc0 	call	88acc <__sprint_r>
   8a200:	103c001e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   8a204:	dc800e17 	ldw	r18,56(sp)
   8a208:	dc400d17 	ldw	r17,52(sp)
   8a20c:	d8c01904 	addi	r3,sp,100
   8a210:	003fee06 	br	8a1cc <___vfprintf_internal_r+0x16a8>
   8a214:	3c000017 	ldw	r16,0(r7)
   8a218:	0023883a 	mov	r17,zero
   8a21c:	39c00104 	addi	r7,r7,4
   8a220:	d9c14015 	stw	r7,1280(sp)
   8a224:	003e8c06 	br	89c58 <___vfprintf_internal_r+0x1134>
   8a228:	d9401904 	addi	r5,sp,100
   8a22c:	dd000f04 	addi	r20,sp,60
   8a230:	d9414115 	stw	r5,1284(sp)
   8a234:	d9814417 	ldw	r6,1296(sp)
   8a238:	880a973a 	slli	r5,r17,28
   8a23c:	8004d13a 	srli	r2,r16,4
   8a240:	810003cc 	andi	r4,r16,15
   8a244:	3109883a 	add	r4,r6,r4
   8a248:	2884b03a 	or	r2,r5,r2
   8a24c:	21400003 	ldbu	r5,0(r4)
   8a250:	d9014117 	ldw	r4,1284(sp)
   8a254:	8806d13a 	srli	r3,r17,4
   8a258:	1021883a 	mov	r16,r2
   8a25c:	213fffc4 	addi	r4,r4,-1
   8a260:	d9014115 	stw	r4,1284(sp)
   8a264:	d9814117 	ldw	r6,1284(sp)
   8a268:	10c8b03a 	or	r4,r2,r3
   8a26c:	1823883a 	mov	r17,r3
   8a270:	31400005 	stb	r5,0(r6)
   8a274:	203fef1e 	bne	r4,zero,8a234 <___vfprintf_internal_r+0x1710>
   8a278:	003cc506 	br	89590 <___vfprintf_internal_r+0xa6c>
   8a27c:	00800c04 	movi	r2,48
   8a280:	d98018c4 	addi	r6,sp,99
   8a284:	dd000f04 	addi	r20,sp,60
   8a288:	d88018c5 	stb	r2,99(sp)
   8a28c:	d9814115 	stw	r6,1284(sp)
   8a290:	003cbf06 	br	89590 <___vfprintf_internal_r+0xa6c>
   8a294:	dc400d17 	ldw	r17,52(sp)
   8a298:	070002b4 	movhi	fp,10
   8a29c:	e7024084 	addi	fp,fp,2306
   8a2a0:	003bc106 	br	891a8 <___vfprintf_internal_r+0x684>
   8a2a4:	d9414c17 	ldw	r5,1328(sp)
   8a2a8:	2880040c 	andi	r2,r5,16
   8a2ac:	10007c26 	beq	r2,zero,8a4a0 <___vfprintf_internal_r+0x197c>
   8a2b0:	38800017 	ldw	r2,0(r7)
   8a2b4:	39c00104 	addi	r7,r7,4
   8a2b8:	d9c14015 	stw	r7,1280(sp)
   8a2bc:	d9814b17 	ldw	r6,1324(sp)
   8a2c0:	d9c14017 	ldw	r7,1280(sp)
   8a2c4:	11800015 	stw	r6,0(r2)
   8a2c8:	003a7206 	br	88c94 <___vfprintf_internal_r+0x170>
   8a2cc:	d9014f17 	ldw	r4,1340(sp)
   8a2d0:	b00b883a 	mov	r5,r22
   8a2d4:	d9800c04 	addi	r6,sp,48
   8a2d8:	0088acc0 	call	88acc <__sprint_r>
   8a2dc:	103bc91e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   8a2e0:	dc800e17 	ldw	r18,56(sp)
   8a2e4:	dc400d17 	ldw	r17,52(sp)
   8a2e8:	d8c01904 	addi	r3,sp,100
   8a2ec:	d9014717 	ldw	r4,1308(sp)
   8a2f0:	d9414117 	ldw	r5,1284(sp)
   8a2f4:	8c400044 	addi	r17,r17,1
   8a2f8:	9125883a 	add	r18,r18,r4
   8a2fc:	008001c4 	movi	r2,7
   8a300:	19400015 	stw	r5,0(r3)
   8a304:	19000115 	stw	r4,4(r3)
   8a308:	dc800e15 	stw	r18,56(sp)
   8a30c:	dc400d15 	stw	r17,52(sp)
   8a310:	147ce816 	blt	r2,r17,896b4 <___vfprintf_internal_r+0xb90>
   8a314:	18c00204 	addi	r3,r3,8
   8a318:	003b8006 	br	8911c <___vfprintf_internal_r+0x5f8>
   8a31c:	38c00017 	ldw	r3,0(r7)
   8a320:	39000204 	addi	r4,r7,8
   8a324:	d9014015 	stw	r4,1280(sp)
   8a328:	d8c14215 	stw	r3,1288(sp)
   8a32c:	39c00117 	ldw	r7,4(r7)
   8a330:	d9c14315 	stw	r7,1292(sp)
   8a334:	003e1a06 	br	89ba0 <___vfprintf_internal_r+0x107c>
   8a338:	0005883a 	mov	r2,zero
   8a33c:	1409c83a 	sub	r4,r2,r16
   8a340:	1105803a 	cmpltu	r2,r2,r4
   8a344:	044bc83a 	sub	r5,zero,r17
   8a348:	2885c83a 	sub	r2,r5,r2
   8a34c:	2021883a 	mov	r16,r4
   8a350:	1023883a 	mov	r17,r2
   8a354:	01000044 	movi	r4,1
   8a358:	00800b44 	movi	r2,45
   8a35c:	d8800405 	stb	r2,16(sp)
   8a360:	003c7e06 	br	8955c <___vfprintf_internal_r+0xa38>
   8a364:	d9014f17 	ldw	r4,1340(sp)
   8a368:	b00b883a 	mov	r5,r22
   8a36c:	d9800c04 	addi	r6,sp,48
   8a370:	0088acc0 	call	88acc <__sprint_r>
   8a374:	103ba31e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   8a378:	dc800e17 	ldw	r18,56(sp)
   8a37c:	dc400d17 	ldw	r17,52(sp)
   8a380:	d9000517 	ldw	r4,20(sp)
   8a384:	d9401904 	addi	r5,sp,100
   8a388:	003da106 	br	89a10 <___vfprintf_internal_r+0xeec>
   8a38c:	d9014f17 	ldw	r4,1340(sp)
   8a390:	b00b883a 	mov	r5,r22
   8a394:	d9800c04 	addi	r6,sp,48
   8a398:	0088acc0 	call	88acc <__sprint_r>
   8a39c:	103b991e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   8a3a0:	dc800e17 	ldw	r18,56(sp)
   8a3a4:	dc400d17 	ldw	r17,52(sp)
   8a3a8:	d9000517 	ldw	r4,20(sp)
   8a3ac:	d8c01904 	addi	r3,sp,100
   8a3b0:	003d8b06 	br	899e0 <___vfprintf_internal_r+0xebc>
   8a3b4:	070002b4 	movhi	fp,10
   8a3b8:	e7023c84 	addi	fp,fp,2290
   8a3bc:	9425883a 	add	r18,r18,r16
   8a3c0:	8c400044 	addi	r17,r17,1
   8a3c4:	008001c4 	movi	r2,7
   8a3c8:	1f000015 	stw	fp,0(r3)
   8a3cc:	1c000115 	stw	r16,4(r3)
   8a3d0:	dc800e15 	stw	r18,56(sp)
   8a3d4:	dc400d15 	stw	r17,52(sp)
   8a3d8:	147fbc16 	blt	r2,r17,8a2cc <___vfprintf_internal_r+0x17a8>
   8a3dc:	18c00204 	addi	r3,r3,8
   8a3e0:	003fc206 	br	8a2ec <___vfprintf_internal_r+0x17c8>
   8a3e4:	d9014f17 	ldw	r4,1340(sp)
   8a3e8:	b00b883a 	mov	r5,r22
   8a3ec:	d9800c04 	addi	r6,sp,48
   8a3f0:	0088acc0 	call	88acc <__sprint_r>
   8a3f4:	103b831e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   8a3f8:	dc800e17 	ldw	r18,56(sp)
   8a3fc:	d9000517 	ldw	r4,20(sp)
   8a400:	d8c01904 	addi	r3,sp,100
   8a404:	003cfc06 	br	897f8 <___vfprintf_internal_r+0xcd4>
   8a408:	070002b4 	movhi	fp,10
   8a40c:	e7023c84 	addi	fp,fp,2290
   8a410:	003bde06 	br	8938c <___vfprintf_internal_r+0x868>
   8a414:	008002b4 	movhi	r2,10
   8a418:	10822b04 	addi	r2,r2,2220
   8a41c:	d8814115 	stw	r2,1284(sp)
   8a420:	003def06 	br	89be0 <___vfprintf_internal_r+0x10bc>
   8a424:	d9014217 	ldw	r4,1288(sp)
   8a428:	d9414317 	ldw	r5,1292(sp)
   8a42c:	008f8000 	call	8f800 <__isnand>
   8a430:	10003926 	beq	r2,zero,8a518 <___vfprintf_internal_r+0x19f4>
   8a434:	d9414d17 	ldw	r5,1332(sp)
   8a438:	008011c4 	movi	r2,71
   8a43c:	1140ce16 	blt	r2,r5,8a778 <___vfprintf_internal_r+0x1c54>
   8a440:	018002b4 	movhi	r6,10
   8a444:	31822c04 	addi	r6,r6,2224
   8a448:	d9814115 	stw	r6,1284(sp)
   8a44c:	003de406 	br	89be0 <___vfprintf_internal_r+0x10bc>
   8a450:	d9014c17 	ldw	r4,1328(sp)
   8a454:	bdc00044 	addi	r23,r23,1
   8a458:	b8c00007 	ldb	r3,0(r23)
   8a45c:	21000814 	ori	r4,r4,32
   8a460:	d9014c15 	stw	r4,1328(sp)
   8a464:	003a2e06 	br	88d20 <___vfprintf_internal_r+0x1fc>
   8a468:	dcc14515 	stw	r19,1300(sp)
   8a46c:	98011016 	blt	r19,zero,8a8b0 <___vfprintf_internal_r+0x1d8c>
   8a470:	980f883a 	mov	r7,r19
   8a474:	d8014615 	stw	zero,1304(sp)
   8a478:	003c4c06 	br	895ac <___vfprintf_internal_r+0xa88>
   8a47c:	d9014f17 	ldw	r4,1340(sp)
   8a480:	b00b883a 	mov	r5,r22
   8a484:	d9800c04 	addi	r6,sp,48
   8a488:	0088acc0 	call	88acc <__sprint_r>
   8a48c:	103b5d1e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   8a490:	dc800e17 	ldw	r18,56(sp)
   8a494:	d9000517 	ldw	r4,20(sp)
   8a498:	d8c01904 	addi	r3,sp,100
   8a49c:	003f2e06 	br	8a158 <___vfprintf_internal_r+0x1634>
   8a4a0:	d8c14c17 	ldw	r3,1328(sp)
   8a4a4:	1880100c 	andi	r2,r3,64
   8a4a8:	1000a026 	beq	r2,zero,8a72c <___vfprintf_internal_r+0x1c08>
   8a4ac:	38800017 	ldw	r2,0(r7)
   8a4b0:	39c00104 	addi	r7,r7,4
   8a4b4:	d9c14015 	stw	r7,1280(sp)
   8a4b8:	d9014b17 	ldw	r4,1324(sp)
   8a4bc:	d9c14017 	ldw	r7,1280(sp)
   8a4c0:	1100000d 	sth	r4,0(r2)
   8a4c4:	0039f306 	br	88c94 <___vfprintf_internal_r+0x170>
   8a4c8:	d9014f17 	ldw	r4,1340(sp)
   8a4cc:	b00b883a 	mov	r5,r22
   8a4d0:	d9800c04 	addi	r6,sp,48
   8a4d4:	0088acc0 	call	88acc <__sprint_r>
   8a4d8:	103b4a1e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   8a4dc:	dc800e17 	ldw	r18,56(sp)
   8a4e0:	dc400d17 	ldw	r17,52(sp)
   8a4e4:	d9000517 	ldw	r4,20(sp)
   8a4e8:	d8c01904 	addi	r3,sp,100
   8a4ec:	003f2d06 	br	8a1a4 <___vfprintf_internal_r+0x1680>
   8a4f0:	00800184 	movi	r2,6
   8a4f4:	14c09a36 	bltu	r2,r19,8a760 <___vfprintf_internal_r+0x1c3c>
   8a4f8:	dcc14515 	stw	r19,1300(sp)
   8a4fc:	9800010e 	bge	r19,zero,8a504 <___vfprintf_internal_r+0x19e0>
   8a500:	d8014515 	stw	zero,1300(sp)
   8a504:	008002b4 	movhi	r2,10
   8a508:	10822e04 	addi	r2,r2,2232
   8a50c:	980f883a 	mov	r7,r19
   8a510:	d8814115 	stw	r2,1284(sp)
   8a514:	003a7206 	br	88ee0 <___vfprintf_internal_r+0x3bc>
   8a518:	00bfffc4 	movi	r2,-1
   8a51c:	9880e226 	beq	r19,r2,8a8a8 <___vfprintf_internal_r+0x1d84>
   8a520:	d9414d17 	ldw	r5,1332(sp)
   8a524:	008019c4 	movi	r2,103
   8a528:	2880dc26 	beq	r5,r2,8a89c <___vfprintf_internal_r+0x1d78>
   8a52c:	008011c4 	movi	r2,71
   8a530:	2880da26 	beq	r5,r2,8a89c <___vfprintf_internal_r+0x1d78>
   8a534:	d9414c17 	ldw	r5,1328(sp)
   8a538:	d9014317 	ldw	r4,1292(sp)
   8a53c:	d9814217 	ldw	r6,1288(sp)
   8a540:	29404014 	ori	r5,r5,256
   8a544:	d9414c15 	stw	r5,1328(sp)
   8a548:	2000cc16 	blt	r4,zero,8a87c <___vfprintf_internal_r+0x1d58>
   8a54c:	3021883a 	mov	r16,r6
   8a550:	2023883a 	mov	r17,r4
   8a554:	0039883a 	mov	fp,zero
   8a558:	d9414d17 	ldw	r5,1332(sp)
   8a55c:	00801984 	movi	r2,102
   8a560:	2880b726 	beq	r5,r2,8a840 <___vfprintf_internal_r+0x1d1c>
   8a564:	00801184 	movi	r2,70
   8a568:	2880b526 	beq	r5,r2,8a840 <___vfprintf_internal_r+0x1d1c>
   8a56c:	00801944 	movi	r2,101
   8a570:	2880c826 	beq	r5,r2,8a894 <___vfprintf_internal_r+0x1d70>
   8a574:	00801144 	movi	r2,69
   8a578:	2880c626 	beq	r5,r2,8a894 <___vfprintf_internal_r+0x1d70>
   8a57c:	9829883a 	mov	r20,r19
   8a580:	d9014f17 	ldw	r4,1340(sp)
   8a584:	d8800504 	addi	r2,sp,20
   8a588:	880d883a 	mov	r6,r17
   8a58c:	d8800115 	stw	r2,4(sp)
   8a590:	d8c00604 	addi	r3,sp,24
   8a594:	d8800704 	addi	r2,sp,28
   8a598:	800b883a 	mov	r5,r16
   8a59c:	01c00084 	movi	r7,2
   8a5a0:	d8c00215 	stw	r3,8(sp)
   8a5a4:	d8800315 	stw	r2,12(sp)
   8a5a8:	dd000015 	stw	r20,0(sp)
   8a5ac:	008ad8c0 	call	8ad8c <_dtoa_r>
   8a5b0:	d9814d17 	ldw	r6,1332(sp)
   8a5b4:	d8814115 	stw	r2,1284(sp)
   8a5b8:	008019c4 	movi	r2,103
   8a5bc:	30809526 	beq	r6,r2,8a814 <___vfprintf_internal_r+0x1cf0>
   8a5c0:	d8c14d17 	ldw	r3,1332(sp)
   8a5c4:	008011c4 	movi	r2,71
   8a5c8:	18809226 	beq	r3,r2,8a814 <___vfprintf_internal_r+0x1cf0>
   8a5cc:	d9414117 	ldw	r5,1284(sp)
   8a5d0:	d9814d17 	ldw	r6,1332(sp)
   8a5d4:	00801984 	movi	r2,102
   8a5d8:	2d25883a 	add	r18,r5,r20
   8a5dc:	30808626 	beq	r6,r2,8a7f8 <___vfprintf_internal_r+0x1cd4>
   8a5e0:	00801184 	movi	r2,70
   8a5e4:	30808426 	beq	r6,r2,8a7f8 <___vfprintf_internal_r+0x1cd4>
   8a5e8:	000d883a 	mov	r6,zero
   8a5ec:	000f883a 	mov	r7,zero
   8a5f0:	880b883a 	mov	r5,r17
   8a5f4:	8009883a 	mov	r4,r16
   8a5f8:	00918880 	call	91888 <__eqdf2>
   8a5fc:	1000751e 	bne	r2,zero,8a7d4 <___vfprintf_internal_r+0x1cb0>
   8a600:	9005883a 	mov	r2,r18
   8a604:	dc800715 	stw	r18,28(sp)
   8a608:	d9014117 	ldw	r4,1284(sp)
   8a60c:	d9414d17 	ldw	r5,1332(sp)
   8a610:	00c019c4 	movi	r3,103
   8a614:	1125c83a 	sub	r18,r2,r4
   8a618:	28c06826 	beq	r5,r3,8a7bc <___vfprintf_internal_r+0x1c98>
   8a61c:	008011c4 	movi	r2,71
   8a620:	28806626 	beq	r5,r2,8a7bc <___vfprintf_internal_r+0x1c98>
   8a624:	d9000517 	ldw	r4,20(sp)
   8a628:	d8c14d17 	ldw	r3,1332(sp)
   8a62c:	00801944 	movi	r2,101
   8a630:	10c05516 	blt	r2,r3,8a788 <___vfprintf_internal_r+0x1c64>
   8a634:	213fffc4 	addi	r4,r4,-1
   8a638:	d9000515 	stw	r4,20(sp)
   8a63c:	d8c00805 	stb	r3,32(sp)
   8a640:	2021883a 	mov	r16,r4
   8a644:	2000c116 	blt	r4,zero,8a94c <___vfprintf_internal_r+0x1e28>
   8a648:	00800ac4 	movi	r2,43
   8a64c:	d8800845 	stb	r2,33(sp)
   8a650:	00800244 	movi	r2,9
   8a654:	1400af0e 	bge	r2,r16,8a914 <___vfprintf_internal_r+0x1df0>
   8a658:	1027883a 	mov	r19,r2
   8a65c:	dc400b84 	addi	r17,sp,46
   8a660:	8009883a 	mov	r4,r16
   8a664:	01400284 	movi	r5,10
   8a668:	00886400 	call	88640 <__modsi3>
   8a66c:	10800c04 	addi	r2,r2,48
   8a670:	8c7fffc4 	addi	r17,r17,-1
   8a674:	8009883a 	mov	r4,r16
   8a678:	01400284 	movi	r5,10
   8a67c:	88800005 	stb	r2,0(r17)
   8a680:	00885e00 	call	885e0 <__divsi3>
   8a684:	1021883a 	mov	r16,r2
   8a688:	98bff516 	blt	r19,r2,8a660 <___vfprintf_internal_r+0x1b3c>
   8a68c:	10c00c04 	addi	r3,r2,48
   8a690:	d88009c4 	addi	r2,sp,39
   8a694:	108001c4 	addi	r2,r2,7
   8a698:	897fffc4 	addi	r5,r17,-1
   8a69c:	88ffffc5 	stb	r3,-1(r17)
   8a6a0:	2880a72e 	bgeu	r5,r2,8a940 <___vfprintf_internal_r+0x1e1c>
   8a6a4:	1009883a 	mov	r4,r2
   8a6a8:	d9800804 	addi	r6,sp,32
   8a6ac:	d8c00884 	addi	r3,sp,34
   8a6b0:	28800003 	ldbu	r2,0(r5)
   8a6b4:	29400044 	addi	r5,r5,1
   8a6b8:	18800005 	stb	r2,0(r3)
   8a6bc:	18c00044 	addi	r3,r3,1
   8a6c0:	293ffb36 	bltu	r5,r4,8a6b0 <___vfprintf_internal_r+0x1b8c>
   8a6c4:	1987c83a 	sub	r3,r3,r6
   8a6c8:	00800044 	movi	r2,1
   8a6cc:	d8c14815 	stw	r3,1312(sp)
   8a6d0:	90cf883a 	add	r7,r18,r3
   8a6d4:	1480960e 	bge	r2,r18,8a930 <___vfprintf_internal_r+0x1e0c>
   8a6d8:	39c00044 	addi	r7,r7,1
   8a6dc:	d9c14515 	stw	r7,1300(sp)
   8a6e0:	38003416 	blt	r7,zero,8a7b4 <___vfprintf_internal_r+0x1c90>
   8a6e4:	e0803fcc 	andi	r2,fp,255
   8a6e8:	1080201c 	xori	r2,r2,128
   8a6ec:	10bfe004 	addi	r2,r2,-128
   8a6f0:	10004e26 	beq	r2,zero,8a82c <___vfprintf_internal_r+0x1d08>
   8a6f4:	00800b44 	movi	r2,45
   8a6f8:	dc814715 	stw	r18,1308(sp)
   8a6fc:	d8014615 	stw	zero,1304(sp)
   8a700:	d8800405 	stb	r2,16(sp)
   8a704:	003bab06 	br	895b4 <___vfprintf_internal_r+0xa90>
   8a708:	00800b44 	movi	r2,45
   8a70c:	d8800405 	stb	r2,16(sp)
   8a710:	003d2d06 	br	89bc8 <___vfprintf_internal_r+0x10a4>
   8a714:	d9014f17 	ldw	r4,1340(sp)
   8a718:	b00b883a 	mov	r5,r22
   8a71c:	d9800c04 	addi	r6,sp,48
   8a720:	0088acc0 	call	88acc <__sprint_r>
   8a724:	103ab71e 	bne	r2,zero,89204 <___vfprintf_internal_r+0x6e0>
   8a728:	003ab506 	br	89200 <___vfprintf_internal_r+0x6dc>
   8a72c:	38800017 	ldw	r2,0(r7)
   8a730:	39c00104 	addi	r7,r7,4
   8a734:	d9c14015 	stw	r7,1280(sp)
   8a738:	d9414b17 	ldw	r5,1324(sp)
   8a73c:	d9c14017 	ldw	r7,1280(sp)
   8a740:	11400015 	stw	r5,0(r2)
   8a744:	00395306 	br	88c94 <___vfprintf_internal_r+0x170>
   8a748:	980f883a 	mov	r7,r19
   8a74c:	dcc14515 	stw	r19,1300(sp)
   8a750:	d8014615 	stw	zero,1304(sp)
   8a754:	003b9506 	br	895ac <___vfprintf_internal_r+0xa88>
   8a758:	0027883a 	mov	r19,zero
   8a75c:	00397206 	br	88d28 <___vfprintf_internal_r+0x204>
   8a760:	00c002b4 	movhi	r3,10
   8a764:	18c22e04 	addi	r3,r3,2232
   8a768:	100f883a 	mov	r7,r2
   8a76c:	d8814515 	stw	r2,1300(sp)
   8a770:	d8c14115 	stw	r3,1284(sp)
   8a774:	0039da06 	br	88ee0 <___vfprintf_internal_r+0x3bc>
   8a778:	008002b4 	movhi	r2,10
   8a77c:	10822d04 	addi	r2,r2,2228
   8a780:	d8814115 	stw	r2,1284(sp)
   8a784:	003d1606 	br	89be0 <___vfprintf_internal_r+0x10bc>
   8a788:	d9414d17 	ldw	r5,1332(sp)
   8a78c:	00801984 	movi	r2,102
   8a790:	28804926 	beq	r5,r2,8a8b8 <___vfprintf_internal_r+0x1d94>
   8a794:	200f883a 	mov	r7,r4
   8a798:	24805716 	blt	r4,r18,8a8f8 <___vfprintf_internal_r+0x1dd4>
   8a79c:	d9414c17 	ldw	r5,1328(sp)
   8a7a0:	2880004c 	andi	r2,r5,1
   8a7a4:	10000126 	beq	r2,zero,8a7ac <___vfprintf_internal_r+0x1c88>
   8a7a8:	21c00044 	addi	r7,r4,1
   8a7ac:	d9c14515 	stw	r7,1300(sp)
   8a7b0:	383fcc0e 	bge	r7,zero,8a6e4 <___vfprintf_internal_r+0x1bc0>
   8a7b4:	d8014515 	stw	zero,1300(sp)
   8a7b8:	003fca06 	br	8a6e4 <___vfprintf_internal_r+0x1bc0>
   8a7bc:	d9000517 	ldw	r4,20(sp)
   8a7c0:	00bfff04 	movi	r2,-4
   8a7c4:	1100480e 	bge	r2,r4,8a8e8 <___vfprintf_internal_r+0x1dc4>
   8a7c8:	99004716 	blt	r19,r4,8a8e8 <___vfprintf_internal_r+0x1dc4>
   8a7cc:	d8c14d15 	stw	r3,1332(sp)
   8a7d0:	003ff006 	br	8a794 <___vfprintf_internal_r+0x1c70>
   8a7d4:	d8800717 	ldw	r2,28(sp)
   8a7d8:	14bf8b2e 	bgeu	r2,r18,8a608 <___vfprintf_internal_r+0x1ae4>
   8a7dc:	9007883a 	mov	r3,r18
   8a7e0:	01000c04 	movi	r4,48
   8a7e4:	11000005 	stb	r4,0(r2)
   8a7e8:	10800044 	addi	r2,r2,1
   8a7ec:	d8800715 	stw	r2,28(sp)
   8a7f0:	18bffc1e 	bne	r3,r2,8a7e4 <___vfprintf_internal_r+0x1cc0>
   8a7f4:	003f8406 	br	8a608 <___vfprintf_internal_r+0x1ae4>
   8a7f8:	d8814117 	ldw	r2,1284(sp)
   8a7fc:	10c00007 	ldb	r3,0(r2)
   8a800:	00800c04 	movi	r2,48
   8a804:	18805b26 	beq	r3,r2,8a974 <___vfprintf_internal_r+0x1e50>
   8a808:	d9000517 	ldw	r4,20(sp)
   8a80c:	9125883a 	add	r18,r18,r4
   8a810:	003f7506 	br	8a5e8 <___vfprintf_internal_r+0x1ac4>
   8a814:	d9014c17 	ldw	r4,1328(sp)
   8a818:	2080004c 	andi	r2,r4,1
   8a81c:	1005003a 	cmpeq	r2,r2,zero
   8a820:	103f6a26 	beq	r2,zero,8a5cc <___vfprintf_internal_r+0x1aa8>
   8a824:	d8800717 	ldw	r2,28(sp)
   8a828:	003f7706 	br	8a608 <___vfprintf_internal_r+0x1ae4>
   8a82c:	d9c14515 	stw	r7,1300(sp)
   8a830:	38004d16 	blt	r7,zero,8a968 <___vfprintf_internal_r+0x1e44>
   8a834:	dc814715 	stw	r18,1308(sp)
   8a838:	d8014615 	stw	zero,1304(sp)
   8a83c:	003b5b06 	br	895ac <___vfprintf_internal_r+0xa88>
   8a840:	d9014f17 	ldw	r4,1340(sp)
   8a844:	d8800504 	addi	r2,sp,20
   8a848:	d8800115 	stw	r2,4(sp)
   8a84c:	d8c00604 	addi	r3,sp,24
   8a850:	d8800704 	addi	r2,sp,28
   8a854:	800b883a 	mov	r5,r16
   8a858:	880d883a 	mov	r6,r17
   8a85c:	01c000c4 	movi	r7,3
   8a860:	d8c00215 	stw	r3,8(sp)
   8a864:	d8800315 	stw	r2,12(sp)
   8a868:	dcc00015 	stw	r19,0(sp)
   8a86c:	9829883a 	mov	r20,r19
   8a870:	008ad8c0 	call	8ad8c <_dtoa_r>
   8a874:	d8814115 	stw	r2,1284(sp)
   8a878:	003f5106 	br	8a5c0 <___vfprintf_internal_r+0x1a9c>
   8a87c:	d8c14217 	ldw	r3,1288(sp)
   8a880:	d9014317 	ldw	r4,1292(sp)
   8a884:	07000b44 	movi	fp,45
   8a888:	1821883a 	mov	r16,r3
   8a88c:	2460003c 	xorhi	r17,r4,32768
   8a890:	003f3106 	br	8a558 <___vfprintf_internal_r+0x1a34>
   8a894:	9d000044 	addi	r20,r19,1
   8a898:	003f3906 	br	8a580 <___vfprintf_internal_r+0x1a5c>
   8a89c:	983f251e 	bne	r19,zero,8a534 <___vfprintf_internal_r+0x1a10>
   8a8a0:	04c00044 	movi	r19,1
   8a8a4:	003f2306 	br	8a534 <___vfprintf_internal_r+0x1a10>
   8a8a8:	04c00184 	movi	r19,6
   8a8ac:	003f2106 	br	8a534 <___vfprintf_internal_r+0x1a10>
   8a8b0:	d8014515 	stw	zero,1300(sp)
   8a8b4:	003eee06 	br	8a470 <___vfprintf_internal_r+0x194c>
   8a8b8:	200f883a 	mov	r7,r4
   8a8bc:	0100370e 	bge	zero,r4,8a99c <___vfprintf_internal_r+0x1e78>
   8a8c0:	9800031e 	bne	r19,zero,8a8d0 <___vfprintf_internal_r+0x1dac>
   8a8c4:	d9814c17 	ldw	r6,1328(sp)
   8a8c8:	3080004c 	andi	r2,r6,1
   8a8cc:	103fb726 	beq	r2,zero,8a7ac <___vfprintf_internal_r+0x1c88>
   8a8d0:	20800044 	addi	r2,r4,1
   8a8d4:	98a7883a 	add	r19,r19,r2
   8a8d8:	dcc14515 	stw	r19,1300(sp)
   8a8dc:	980f883a 	mov	r7,r19
   8a8e0:	983f800e 	bge	r19,zero,8a6e4 <___vfprintf_internal_r+0x1bc0>
   8a8e4:	003fb306 	br	8a7b4 <___vfprintf_internal_r+0x1c90>
   8a8e8:	d9814d17 	ldw	r6,1332(sp)
   8a8ec:	31bfff84 	addi	r6,r6,-2
   8a8f0:	d9814d15 	stw	r6,1332(sp)
   8a8f4:	003f4c06 	br	8a628 <___vfprintf_internal_r+0x1b04>
   8a8f8:	0100180e 	bge	zero,r4,8a95c <___vfprintf_internal_r+0x1e38>
   8a8fc:	00800044 	movi	r2,1
   8a900:	1485883a 	add	r2,r2,r18
   8a904:	d8814515 	stw	r2,1300(sp)
   8a908:	100f883a 	mov	r7,r2
   8a90c:	103f750e 	bge	r2,zero,8a6e4 <___vfprintf_internal_r+0x1bc0>
   8a910:	003fa806 	br	8a7b4 <___vfprintf_internal_r+0x1c90>
   8a914:	80c00c04 	addi	r3,r16,48
   8a918:	00800c04 	movi	r2,48
   8a91c:	d8c008c5 	stb	r3,35(sp)
   8a920:	d9800804 	addi	r6,sp,32
   8a924:	d8c00904 	addi	r3,sp,36
   8a928:	d8800885 	stb	r2,34(sp)
   8a92c:	003f6506 	br	8a6c4 <___vfprintf_internal_r+0x1ba0>
   8a930:	d9014c17 	ldw	r4,1328(sp)
   8a934:	2084703a 	and	r2,r4,r2
   8a938:	103f9c26 	beq	r2,zero,8a7ac <___vfprintf_internal_r+0x1c88>
   8a93c:	003f6606 	br	8a6d8 <___vfprintf_internal_r+0x1bb4>
   8a940:	d9800804 	addi	r6,sp,32
   8a944:	d8c00884 	addi	r3,sp,34
   8a948:	003f5e06 	br	8a6c4 <___vfprintf_internal_r+0x1ba0>
   8a94c:	00800b44 	movi	r2,45
   8a950:	0121c83a 	sub	r16,zero,r4
   8a954:	d8800845 	stb	r2,33(sp)
   8a958:	003f3d06 	br	8a650 <___vfprintf_internal_r+0x1b2c>
   8a95c:	00800084 	movi	r2,2
   8a960:	1105c83a 	sub	r2,r2,r4
   8a964:	003fe606 	br	8a900 <___vfprintf_internal_r+0x1ddc>
   8a968:	d8014515 	stw	zero,1300(sp)
   8a96c:	dc814715 	stw	r18,1308(sp)
   8a970:	003fb106 	br	8a838 <___vfprintf_internal_r+0x1d14>
   8a974:	000d883a 	mov	r6,zero
   8a978:	000f883a 	mov	r7,zero
   8a97c:	8009883a 	mov	r4,r16
   8a980:	880b883a 	mov	r5,r17
   8a984:	00919100 	call	91910 <__nedf2>
   8a988:	103f9f26 	beq	r2,zero,8a808 <___vfprintf_internal_r+0x1ce4>
   8a98c:	00800044 	movi	r2,1
   8a990:	1509c83a 	sub	r4,r2,r20
   8a994:	d9000515 	stw	r4,20(sp)
   8a998:	003f9b06 	br	8a808 <___vfprintf_internal_r+0x1ce4>
   8a99c:	98000d1e 	bne	r19,zero,8a9d4 <___vfprintf_internal_r+0x1eb0>
   8a9a0:	d8c14c17 	ldw	r3,1328(sp)
   8a9a4:	1880004c 	andi	r2,r3,1
   8a9a8:	10000a1e 	bne	r2,zero,8a9d4 <___vfprintf_internal_r+0x1eb0>
   8a9ac:	01000044 	movi	r4,1
   8a9b0:	200f883a 	mov	r7,r4
   8a9b4:	d9014515 	stw	r4,1300(sp)
   8a9b8:	003f4a06 	br	8a6e4 <___vfprintf_internal_r+0x1bc0>
   8a9bc:	3cc00017 	ldw	r19,0(r7)
   8a9c0:	39c00104 	addi	r7,r7,4
   8a9c4:	983d0e0e 	bge	r19,zero,89e00 <___vfprintf_internal_r+0x12dc>
   8a9c8:	b8c00007 	ldb	r3,0(r23)
   8a9cc:	04ffffc4 	movi	r19,-1
   8a9d0:	0038d306 	br	88d20 <___vfprintf_internal_r+0x1fc>
   8a9d4:	9cc00084 	addi	r19,r19,2
   8a9d8:	dcc14515 	stw	r19,1300(sp)
   8a9dc:	980f883a 	mov	r7,r19
   8a9e0:	983f400e 	bge	r19,zero,8a6e4 <___vfprintf_internal_r+0x1bc0>
   8a9e4:	003f7306 	br	8a7b4 <___vfprintf_internal_r+0x1c90>

0008a9e8 <__vfprintf_internal>:
   8a9e8:	008002b4 	movhi	r2,10
   8a9ec:	1089d704 	addi	r2,r2,10076
   8a9f0:	2013883a 	mov	r9,r4
   8a9f4:	11000017 	ldw	r4,0(r2)
   8a9f8:	2805883a 	mov	r2,r5
   8a9fc:	300f883a 	mov	r7,r6
   8aa00:	480b883a 	mov	r5,r9
   8aa04:	100d883a 	mov	r6,r2
   8aa08:	0088b241 	jmpi	88b24 <___vfprintf_internal_r>

0008aa0c <__swsetup_r>:
   8aa0c:	008002b4 	movhi	r2,10
   8aa10:	1089d704 	addi	r2,r2,10076
   8aa14:	10c00017 	ldw	r3,0(r2)
   8aa18:	defffd04 	addi	sp,sp,-12
   8aa1c:	dc400115 	stw	r17,4(sp)
   8aa20:	dc000015 	stw	r16,0(sp)
   8aa24:	dfc00215 	stw	ra,8(sp)
   8aa28:	2023883a 	mov	r17,r4
   8aa2c:	2821883a 	mov	r16,r5
   8aa30:	18000226 	beq	r3,zero,8aa3c <__swsetup_r+0x30>
   8aa34:	18800e17 	ldw	r2,56(r3)
   8aa38:	10001f26 	beq	r2,zero,8aab8 <__swsetup_r+0xac>
   8aa3c:	8100030b 	ldhu	r4,12(r16)
   8aa40:	2080020c 	andi	r2,r4,8
   8aa44:	10002826 	beq	r2,zero,8aae8 <__swsetup_r+0xdc>
   8aa48:	81400417 	ldw	r5,16(r16)
   8aa4c:	28001d26 	beq	r5,zero,8aac4 <__swsetup_r+0xb8>
   8aa50:	2080004c 	andi	r2,r4,1
   8aa54:	1005003a 	cmpeq	r2,r2,zero
   8aa58:	10000b26 	beq	r2,zero,8aa88 <__swsetup_r+0x7c>
   8aa5c:	2080008c 	andi	r2,r4,2
   8aa60:	10001226 	beq	r2,zero,8aaac <__swsetup_r+0xa0>
   8aa64:	0005883a 	mov	r2,zero
   8aa68:	80800215 	stw	r2,8(r16)
   8aa6c:	28000b26 	beq	r5,zero,8aa9c <__swsetup_r+0x90>
   8aa70:	0005883a 	mov	r2,zero
   8aa74:	dfc00217 	ldw	ra,8(sp)
   8aa78:	dc400117 	ldw	r17,4(sp)
   8aa7c:	dc000017 	ldw	r16,0(sp)
   8aa80:	dec00304 	addi	sp,sp,12
   8aa84:	f800283a 	ret
   8aa88:	80800517 	ldw	r2,20(r16)
   8aa8c:	80000215 	stw	zero,8(r16)
   8aa90:	0085c83a 	sub	r2,zero,r2
   8aa94:	80800615 	stw	r2,24(r16)
   8aa98:	283ff51e 	bne	r5,zero,8aa70 <__swsetup_r+0x64>
   8aa9c:	2080200c 	andi	r2,r4,128
   8aaa0:	103ff326 	beq	r2,zero,8aa70 <__swsetup_r+0x64>
   8aaa4:	00bfffc4 	movi	r2,-1
   8aaa8:	003ff206 	br	8aa74 <__swsetup_r+0x68>
   8aaac:	80800517 	ldw	r2,20(r16)
   8aab0:	80800215 	stw	r2,8(r16)
   8aab4:	003fed06 	br	8aa6c <__swsetup_r+0x60>
   8aab8:	1809883a 	mov	r4,r3
   8aabc:	008c5d80 	call	8c5d8 <__sinit>
   8aac0:	003fde06 	br	8aa3c <__swsetup_r+0x30>
   8aac4:	20c0a00c 	andi	r3,r4,640
   8aac8:	00808004 	movi	r2,512
   8aacc:	18bfe026 	beq	r3,r2,8aa50 <__swsetup_r+0x44>
   8aad0:	8809883a 	mov	r4,r17
   8aad4:	800b883a 	mov	r5,r16
   8aad8:	008d3840 	call	8d384 <__smakebuf_r>
   8aadc:	8100030b 	ldhu	r4,12(r16)
   8aae0:	81400417 	ldw	r5,16(r16)
   8aae4:	003fda06 	br	8aa50 <__swsetup_r+0x44>
   8aae8:	2080040c 	andi	r2,r4,16
   8aaec:	103fed26 	beq	r2,zero,8aaa4 <__swsetup_r+0x98>
   8aaf0:	2080010c 	andi	r2,r4,4
   8aaf4:	10001226 	beq	r2,zero,8ab40 <__swsetup_r+0x134>
   8aaf8:	81400c17 	ldw	r5,48(r16)
   8aafc:	28000526 	beq	r5,zero,8ab14 <__swsetup_r+0x108>
   8ab00:	80801004 	addi	r2,r16,64
   8ab04:	28800226 	beq	r5,r2,8ab10 <__swsetup_r+0x104>
   8ab08:	8809883a 	mov	r4,r17
   8ab0c:	008c9900 	call	8c990 <_free_r>
   8ab10:	80000c15 	stw	zero,48(r16)
   8ab14:	8080030b 	ldhu	r2,12(r16)
   8ab18:	81400417 	ldw	r5,16(r16)
   8ab1c:	80000115 	stw	zero,4(r16)
   8ab20:	10bff6cc 	andi	r2,r2,65499
   8ab24:	8080030d 	sth	r2,12(r16)
   8ab28:	81400015 	stw	r5,0(r16)
   8ab2c:	8080030b 	ldhu	r2,12(r16)
   8ab30:	10800214 	ori	r2,r2,8
   8ab34:	113fffcc 	andi	r4,r2,65535
   8ab38:	8080030d 	sth	r2,12(r16)
   8ab3c:	003fc306 	br	8aa4c <__swsetup_r+0x40>
   8ab40:	81400417 	ldw	r5,16(r16)
   8ab44:	003ff906 	br	8ab2c <__swsetup_r+0x120>

0008ab48 <quorem>:
   8ab48:	28c00417 	ldw	r3,16(r5)
   8ab4c:	20800417 	ldw	r2,16(r4)
   8ab50:	defff104 	addi	sp,sp,-60
   8ab54:	dfc00e15 	stw	ra,56(sp)
   8ab58:	df000d15 	stw	fp,52(sp)
   8ab5c:	ddc00c15 	stw	r23,48(sp)
   8ab60:	dd800b15 	stw	r22,44(sp)
   8ab64:	dd400a15 	stw	r21,40(sp)
   8ab68:	dd000915 	stw	r20,36(sp)
   8ab6c:	dcc00815 	stw	r19,32(sp)
   8ab70:	dc800715 	stw	r18,28(sp)
   8ab74:	dc400615 	stw	r17,24(sp)
   8ab78:	dc000515 	stw	r16,20(sp)
   8ab7c:	d9000315 	stw	r4,12(sp)
   8ab80:	d9400415 	stw	r5,16(sp)
   8ab84:	10c07f16 	blt	r2,r3,8ad84 <quorem+0x23c>
   8ab88:	1d3fffc4 	addi	r20,r3,-1
   8ab8c:	d8c00417 	ldw	r3,16(sp)
   8ab90:	d9000317 	ldw	r4,12(sp)
   8ab94:	a505883a 	add	r2,r20,r20
   8ab98:	1085883a 	add	r2,r2,r2
   8ab9c:	1cc00504 	addi	r19,r3,20
   8aba0:	25c00504 	addi	r23,r4,20
   8aba4:	98ad883a 	add	r22,r19,r2
   8aba8:	15c7883a 	add	r3,r2,r23
   8abac:	b1400017 	ldw	r5,0(r22)
   8abb0:	19000017 	ldw	r4,0(r3)
   8abb4:	d8c00015 	stw	r3,0(sp)
   8abb8:	29400044 	addi	r5,r5,1
   8abbc:	d9000215 	stw	r4,8(sp)
   8abc0:	00886a00 	call	886a0 <__udivsi3>
   8abc4:	1039883a 	mov	fp,r2
   8abc8:	10003d1e 	bne	r2,zero,8acc0 <quorem+0x178>
   8abcc:	d9400417 	ldw	r5,16(sp)
   8abd0:	d9000317 	ldw	r4,12(sp)
   8abd4:	008e0b00 	call	8e0b0 <__mcmp>
   8abd8:	10002c16 	blt	r2,zero,8ac8c <quorem+0x144>
   8abdc:	e7000044 	addi	fp,fp,1
   8abe0:	b80f883a 	mov	r7,r23
   8abe4:	0011883a 	mov	r8,zero
   8abe8:	0009883a 	mov	r4,zero
   8abec:	99400017 	ldw	r5,0(r19)
   8abf0:	38c00017 	ldw	r3,0(r7)
   8abf4:	9cc00104 	addi	r19,r19,4
   8abf8:	28bfffcc 	andi	r2,r5,65535
   8abfc:	2085883a 	add	r2,r4,r2
   8ac00:	11bfffcc 	andi	r6,r2,65535
   8ac04:	193fffcc 	andi	r4,r3,65535
   8ac08:	1004d43a 	srli	r2,r2,16
   8ac0c:	280ad43a 	srli	r5,r5,16
   8ac10:	2189c83a 	sub	r4,r4,r6
   8ac14:	2209883a 	add	r4,r4,r8
   8ac18:	1806d43a 	srli	r3,r3,16
   8ac1c:	288b883a 	add	r5,r5,r2
   8ac20:	200dd43a 	srai	r6,r4,16
   8ac24:	28bfffcc 	andi	r2,r5,65535
   8ac28:	1887c83a 	sub	r3,r3,r2
   8ac2c:	1987883a 	add	r3,r3,r6
   8ac30:	3900000d 	sth	r4,0(r7)
   8ac34:	38c0008d 	sth	r3,2(r7)
   8ac38:	2808d43a 	srli	r4,r5,16
   8ac3c:	39c00104 	addi	r7,r7,4
   8ac40:	1811d43a 	srai	r8,r3,16
   8ac44:	b4ffe92e 	bgeu	r22,r19,8abec <quorem+0xa4>
   8ac48:	a505883a 	add	r2,r20,r20
   8ac4c:	1085883a 	add	r2,r2,r2
   8ac50:	b885883a 	add	r2,r23,r2
   8ac54:	10c00017 	ldw	r3,0(r2)
   8ac58:	18000c1e 	bne	r3,zero,8ac8c <quorem+0x144>
   8ac5c:	113fff04 	addi	r4,r2,-4
   8ac60:	b900082e 	bgeu	r23,r4,8ac84 <quorem+0x13c>
   8ac64:	10bfff17 	ldw	r2,-4(r2)
   8ac68:	10000326 	beq	r2,zero,8ac78 <quorem+0x130>
   8ac6c:	00000506 	br	8ac84 <quorem+0x13c>
   8ac70:	20800017 	ldw	r2,0(r4)
   8ac74:	1000031e 	bne	r2,zero,8ac84 <quorem+0x13c>
   8ac78:	213fff04 	addi	r4,r4,-4
   8ac7c:	a53fffc4 	addi	r20,r20,-1
   8ac80:	b93ffb36 	bltu	r23,r4,8ac70 <quorem+0x128>
   8ac84:	d9000317 	ldw	r4,12(sp)
   8ac88:	25000415 	stw	r20,16(r4)
   8ac8c:	e005883a 	mov	r2,fp
   8ac90:	dfc00e17 	ldw	ra,56(sp)
   8ac94:	df000d17 	ldw	fp,52(sp)
   8ac98:	ddc00c17 	ldw	r23,48(sp)
   8ac9c:	dd800b17 	ldw	r22,44(sp)
   8aca0:	dd400a17 	ldw	r21,40(sp)
   8aca4:	dd000917 	ldw	r20,36(sp)
   8aca8:	dcc00817 	ldw	r19,32(sp)
   8acac:	dc800717 	ldw	r18,28(sp)
   8acb0:	dc400617 	ldw	r17,24(sp)
   8acb4:	dc000517 	ldw	r16,20(sp)
   8acb8:	dec00f04 	addi	sp,sp,60
   8acbc:	f800283a 	ret
   8acc0:	b823883a 	mov	r17,r23
   8acc4:	9825883a 	mov	r18,r19
   8acc8:	d8000115 	stw	zero,4(sp)
   8accc:	002b883a 	mov	r21,zero
   8acd0:	94000017 	ldw	r16,0(r18)
   8acd4:	e009883a 	mov	r4,fp
   8acd8:	94800104 	addi	r18,r18,4
   8acdc:	817fffcc 	andi	r5,r16,65535
   8ace0:	00886b00 	call	886b0 <__mulsi3>
   8ace4:	800ad43a 	srli	r5,r16,16
   8ace8:	e009883a 	mov	r4,fp
   8acec:	a8a1883a 	add	r16,r21,r2
   8acf0:	00886b00 	call	886b0 <__mulsi3>
   8acf4:	89000017 	ldw	r4,0(r17)
   8acf8:	80ffffcc 	andi	r3,r16,65535
   8acfc:	8020d43a 	srli	r16,r16,16
   8ad00:	217fffcc 	andi	r5,r4,65535
   8ad04:	28cbc83a 	sub	r5,r5,r3
   8ad08:	d8c00117 	ldw	r3,4(sp)
   8ad0c:	2008d43a 	srli	r4,r4,16
   8ad10:	1405883a 	add	r2,r2,r16
   8ad14:	28cb883a 	add	r5,r5,r3
   8ad18:	280dd43a 	srai	r6,r5,16
   8ad1c:	10ffffcc 	andi	r3,r2,65535
   8ad20:	20c9c83a 	sub	r4,r4,r3
   8ad24:	2189883a 	add	r4,r4,r6
   8ad28:	8900008d 	sth	r4,2(r17)
   8ad2c:	2009d43a 	srai	r4,r4,16
   8ad30:	8940000d 	sth	r5,0(r17)
   8ad34:	102ad43a 	srli	r21,r2,16
   8ad38:	8c400104 	addi	r17,r17,4
   8ad3c:	d9000115 	stw	r4,4(sp)
   8ad40:	b4bfe32e 	bgeu	r22,r18,8acd0 <quorem+0x188>
   8ad44:	d9000217 	ldw	r4,8(sp)
   8ad48:	203fa01e 	bne	r4,zero,8abcc <quorem+0x84>
   8ad4c:	d8800017 	ldw	r2,0(sp)
   8ad50:	10ffff04 	addi	r3,r2,-4
   8ad54:	b8c0082e 	bgeu	r23,r3,8ad78 <quorem+0x230>
   8ad58:	10bfff17 	ldw	r2,-4(r2)
   8ad5c:	10000326 	beq	r2,zero,8ad6c <quorem+0x224>
   8ad60:	00000506 	br	8ad78 <quorem+0x230>
   8ad64:	18800017 	ldw	r2,0(r3)
   8ad68:	1000031e 	bne	r2,zero,8ad78 <quorem+0x230>
   8ad6c:	18ffff04 	addi	r3,r3,-4
   8ad70:	a53fffc4 	addi	r20,r20,-1
   8ad74:	b8fffb36 	bltu	r23,r3,8ad64 <quorem+0x21c>
   8ad78:	d8c00317 	ldw	r3,12(sp)
   8ad7c:	1d000415 	stw	r20,16(r3)
   8ad80:	003f9206 	br	8abcc <quorem+0x84>
   8ad84:	0005883a 	mov	r2,zero
   8ad88:	003fc106 	br	8ac90 <quorem+0x148>

0008ad8c <_dtoa_r>:
   8ad8c:	22001017 	ldw	r8,64(r4)
   8ad90:	deffda04 	addi	sp,sp,-152
   8ad94:	dd402115 	stw	r21,132(sp)
   8ad98:	dd002015 	stw	r20,128(sp)
   8ad9c:	dc801e15 	stw	r18,120(sp)
   8ada0:	dc401d15 	stw	r17,116(sp)
   8ada4:	dfc02515 	stw	ra,148(sp)
   8ada8:	df002415 	stw	fp,144(sp)
   8adac:	ddc02315 	stw	r23,140(sp)
   8adb0:	dd802215 	stw	r22,136(sp)
   8adb4:	dcc01f15 	stw	r19,124(sp)
   8adb8:	dc001c15 	stw	r16,112(sp)
   8adbc:	d9001615 	stw	r4,88(sp)
   8adc0:	3023883a 	mov	r17,r6
   8adc4:	2829883a 	mov	r20,r5
   8adc8:	d9c01715 	stw	r7,92(sp)
   8adcc:	dc802817 	ldw	r18,160(sp)
   8add0:	302b883a 	mov	r21,r6
   8add4:	40000a26 	beq	r8,zero,8ae00 <_dtoa_r+0x74>
   8add8:	20801117 	ldw	r2,68(r4)
   8addc:	400b883a 	mov	r5,r8
   8ade0:	40800115 	stw	r2,4(r8)
   8ade4:	20c01117 	ldw	r3,68(r4)
   8ade8:	00800044 	movi	r2,1
   8adec:	10c4983a 	sll	r2,r2,r3
   8adf0:	40800215 	stw	r2,8(r8)
   8adf4:	008df540 	call	8df54 <_Bfree>
   8adf8:	d8c01617 	ldw	r3,88(sp)
   8adfc:	18001015 	stw	zero,64(r3)
   8ae00:	8800a316 	blt	r17,zero,8b090 <_dtoa_r+0x304>
   8ae04:	90000015 	stw	zero,0(r18)
   8ae08:	a8dffc2c 	andhi	r3,r21,32752
   8ae0c:	009ffc34 	movhi	r2,32752
   8ae10:	18809126 	beq	r3,r2,8b058 <_dtoa_r+0x2cc>
   8ae14:	000d883a 	mov	r6,zero
   8ae18:	000f883a 	mov	r7,zero
   8ae1c:	a009883a 	mov	r4,r20
   8ae20:	a80b883a 	mov	r5,r21
   8ae24:	dd001215 	stw	r20,72(sp)
   8ae28:	dd401315 	stw	r21,76(sp)
   8ae2c:	00919100 	call	91910 <__nedf2>
   8ae30:	1000171e 	bne	r2,zero,8ae90 <_dtoa_r+0x104>
   8ae34:	d9802717 	ldw	r6,156(sp)
   8ae38:	00800044 	movi	r2,1
   8ae3c:	30800015 	stw	r2,0(r6)
   8ae40:	d8802917 	ldw	r2,164(sp)
   8ae44:	10029b26 	beq	r2,zero,8b8b4 <_dtoa_r+0xb28>
   8ae48:	d9002917 	ldw	r4,164(sp)
   8ae4c:	008002b4 	movhi	r2,10
   8ae50:	10823c44 	addi	r2,r2,2289
   8ae54:	10ffffc4 	addi	r3,r2,-1
   8ae58:	20800015 	stw	r2,0(r4)
   8ae5c:	1805883a 	mov	r2,r3
   8ae60:	dfc02517 	ldw	ra,148(sp)
   8ae64:	df002417 	ldw	fp,144(sp)
   8ae68:	ddc02317 	ldw	r23,140(sp)
   8ae6c:	dd802217 	ldw	r22,136(sp)
   8ae70:	dd402117 	ldw	r21,132(sp)
   8ae74:	dd002017 	ldw	r20,128(sp)
   8ae78:	dcc01f17 	ldw	r19,124(sp)
   8ae7c:	dc801e17 	ldw	r18,120(sp)
   8ae80:	dc401d17 	ldw	r17,116(sp)
   8ae84:	dc001c17 	ldw	r16,112(sp)
   8ae88:	dec02604 	addi	sp,sp,152
   8ae8c:	f800283a 	ret
   8ae90:	d9001617 	ldw	r4,88(sp)
   8ae94:	d9401217 	ldw	r5,72(sp)
   8ae98:	d8800104 	addi	r2,sp,4
   8ae9c:	a80d883a 	mov	r6,r21
   8aea0:	d9c00204 	addi	r7,sp,8
   8aea4:	d8800015 	stw	r2,0(sp)
   8aea8:	008e5900 	call	8e590 <__d2b>
   8aeac:	d8800715 	stw	r2,28(sp)
   8aeb0:	a804d53a 	srli	r2,r21,20
   8aeb4:	1101ffcc 	andi	r4,r2,2047
   8aeb8:	20008626 	beq	r4,zero,8b0d4 <_dtoa_r+0x348>
   8aebc:	d8c01217 	ldw	r3,72(sp)
   8aec0:	00800434 	movhi	r2,16
   8aec4:	10bfffc4 	addi	r2,r2,-1
   8aec8:	ddc00117 	ldw	r23,4(sp)
   8aecc:	a884703a 	and	r2,r21,r2
   8aed0:	1811883a 	mov	r8,r3
   8aed4:	124ffc34 	orhi	r9,r2,16368
   8aed8:	25bf0044 	addi	r22,r4,-1023
   8aedc:	d8000815 	stw	zero,32(sp)
   8aee0:	0005883a 	mov	r2,zero
   8aee4:	00cffe34 	movhi	r3,16376
   8aee8:	480b883a 	mov	r5,r9
   8aeec:	4009883a 	mov	r4,r8
   8aef0:	180f883a 	mov	r7,r3
   8aef4:	100d883a 	mov	r6,r2
   8aef8:	00911780 	call	91178 <__subdf3>
   8aefc:	0218dbf4 	movhi	r8,25455
   8af00:	4210d844 	addi	r8,r8,17249
   8af04:	024ff4f4 	movhi	r9,16339
   8af08:	4a61e9c4 	addi	r9,r9,-30809
   8af0c:	480f883a 	mov	r7,r9
   8af10:	400d883a 	mov	r6,r8
   8af14:	180b883a 	mov	r5,r3
   8af18:	1009883a 	mov	r4,r2
   8af1c:	009126c0 	call	9126c <__muldf3>
   8af20:	0222d874 	movhi	r8,35681
   8af24:	42322cc4 	addi	r8,r8,-14157
   8af28:	024ff1f4 	movhi	r9,16327
   8af2c:	4a628a04 	addi	r9,r9,-30168
   8af30:	480f883a 	mov	r7,r9
   8af34:	400d883a 	mov	r6,r8
   8af38:	180b883a 	mov	r5,r3
   8af3c:	1009883a 	mov	r4,r2
   8af40:	00911f80 	call	911f8 <__adddf3>
   8af44:	b009883a 	mov	r4,r22
   8af48:	1021883a 	mov	r16,r2
   8af4c:	1823883a 	mov	r17,r3
   8af50:	0091b300 	call	91b30 <__floatsidf>
   8af54:	021427f4 	movhi	r8,20639
   8af58:	421e7ec4 	addi	r8,r8,31227
   8af5c:	024ff4f4 	movhi	r9,16339
   8af60:	4a5104c4 	addi	r9,r9,17427
   8af64:	480f883a 	mov	r7,r9
   8af68:	400d883a 	mov	r6,r8
   8af6c:	180b883a 	mov	r5,r3
   8af70:	1009883a 	mov	r4,r2
   8af74:	009126c0 	call	9126c <__muldf3>
   8af78:	180f883a 	mov	r7,r3
   8af7c:	880b883a 	mov	r5,r17
   8af80:	100d883a 	mov	r6,r2
   8af84:	8009883a 	mov	r4,r16
   8af88:	00911f80 	call	911f8 <__adddf3>
   8af8c:	1009883a 	mov	r4,r2
   8af90:	180b883a 	mov	r5,r3
   8af94:	1021883a 	mov	r16,r2
   8af98:	1823883a 	mov	r17,r3
   8af9c:	0091c280 	call	91c28 <__fixdfsi>
   8afa0:	000d883a 	mov	r6,zero
   8afa4:	000f883a 	mov	r7,zero
   8afa8:	8009883a 	mov	r4,r16
   8afac:	880b883a 	mov	r5,r17
   8afb0:	d8800d15 	stw	r2,52(sp)
   8afb4:	0091aa80 	call	91aa8 <__ltdf2>
   8afb8:	10031716 	blt	r2,zero,8bc18 <_dtoa_r+0xe8c>
   8afbc:	d8c00d17 	ldw	r3,52(sp)
   8afc0:	00800584 	movi	r2,22
   8afc4:	10c1482e 	bgeu	r2,r3,8b4e8 <_dtoa_r+0x75c>
   8afc8:	01000044 	movi	r4,1
   8afcc:	d9000c15 	stw	r4,48(sp)
   8afd0:	bd85c83a 	sub	r2,r23,r22
   8afd4:	11bfffc4 	addi	r6,r2,-1
   8afd8:	30030b16 	blt	r6,zero,8bc08 <_dtoa_r+0xe7c>
   8afdc:	d9800a15 	stw	r6,40(sp)
   8afe0:	d8001115 	stw	zero,68(sp)
   8afe4:	d8c00d17 	ldw	r3,52(sp)
   8afe8:	1802ff16 	blt	r3,zero,8bbe8 <_dtoa_r+0xe5c>
   8afec:	d9000a17 	ldw	r4,40(sp)
   8aff0:	d8c00915 	stw	r3,36(sp)
   8aff4:	d8001015 	stw	zero,64(sp)
   8aff8:	20c9883a 	add	r4,r4,r3
   8affc:	d9000a15 	stw	r4,40(sp)
   8b000:	d9001717 	ldw	r4,92(sp)
   8b004:	00800244 	movi	r2,9
   8b008:	11004636 	bltu	r2,r4,8b124 <_dtoa_r+0x398>
   8b00c:	00800144 	movi	r2,5
   8b010:	11020416 	blt	r2,r4,8b824 <_dtoa_r+0xa98>
   8b014:	04400044 	movi	r17,1
   8b018:	d8c01717 	ldw	r3,92(sp)
   8b01c:	00800144 	movi	r2,5
   8b020:	10c1ed36 	bltu	r2,r3,8b7d8 <_dtoa_r+0xa4c>
   8b024:	18c5883a 	add	r2,r3,r3
   8b028:	1085883a 	add	r2,r2,r2
   8b02c:	00c00274 	movhi	r3,9
   8b030:	18ec1004 	addi	r3,r3,-20416
   8b034:	10c5883a 	add	r2,r2,r3
   8b038:	11000017 	ldw	r4,0(r2)
   8b03c:	2000683a 	jmp	r4
   8b040:	0008b12c 	andhi	zero,zero,8900
   8b044:	0008b12c 	andhi	zero,zero,8900
   8b048:	0008bb2c 	andhi	zero,zero,8940
   8b04c:	0008bb04 	movi	zero,8940
   8b050:	0008bb48 	cmpgei	zero,zero,8941
   8b054:	0008bb54 	movui	zero,8941
   8b058:	d9002717 	ldw	r4,156(sp)
   8b05c:	0089c3c4 	movi	r2,9999
   8b060:	20800015 	stw	r2,0(r4)
   8b064:	a0001026 	beq	r20,zero,8b0a8 <_dtoa_r+0x31c>
   8b068:	00c002b4 	movhi	r3,10
   8b06c:	18c24804 	addi	r3,r3,2336
   8b070:	d9802917 	ldw	r6,164(sp)
   8b074:	303f7926 	beq	r6,zero,8ae5c <_dtoa_r+0xd0>
   8b078:	188000c7 	ldb	r2,3(r3)
   8b07c:	190000c4 	addi	r4,r3,3
   8b080:	1000101e 	bne	r2,zero,8b0c4 <_dtoa_r+0x338>
   8b084:	d8802917 	ldw	r2,164(sp)
   8b088:	11000015 	stw	r4,0(r2)
   8b08c:	003f7306 	br	8ae5c <_dtoa_r+0xd0>
   8b090:	00a00034 	movhi	r2,32768
   8b094:	10bfffc4 	addi	r2,r2,-1
   8b098:	00c00044 	movi	r3,1
   8b09c:	88aa703a 	and	r21,r17,r2
   8b0a0:	90c00015 	stw	r3,0(r18)
   8b0a4:	003f5806 	br	8ae08 <_dtoa_r+0x7c>
   8b0a8:	00800434 	movhi	r2,16
   8b0ac:	10bfffc4 	addi	r2,r2,-1
   8b0b0:	a884703a 	and	r2,r21,r2
   8b0b4:	103fec1e 	bne	r2,zero,8b068 <_dtoa_r+0x2dc>
   8b0b8:	00c002b4 	movhi	r3,10
   8b0bc:	18c24504 	addi	r3,r3,2324
   8b0c0:	003feb06 	br	8b070 <_dtoa_r+0x2e4>
   8b0c4:	d8802917 	ldw	r2,164(sp)
   8b0c8:	19000204 	addi	r4,r3,8
   8b0cc:	11000015 	stw	r4,0(r2)
   8b0d0:	003f6206 	br	8ae5c <_dtoa_r+0xd0>
   8b0d4:	ddc00117 	ldw	r23,4(sp)
   8b0d8:	d8800217 	ldw	r2,8(sp)
   8b0dc:	01000804 	movi	r4,32
   8b0e0:	b8c10c84 	addi	r3,r23,1074
   8b0e4:	18a3883a 	add	r17,r3,r2
   8b0e8:	2441b80e 	bge	r4,r17,8b7cc <_dtoa_r+0xa40>
   8b0ec:	00c01004 	movi	r3,64
   8b0f0:	1c47c83a 	sub	r3,r3,r17
   8b0f4:	88bff804 	addi	r2,r17,-32
   8b0f8:	a8c6983a 	sll	r3,r21,r3
   8b0fc:	a084d83a 	srl	r2,r20,r2
   8b100:	1888b03a 	or	r4,r3,r2
   8b104:	0091d000 	call	91d00 <__floatunsidf>
   8b108:	1011883a 	mov	r8,r2
   8b10c:	00bf8434 	movhi	r2,65040
   8b110:	01000044 	movi	r4,1
   8b114:	10d3883a 	add	r9,r2,r3
   8b118:	8dbef344 	addi	r22,r17,-1075
   8b11c:	d9000815 	stw	r4,32(sp)
   8b120:	003f6f06 	br	8aee0 <_dtoa_r+0x154>
   8b124:	d8001715 	stw	zero,92(sp)
   8b128:	04400044 	movi	r17,1
   8b12c:	00bfffc4 	movi	r2,-1
   8b130:	00c00044 	movi	r3,1
   8b134:	d8800e15 	stw	r2,56(sp)
   8b138:	d8002615 	stw	zero,152(sp)
   8b13c:	d8800f15 	stw	r2,60(sp)
   8b140:	d8c00b15 	stw	r3,44(sp)
   8b144:	1021883a 	mov	r16,r2
   8b148:	d8801617 	ldw	r2,88(sp)
   8b14c:	10001115 	stw	zero,68(r2)
   8b150:	d8801617 	ldw	r2,88(sp)
   8b154:	11401117 	ldw	r5,68(r2)
   8b158:	1009883a 	mov	r4,r2
   8b15c:	008e4d40 	call	8e4d4 <_Balloc>
   8b160:	d8c01617 	ldw	r3,88(sp)
   8b164:	d8800515 	stw	r2,20(sp)
   8b168:	18801015 	stw	r2,64(r3)
   8b16c:	00800384 	movi	r2,14
   8b170:	14006836 	bltu	r2,r16,8b314 <_dtoa_r+0x588>
   8b174:	8805003a 	cmpeq	r2,r17,zero
   8b178:	1000661e 	bne	r2,zero,8b314 <_dtoa_r+0x588>
   8b17c:	d9000d17 	ldw	r4,52(sp)
   8b180:	0102300e 	bge	zero,r4,8ba44 <_dtoa_r+0xcb8>
   8b184:	208003cc 	andi	r2,r4,15
   8b188:	100490fa 	slli	r2,r2,3
   8b18c:	2025d13a 	srai	r18,r4,4
   8b190:	00c002b4 	movhi	r3,10
   8b194:	18c25904 	addi	r3,r3,2404
   8b198:	10c5883a 	add	r2,r2,r3
   8b19c:	90c0040c 	andi	r3,r18,16
   8b1a0:	14000017 	ldw	r16,0(r2)
   8b1a4:	14400117 	ldw	r17,4(r2)
   8b1a8:	18036a1e 	bne	r3,zero,8bf54 <_dtoa_r+0x11c8>
   8b1ac:	05800084 	movi	r22,2
   8b1b0:	90001026 	beq	r18,zero,8b1f4 <_dtoa_r+0x468>
   8b1b4:	04c002b4 	movhi	r19,10
   8b1b8:	9cc28b04 	addi	r19,r19,2604
   8b1bc:	9080004c 	andi	r2,r18,1
   8b1c0:	1005003a 	cmpeq	r2,r2,zero
   8b1c4:	1000081e 	bne	r2,zero,8b1e8 <_dtoa_r+0x45c>
   8b1c8:	99800017 	ldw	r6,0(r19)
   8b1cc:	99c00117 	ldw	r7,4(r19)
   8b1d0:	880b883a 	mov	r5,r17
   8b1d4:	8009883a 	mov	r4,r16
   8b1d8:	009126c0 	call	9126c <__muldf3>
   8b1dc:	1021883a 	mov	r16,r2
   8b1e0:	b5800044 	addi	r22,r22,1
   8b1e4:	1823883a 	mov	r17,r3
   8b1e8:	9025d07a 	srai	r18,r18,1
   8b1ec:	9cc00204 	addi	r19,r19,8
   8b1f0:	903ff21e 	bne	r18,zero,8b1bc <_dtoa_r+0x430>
   8b1f4:	a80b883a 	mov	r5,r21
   8b1f8:	a009883a 	mov	r4,r20
   8b1fc:	880f883a 	mov	r7,r17
   8b200:	800d883a 	mov	r6,r16
   8b204:	00916300 	call	91630 <__divdf3>
   8b208:	1029883a 	mov	r20,r2
   8b20c:	182b883a 	mov	r21,r3
   8b210:	d8c00c17 	ldw	r3,48(sp)
   8b214:	1805003a 	cmpeq	r2,r3,zero
   8b218:	1000081e 	bne	r2,zero,8b23c <_dtoa_r+0x4b0>
   8b21c:	0005883a 	mov	r2,zero
   8b220:	00cffc34 	movhi	r3,16368
   8b224:	180f883a 	mov	r7,r3
   8b228:	a009883a 	mov	r4,r20
   8b22c:	a80b883a 	mov	r5,r21
   8b230:	100d883a 	mov	r6,r2
   8b234:	0091aa80 	call	91aa8 <__ltdf2>
   8b238:	1003fe16 	blt	r2,zero,8c234 <_dtoa_r+0x14a8>
   8b23c:	b009883a 	mov	r4,r22
   8b240:	0091b300 	call	91b30 <__floatsidf>
   8b244:	180b883a 	mov	r5,r3
   8b248:	1009883a 	mov	r4,r2
   8b24c:	a00d883a 	mov	r6,r20
   8b250:	a80f883a 	mov	r7,r21
   8b254:	009126c0 	call	9126c <__muldf3>
   8b258:	0011883a 	mov	r8,zero
   8b25c:	02500734 	movhi	r9,16412
   8b260:	1009883a 	mov	r4,r2
   8b264:	180b883a 	mov	r5,r3
   8b268:	480f883a 	mov	r7,r9
   8b26c:	400d883a 	mov	r6,r8
   8b270:	00911f80 	call	911f8 <__adddf3>
   8b274:	d9000f17 	ldw	r4,60(sp)
   8b278:	102d883a 	mov	r22,r2
   8b27c:	00bf3034 	movhi	r2,64704
   8b280:	18b9883a 	add	fp,r3,r2
   8b284:	e02f883a 	mov	r23,fp
   8b288:	20028f1e 	bne	r4,zero,8bcc8 <_dtoa_r+0xf3c>
   8b28c:	0005883a 	mov	r2,zero
   8b290:	00d00534 	movhi	r3,16404
   8b294:	a009883a 	mov	r4,r20
   8b298:	a80b883a 	mov	r5,r21
   8b29c:	180f883a 	mov	r7,r3
   8b2a0:	100d883a 	mov	r6,r2
   8b2a4:	00911780 	call	91178 <__subdf3>
   8b2a8:	1009883a 	mov	r4,r2
   8b2ac:	e00f883a 	mov	r7,fp
   8b2b0:	180b883a 	mov	r5,r3
   8b2b4:	b00d883a 	mov	r6,r22
   8b2b8:	1025883a 	mov	r18,r2
   8b2bc:	1827883a 	mov	r19,r3
   8b2c0:	00919980 	call	91998 <__gtdf2>
   8b2c4:	00834f16 	blt	zero,r2,8c004 <_dtoa_r+0x1278>
   8b2c8:	e0e0003c 	xorhi	r3,fp,32768
   8b2cc:	9009883a 	mov	r4,r18
   8b2d0:	980b883a 	mov	r5,r19
   8b2d4:	180f883a 	mov	r7,r3
   8b2d8:	b00d883a 	mov	r6,r22
   8b2dc:	0091aa80 	call	91aa8 <__ltdf2>
   8b2e0:	1000080e 	bge	r2,zero,8b304 <_dtoa_r+0x578>
   8b2e4:	0027883a 	mov	r19,zero
   8b2e8:	0025883a 	mov	r18,zero
   8b2ec:	d8802617 	ldw	r2,152(sp)
   8b2f0:	df000517 	ldw	fp,20(sp)
   8b2f4:	d8000615 	stw	zero,24(sp)
   8b2f8:	0084303a 	nor	r2,zero,r2
   8b2fc:	d8800d15 	stw	r2,52(sp)
   8b300:	00019b06 	br	8b970 <_dtoa_r+0xbe4>
   8b304:	d9801217 	ldw	r6,72(sp)
   8b308:	d8801317 	ldw	r2,76(sp)
   8b30c:	3029883a 	mov	r20,r6
   8b310:	102b883a 	mov	r21,r2
   8b314:	d8c00217 	ldw	r3,8(sp)
   8b318:	18008516 	blt	r3,zero,8b530 <_dtoa_r+0x7a4>
   8b31c:	d9000d17 	ldw	r4,52(sp)
   8b320:	00800384 	movi	r2,14
   8b324:	11008216 	blt	r2,r4,8b530 <_dtoa_r+0x7a4>
   8b328:	200490fa 	slli	r2,r4,3
   8b32c:	d9802617 	ldw	r6,152(sp)
   8b330:	00c002b4 	movhi	r3,10
   8b334:	18c25904 	addi	r3,r3,2404
   8b338:	10c5883a 	add	r2,r2,r3
   8b33c:	14800017 	ldw	r18,0(r2)
   8b340:	14c00117 	ldw	r19,4(r2)
   8b344:	30031e16 	blt	r6,zero,8bfc0 <_dtoa_r+0x1234>
   8b348:	d9000517 	ldw	r4,20(sp)
   8b34c:	d8c00f17 	ldw	r3,60(sp)
   8b350:	a823883a 	mov	r17,r21
   8b354:	a021883a 	mov	r16,r20
   8b358:	192b883a 	add	r21,r3,r4
   8b35c:	2039883a 	mov	fp,r4
   8b360:	00000f06 	br	8b3a0 <_dtoa_r+0x614>
   8b364:	0005883a 	mov	r2,zero
   8b368:	00d00934 	movhi	r3,16420
   8b36c:	5009883a 	mov	r4,r10
   8b370:	580b883a 	mov	r5,r11
   8b374:	180f883a 	mov	r7,r3
   8b378:	100d883a 	mov	r6,r2
   8b37c:	009126c0 	call	9126c <__muldf3>
   8b380:	180b883a 	mov	r5,r3
   8b384:	000d883a 	mov	r6,zero
   8b388:	000f883a 	mov	r7,zero
   8b38c:	1009883a 	mov	r4,r2
   8b390:	1021883a 	mov	r16,r2
   8b394:	1823883a 	mov	r17,r3
   8b398:	00919100 	call	91910 <__nedf2>
   8b39c:	10004526 	beq	r2,zero,8b4b4 <_dtoa_r+0x728>
   8b3a0:	900d883a 	mov	r6,r18
   8b3a4:	980f883a 	mov	r7,r19
   8b3a8:	8009883a 	mov	r4,r16
   8b3ac:	880b883a 	mov	r5,r17
   8b3b0:	00916300 	call	91630 <__divdf3>
   8b3b4:	180b883a 	mov	r5,r3
   8b3b8:	1009883a 	mov	r4,r2
   8b3bc:	0091c280 	call	91c28 <__fixdfsi>
   8b3c0:	1009883a 	mov	r4,r2
   8b3c4:	1029883a 	mov	r20,r2
   8b3c8:	0091b300 	call	91b30 <__floatsidf>
   8b3cc:	180f883a 	mov	r7,r3
   8b3d0:	9009883a 	mov	r4,r18
   8b3d4:	980b883a 	mov	r5,r19
   8b3d8:	100d883a 	mov	r6,r2
   8b3dc:	009126c0 	call	9126c <__muldf3>
   8b3e0:	180f883a 	mov	r7,r3
   8b3e4:	880b883a 	mov	r5,r17
   8b3e8:	8009883a 	mov	r4,r16
   8b3ec:	100d883a 	mov	r6,r2
   8b3f0:	00911780 	call	91178 <__subdf3>
   8b3f4:	1015883a 	mov	r10,r2
   8b3f8:	a0800c04 	addi	r2,r20,48
   8b3fc:	e0800005 	stb	r2,0(fp)
   8b400:	e7000044 	addi	fp,fp,1
   8b404:	1817883a 	mov	r11,r3
   8b408:	e57fd61e 	bne	fp,r21,8b364 <_dtoa_r+0x5d8>
   8b40c:	500d883a 	mov	r6,r10
   8b410:	180f883a 	mov	r7,r3
   8b414:	5009883a 	mov	r4,r10
   8b418:	180b883a 	mov	r5,r3
   8b41c:	00911f80 	call	911f8 <__adddf3>
   8b420:	100d883a 	mov	r6,r2
   8b424:	9009883a 	mov	r4,r18
   8b428:	980b883a 	mov	r5,r19
   8b42c:	180f883a 	mov	r7,r3
   8b430:	1021883a 	mov	r16,r2
   8b434:	1823883a 	mov	r17,r3
   8b438:	0091aa80 	call	91aa8 <__ltdf2>
   8b43c:	10000816 	blt	r2,zero,8b460 <_dtoa_r+0x6d4>
   8b440:	980b883a 	mov	r5,r19
   8b444:	800d883a 	mov	r6,r16
   8b448:	880f883a 	mov	r7,r17
   8b44c:	9009883a 	mov	r4,r18
   8b450:	00918880 	call	91888 <__eqdf2>
   8b454:	1000171e 	bne	r2,zero,8b4b4 <_dtoa_r+0x728>
   8b458:	a080004c 	andi	r2,r20,1
   8b45c:	10001526 	beq	r2,zero,8b4b4 <_dtoa_r+0x728>
   8b460:	d8800d17 	ldw	r2,52(sp)
   8b464:	d8800415 	stw	r2,16(sp)
   8b468:	e009883a 	mov	r4,fp
   8b46c:	213fffc4 	addi	r4,r4,-1
   8b470:	20c00007 	ldb	r3,0(r4)
   8b474:	00800e44 	movi	r2,57
   8b478:	1880081e 	bne	r3,r2,8b49c <_dtoa_r+0x710>
   8b47c:	d8800517 	ldw	r2,20(sp)
   8b480:	113ffa1e 	bne	r2,r4,8b46c <_dtoa_r+0x6e0>
   8b484:	d8c00417 	ldw	r3,16(sp)
   8b488:	d9800517 	ldw	r6,20(sp)
   8b48c:	00800c04 	movi	r2,48
   8b490:	18c00044 	addi	r3,r3,1
   8b494:	d8c00415 	stw	r3,16(sp)
   8b498:	30800005 	stb	r2,0(r6)
   8b49c:	20800003 	ldbu	r2,0(r4)
   8b4a0:	d8c00417 	ldw	r3,16(sp)
   8b4a4:	27000044 	addi	fp,r4,1
   8b4a8:	10800044 	addi	r2,r2,1
   8b4ac:	d8c00d15 	stw	r3,52(sp)
   8b4b0:	20800005 	stb	r2,0(r4)
   8b4b4:	d9001617 	ldw	r4,88(sp)
   8b4b8:	d9400717 	ldw	r5,28(sp)
   8b4bc:	008df540 	call	8df54 <_Bfree>
   8b4c0:	e0000005 	stb	zero,0(fp)
   8b4c4:	d9800d17 	ldw	r6,52(sp)
   8b4c8:	d8c02717 	ldw	r3,156(sp)
   8b4cc:	d9002917 	ldw	r4,164(sp)
   8b4d0:	30800044 	addi	r2,r6,1
   8b4d4:	18800015 	stw	r2,0(r3)
   8b4d8:	20029c26 	beq	r4,zero,8bf4c <_dtoa_r+0x11c0>
   8b4dc:	d8c00517 	ldw	r3,20(sp)
   8b4e0:	27000015 	stw	fp,0(r4)
   8b4e4:	003e5d06 	br	8ae5c <_dtoa_r+0xd0>
   8b4e8:	d9800d17 	ldw	r6,52(sp)
   8b4ec:	00c002b4 	movhi	r3,10
   8b4f0:	18c25904 	addi	r3,r3,2404
   8b4f4:	d9001217 	ldw	r4,72(sp)
   8b4f8:	300490fa 	slli	r2,r6,3
   8b4fc:	d9401317 	ldw	r5,76(sp)
   8b500:	10c5883a 	add	r2,r2,r3
   8b504:	12000017 	ldw	r8,0(r2)
   8b508:	12400117 	ldw	r9,4(r2)
   8b50c:	400d883a 	mov	r6,r8
   8b510:	480f883a 	mov	r7,r9
   8b514:	0091aa80 	call	91aa8 <__ltdf2>
   8b518:	1000030e 	bge	r2,zero,8b528 <_dtoa_r+0x79c>
   8b51c:	d8800d17 	ldw	r2,52(sp)
   8b520:	10bfffc4 	addi	r2,r2,-1
   8b524:	d8800d15 	stw	r2,52(sp)
   8b528:	d8000c15 	stw	zero,48(sp)
   8b52c:	003ea806 	br	8afd0 <_dtoa_r+0x244>
   8b530:	d9000b17 	ldw	r4,44(sp)
   8b534:	202cc03a 	cmpne	r22,r4,zero
   8b538:	b000c71e 	bne	r22,zero,8b858 <_dtoa_r+0xacc>
   8b53c:	dc001117 	ldw	r16,68(sp)
   8b540:	dc801017 	ldw	r18,64(sp)
   8b544:	0027883a 	mov	r19,zero
   8b548:	04000b0e 	bge	zero,r16,8b578 <_dtoa_r+0x7ec>
   8b54c:	d8c00a17 	ldw	r3,40(sp)
   8b550:	00c0090e 	bge	zero,r3,8b578 <_dtoa_r+0x7ec>
   8b554:	8005883a 	mov	r2,r16
   8b558:	1c011316 	blt	r3,r16,8b9a8 <_dtoa_r+0xc1c>
   8b55c:	d9000a17 	ldw	r4,40(sp)
   8b560:	d9801117 	ldw	r6,68(sp)
   8b564:	80a1c83a 	sub	r16,r16,r2
   8b568:	2089c83a 	sub	r4,r4,r2
   8b56c:	308dc83a 	sub	r6,r6,r2
   8b570:	d9000a15 	stw	r4,40(sp)
   8b574:	d9801115 	stw	r6,68(sp)
   8b578:	d8801017 	ldw	r2,64(sp)
   8b57c:	0080150e 	bge	zero,r2,8b5d4 <_dtoa_r+0x848>
   8b580:	d8c00b17 	ldw	r3,44(sp)
   8b584:	1805003a 	cmpeq	r2,r3,zero
   8b588:	1001c91e 	bne	r2,zero,8bcb0 <_dtoa_r+0xf24>
   8b58c:	04800e0e 	bge	zero,r18,8b5c8 <_dtoa_r+0x83c>
   8b590:	d9001617 	ldw	r4,88(sp)
   8b594:	980b883a 	mov	r5,r19
   8b598:	900d883a 	mov	r6,r18
   8b59c:	008eda00 	call	8eda0 <__pow5mult>
   8b5a0:	d9001617 	ldw	r4,88(sp)
   8b5a4:	d9800717 	ldw	r6,28(sp)
   8b5a8:	100b883a 	mov	r5,r2
   8b5ac:	1027883a 	mov	r19,r2
   8b5b0:	008e9e40 	call	8e9e4 <__multiply>
   8b5b4:	d9001617 	ldw	r4,88(sp)
   8b5b8:	d9400717 	ldw	r5,28(sp)
   8b5bc:	1023883a 	mov	r17,r2
   8b5c0:	008df540 	call	8df54 <_Bfree>
   8b5c4:	dc400715 	stw	r17,28(sp)
   8b5c8:	d9001017 	ldw	r4,64(sp)
   8b5cc:	248dc83a 	sub	r6,r4,r18
   8b5d0:	30010e1e 	bne	r6,zero,8ba0c <_dtoa_r+0xc80>
   8b5d4:	d9001617 	ldw	r4,88(sp)
   8b5d8:	04400044 	movi	r17,1
   8b5dc:	880b883a 	mov	r5,r17
   8b5e0:	008ec380 	call	8ec38 <__i2b>
   8b5e4:	d9800917 	ldw	r6,36(sp)
   8b5e8:	1025883a 	mov	r18,r2
   8b5ec:	0180040e 	bge	zero,r6,8b600 <_dtoa_r+0x874>
   8b5f0:	d9001617 	ldw	r4,88(sp)
   8b5f4:	100b883a 	mov	r5,r2
   8b5f8:	008eda00 	call	8eda0 <__pow5mult>
   8b5fc:	1025883a 	mov	r18,r2
   8b600:	d8801717 	ldw	r2,92(sp)
   8b604:	8880f30e 	bge	r17,r2,8b9d4 <_dtoa_r+0xc48>
   8b608:	0023883a 	mov	r17,zero
   8b60c:	d9800917 	ldw	r6,36(sp)
   8b610:	30019e1e 	bne	r6,zero,8bc8c <_dtoa_r+0xf00>
   8b614:	00c00044 	movi	r3,1
   8b618:	d9000a17 	ldw	r4,40(sp)
   8b61c:	20c5883a 	add	r2,r4,r3
   8b620:	10c007cc 	andi	r3,r2,31
   8b624:	1800841e 	bne	r3,zero,8b838 <_dtoa_r+0xaac>
   8b628:	00800704 	movi	r2,28
   8b62c:	d9000a17 	ldw	r4,40(sp)
   8b630:	d9801117 	ldw	r6,68(sp)
   8b634:	80a1883a 	add	r16,r16,r2
   8b638:	2089883a 	add	r4,r4,r2
   8b63c:	308d883a 	add	r6,r6,r2
   8b640:	d9000a15 	stw	r4,40(sp)
   8b644:	d9801115 	stw	r6,68(sp)
   8b648:	d8801117 	ldw	r2,68(sp)
   8b64c:	0080050e 	bge	zero,r2,8b664 <_dtoa_r+0x8d8>
   8b650:	d9400717 	ldw	r5,28(sp)
   8b654:	d9001617 	ldw	r4,88(sp)
   8b658:	100d883a 	mov	r6,r2
   8b65c:	008e8980 	call	8e898 <__lshift>
   8b660:	d8800715 	stw	r2,28(sp)
   8b664:	d8c00a17 	ldw	r3,40(sp)
   8b668:	00c0050e 	bge	zero,r3,8b680 <_dtoa_r+0x8f4>
   8b66c:	d9001617 	ldw	r4,88(sp)
   8b670:	900b883a 	mov	r5,r18
   8b674:	180d883a 	mov	r6,r3
   8b678:	008e8980 	call	8e898 <__lshift>
   8b67c:	1025883a 	mov	r18,r2
   8b680:	d9000c17 	ldw	r4,48(sp)
   8b684:	2005003a 	cmpeq	r2,r4,zero
   8b688:	10016f26 	beq	r2,zero,8bc48 <_dtoa_r+0xebc>
   8b68c:	d9000f17 	ldw	r4,60(sp)
   8b690:	0102170e 	bge	zero,r4,8bef0 <_dtoa_r+0x1164>
   8b694:	d9800b17 	ldw	r6,44(sp)
   8b698:	3005003a 	cmpeq	r2,r6,zero
   8b69c:	1000881e 	bne	r2,zero,8b8c0 <_dtoa_r+0xb34>
   8b6a0:	0400050e 	bge	zero,r16,8b6b8 <_dtoa_r+0x92c>
   8b6a4:	d9001617 	ldw	r4,88(sp)
   8b6a8:	980b883a 	mov	r5,r19
   8b6ac:	800d883a 	mov	r6,r16
   8b6b0:	008e8980 	call	8e898 <__lshift>
   8b6b4:	1027883a 	mov	r19,r2
   8b6b8:	8804c03a 	cmpne	r2,r17,zero
   8b6bc:	1002541e 	bne	r2,zero,8c010 <_dtoa_r+0x1284>
   8b6c0:	980b883a 	mov	r5,r19
   8b6c4:	dd800517 	ldw	r22,20(sp)
   8b6c8:	dcc00615 	stw	r19,24(sp)
   8b6cc:	a700004c 	andi	fp,r20,1
   8b6d0:	2827883a 	mov	r19,r5
   8b6d4:	d9000717 	ldw	r4,28(sp)
   8b6d8:	900b883a 	mov	r5,r18
   8b6dc:	008ab480 	call	8ab48 <quorem>
   8b6e0:	d9000717 	ldw	r4,28(sp)
   8b6e4:	d9400617 	ldw	r5,24(sp)
   8b6e8:	1023883a 	mov	r17,r2
   8b6ec:	8dc00c04 	addi	r23,r17,48
   8b6f0:	008e0b00 	call	8e0b0 <__mcmp>
   8b6f4:	d9001617 	ldw	r4,88(sp)
   8b6f8:	900b883a 	mov	r5,r18
   8b6fc:	980d883a 	mov	r6,r19
   8b700:	1029883a 	mov	r20,r2
   8b704:	008e70c0 	call	8e70c <__mdiff>
   8b708:	102b883a 	mov	r21,r2
   8b70c:	10800317 	ldw	r2,12(r2)
   8b710:	1001281e 	bne	r2,zero,8bbb4 <_dtoa_r+0xe28>
   8b714:	d9000717 	ldw	r4,28(sp)
   8b718:	a80b883a 	mov	r5,r21
   8b71c:	008e0b00 	call	8e0b0 <__mcmp>
   8b720:	d9001617 	ldw	r4,88(sp)
   8b724:	1021883a 	mov	r16,r2
   8b728:	a80b883a 	mov	r5,r21
   8b72c:	008df540 	call	8df54 <_Bfree>
   8b730:	8000041e 	bne	r16,zero,8b744 <_dtoa_r+0x9b8>
   8b734:	d8801717 	ldw	r2,92(sp)
   8b738:	1000021e 	bne	r2,zero,8b744 <_dtoa_r+0x9b8>
   8b73c:	e004c03a 	cmpne	r2,fp,zero
   8b740:	10011726 	beq	r2,zero,8bba0 <_dtoa_r+0xe14>
   8b744:	a0010616 	blt	r20,zero,8bb60 <_dtoa_r+0xdd4>
   8b748:	a000041e 	bne	r20,zero,8b75c <_dtoa_r+0x9d0>
   8b74c:	d8c01717 	ldw	r3,92(sp)
   8b750:	1800021e 	bne	r3,zero,8b75c <_dtoa_r+0x9d0>
   8b754:	e004c03a 	cmpne	r2,fp,zero
   8b758:	10010126 	beq	r2,zero,8bb60 <_dtoa_r+0xdd4>
   8b75c:	04023d16 	blt	zero,r16,8c054 <_dtoa_r+0x12c8>
   8b760:	b5c00005 	stb	r23,0(r22)
   8b764:	d9800517 	ldw	r6,20(sp)
   8b768:	d9000f17 	ldw	r4,60(sp)
   8b76c:	b5800044 	addi	r22,r22,1
   8b770:	3105883a 	add	r2,r6,r4
   8b774:	b0806526 	beq	r22,r2,8b90c <_dtoa_r+0xb80>
   8b778:	d9400717 	ldw	r5,28(sp)
   8b77c:	d9001617 	ldw	r4,88(sp)
   8b780:	01800284 	movi	r6,10
   8b784:	000f883a 	mov	r7,zero
   8b788:	008ec740 	call	8ec74 <__multadd>
   8b78c:	d8800715 	stw	r2,28(sp)
   8b790:	d8800617 	ldw	r2,24(sp)
   8b794:	14c10c26 	beq	r2,r19,8bbc8 <_dtoa_r+0xe3c>
   8b798:	d9400617 	ldw	r5,24(sp)
   8b79c:	d9001617 	ldw	r4,88(sp)
   8b7a0:	01800284 	movi	r6,10
   8b7a4:	000f883a 	mov	r7,zero
   8b7a8:	008ec740 	call	8ec74 <__multadd>
   8b7ac:	d9001617 	ldw	r4,88(sp)
   8b7b0:	980b883a 	mov	r5,r19
   8b7b4:	01800284 	movi	r6,10
   8b7b8:	000f883a 	mov	r7,zero
   8b7bc:	d8800615 	stw	r2,24(sp)
   8b7c0:	008ec740 	call	8ec74 <__multadd>
   8b7c4:	1027883a 	mov	r19,r2
   8b7c8:	003fc206 	br	8b6d4 <_dtoa_r+0x948>
   8b7cc:	2445c83a 	sub	r2,r4,r17
   8b7d0:	a088983a 	sll	r4,r20,r2
   8b7d4:	003e4b06 	br	8b104 <_dtoa_r+0x378>
   8b7d8:	01bfffc4 	movi	r6,-1
   8b7dc:	00800044 	movi	r2,1
   8b7e0:	d9800e15 	stw	r6,56(sp)
   8b7e4:	d9800f15 	stw	r6,60(sp)
   8b7e8:	d8800b15 	stw	r2,44(sp)
   8b7ec:	d8c01617 	ldw	r3,88(sp)
   8b7f0:	008005c4 	movi	r2,23
   8b7f4:	18001115 	stw	zero,68(r3)
   8b7f8:	1580082e 	bgeu	r2,r22,8b81c <_dtoa_r+0xa90>
   8b7fc:	00c00104 	movi	r3,4
   8b800:	0009883a 	mov	r4,zero
   8b804:	18c7883a 	add	r3,r3,r3
   8b808:	18800504 	addi	r2,r3,20
   8b80c:	21000044 	addi	r4,r4,1
   8b810:	b0bffc2e 	bgeu	r22,r2,8b804 <_dtoa_r+0xa78>
   8b814:	d9801617 	ldw	r6,88(sp)
   8b818:	31001115 	stw	r4,68(r6)
   8b81c:	dc000f17 	ldw	r16,60(sp)
   8b820:	003e4b06 	br	8b150 <_dtoa_r+0x3c4>
   8b824:	d9801717 	ldw	r6,92(sp)
   8b828:	0023883a 	mov	r17,zero
   8b82c:	31bfff04 	addi	r6,r6,-4
   8b830:	d9801715 	stw	r6,92(sp)
   8b834:	003df806 	br	8b018 <_dtoa_r+0x28c>
   8b838:	00800804 	movi	r2,32
   8b83c:	10c9c83a 	sub	r4,r2,r3
   8b840:	00c00104 	movi	r3,4
   8b844:	19005a16 	blt	r3,r4,8b9b0 <_dtoa_r+0xc24>
   8b848:	008000c4 	movi	r2,3
   8b84c:	113f7e16 	blt	r2,r4,8b648 <_dtoa_r+0x8bc>
   8b850:	20800704 	addi	r2,r4,28
   8b854:	003f7506 	br	8b62c <_dtoa_r+0x8a0>
   8b858:	d9801717 	ldw	r6,92(sp)
   8b85c:	00800044 	movi	r2,1
   8b860:	1180a10e 	bge	r2,r6,8bae8 <_dtoa_r+0xd5c>
   8b864:	d9800f17 	ldw	r6,60(sp)
   8b868:	d8c01017 	ldw	r3,64(sp)
   8b86c:	30bfffc4 	addi	r2,r6,-1
   8b870:	1881c616 	blt	r3,r2,8bf8c <_dtoa_r+0x1200>
   8b874:	18a5c83a 	sub	r18,r3,r2
   8b878:	d8800f17 	ldw	r2,60(sp)
   8b87c:	10026216 	blt	r2,zero,8c208 <_dtoa_r+0x147c>
   8b880:	dc001117 	ldw	r16,68(sp)
   8b884:	1007883a 	mov	r3,r2
   8b888:	d9800a17 	ldw	r6,40(sp)
   8b88c:	d8801117 	ldw	r2,68(sp)
   8b890:	d9001617 	ldw	r4,88(sp)
   8b894:	30cd883a 	add	r6,r6,r3
   8b898:	10c5883a 	add	r2,r2,r3
   8b89c:	01400044 	movi	r5,1
   8b8a0:	d9800a15 	stw	r6,40(sp)
   8b8a4:	d8801115 	stw	r2,68(sp)
   8b8a8:	008ec380 	call	8ec38 <__i2b>
   8b8ac:	1027883a 	mov	r19,r2
   8b8b0:	003f2506 	br	8b548 <_dtoa_r+0x7bc>
   8b8b4:	00c002b4 	movhi	r3,10
   8b8b8:	18c23c04 	addi	r3,r3,2288
   8b8bc:	003d6706 	br	8ae5c <_dtoa_r+0xd0>
   8b8c0:	dd800517 	ldw	r22,20(sp)
   8b8c4:	04000044 	movi	r16,1
   8b8c8:	00000706 	br	8b8e8 <_dtoa_r+0xb5c>
   8b8cc:	d9400717 	ldw	r5,28(sp)
   8b8d0:	d9001617 	ldw	r4,88(sp)
   8b8d4:	01800284 	movi	r6,10
   8b8d8:	000f883a 	mov	r7,zero
   8b8dc:	008ec740 	call	8ec74 <__multadd>
   8b8e0:	d8800715 	stw	r2,28(sp)
   8b8e4:	84000044 	addi	r16,r16,1
   8b8e8:	d9000717 	ldw	r4,28(sp)
   8b8ec:	900b883a 	mov	r5,r18
   8b8f0:	008ab480 	call	8ab48 <quorem>
   8b8f4:	15c00c04 	addi	r23,r2,48
   8b8f8:	b5c00005 	stb	r23,0(r22)
   8b8fc:	d8c00f17 	ldw	r3,60(sp)
   8b900:	b5800044 	addi	r22,r22,1
   8b904:	80fff116 	blt	r16,r3,8b8cc <_dtoa_r+0xb40>
   8b908:	d8000615 	stw	zero,24(sp)
   8b90c:	d9400717 	ldw	r5,28(sp)
   8b910:	d9001617 	ldw	r4,88(sp)
   8b914:	01800044 	movi	r6,1
   8b918:	008e8980 	call	8e898 <__lshift>
   8b91c:	1009883a 	mov	r4,r2
   8b920:	900b883a 	mov	r5,r18
   8b924:	d8800715 	stw	r2,28(sp)
   8b928:	008e0b00 	call	8e0b0 <__mcmp>
   8b92c:	00803c0e 	bge	zero,r2,8ba20 <_dtoa_r+0xc94>
   8b930:	b009883a 	mov	r4,r22
   8b934:	213fffc4 	addi	r4,r4,-1
   8b938:	21400003 	ldbu	r5,0(r4)
   8b93c:	00800e44 	movi	r2,57
   8b940:	28c03fcc 	andi	r3,r5,255
   8b944:	18c0201c 	xori	r3,r3,128
   8b948:	18ffe004 	addi	r3,r3,-128
   8b94c:	1881981e 	bne	r3,r2,8bfb0 <_dtoa_r+0x1224>
   8b950:	d9800517 	ldw	r6,20(sp)
   8b954:	21bff71e 	bne	r4,r6,8b934 <_dtoa_r+0xba8>
   8b958:	d8800d17 	ldw	r2,52(sp)
   8b95c:	37000044 	addi	fp,r6,1
   8b960:	10800044 	addi	r2,r2,1
   8b964:	d8800d15 	stw	r2,52(sp)
   8b968:	00800c44 	movi	r2,49
   8b96c:	30800005 	stb	r2,0(r6)
   8b970:	d9001617 	ldw	r4,88(sp)
   8b974:	900b883a 	mov	r5,r18
   8b978:	008df540 	call	8df54 <_Bfree>
   8b97c:	983ecd26 	beq	r19,zero,8b4b4 <_dtoa_r+0x728>
   8b980:	d8c00617 	ldw	r3,24(sp)
   8b984:	18000426 	beq	r3,zero,8b998 <_dtoa_r+0xc0c>
   8b988:	1cc00326 	beq	r3,r19,8b998 <_dtoa_r+0xc0c>
   8b98c:	d9001617 	ldw	r4,88(sp)
   8b990:	180b883a 	mov	r5,r3
   8b994:	008df540 	call	8df54 <_Bfree>
   8b998:	d9001617 	ldw	r4,88(sp)
   8b99c:	980b883a 	mov	r5,r19
   8b9a0:	008df540 	call	8df54 <_Bfree>
   8b9a4:	003ec306 	br	8b4b4 <_dtoa_r+0x728>
   8b9a8:	1805883a 	mov	r2,r3
   8b9ac:	003eeb06 	br	8b55c <_dtoa_r+0x7d0>
   8b9b0:	d9800a17 	ldw	r6,40(sp)
   8b9b4:	d8c01117 	ldw	r3,68(sp)
   8b9b8:	20bfff04 	addi	r2,r4,-4
   8b9bc:	308d883a 	add	r6,r6,r2
   8b9c0:	1887883a 	add	r3,r3,r2
   8b9c4:	80a1883a 	add	r16,r16,r2
   8b9c8:	d9800a15 	stw	r6,40(sp)
   8b9cc:	d8c01115 	stw	r3,68(sp)
   8b9d0:	003f1d06 	br	8b648 <_dtoa_r+0x8bc>
   8b9d4:	a03f0c1e 	bne	r20,zero,8b608 <_dtoa_r+0x87c>
   8b9d8:	00800434 	movhi	r2,16
   8b9dc:	10bfffc4 	addi	r2,r2,-1
   8b9e0:	a884703a 	and	r2,r21,r2
   8b9e4:	103f081e 	bne	r2,zero,8b608 <_dtoa_r+0x87c>
   8b9e8:	a89ffc2c 	andhi	r2,r21,32752
   8b9ec:	103f0626 	beq	r2,zero,8b608 <_dtoa_r+0x87c>
   8b9f0:	d8c01117 	ldw	r3,68(sp)
   8b9f4:	d9000a17 	ldw	r4,40(sp)
   8b9f8:	18c00044 	addi	r3,r3,1
   8b9fc:	21000044 	addi	r4,r4,1
   8ba00:	d8c01115 	stw	r3,68(sp)
   8ba04:	d9000a15 	stw	r4,40(sp)
   8ba08:	003f0006 	br	8b60c <_dtoa_r+0x880>
   8ba0c:	d9400717 	ldw	r5,28(sp)
   8ba10:	d9001617 	ldw	r4,88(sp)
   8ba14:	008eda00 	call	8eda0 <__pow5mult>
   8ba18:	d8800715 	stw	r2,28(sp)
   8ba1c:	003eed06 	br	8b5d4 <_dtoa_r+0x848>
   8ba20:	1000021e 	bne	r2,zero,8ba2c <_dtoa_r+0xca0>
   8ba24:	b880004c 	andi	r2,r23,1
   8ba28:	103fc11e 	bne	r2,zero,8b930 <_dtoa_r+0xba4>
   8ba2c:	b5bfffc4 	addi	r22,r22,-1
   8ba30:	b0c00007 	ldb	r3,0(r22)
   8ba34:	00800c04 	movi	r2,48
   8ba38:	18bffc26 	beq	r3,r2,8ba2c <_dtoa_r+0xca0>
   8ba3c:	b7000044 	addi	fp,r22,1
   8ba40:	003fcb06 	br	8b970 <_dtoa_r+0xbe4>
   8ba44:	d9800d17 	ldw	r6,52(sp)
   8ba48:	018fc83a 	sub	r7,zero,r6
   8ba4c:	3801f726 	beq	r7,zero,8c22c <_dtoa_r+0x14a0>
   8ba50:	398003cc 	andi	r6,r7,15
   8ba54:	300c90fa 	slli	r6,r6,3
   8ba58:	014002b4 	movhi	r5,10
   8ba5c:	29425904 	addi	r5,r5,2404
   8ba60:	d9001217 	ldw	r4,72(sp)
   8ba64:	314d883a 	add	r6,r6,r5
   8ba68:	30c00117 	ldw	r3,4(r6)
   8ba6c:	30800017 	ldw	r2,0(r6)
   8ba70:	d9401317 	ldw	r5,76(sp)
   8ba74:	3821d13a 	srai	r16,r7,4
   8ba78:	100d883a 	mov	r6,r2
   8ba7c:	180f883a 	mov	r7,r3
   8ba80:	009126c0 	call	9126c <__muldf3>
   8ba84:	1011883a 	mov	r8,r2
   8ba88:	1813883a 	mov	r9,r3
   8ba8c:	1029883a 	mov	r20,r2
   8ba90:	182b883a 	mov	r21,r3
   8ba94:	8001e526 	beq	r16,zero,8c22c <_dtoa_r+0x14a0>
   8ba98:	05800084 	movi	r22,2
   8ba9c:	044002b4 	movhi	r17,10
   8baa0:	8c428b04 	addi	r17,r17,2604
   8baa4:	8080004c 	andi	r2,r16,1
   8baa8:	1005003a 	cmpeq	r2,r2,zero
   8baac:	1000081e 	bne	r2,zero,8bad0 <_dtoa_r+0xd44>
   8bab0:	89800017 	ldw	r6,0(r17)
   8bab4:	89c00117 	ldw	r7,4(r17)
   8bab8:	480b883a 	mov	r5,r9
   8babc:	4009883a 	mov	r4,r8
   8bac0:	009126c0 	call	9126c <__muldf3>
   8bac4:	1011883a 	mov	r8,r2
   8bac8:	b5800044 	addi	r22,r22,1
   8bacc:	1813883a 	mov	r9,r3
   8bad0:	8021d07a 	srai	r16,r16,1
   8bad4:	8c400204 	addi	r17,r17,8
   8bad8:	803ff21e 	bne	r16,zero,8baa4 <_dtoa_r+0xd18>
   8badc:	4029883a 	mov	r20,r8
   8bae0:	482b883a 	mov	r21,r9
   8bae4:	003dca06 	br	8b210 <_dtoa_r+0x484>
   8bae8:	d9000817 	ldw	r4,32(sp)
   8baec:	2005003a 	cmpeq	r2,r4,zero
   8baf0:	1001f61e 	bne	r2,zero,8c2cc <_dtoa_r+0x1540>
   8baf4:	dc001117 	ldw	r16,68(sp)
   8baf8:	dc801017 	ldw	r18,64(sp)
   8bafc:	18c10cc4 	addi	r3,r3,1075
   8bb00:	003f6106 	br	8b888 <_dtoa_r+0xafc>
   8bb04:	d8000b15 	stw	zero,44(sp)
   8bb08:	d9802617 	ldw	r6,152(sp)
   8bb0c:	d8c00d17 	ldw	r3,52(sp)
   8bb10:	30800044 	addi	r2,r6,1
   8bb14:	18ad883a 	add	r22,r3,r2
   8bb18:	b13fffc4 	addi	r4,r22,-1
   8bb1c:	d9000e15 	stw	r4,56(sp)
   8bb20:	0581f60e 	bge	zero,r22,8c2fc <_dtoa_r+0x1570>
   8bb24:	dd800f15 	stw	r22,60(sp)
   8bb28:	003f3006 	br	8b7ec <_dtoa_r+0xa60>
   8bb2c:	d8000b15 	stw	zero,44(sp)
   8bb30:	d9002617 	ldw	r4,152(sp)
   8bb34:	0101eb0e 	bge	zero,r4,8c2e4 <_dtoa_r+0x1558>
   8bb38:	202d883a 	mov	r22,r4
   8bb3c:	d9000e15 	stw	r4,56(sp)
   8bb40:	d9000f15 	stw	r4,60(sp)
   8bb44:	003f2906 	br	8b7ec <_dtoa_r+0xa60>
   8bb48:	01800044 	movi	r6,1
   8bb4c:	d9800b15 	stw	r6,44(sp)
   8bb50:	003ff706 	br	8bb30 <_dtoa_r+0xda4>
   8bb54:	01000044 	movi	r4,1
   8bb58:	d9000b15 	stw	r4,44(sp)
   8bb5c:	003fea06 	br	8bb08 <_dtoa_r+0xd7c>
   8bb60:	04000c0e 	bge	zero,r16,8bb94 <_dtoa_r+0xe08>
   8bb64:	d9400717 	ldw	r5,28(sp)
   8bb68:	d9001617 	ldw	r4,88(sp)
   8bb6c:	01800044 	movi	r6,1
   8bb70:	008e8980 	call	8e898 <__lshift>
   8bb74:	1009883a 	mov	r4,r2
   8bb78:	900b883a 	mov	r5,r18
   8bb7c:	d8800715 	stw	r2,28(sp)
   8bb80:	008e0b00 	call	8e0b0 <__mcmp>
   8bb84:	0081e00e 	bge	zero,r2,8c308 <_dtoa_r+0x157c>
   8bb88:	bdc00044 	addi	r23,r23,1
   8bb8c:	00800e84 	movi	r2,58
   8bb90:	b881a226 	beq	r23,r2,8c21c <_dtoa_r+0x1490>
   8bb94:	b7000044 	addi	fp,r22,1
   8bb98:	b5c00005 	stb	r23,0(r22)
   8bb9c:	003f7406 	br	8b970 <_dtoa_r+0xbe4>
   8bba0:	00800e44 	movi	r2,57
   8bba4:	b8819d26 	beq	r23,r2,8c21c <_dtoa_r+0x1490>
   8bba8:	053ffa0e 	bge	zero,r20,8bb94 <_dtoa_r+0xe08>
   8bbac:	8dc00c44 	addi	r23,r17,49
   8bbb0:	003ff806 	br	8bb94 <_dtoa_r+0xe08>
   8bbb4:	d9001617 	ldw	r4,88(sp)
   8bbb8:	a80b883a 	mov	r5,r21
   8bbbc:	04000044 	movi	r16,1
   8bbc0:	008df540 	call	8df54 <_Bfree>
   8bbc4:	003edf06 	br	8b744 <_dtoa_r+0x9b8>
   8bbc8:	d9001617 	ldw	r4,88(sp)
   8bbcc:	980b883a 	mov	r5,r19
   8bbd0:	01800284 	movi	r6,10
   8bbd4:	000f883a 	mov	r7,zero
   8bbd8:	008ec740 	call	8ec74 <__multadd>
   8bbdc:	1027883a 	mov	r19,r2
   8bbe0:	d8800615 	stw	r2,24(sp)
   8bbe4:	003ebb06 	br	8b6d4 <_dtoa_r+0x948>
   8bbe8:	d9801117 	ldw	r6,68(sp)
   8bbec:	d8800d17 	ldw	r2,52(sp)
   8bbf0:	d8000915 	stw	zero,36(sp)
   8bbf4:	308dc83a 	sub	r6,r6,r2
   8bbf8:	0087c83a 	sub	r3,zero,r2
   8bbfc:	d9801115 	stw	r6,68(sp)
   8bc00:	d8c01015 	stw	r3,64(sp)
   8bc04:	003cfe06 	br	8b000 <_dtoa_r+0x274>
   8bc08:	018dc83a 	sub	r6,zero,r6
   8bc0c:	d9801115 	stw	r6,68(sp)
   8bc10:	d8000a15 	stw	zero,40(sp)
   8bc14:	003cf306 	br	8afe4 <_dtoa_r+0x258>
   8bc18:	d9000d17 	ldw	r4,52(sp)
   8bc1c:	0091b300 	call	91b30 <__floatsidf>
   8bc20:	880b883a 	mov	r5,r17
   8bc24:	8009883a 	mov	r4,r16
   8bc28:	180f883a 	mov	r7,r3
   8bc2c:	100d883a 	mov	r6,r2
   8bc30:	00919100 	call	91910 <__nedf2>
   8bc34:	103ce126 	beq	r2,zero,8afbc <_dtoa_r+0x230>
   8bc38:	d9800d17 	ldw	r6,52(sp)
   8bc3c:	31bfffc4 	addi	r6,r6,-1
   8bc40:	d9800d15 	stw	r6,52(sp)
   8bc44:	003cdd06 	br	8afbc <_dtoa_r+0x230>
   8bc48:	d9000717 	ldw	r4,28(sp)
   8bc4c:	900b883a 	mov	r5,r18
   8bc50:	008e0b00 	call	8e0b0 <__mcmp>
   8bc54:	103e8d0e 	bge	r2,zero,8b68c <_dtoa_r+0x900>
   8bc58:	d9400717 	ldw	r5,28(sp)
   8bc5c:	d9001617 	ldw	r4,88(sp)
   8bc60:	01800284 	movi	r6,10
   8bc64:	000f883a 	mov	r7,zero
   8bc68:	008ec740 	call	8ec74 <__multadd>
   8bc6c:	d9800d17 	ldw	r6,52(sp)
   8bc70:	d8800715 	stw	r2,28(sp)
   8bc74:	31bfffc4 	addi	r6,r6,-1
   8bc78:	d9800d15 	stw	r6,52(sp)
   8bc7c:	b001a71e 	bne	r22,zero,8c31c <_dtoa_r+0x1590>
   8bc80:	d8800e17 	ldw	r2,56(sp)
   8bc84:	d8800f15 	stw	r2,60(sp)
   8bc88:	003e8006 	br	8b68c <_dtoa_r+0x900>
   8bc8c:	90800417 	ldw	r2,16(r18)
   8bc90:	1085883a 	add	r2,r2,r2
   8bc94:	1085883a 	add	r2,r2,r2
   8bc98:	1485883a 	add	r2,r2,r18
   8bc9c:	11000417 	ldw	r4,16(r2)
   8bca0:	008df7c0 	call	8df7c <__hi0bits>
   8bca4:	00c00804 	movi	r3,32
   8bca8:	1887c83a 	sub	r3,r3,r2
   8bcac:	003e5a06 	br	8b618 <_dtoa_r+0x88c>
   8bcb0:	d9400717 	ldw	r5,28(sp)
   8bcb4:	d9801017 	ldw	r6,64(sp)
   8bcb8:	d9001617 	ldw	r4,88(sp)
   8bcbc:	008eda00 	call	8eda0 <__pow5mult>
   8bcc0:	d8800715 	stw	r2,28(sp)
   8bcc4:	003e4306 	br	8b5d4 <_dtoa_r+0x848>
   8bcc8:	d9800f17 	ldw	r6,60(sp)
   8bccc:	d8800d17 	ldw	r2,52(sp)
   8bcd0:	d9800315 	stw	r6,12(sp)
   8bcd4:	d8800415 	stw	r2,16(sp)
   8bcd8:	d8c00b17 	ldw	r3,44(sp)
   8bcdc:	1805003a 	cmpeq	r2,r3,zero
   8bce0:	1000e21e 	bne	r2,zero,8c06c <_dtoa_r+0x12e0>
   8bce4:	d9000317 	ldw	r4,12(sp)
   8bce8:	0005883a 	mov	r2,zero
   8bcec:	00cff834 	movhi	r3,16352
   8bcf0:	200c90fa 	slli	r6,r4,3
   8bcf4:	010002b4 	movhi	r4,10
   8bcf8:	21025904 	addi	r4,r4,2404
   8bcfc:	180b883a 	mov	r5,r3
   8bd00:	310d883a 	add	r6,r6,r4
   8bd04:	327fff17 	ldw	r9,-4(r6)
   8bd08:	323ffe17 	ldw	r8,-8(r6)
   8bd0c:	1009883a 	mov	r4,r2
   8bd10:	480f883a 	mov	r7,r9
   8bd14:	400d883a 	mov	r6,r8
   8bd18:	00916300 	call	91630 <__divdf3>
   8bd1c:	180b883a 	mov	r5,r3
   8bd20:	b00d883a 	mov	r6,r22
   8bd24:	b80f883a 	mov	r7,r23
   8bd28:	1009883a 	mov	r4,r2
   8bd2c:	00911780 	call	91178 <__subdf3>
   8bd30:	a80b883a 	mov	r5,r21
   8bd34:	a009883a 	mov	r4,r20
   8bd38:	d8c01915 	stw	r3,100(sp)
   8bd3c:	d8801815 	stw	r2,96(sp)
   8bd40:	0091c280 	call	91c28 <__fixdfsi>
   8bd44:	1009883a 	mov	r4,r2
   8bd48:	1027883a 	mov	r19,r2
   8bd4c:	0091b300 	call	91b30 <__floatsidf>
   8bd50:	a80b883a 	mov	r5,r21
   8bd54:	a009883a 	mov	r4,r20
   8bd58:	180f883a 	mov	r7,r3
   8bd5c:	100d883a 	mov	r6,r2
   8bd60:	00911780 	call	91178 <__subdf3>
   8bd64:	d9801817 	ldw	r6,96(sp)
   8bd68:	1823883a 	mov	r17,r3
   8bd6c:	d8801415 	stw	r2,80(sp)
   8bd70:	302d883a 	mov	r22,r6
   8bd74:	d9800517 	ldw	r6,20(sp)
   8bd78:	9cc00c04 	addi	r19,r19,48
   8bd7c:	dc401515 	stw	r17,84(sp)
   8bd80:	d8c01917 	ldw	r3,100(sp)
   8bd84:	34c00005 	stb	r19,0(r6)
   8bd88:	d8800517 	ldw	r2,20(sp)
   8bd8c:	d9401917 	ldw	r5,100(sp)
   8bd90:	d9801417 	ldw	r6,80(sp)
   8bd94:	b009883a 	mov	r4,r22
   8bd98:	880f883a 	mov	r7,r17
   8bd9c:	182f883a 	mov	r23,r3
   8bda0:	17000044 	addi	fp,r2,1
   8bda4:	00919980 	call	91998 <__gtdf2>
   8bda8:	00804e16 	blt	zero,r2,8bee4 <_dtoa_r+0x1158>
   8bdac:	d9801417 	ldw	r6,80(sp)
   8bdb0:	0005883a 	mov	r2,zero
   8bdb4:	00cffc34 	movhi	r3,16368
   8bdb8:	180b883a 	mov	r5,r3
   8bdbc:	880f883a 	mov	r7,r17
   8bdc0:	1009883a 	mov	r4,r2
   8bdc4:	00911780 	call	91178 <__subdf3>
   8bdc8:	d9401917 	ldw	r5,100(sp)
   8bdcc:	180f883a 	mov	r7,r3
   8bdd0:	b009883a 	mov	r4,r22
   8bdd4:	100d883a 	mov	r6,r2
   8bdd8:	00919980 	call	91998 <__gtdf2>
   8bddc:	00bda216 	blt	zero,r2,8b468 <_dtoa_r+0x6dc>
   8bde0:	d8c00317 	ldw	r3,12(sp)
   8bde4:	00800044 	movi	r2,1
   8bde8:	10c01216 	blt	r2,r3,8be34 <_dtoa_r+0x10a8>
   8bdec:	003d4506 	br	8b304 <_dtoa_r+0x578>
   8bdf0:	d9801417 	ldw	r6,80(sp)
   8bdf4:	0005883a 	mov	r2,zero
   8bdf8:	00cffc34 	movhi	r3,16368
   8bdfc:	180b883a 	mov	r5,r3
   8be00:	880f883a 	mov	r7,r17
   8be04:	1009883a 	mov	r4,r2
   8be08:	00911780 	call	91178 <__subdf3>
   8be0c:	d9c01b17 	ldw	r7,108(sp)
   8be10:	180b883a 	mov	r5,r3
   8be14:	1009883a 	mov	r4,r2
   8be18:	b00d883a 	mov	r6,r22
   8be1c:	0091aa80 	call	91aa8 <__ltdf2>
   8be20:	103d9116 	blt	r2,zero,8b468 <_dtoa_r+0x6dc>
   8be24:	d9800517 	ldw	r6,20(sp)
   8be28:	d9000317 	ldw	r4,12(sp)
   8be2c:	3105883a 	add	r2,r6,r4
   8be30:	e0bd3426 	beq	fp,r2,8b304 <_dtoa_r+0x578>
   8be34:	04500934 	movhi	r17,16420
   8be38:	0021883a 	mov	r16,zero
   8be3c:	b80b883a 	mov	r5,r23
   8be40:	b009883a 	mov	r4,r22
   8be44:	800d883a 	mov	r6,r16
   8be48:	880f883a 	mov	r7,r17
   8be4c:	009126c0 	call	9126c <__muldf3>
   8be50:	d9401517 	ldw	r5,84(sp)
   8be54:	d9001417 	ldw	r4,80(sp)
   8be58:	880f883a 	mov	r7,r17
   8be5c:	000d883a 	mov	r6,zero
   8be60:	d8801a15 	stw	r2,104(sp)
   8be64:	d8c01b15 	stw	r3,108(sp)
   8be68:	009126c0 	call	9126c <__muldf3>
   8be6c:	180b883a 	mov	r5,r3
   8be70:	1009883a 	mov	r4,r2
   8be74:	1823883a 	mov	r17,r3
   8be78:	1021883a 	mov	r16,r2
   8be7c:	0091c280 	call	91c28 <__fixdfsi>
   8be80:	1009883a 	mov	r4,r2
   8be84:	102b883a 	mov	r21,r2
   8be88:	0091b300 	call	91b30 <__floatsidf>
   8be8c:	880b883a 	mov	r5,r17
   8be90:	8009883a 	mov	r4,r16
   8be94:	180f883a 	mov	r7,r3
   8be98:	100d883a 	mov	r6,r2
   8be9c:	00911780 	call	91178 <__subdf3>
   8bea0:	1021883a 	mov	r16,r2
   8bea4:	d9001b17 	ldw	r4,108(sp)
   8bea8:	1823883a 	mov	r17,r3
   8beac:	dc001415 	stw	r16,80(sp)
   8beb0:	ad400c04 	addi	r21,r21,48
   8beb4:	dc401515 	stw	r17,84(sp)
   8beb8:	d8801a17 	ldw	r2,104(sp)
   8bebc:	e5400005 	stb	r21,0(fp)
   8bec0:	202f883a 	mov	r23,r4
   8bec4:	d9c01b17 	ldw	r7,108(sp)
   8bec8:	d9001417 	ldw	r4,80(sp)
   8becc:	880b883a 	mov	r5,r17
   8bed0:	100d883a 	mov	r6,r2
   8bed4:	102d883a 	mov	r22,r2
   8bed8:	e7000044 	addi	fp,fp,1
   8bedc:	0091aa80 	call	91aa8 <__ltdf2>
   8bee0:	103fc30e 	bge	r2,zero,8bdf0 <_dtoa_r+0x1064>
   8bee4:	d9000417 	ldw	r4,16(sp)
   8bee8:	d9000d15 	stw	r4,52(sp)
   8beec:	003d7106 	br	8b4b4 <_dtoa_r+0x728>
   8bef0:	d9801717 	ldw	r6,92(sp)
   8bef4:	00800084 	movi	r2,2
   8bef8:	11bde60e 	bge	r2,r6,8b694 <_dtoa_r+0x908>
   8befc:	203cfb1e 	bne	r4,zero,8b2ec <_dtoa_r+0x560>
   8bf00:	d9001617 	ldw	r4,88(sp)
   8bf04:	900b883a 	mov	r5,r18
   8bf08:	01800144 	movi	r6,5
   8bf0c:	000f883a 	mov	r7,zero
   8bf10:	008ec740 	call	8ec74 <__multadd>
   8bf14:	d9000717 	ldw	r4,28(sp)
   8bf18:	100b883a 	mov	r5,r2
   8bf1c:	1025883a 	mov	r18,r2
   8bf20:	008e0b00 	call	8e0b0 <__mcmp>
   8bf24:	00bcf10e 	bge	zero,r2,8b2ec <_dtoa_r+0x560>
   8bf28:	d8c00d17 	ldw	r3,52(sp)
   8bf2c:	d9000517 	ldw	r4,20(sp)
   8bf30:	d8000615 	stw	zero,24(sp)
   8bf34:	18c00044 	addi	r3,r3,1
   8bf38:	d8c00d15 	stw	r3,52(sp)
   8bf3c:	00800c44 	movi	r2,49
   8bf40:	27000044 	addi	fp,r4,1
   8bf44:	20800005 	stb	r2,0(r4)
   8bf48:	003e8906 	br	8b970 <_dtoa_r+0xbe4>
   8bf4c:	d8c00517 	ldw	r3,20(sp)
   8bf50:	003bc206 	br	8ae5c <_dtoa_r+0xd0>
   8bf54:	018002b4 	movhi	r6,10
   8bf58:	31828b04 	addi	r6,r6,2604
   8bf5c:	30c00917 	ldw	r3,36(r6)
   8bf60:	30800817 	ldw	r2,32(r6)
   8bf64:	d9001217 	ldw	r4,72(sp)
   8bf68:	d9401317 	ldw	r5,76(sp)
   8bf6c:	180f883a 	mov	r7,r3
   8bf70:	100d883a 	mov	r6,r2
   8bf74:	00916300 	call	91630 <__divdf3>
   8bf78:	948003cc 	andi	r18,r18,15
   8bf7c:	058000c4 	movi	r22,3
   8bf80:	1029883a 	mov	r20,r2
   8bf84:	182b883a 	mov	r21,r3
   8bf88:	003c8906 	br	8b1b0 <_dtoa_r+0x424>
   8bf8c:	d9001017 	ldw	r4,64(sp)
   8bf90:	d9800917 	ldw	r6,36(sp)
   8bf94:	0025883a 	mov	r18,zero
   8bf98:	1105c83a 	sub	r2,r2,r4
   8bf9c:	2089883a 	add	r4,r4,r2
   8bfa0:	308d883a 	add	r6,r6,r2
   8bfa4:	d9001015 	stw	r4,64(sp)
   8bfa8:	d9800915 	stw	r6,36(sp)
   8bfac:	003e3206 	br	8b878 <_dtoa_r+0xaec>
   8bfb0:	28800044 	addi	r2,r5,1
   8bfb4:	27000044 	addi	fp,r4,1
   8bfb8:	20800005 	stb	r2,0(r4)
   8bfbc:	003e6c06 	br	8b970 <_dtoa_r+0xbe4>
   8bfc0:	d8800f17 	ldw	r2,60(sp)
   8bfc4:	00bce016 	blt	zero,r2,8b348 <_dtoa_r+0x5bc>
   8bfc8:	d9800f17 	ldw	r6,60(sp)
   8bfcc:	303cc51e 	bne	r6,zero,8b2e4 <_dtoa_r+0x558>
   8bfd0:	0005883a 	mov	r2,zero
   8bfd4:	00d00534 	movhi	r3,16404
   8bfd8:	980b883a 	mov	r5,r19
   8bfdc:	180f883a 	mov	r7,r3
   8bfe0:	9009883a 	mov	r4,r18
   8bfe4:	100d883a 	mov	r6,r2
   8bfe8:	009126c0 	call	9126c <__muldf3>
   8bfec:	180b883a 	mov	r5,r3
   8bff0:	a80f883a 	mov	r7,r21
   8bff4:	1009883a 	mov	r4,r2
   8bff8:	a00d883a 	mov	r6,r20
   8bffc:	0091a200 	call	91a20 <__gedf2>
   8c000:	103cb80e 	bge	r2,zero,8b2e4 <_dtoa_r+0x558>
   8c004:	0027883a 	mov	r19,zero
   8c008:	0025883a 	mov	r18,zero
   8c00c:	003fc606 	br	8bf28 <_dtoa_r+0x119c>
   8c010:	99400117 	ldw	r5,4(r19)
   8c014:	d9001617 	ldw	r4,88(sp)
   8c018:	008e4d40 	call	8e4d4 <_Balloc>
   8c01c:	99800417 	ldw	r6,16(r19)
   8c020:	11000304 	addi	r4,r2,12
   8c024:	99400304 	addi	r5,r19,12
   8c028:	318d883a 	add	r6,r6,r6
   8c02c:	318d883a 	add	r6,r6,r6
   8c030:	31800204 	addi	r6,r6,8
   8c034:	1023883a 	mov	r17,r2
   8c038:	008dd3c0 	call	8dd3c <memcpy>
   8c03c:	d9001617 	ldw	r4,88(sp)
   8c040:	880b883a 	mov	r5,r17
   8c044:	01800044 	movi	r6,1
   8c048:	008e8980 	call	8e898 <__lshift>
   8c04c:	100b883a 	mov	r5,r2
   8c050:	003d9c06 	br	8b6c4 <_dtoa_r+0x938>
   8c054:	00800e44 	movi	r2,57
   8c058:	b8807026 	beq	r23,r2,8c21c <_dtoa_r+0x1490>
   8c05c:	b8800044 	addi	r2,r23,1
   8c060:	b7000044 	addi	fp,r22,1
   8c064:	b0800005 	stb	r2,0(r22)
   8c068:	003e4106 	br	8b970 <_dtoa_r+0xbe4>
   8c06c:	d8800317 	ldw	r2,12(sp)
   8c070:	018002b4 	movhi	r6,10
   8c074:	31825904 	addi	r6,r6,2404
   8c078:	b009883a 	mov	r4,r22
   8c07c:	100e90fa 	slli	r7,r2,3
   8c080:	b80b883a 	mov	r5,r23
   8c084:	398f883a 	add	r7,r7,r6
   8c088:	38bffe17 	ldw	r2,-8(r7)
   8c08c:	d9800517 	ldw	r6,20(sp)
   8c090:	38ffff17 	ldw	r3,-4(r7)
   8c094:	37000044 	addi	fp,r6,1
   8c098:	180f883a 	mov	r7,r3
   8c09c:	100d883a 	mov	r6,r2
   8c0a0:	009126c0 	call	9126c <__muldf3>
   8c0a4:	a80b883a 	mov	r5,r21
   8c0a8:	a009883a 	mov	r4,r20
   8c0ac:	182f883a 	mov	r23,r3
   8c0b0:	102d883a 	mov	r22,r2
   8c0b4:	0091c280 	call	91c28 <__fixdfsi>
   8c0b8:	1009883a 	mov	r4,r2
   8c0bc:	1027883a 	mov	r19,r2
   8c0c0:	0091b300 	call	91b30 <__floatsidf>
   8c0c4:	a80b883a 	mov	r5,r21
   8c0c8:	a009883a 	mov	r4,r20
   8c0cc:	180f883a 	mov	r7,r3
   8c0d0:	100d883a 	mov	r6,r2
   8c0d4:	00911780 	call	91178 <__subdf3>
   8c0d8:	180b883a 	mov	r5,r3
   8c0dc:	d8c00517 	ldw	r3,20(sp)
   8c0e0:	9cc00c04 	addi	r19,r19,48
   8c0e4:	1009883a 	mov	r4,r2
   8c0e8:	1cc00005 	stb	r19,0(r3)
   8c0ec:	2021883a 	mov	r16,r4
   8c0f0:	d9000317 	ldw	r4,12(sp)
   8c0f4:	00800044 	movi	r2,1
   8c0f8:	2823883a 	mov	r17,r5
   8c0fc:	20802226 	beq	r4,r2,8c188 <_dtoa_r+0x13fc>
   8c100:	1029883a 	mov	r20,r2
   8c104:	0005883a 	mov	r2,zero
   8c108:	00d00934 	movhi	r3,16420
   8c10c:	180f883a 	mov	r7,r3
   8c110:	100d883a 	mov	r6,r2
   8c114:	880b883a 	mov	r5,r17
   8c118:	8009883a 	mov	r4,r16
   8c11c:	009126c0 	call	9126c <__muldf3>
   8c120:	180b883a 	mov	r5,r3
   8c124:	1009883a 	mov	r4,r2
   8c128:	1823883a 	mov	r17,r3
   8c12c:	1021883a 	mov	r16,r2
   8c130:	0091c280 	call	91c28 <__fixdfsi>
   8c134:	1009883a 	mov	r4,r2
   8c138:	102b883a 	mov	r21,r2
   8c13c:	0091b300 	call	91b30 <__floatsidf>
   8c140:	880b883a 	mov	r5,r17
   8c144:	8009883a 	mov	r4,r16
   8c148:	180f883a 	mov	r7,r3
   8c14c:	100d883a 	mov	r6,r2
   8c150:	00911780 	call	91178 <__subdf3>
   8c154:	180b883a 	mov	r5,r3
   8c158:	d8c00517 	ldw	r3,20(sp)
   8c15c:	1009883a 	mov	r4,r2
   8c160:	ad400c04 	addi	r21,r21,48
   8c164:	1d05883a 	add	r2,r3,r20
   8c168:	15400005 	stb	r21,0(r2)
   8c16c:	2021883a 	mov	r16,r4
   8c170:	d9000317 	ldw	r4,12(sp)
   8c174:	a5000044 	addi	r20,r20,1
   8c178:	2823883a 	mov	r17,r5
   8c17c:	a13fe11e 	bne	r20,r4,8c104 <_dtoa_r+0x1378>
   8c180:	e505883a 	add	r2,fp,r20
   8c184:	173fffc4 	addi	fp,r2,-1
   8c188:	0025883a 	mov	r18,zero
   8c18c:	04cff834 	movhi	r19,16352
   8c190:	b009883a 	mov	r4,r22
   8c194:	b80b883a 	mov	r5,r23
   8c198:	900d883a 	mov	r6,r18
   8c19c:	980f883a 	mov	r7,r19
   8c1a0:	00911f80 	call	911f8 <__adddf3>
   8c1a4:	180b883a 	mov	r5,r3
   8c1a8:	1009883a 	mov	r4,r2
   8c1ac:	800d883a 	mov	r6,r16
   8c1b0:	880f883a 	mov	r7,r17
   8c1b4:	0091aa80 	call	91aa8 <__ltdf2>
   8c1b8:	103cab16 	blt	r2,zero,8b468 <_dtoa_r+0x6dc>
   8c1bc:	0009883a 	mov	r4,zero
   8c1c0:	980b883a 	mov	r5,r19
   8c1c4:	b80f883a 	mov	r7,r23
   8c1c8:	b00d883a 	mov	r6,r22
   8c1cc:	00911780 	call	91178 <__subdf3>
   8c1d0:	180b883a 	mov	r5,r3
   8c1d4:	880f883a 	mov	r7,r17
   8c1d8:	1009883a 	mov	r4,r2
   8c1dc:	800d883a 	mov	r6,r16
   8c1e0:	00919980 	call	91998 <__gtdf2>
   8c1e4:	00bc470e 	bge	zero,r2,8b304 <_dtoa_r+0x578>
   8c1e8:	00c00c04 	movi	r3,48
   8c1ec:	e73fffc4 	addi	fp,fp,-1
   8c1f0:	e0800007 	ldb	r2,0(fp)
   8c1f4:	10fffd26 	beq	r2,r3,8c1ec <_dtoa_r+0x1460>
   8c1f8:	d9800417 	ldw	r6,16(sp)
   8c1fc:	e7000044 	addi	fp,fp,1
   8c200:	d9800d15 	stw	r6,52(sp)
   8c204:	003cab06 	br	8b4b4 <_dtoa_r+0x728>
   8c208:	d8c00f17 	ldw	r3,60(sp)
   8c20c:	d9001117 	ldw	r4,68(sp)
   8c210:	20e1c83a 	sub	r16,r4,r3
   8c214:	0007883a 	mov	r3,zero
   8c218:	003d9b06 	br	8b888 <_dtoa_r+0xafc>
   8c21c:	00800e44 	movi	r2,57
   8c220:	b0800005 	stb	r2,0(r22)
   8c224:	b5800044 	addi	r22,r22,1
   8c228:	003dc106 	br	8b930 <_dtoa_r+0xba4>
   8c22c:	05800084 	movi	r22,2
   8c230:	003bf706 	br	8b210 <_dtoa_r+0x484>
   8c234:	d9000f17 	ldw	r4,60(sp)
   8c238:	013c000e 	bge	zero,r4,8b23c <_dtoa_r+0x4b0>
   8c23c:	d9800e17 	ldw	r6,56(sp)
   8c240:	01bc300e 	bge	zero,r6,8b304 <_dtoa_r+0x578>
   8c244:	0005883a 	mov	r2,zero
   8c248:	00d00934 	movhi	r3,16420
   8c24c:	a80b883a 	mov	r5,r21
   8c250:	180f883a 	mov	r7,r3
   8c254:	a009883a 	mov	r4,r20
   8c258:	100d883a 	mov	r6,r2
   8c25c:	009126c0 	call	9126c <__muldf3>
   8c260:	b1000044 	addi	r4,r22,1
   8c264:	1021883a 	mov	r16,r2
   8c268:	1823883a 	mov	r17,r3
   8c26c:	0091b300 	call	91b30 <__floatsidf>
   8c270:	880b883a 	mov	r5,r17
   8c274:	8009883a 	mov	r4,r16
   8c278:	180f883a 	mov	r7,r3
   8c27c:	100d883a 	mov	r6,r2
   8c280:	009126c0 	call	9126c <__muldf3>
   8c284:	0011883a 	mov	r8,zero
   8c288:	02500734 	movhi	r9,16412
   8c28c:	180b883a 	mov	r5,r3
   8c290:	480f883a 	mov	r7,r9
   8c294:	1009883a 	mov	r4,r2
   8c298:	400d883a 	mov	r6,r8
   8c29c:	00911f80 	call	911f8 <__adddf3>
   8c2a0:	102d883a 	mov	r22,r2
   8c2a4:	00bf3034 	movhi	r2,64704
   8c2a8:	10ef883a 	add	r23,r2,r3
   8c2ac:	d8800d17 	ldw	r2,52(sp)
   8c2b0:	d8c00e17 	ldw	r3,56(sp)
   8c2b4:	8029883a 	mov	r20,r16
   8c2b8:	10bfffc4 	addi	r2,r2,-1
   8c2bc:	882b883a 	mov	r21,r17
   8c2c0:	d8800415 	stw	r2,16(sp)
   8c2c4:	d8c00315 	stw	r3,12(sp)
   8c2c8:	003e8306 	br	8bcd8 <_dtoa_r+0xf4c>
   8c2cc:	d8800117 	ldw	r2,4(sp)
   8c2d0:	dc001117 	ldw	r16,68(sp)
   8c2d4:	dc801017 	ldw	r18,64(sp)
   8c2d8:	00c00d84 	movi	r3,54
   8c2dc:	1887c83a 	sub	r3,r3,r2
   8c2e0:	003d6906 	br	8b888 <_dtoa_r+0xafc>
   8c2e4:	01800044 	movi	r6,1
   8c2e8:	3021883a 	mov	r16,r6
   8c2ec:	d9800f15 	stw	r6,60(sp)
   8c2f0:	d9802615 	stw	r6,152(sp)
   8c2f4:	d9800e15 	stw	r6,56(sp)
   8c2f8:	003b9306 	br	8b148 <_dtoa_r+0x3bc>
   8c2fc:	b021883a 	mov	r16,r22
   8c300:	dd800f15 	stw	r22,60(sp)
   8c304:	003b9006 	br	8b148 <_dtoa_r+0x3bc>
   8c308:	103e221e 	bne	r2,zero,8bb94 <_dtoa_r+0xe08>
   8c30c:	b880004c 	andi	r2,r23,1
   8c310:	1005003a 	cmpeq	r2,r2,zero
   8c314:	103e1f1e 	bne	r2,zero,8bb94 <_dtoa_r+0xe08>
   8c318:	003e1b06 	br	8bb88 <_dtoa_r+0xdfc>
   8c31c:	d9001617 	ldw	r4,88(sp)
   8c320:	980b883a 	mov	r5,r19
   8c324:	01800284 	movi	r6,10
   8c328:	000f883a 	mov	r7,zero
   8c32c:	008ec740 	call	8ec74 <__multadd>
   8c330:	d8c00e17 	ldw	r3,56(sp)
   8c334:	1027883a 	mov	r19,r2
   8c338:	d8c00f15 	stw	r3,60(sp)
   8c33c:	003cd306 	br	8b68c <_dtoa_r+0x900>

0008c340 <_fflush_r>:
   8c340:	defffb04 	addi	sp,sp,-20
   8c344:	dcc00315 	stw	r19,12(sp)
   8c348:	dc800215 	stw	r18,8(sp)
   8c34c:	dfc00415 	stw	ra,16(sp)
   8c350:	dc400115 	stw	r17,4(sp)
   8c354:	dc000015 	stw	r16,0(sp)
   8c358:	2027883a 	mov	r19,r4
   8c35c:	2825883a 	mov	r18,r5
   8c360:	20000226 	beq	r4,zero,8c36c <_fflush_r+0x2c>
   8c364:	20800e17 	ldw	r2,56(r4)
   8c368:	10005626 	beq	r2,zero,8c4c4 <_fflush_r+0x184>
   8c36c:	9100030b 	ldhu	r4,12(r18)
   8c370:	20ffffcc 	andi	r3,r4,65535
   8c374:	18e0001c 	xori	r3,r3,32768
   8c378:	18e00004 	addi	r3,r3,-32768
   8c37c:	1880020c 	andi	r2,r3,8
   8c380:	1000261e 	bne	r2,zero,8c41c <_fflush_r+0xdc>
   8c384:	90c00117 	ldw	r3,4(r18)
   8c388:	20820014 	ori	r2,r4,2048
   8c38c:	9080030d 	sth	r2,12(r18)
   8c390:	1009883a 	mov	r4,r2
   8c394:	00c0400e 	bge	zero,r3,8c498 <_fflush_r+0x158>
   8c398:	92000a17 	ldw	r8,40(r18)
   8c39c:	40004026 	beq	r8,zero,8c4a0 <_fflush_r+0x160>
   8c3a0:	2084000c 	andi	r2,r4,4096
   8c3a4:	10005326 	beq	r2,zero,8c4f4 <_fflush_r+0x1b4>
   8c3a8:	94001417 	ldw	r16,80(r18)
   8c3ac:	9080030b 	ldhu	r2,12(r18)
   8c3b0:	1080010c 	andi	r2,r2,4
   8c3b4:	1000481e 	bne	r2,zero,8c4d8 <_fflush_r+0x198>
   8c3b8:	91400717 	ldw	r5,28(r18)
   8c3bc:	9809883a 	mov	r4,r19
   8c3c0:	800d883a 	mov	r6,r16
   8c3c4:	000f883a 	mov	r7,zero
   8c3c8:	403ee83a 	callr	r8
   8c3cc:	8080261e 	bne	r16,r2,8c468 <_fflush_r+0x128>
   8c3d0:	9080030b 	ldhu	r2,12(r18)
   8c3d4:	91000417 	ldw	r4,16(r18)
   8c3d8:	90000115 	stw	zero,4(r18)
   8c3dc:	10bdffcc 	andi	r2,r2,63487
   8c3e0:	10ffffcc 	andi	r3,r2,65535
   8c3e4:	18c4000c 	andi	r3,r3,4096
   8c3e8:	9080030d 	sth	r2,12(r18)
   8c3ec:	91000015 	stw	r4,0(r18)
   8c3f0:	18002b26 	beq	r3,zero,8c4a0 <_fflush_r+0x160>
   8c3f4:	0007883a 	mov	r3,zero
   8c3f8:	1805883a 	mov	r2,r3
   8c3fc:	94001415 	stw	r16,80(r18)
   8c400:	dfc00417 	ldw	ra,16(sp)
   8c404:	dcc00317 	ldw	r19,12(sp)
   8c408:	dc800217 	ldw	r18,8(sp)
   8c40c:	dc400117 	ldw	r17,4(sp)
   8c410:	dc000017 	ldw	r16,0(sp)
   8c414:	dec00504 	addi	sp,sp,20
   8c418:	f800283a 	ret
   8c41c:	94400417 	ldw	r17,16(r18)
   8c420:	88001f26 	beq	r17,zero,8c4a0 <_fflush_r+0x160>
   8c424:	90800017 	ldw	r2,0(r18)
   8c428:	18c000cc 	andi	r3,r3,3
   8c42c:	94400015 	stw	r17,0(r18)
   8c430:	1461c83a 	sub	r16,r2,r17
   8c434:	18002526 	beq	r3,zero,8c4cc <_fflush_r+0x18c>
   8c438:	0005883a 	mov	r2,zero
   8c43c:	90800215 	stw	r2,8(r18)
   8c440:	0400170e 	bge	zero,r16,8c4a0 <_fflush_r+0x160>
   8c444:	90c00917 	ldw	r3,36(r18)
   8c448:	91400717 	ldw	r5,28(r18)
   8c44c:	880d883a 	mov	r6,r17
   8c450:	800f883a 	mov	r7,r16
   8c454:	9809883a 	mov	r4,r19
   8c458:	183ee83a 	callr	r3
   8c45c:	88a3883a 	add	r17,r17,r2
   8c460:	80a1c83a 	sub	r16,r16,r2
   8c464:	00bff616 	blt	zero,r2,8c440 <_fflush_r+0x100>
   8c468:	9080030b 	ldhu	r2,12(r18)
   8c46c:	00ffffc4 	movi	r3,-1
   8c470:	10801014 	ori	r2,r2,64
   8c474:	9080030d 	sth	r2,12(r18)
   8c478:	1805883a 	mov	r2,r3
   8c47c:	dfc00417 	ldw	ra,16(sp)
   8c480:	dcc00317 	ldw	r19,12(sp)
   8c484:	dc800217 	ldw	r18,8(sp)
   8c488:	dc400117 	ldw	r17,4(sp)
   8c48c:	dc000017 	ldw	r16,0(sp)
   8c490:	dec00504 	addi	sp,sp,20
   8c494:	f800283a 	ret
   8c498:	90800f17 	ldw	r2,60(r18)
   8c49c:	00bfbe16 	blt	zero,r2,8c398 <_fflush_r+0x58>
   8c4a0:	0007883a 	mov	r3,zero
   8c4a4:	1805883a 	mov	r2,r3
   8c4a8:	dfc00417 	ldw	ra,16(sp)
   8c4ac:	dcc00317 	ldw	r19,12(sp)
   8c4b0:	dc800217 	ldw	r18,8(sp)
   8c4b4:	dc400117 	ldw	r17,4(sp)
   8c4b8:	dc000017 	ldw	r16,0(sp)
   8c4bc:	dec00504 	addi	sp,sp,20
   8c4c0:	f800283a 	ret
   8c4c4:	008c5d80 	call	8c5d8 <__sinit>
   8c4c8:	003fa806 	br	8c36c <_fflush_r+0x2c>
   8c4cc:	90800517 	ldw	r2,20(r18)
   8c4d0:	90800215 	stw	r2,8(r18)
   8c4d4:	003fda06 	br	8c440 <_fflush_r+0x100>
   8c4d8:	90800117 	ldw	r2,4(r18)
   8c4dc:	90c00c17 	ldw	r3,48(r18)
   8c4e0:	80a1c83a 	sub	r16,r16,r2
   8c4e4:	183fb426 	beq	r3,zero,8c3b8 <_fflush_r+0x78>
   8c4e8:	90800f17 	ldw	r2,60(r18)
   8c4ec:	80a1c83a 	sub	r16,r16,r2
   8c4f0:	003fb106 	br	8c3b8 <_fflush_r+0x78>
   8c4f4:	91400717 	ldw	r5,28(r18)
   8c4f8:	9809883a 	mov	r4,r19
   8c4fc:	000d883a 	mov	r6,zero
   8c500:	01c00044 	movi	r7,1
   8c504:	403ee83a 	callr	r8
   8c508:	1021883a 	mov	r16,r2
   8c50c:	00bfffc4 	movi	r2,-1
   8c510:	80800226 	beq	r16,r2,8c51c <_fflush_r+0x1dc>
   8c514:	92000a17 	ldw	r8,40(r18)
   8c518:	003fa406 	br	8c3ac <_fflush_r+0x6c>
   8c51c:	98c00017 	ldw	r3,0(r19)
   8c520:	00800744 	movi	r2,29
   8c524:	18bfde26 	beq	r3,r2,8c4a0 <_fflush_r+0x160>
   8c528:	9080030b 	ldhu	r2,12(r18)
   8c52c:	8007883a 	mov	r3,r16
   8c530:	10801014 	ori	r2,r2,64
   8c534:	9080030d 	sth	r2,12(r18)
   8c538:	003fcf06 	br	8c478 <_fflush_r+0x138>

0008c53c <fflush>:
   8c53c:	01400274 	movhi	r5,9
   8c540:	2970d004 	addi	r5,r5,-15552
   8c544:	2007883a 	mov	r3,r4
   8c548:	20000526 	beq	r4,zero,8c560 <fflush+0x24>
   8c54c:	008002b4 	movhi	r2,10
   8c550:	1089d704 	addi	r2,r2,10076
   8c554:	11000017 	ldw	r4,0(r2)
   8c558:	180b883a 	mov	r5,r3
   8c55c:	008c3401 	jmpi	8c340 <_fflush_r>
   8c560:	008002b4 	movhi	r2,10
   8c564:	1089d804 	addi	r2,r2,10080
   8c568:	11000017 	ldw	r4,0(r2)
   8c56c:	008d1401 	jmpi	8d140 <_fwalk_reent>

0008c570 <std>:
   8c570:	00800274 	movhi	r2,9
   8c574:	10be2804 	addi	r2,r2,-1888
   8c578:	20800b15 	stw	r2,44(r4)
   8c57c:	00800274 	movhi	r2,9
   8c580:	10be6304 	addi	r2,r2,-1652
   8c584:	20800815 	stw	r2,32(r4)
   8c588:	00c00274 	movhi	r3,9
   8c58c:	18fe4404 	addi	r3,r3,-1776
   8c590:	00800274 	movhi	r2,9
   8c594:	10be2a04 	addi	r2,r2,-1880
   8c598:	2140030d 	sth	r5,12(r4)
   8c59c:	2180038d 	sth	r6,14(r4)
   8c5a0:	20c00915 	stw	r3,36(r4)
   8c5a4:	20800a15 	stw	r2,40(r4)
   8c5a8:	20000015 	stw	zero,0(r4)
   8c5ac:	20000115 	stw	zero,4(r4)
   8c5b0:	20000215 	stw	zero,8(r4)
   8c5b4:	20000415 	stw	zero,16(r4)
   8c5b8:	20000515 	stw	zero,20(r4)
   8c5bc:	20000615 	stw	zero,24(r4)
   8c5c0:	21000715 	stw	r4,28(r4)
   8c5c4:	f800283a 	ret

0008c5c8 <__sfp_lock_acquire>:
   8c5c8:	f800283a 	ret

0008c5cc <__sfp_lock_release>:
   8c5cc:	f800283a 	ret

0008c5d0 <__sinit_lock_acquire>:
   8c5d0:	f800283a 	ret

0008c5d4 <__sinit_lock_release>:
   8c5d4:	f800283a 	ret

0008c5d8 <__sinit>:
   8c5d8:	20800e17 	ldw	r2,56(r4)
   8c5dc:	defffd04 	addi	sp,sp,-12
   8c5e0:	dc400115 	stw	r17,4(sp)
   8c5e4:	dc000015 	stw	r16,0(sp)
   8c5e8:	dfc00215 	stw	ra,8(sp)
   8c5ec:	04400044 	movi	r17,1
   8c5f0:	01400104 	movi	r5,4
   8c5f4:	000d883a 	mov	r6,zero
   8c5f8:	2021883a 	mov	r16,r4
   8c5fc:	2200bb04 	addi	r8,r4,748
   8c600:	200f883a 	mov	r7,r4
   8c604:	10000526 	beq	r2,zero,8c61c <__sinit+0x44>
   8c608:	dfc00217 	ldw	ra,8(sp)
   8c60c:	dc400117 	ldw	r17,4(sp)
   8c610:	dc000017 	ldw	r16,0(sp)
   8c614:	dec00304 	addi	sp,sp,12
   8c618:	f800283a 	ret
   8c61c:	21000117 	ldw	r4,4(r4)
   8c620:	00800274 	movhi	r2,9
   8c624:	10b1af04 	addi	r2,r2,-14660
   8c628:	00c000c4 	movi	r3,3
   8c62c:	80800f15 	stw	r2,60(r16)
   8c630:	80c0b915 	stw	r3,740(r16)
   8c634:	8200ba15 	stw	r8,744(r16)
   8c638:	84400e15 	stw	r17,56(r16)
   8c63c:	8000b815 	stw	zero,736(r16)
   8c640:	008c5700 	call	8c570 <std>
   8c644:	81000217 	ldw	r4,8(r16)
   8c648:	880d883a 	mov	r6,r17
   8c64c:	800f883a 	mov	r7,r16
   8c650:	01400284 	movi	r5,10
   8c654:	008c5700 	call	8c570 <std>
   8c658:	81000317 	ldw	r4,12(r16)
   8c65c:	800f883a 	mov	r7,r16
   8c660:	01400484 	movi	r5,18
   8c664:	01800084 	movi	r6,2
   8c668:	dfc00217 	ldw	ra,8(sp)
   8c66c:	dc400117 	ldw	r17,4(sp)
   8c670:	dc000017 	ldw	r16,0(sp)
   8c674:	dec00304 	addi	sp,sp,12
   8c678:	008c5701 	jmpi	8c570 <std>

0008c67c <__fp_lock>:
   8c67c:	0005883a 	mov	r2,zero
   8c680:	f800283a 	ret

0008c684 <__fp_unlock>:
   8c684:	0005883a 	mov	r2,zero
   8c688:	f800283a 	ret

0008c68c <__fp_unlock_all>:
   8c68c:	008002b4 	movhi	r2,10
   8c690:	1089d704 	addi	r2,r2,10076
   8c694:	11000017 	ldw	r4,0(r2)
   8c698:	01400274 	movhi	r5,9
   8c69c:	2971a104 	addi	r5,r5,-14716
   8c6a0:	008d2081 	jmpi	8d208 <_fwalk>

0008c6a4 <__fp_lock_all>:
   8c6a4:	008002b4 	movhi	r2,10
   8c6a8:	1089d704 	addi	r2,r2,10076
   8c6ac:	11000017 	ldw	r4,0(r2)
   8c6b0:	01400274 	movhi	r5,9
   8c6b4:	29719f04 	addi	r5,r5,-14724
   8c6b8:	008d2081 	jmpi	8d208 <_fwalk>

0008c6bc <_cleanup_r>:
   8c6bc:	01400274 	movhi	r5,9
   8c6c0:	297fad04 	addi	r5,r5,-332
   8c6c4:	008d2081 	jmpi	8d208 <_fwalk>

0008c6c8 <_cleanup>:
   8c6c8:	008002b4 	movhi	r2,10
   8c6cc:	1089d804 	addi	r2,r2,10080
   8c6d0:	11000017 	ldw	r4,0(r2)
   8c6d4:	008c6bc1 	jmpi	8c6bc <_cleanup_r>

0008c6d8 <__sfmoreglue>:
   8c6d8:	defffc04 	addi	sp,sp,-16
   8c6dc:	dc000015 	stw	r16,0(sp)
   8c6e0:	2821883a 	mov	r16,r5
   8c6e4:	dc400115 	stw	r17,4(sp)
   8c6e8:	01401704 	movi	r5,92
   8c6ec:	2023883a 	mov	r17,r4
   8c6f0:	8009883a 	mov	r4,r16
   8c6f4:	dfc00315 	stw	ra,12(sp)
   8c6f8:	dcc00215 	stw	r19,8(sp)
   8c6fc:	00886b00 	call	886b0 <__mulsi3>
   8c700:	11400304 	addi	r5,r2,12
   8c704:	8809883a 	mov	r4,r17
   8c708:	1027883a 	mov	r19,r2
   8c70c:	008d5180 	call	8d518 <_malloc_r>
   8c710:	10c00304 	addi	r3,r2,12
   8c714:	1023883a 	mov	r17,r2
   8c718:	1809883a 	mov	r4,r3
   8c71c:	980d883a 	mov	r6,r19
   8c720:	000b883a 	mov	r5,zero
   8c724:	10000b26 	beq	r2,zero,8c754 <__sfmoreglue+0x7c>
   8c728:	14000115 	stw	r16,4(r2)
   8c72c:	10c00215 	stw	r3,8(r2)
   8c730:	10000015 	stw	zero,0(r2)
   8c734:	008debc0 	call	8debc <memset>
   8c738:	8805883a 	mov	r2,r17
   8c73c:	dfc00317 	ldw	ra,12(sp)
   8c740:	dcc00217 	ldw	r19,8(sp)
   8c744:	dc400117 	ldw	r17,4(sp)
   8c748:	dc000017 	ldw	r16,0(sp)
   8c74c:	dec00404 	addi	sp,sp,16
   8c750:	f800283a 	ret
   8c754:	0023883a 	mov	r17,zero
   8c758:	8805883a 	mov	r2,r17
   8c75c:	dfc00317 	ldw	ra,12(sp)
   8c760:	dcc00217 	ldw	r19,8(sp)
   8c764:	dc400117 	ldw	r17,4(sp)
   8c768:	dc000017 	ldw	r16,0(sp)
   8c76c:	dec00404 	addi	sp,sp,16
   8c770:	f800283a 	ret

0008c774 <__sfp>:
   8c774:	defffd04 	addi	sp,sp,-12
   8c778:	008002b4 	movhi	r2,10
   8c77c:	1089d804 	addi	r2,r2,10080
   8c780:	dc000015 	stw	r16,0(sp)
   8c784:	14000017 	ldw	r16,0(r2)
   8c788:	dc400115 	stw	r17,4(sp)
   8c78c:	dfc00215 	stw	ra,8(sp)
   8c790:	80800e17 	ldw	r2,56(r16)
   8c794:	2023883a 	mov	r17,r4
   8c798:	10002626 	beq	r2,zero,8c834 <__sfp+0xc0>
   8c79c:	8400b804 	addi	r16,r16,736
   8c7a0:	80800117 	ldw	r2,4(r16)
   8c7a4:	81000217 	ldw	r4,8(r16)
   8c7a8:	10ffffc4 	addi	r3,r2,-1
   8c7ac:	18000916 	blt	r3,zero,8c7d4 <__sfp+0x60>
   8c7b0:	2080030f 	ldh	r2,12(r4)
   8c7b4:	10000b26 	beq	r2,zero,8c7e4 <__sfp+0x70>
   8c7b8:	017fffc4 	movi	r5,-1
   8c7bc:	00000206 	br	8c7c8 <__sfp+0x54>
   8c7c0:	2080030f 	ldh	r2,12(r4)
   8c7c4:	10000726 	beq	r2,zero,8c7e4 <__sfp+0x70>
   8c7c8:	18ffffc4 	addi	r3,r3,-1
   8c7cc:	21001704 	addi	r4,r4,92
   8c7d0:	197ffb1e 	bne	r3,r5,8c7c0 <__sfp+0x4c>
   8c7d4:	80800017 	ldw	r2,0(r16)
   8c7d8:	10001926 	beq	r2,zero,8c840 <__sfp+0xcc>
   8c7dc:	1021883a 	mov	r16,r2
   8c7e0:	003fef06 	br	8c7a0 <__sfp+0x2c>
   8c7e4:	00bfffc4 	movi	r2,-1
   8c7e8:	00c00044 	movi	r3,1
   8c7ec:	2080038d 	sth	r2,14(r4)
   8c7f0:	20c0030d 	sth	r3,12(r4)
   8c7f4:	20000015 	stw	zero,0(r4)
   8c7f8:	20000215 	stw	zero,8(r4)
   8c7fc:	20000115 	stw	zero,4(r4)
   8c800:	20000415 	stw	zero,16(r4)
   8c804:	20000515 	stw	zero,20(r4)
   8c808:	20000615 	stw	zero,24(r4)
   8c80c:	20000c15 	stw	zero,48(r4)
   8c810:	20000d15 	stw	zero,52(r4)
   8c814:	20001115 	stw	zero,68(r4)
   8c818:	20001215 	stw	zero,72(r4)
   8c81c:	2005883a 	mov	r2,r4
   8c820:	dfc00217 	ldw	ra,8(sp)
   8c824:	dc400117 	ldw	r17,4(sp)
   8c828:	dc000017 	ldw	r16,0(sp)
   8c82c:	dec00304 	addi	sp,sp,12
   8c830:	f800283a 	ret
   8c834:	8009883a 	mov	r4,r16
   8c838:	008c5d80 	call	8c5d8 <__sinit>
   8c83c:	003fd706 	br	8c79c <__sfp+0x28>
   8c840:	8809883a 	mov	r4,r17
   8c844:	01400104 	movi	r5,4
   8c848:	008c6d80 	call	8c6d8 <__sfmoreglue>
   8c84c:	80800015 	stw	r2,0(r16)
   8c850:	103fe21e 	bne	r2,zero,8c7dc <__sfp+0x68>
   8c854:	00800304 	movi	r2,12
   8c858:	0009883a 	mov	r4,zero
   8c85c:	88800015 	stw	r2,0(r17)
   8c860:	003fee06 	br	8c81c <__sfp+0xa8>

0008c864 <_malloc_trim_r>:
   8c864:	defffb04 	addi	sp,sp,-20
   8c868:	dcc00315 	stw	r19,12(sp)
   8c86c:	04c002b4 	movhi	r19,10
   8c870:	9cc44404 	addi	r19,r19,4368
   8c874:	dc800215 	stw	r18,8(sp)
   8c878:	dc400115 	stw	r17,4(sp)
   8c87c:	dc000015 	stw	r16,0(sp)
   8c880:	2823883a 	mov	r17,r5
   8c884:	2025883a 	mov	r18,r4
   8c888:	dfc00415 	stw	ra,16(sp)
   8c88c:	00933400 	call	93340 <__malloc_lock>
   8c890:	98800217 	ldw	r2,8(r19)
   8c894:	9009883a 	mov	r4,r18
   8c898:	000b883a 	mov	r5,zero
   8c89c:	10c00117 	ldw	r3,4(r2)
   8c8a0:	00bfff04 	movi	r2,-4
   8c8a4:	18a0703a 	and	r16,r3,r2
   8c8a8:	8463c83a 	sub	r17,r16,r17
   8c8ac:	8c43fbc4 	addi	r17,r17,4079
   8c8b0:	8822d33a 	srli	r17,r17,12
   8c8b4:	0083ffc4 	movi	r2,4095
   8c8b8:	8c7fffc4 	addi	r17,r17,-1
   8c8bc:	8822933a 	slli	r17,r17,12
   8c8c0:	1440060e 	bge	r2,r17,8c8dc <_malloc_trim_r+0x78>
   8c8c4:	008f8300 	call	8f830 <_sbrk_r>
   8c8c8:	98c00217 	ldw	r3,8(r19)
   8c8cc:	9009883a 	mov	r4,r18
   8c8d0:	044bc83a 	sub	r5,zero,r17
   8c8d4:	80c7883a 	add	r3,r16,r3
   8c8d8:	10c00926 	beq	r2,r3,8c900 <_malloc_trim_r+0x9c>
   8c8dc:	00934480 	call	93448 <__malloc_unlock>
   8c8e0:	0005883a 	mov	r2,zero
   8c8e4:	dfc00417 	ldw	ra,16(sp)
   8c8e8:	dcc00317 	ldw	r19,12(sp)
   8c8ec:	dc800217 	ldw	r18,8(sp)
   8c8f0:	dc400117 	ldw	r17,4(sp)
   8c8f4:	dc000017 	ldw	r16,0(sp)
   8c8f8:	dec00504 	addi	sp,sp,20
   8c8fc:	f800283a 	ret
   8c900:	9009883a 	mov	r4,r18
   8c904:	008f8300 	call	8f830 <_sbrk_r>
   8c908:	844dc83a 	sub	r6,r16,r17
   8c90c:	00ffffc4 	movi	r3,-1
   8c910:	9009883a 	mov	r4,r18
   8c914:	000b883a 	mov	r5,zero
   8c918:	01c002b4 	movhi	r7,10
   8c91c:	39d10d04 	addi	r7,r7,17460
   8c920:	31800054 	ori	r6,r6,1
   8c924:	10c00926 	beq	r2,r3,8c94c <_malloc_trim_r+0xe8>
   8c928:	38800017 	ldw	r2,0(r7)
   8c92c:	98c00217 	ldw	r3,8(r19)
   8c930:	9009883a 	mov	r4,r18
   8c934:	1445c83a 	sub	r2,r2,r17
   8c938:	38800015 	stw	r2,0(r7)
   8c93c:	19800115 	stw	r6,4(r3)
   8c940:	00934480 	call	93448 <__malloc_unlock>
   8c944:	00800044 	movi	r2,1
   8c948:	003fe606 	br	8c8e4 <_malloc_trim_r+0x80>
   8c94c:	008f8300 	call	8f830 <_sbrk_r>
   8c950:	99800217 	ldw	r6,8(r19)
   8c954:	100f883a 	mov	r7,r2
   8c958:	9009883a 	mov	r4,r18
   8c95c:	1187c83a 	sub	r3,r2,r6
   8c960:	008003c4 	movi	r2,15
   8c964:	19400054 	ori	r5,r3,1
   8c968:	10ffdc0e 	bge	r2,r3,8c8dc <_malloc_trim_r+0x78>
   8c96c:	008002b4 	movhi	r2,10
   8c970:	1089dc04 	addi	r2,r2,10096
   8c974:	10c00017 	ldw	r3,0(r2)
   8c978:	008002b4 	movhi	r2,10
   8c97c:	10910d04 	addi	r2,r2,17460
   8c980:	31400115 	stw	r5,4(r6)
   8c984:	38c7c83a 	sub	r3,r7,r3
   8c988:	10c00015 	stw	r3,0(r2)
   8c98c:	003fd306 	br	8c8dc <_malloc_trim_r+0x78>

0008c990 <_free_r>:
   8c990:	defffd04 	addi	sp,sp,-12
   8c994:	dc400115 	stw	r17,4(sp)
   8c998:	dc000015 	stw	r16,0(sp)
   8c99c:	dfc00215 	stw	ra,8(sp)
   8c9a0:	2821883a 	mov	r16,r5
   8c9a4:	2023883a 	mov	r17,r4
   8c9a8:	28005a26 	beq	r5,zero,8cb14 <_free_r+0x184>
   8c9ac:	00933400 	call	93340 <__malloc_lock>
   8c9b0:	823ffe04 	addi	r8,r16,-8
   8c9b4:	41400117 	ldw	r5,4(r8)
   8c9b8:	00bfff84 	movi	r2,-2
   8c9bc:	028002b4 	movhi	r10,10
   8c9c0:	52844404 	addi	r10,r10,4368
   8c9c4:	288e703a 	and	r7,r5,r2
   8c9c8:	41cd883a 	add	r6,r8,r7
   8c9cc:	30c00117 	ldw	r3,4(r6)
   8c9d0:	51000217 	ldw	r4,8(r10)
   8c9d4:	00bfff04 	movi	r2,-4
   8c9d8:	1892703a 	and	r9,r3,r2
   8c9dc:	5017883a 	mov	r11,r10
   8c9e0:	31006726 	beq	r6,r4,8cb80 <_free_r+0x1f0>
   8c9e4:	2880004c 	andi	r2,r5,1
   8c9e8:	1005003a 	cmpeq	r2,r2,zero
   8c9ec:	32400115 	stw	r9,4(r6)
   8c9f0:	10001a1e 	bne	r2,zero,8ca5c <_free_r+0xcc>
   8c9f4:	000b883a 	mov	r5,zero
   8c9f8:	3247883a 	add	r3,r6,r9
   8c9fc:	18800117 	ldw	r2,4(r3)
   8ca00:	1080004c 	andi	r2,r2,1
   8ca04:	1000231e 	bne	r2,zero,8ca94 <_free_r+0x104>
   8ca08:	280ac03a 	cmpne	r5,r5,zero
   8ca0c:	3a4f883a 	add	r7,r7,r9
   8ca10:	2800451e 	bne	r5,zero,8cb28 <_free_r+0x198>
   8ca14:	31000217 	ldw	r4,8(r6)
   8ca18:	008002b4 	movhi	r2,10
   8ca1c:	10844604 	addi	r2,r2,4376
   8ca20:	20807b26 	beq	r4,r2,8cc10 <_free_r+0x280>
   8ca24:	30800317 	ldw	r2,12(r6)
   8ca28:	3a07883a 	add	r3,r7,r8
   8ca2c:	19c00015 	stw	r7,0(r3)
   8ca30:	11000215 	stw	r4,8(r2)
   8ca34:	20800315 	stw	r2,12(r4)
   8ca38:	38800054 	ori	r2,r7,1
   8ca3c:	40800115 	stw	r2,4(r8)
   8ca40:	28001a26 	beq	r5,zero,8caac <_free_r+0x11c>
   8ca44:	8809883a 	mov	r4,r17
   8ca48:	dfc00217 	ldw	ra,8(sp)
   8ca4c:	dc400117 	ldw	r17,4(sp)
   8ca50:	dc000017 	ldw	r16,0(sp)
   8ca54:	dec00304 	addi	sp,sp,12
   8ca58:	00934481 	jmpi	93448 <__malloc_unlock>
   8ca5c:	80bffe17 	ldw	r2,-8(r16)
   8ca60:	50c00204 	addi	r3,r10,8
   8ca64:	4091c83a 	sub	r8,r8,r2
   8ca68:	41000217 	ldw	r4,8(r8)
   8ca6c:	388f883a 	add	r7,r7,r2
   8ca70:	20c06126 	beq	r4,r3,8cbf8 <_free_r+0x268>
   8ca74:	40800317 	ldw	r2,12(r8)
   8ca78:	3247883a 	add	r3,r6,r9
   8ca7c:	000b883a 	mov	r5,zero
   8ca80:	11000215 	stw	r4,8(r2)
   8ca84:	20800315 	stw	r2,12(r4)
   8ca88:	18800117 	ldw	r2,4(r3)
   8ca8c:	1080004c 	andi	r2,r2,1
   8ca90:	103fdd26 	beq	r2,zero,8ca08 <_free_r+0x78>
   8ca94:	38800054 	ori	r2,r7,1
   8ca98:	3a07883a 	add	r3,r7,r8
   8ca9c:	280ac03a 	cmpne	r5,r5,zero
   8caa0:	40800115 	stw	r2,4(r8)
   8caa4:	19c00015 	stw	r7,0(r3)
   8caa8:	283fe61e 	bne	r5,zero,8ca44 <_free_r+0xb4>
   8caac:	00807fc4 	movi	r2,511
   8cab0:	11c01f2e 	bgeu	r2,r7,8cb30 <_free_r+0x1a0>
   8cab4:	3806d27a 	srli	r3,r7,9
   8cab8:	1800481e 	bne	r3,zero,8cbdc <_free_r+0x24c>
   8cabc:	3804d0fa 	srli	r2,r7,3
   8cac0:	100690fa 	slli	r3,r2,3
   8cac4:	1acd883a 	add	r6,r3,r11
   8cac8:	31400217 	ldw	r5,8(r6)
   8cacc:	31405926 	beq	r6,r5,8cc34 <_free_r+0x2a4>
   8cad0:	28800117 	ldw	r2,4(r5)
   8cad4:	00ffff04 	movi	r3,-4
   8cad8:	10c4703a 	and	r2,r2,r3
   8cadc:	3880022e 	bgeu	r7,r2,8cae8 <_free_r+0x158>
   8cae0:	29400217 	ldw	r5,8(r5)
   8cae4:	317ffa1e 	bne	r6,r5,8cad0 <_free_r+0x140>
   8cae8:	29800317 	ldw	r6,12(r5)
   8caec:	41800315 	stw	r6,12(r8)
   8caf0:	41400215 	stw	r5,8(r8)
   8caf4:	8809883a 	mov	r4,r17
   8caf8:	2a000315 	stw	r8,12(r5)
   8cafc:	32000215 	stw	r8,8(r6)
   8cb00:	dfc00217 	ldw	ra,8(sp)
   8cb04:	dc400117 	ldw	r17,4(sp)
   8cb08:	dc000017 	ldw	r16,0(sp)
   8cb0c:	dec00304 	addi	sp,sp,12
   8cb10:	00934481 	jmpi	93448 <__malloc_unlock>
   8cb14:	dfc00217 	ldw	ra,8(sp)
   8cb18:	dc400117 	ldw	r17,4(sp)
   8cb1c:	dc000017 	ldw	r16,0(sp)
   8cb20:	dec00304 	addi	sp,sp,12
   8cb24:	f800283a 	ret
   8cb28:	31000217 	ldw	r4,8(r6)
   8cb2c:	003fbd06 	br	8ca24 <_free_r+0x94>
   8cb30:	3806d0fa 	srli	r3,r7,3
   8cb34:	00800044 	movi	r2,1
   8cb38:	51400117 	ldw	r5,4(r10)
   8cb3c:	180890fa 	slli	r4,r3,3
   8cb40:	1807d0ba 	srai	r3,r3,2
   8cb44:	22c9883a 	add	r4,r4,r11
   8cb48:	21800217 	ldw	r6,8(r4)
   8cb4c:	10c4983a 	sll	r2,r2,r3
   8cb50:	41000315 	stw	r4,12(r8)
   8cb54:	41800215 	stw	r6,8(r8)
   8cb58:	288ab03a 	or	r5,r5,r2
   8cb5c:	22000215 	stw	r8,8(r4)
   8cb60:	8809883a 	mov	r4,r17
   8cb64:	51400115 	stw	r5,4(r10)
   8cb68:	32000315 	stw	r8,12(r6)
   8cb6c:	dfc00217 	ldw	ra,8(sp)
   8cb70:	dc400117 	ldw	r17,4(sp)
   8cb74:	dc000017 	ldw	r16,0(sp)
   8cb78:	dec00304 	addi	sp,sp,12
   8cb7c:	00934481 	jmpi	93448 <__malloc_unlock>
   8cb80:	2880004c 	andi	r2,r5,1
   8cb84:	3a4d883a 	add	r6,r7,r9
   8cb88:	1000071e 	bne	r2,zero,8cba8 <_free_r+0x218>
   8cb8c:	80bffe17 	ldw	r2,-8(r16)
   8cb90:	4091c83a 	sub	r8,r8,r2
   8cb94:	41000317 	ldw	r4,12(r8)
   8cb98:	40c00217 	ldw	r3,8(r8)
   8cb9c:	308d883a 	add	r6,r6,r2
   8cba0:	20c00215 	stw	r3,8(r4)
   8cba4:	19000315 	stw	r4,12(r3)
   8cba8:	008002b4 	movhi	r2,10
   8cbac:	1089db04 	addi	r2,r2,10092
   8cbb0:	11000017 	ldw	r4,0(r2)
   8cbb4:	30c00054 	ori	r3,r6,1
   8cbb8:	52000215 	stw	r8,8(r10)
   8cbbc:	40c00115 	stw	r3,4(r8)
   8cbc0:	313fa036 	bltu	r6,r4,8ca44 <_free_r+0xb4>
   8cbc4:	008002b4 	movhi	r2,10
   8cbc8:	1090ea04 	addi	r2,r2,17320
   8cbcc:	11400017 	ldw	r5,0(r2)
   8cbd0:	8809883a 	mov	r4,r17
   8cbd4:	008c8640 	call	8c864 <_malloc_trim_r>
   8cbd8:	003f9a06 	br	8ca44 <_free_r+0xb4>
   8cbdc:	00800104 	movi	r2,4
   8cbe0:	10c0072e 	bgeu	r2,r3,8cc00 <_free_r+0x270>
   8cbe4:	00800504 	movi	r2,20
   8cbe8:	10c01936 	bltu	r2,r3,8cc50 <_free_r+0x2c0>
   8cbec:	188016c4 	addi	r2,r3,91
   8cbf0:	100690fa 	slli	r3,r2,3
   8cbf4:	003fb306 	br	8cac4 <_free_r+0x134>
   8cbf8:	01400044 	movi	r5,1
   8cbfc:	003f7e06 	br	8c9f8 <_free_r+0x68>
   8cc00:	3804d1ba 	srli	r2,r7,6
   8cc04:	10800e04 	addi	r2,r2,56
   8cc08:	100690fa 	slli	r3,r2,3
   8cc0c:	003fad06 	br	8cac4 <_free_r+0x134>
   8cc10:	22000315 	stw	r8,12(r4)
   8cc14:	22000215 	stw	r8,8(r4)
   8cc18:	3a05883a 	add	r2,r7,r8
   8cc1c:	38c00054 	ori	r3,r7,1
   8cc20:	11c00015 	stw	r7,0(r2)
   8cc24:	41000215 	stw	r4,8(r8)
   8cc28:	40c00115 	stw	r3,4(r8)
   8cc2c:	41000315 	stw	r4,12(r8)
   8cc30:	003f8406 	br	8ca44 <_free_r+0xb4>
   8cc34:	1005d0ba 	srai	r2,r2,2
   8cc38:	00c00044 	movi	r3,1
   8cc3c:	51000117 	ldw	r4,4(r10)
   8cc40:	1886983a 	sll	r3,r3,r2
   8cc44:	20c8b03a 	or	r4,r4,r3
   8cc48:	51000115 	stw	r4,4(r10)
   8cc4c:	003fa706 	br	8caec <_free_r+0x15c>
   8cc50:	00801504 	movi	r2,84
   8cc54:	10c00436 	bltu	r2,r3,8cc68 <_free_r+0x2d8>
   8cc58:	3804d33a 	srli	r2,r7,12
   8cc5c:	10801b84 	addi	r2,r2,110
   8cc60:	100690fa 	slli	r3,r2,3
   8cc64:	003f9706 	br	8cac4 <_free_r+0x134>
   8cc68:	00805504 	movi	r2,340
   8cc6c:	10c00436 	bltu	r2,r3,8cc80 <_free_r+0x2f0>
   8cc70:	3804d3fa 	srli	r2,r7,15
   8cc74:	10801dc4 	addi	r2,r2,119
   8cc78:	100690fa 	slli	r3,r2,3
   8cc7c:	003f9106 	br	8cac4 <_free_r+0x134>
   8cc80:	00815504 	movi	r2,1364
   8cc84:	10c0032e 	bgeu	r2,r3,8cc94 <_free_r+0x304>
   8cc88:	00801f84 	movi	r2,126
   8cc8c:	00c0fc04 	movi	r3,1008
   8cc90:	003f8c06 	br	8cac4 <_free_r+0x134>
   8cc94:	3804d4ba 	srli	r2,r7,18
   8cc98:	10801f04 	addi	r2,r2,124
   8cc9c:	100690fa 	slli	r3,r2,3
   8cca0:	003f8806 	br	8cac4 <_free_r+0x134>

0008cca4 <__sfvwrite_r>:
   8cca4:	30800217 	ldw	r2,8(r6)
   8cca8:	defff504 	addi	sp,sp,-44
   8ccac:	df000915 	stw	fp,36(sp)
   8ccb0:	dd800715 	stw	r22,28(sp)
   8ccb4:	dc800315 	stw	r18,12(sp)
   8ccb8:	dfc00a15 	stw	ra,40(sp)
   8ccbc:	ddc00815 	stw	r23,32(sp)
   8ccc0:	dd400615 	stw	r21,24(sp)
   8ccc4:	dd000515 	stw	r20,20(sp)
   8ccc8:	dcc00415 	stw	r19,16(sp)
   8cccc:	dc400215 	stw	r17,8(sp)
   8ccd0:	dc000115 	stw	r16,4(sp)
   8ccd4:	302d883a 	mov	r22,r6
   8ccd8:	2039883a 	mov	fp,r4
   8ccdc:	2825883a 	mov	r18,r5
   8cce0:	10001c26 	beq	r2,zero,8cd54 <__sfvwrite_r+0xb0>
   8cce4:	29c0030b 	ldhu	r7,12(r5)
   8cce8:	3880020c 	andi	r2,r7,8
   8ccec:	10002726 	beq	r2,zero,8cd8c <__sfvwrite_r+0xe8>
   8ccf0:	28800417 	ldw	r2,16(r5)
   8ccf4:	10002526 	beq	r2,zero,8cd8c <__sfvwrite_r+0xe8>
   8ccf8:	3880008c 	andi	r2,r7,2
   8ccfc:	b5400017 	ldw	r21,0(r22)
   8cd00:	10002826 	beq	r2,zero,8cda4 <__sfvwrite_r+0x100>
   8cd04:	0021883a 	mov	r16,zero
   8cd08:	0023883a 	mov	r17,zero
   8cd0c:	880d883a 	mov	r6,r17
   8cd10:	e009883a 	mov	r4,fp
   8cd14:	00810004 	movi	r2,1024
   8cd18:	80006e26 	beq	r16,zero,8ced4 <__sfvwrite_r+0x230>
   8cd1c:	800f883a 	mov	r7,r16
   8cd20:	91400717 	ldw	r5,28(r18)
   8cd24:	1400012e 	bgeu	r2,r16,8cd2c <__sfvwrite_r+0x88>
   8cd28:	100f883a 	mov	r7,r2
   8cd2c:	90c00917 	ldw	r3,36(r18)
   8cd30:	183ee83a 	callr	r3
   8cd34:	1007883a 	mov	r3,r2
   8cd38:	80a1c83a 	sub	r16,r16,r2
   8cd3c:	88a3883a 	add	r17,r17,r2
   8cd40:	00806d0e 	bge	zero,r2,8cef8 <__sfvwrite_r+0x254>
   8cd44:	b0800217 	ldw	r2,8(r22)
   8cd48:	10c5c83a 	sub	r2,r2,r3
   8cd4c:	b0800215 	stw	r2,8(r22)
   8cd50:	103fee1e 	bne	r2,zero,8cd0c <__sfvwrite_r+0x68>
   8cd54:	0009883a 	mov	r4,zero
   8cd58:	2005883a 	mov	r2,r4
   8cd5c:	dfc00a17 	ldw	ra,40(sp)
   8cd60:	df000917 	ldw	fp,36(sp)
   8cd64:	ddc00817 	ldw	r23,32(sp)
   8cd68:	dd800717 	ldw	r22,28(sp)
   8cd6c:	dd400617 	ldw	r21,24(sp)
   8cd70:	dd000517 	ldw	r20,20(sp)
   8cd74:	dcc00417 	ldw	r19,16(sp)
   8cd78:	dc800317 	ldw	r18,12(sp)
   8cd7c:	dc400217 	ldw	r17,8(sp)
   8cd80:	dc000117 	ldw	r16,4(sp)
   8cd84:	dec00b04 	addi	sp,sp,44
   8cd88:	f800283a 	ret
   8cd8c:	008aa0c0 	call	8aa0c <__swsetup_r>
   8cd90:	1000e41e 	bne	r2,zero,8d124 <__sfvwrite_r+0x480>
   8cd94:	91c0030b 	ldhu	r7,12(r18)
   8cd98:	b5400017 	ldw	r21,0(r22)
   8cd9c:	3880008c 	andi	r2,r7,2
   8cda0:	103fd81e 	bne	r2,zero,8cd04 <__sfvwrite_r+0x60>
   8cda4:	3880004c 	andi	r2,r7,1
   8cda8:	1005003a 	cmpeq	r2,r2,zero
   8cdac:	10005726 	beq	r2,zero,8cf0c <__sfvwrite_r+0x268>
   8cdb0:	0029883a 	mov	r20,zero
   8cdb4:	002f883a 	mov	r23,zero
   8cdb8:	a0004226 	beq	r20,zero,8cec4 <__sfvwrite_r+0x220>
   8cdbc:	3880800c 	andi	r2,r7,512
   8cdc0:	94000217 	ldw	r16,8(r18)
   8cdc4:	10008b26 	beq	r2,zero,8cff4 <__sfvwrite_r+0x350>
   8cdc8:	800d883a 	mov	r6,r16
   8cdcc:	a400a536 	bltu	r20,r16,8d064 <__sfvwrite_r+0x3c0>
   8cdd0:	3881200c 	andi	r2,r7,1152
   8cdd4:	10002726 	beq	r2,zero,8ce74 <__sfvwrite_r+0x1d0>
   8cdd8:	90800517 	ldw	r2,20(r18)
   8cddc:	92000417 	ldw	r8,16(r18)
   8cde0:	91400017 	ldw	r5,0(r18)
   8cde4:	1087883a 	add	r3,r2,r2
   8cde8:	1887883a 	add	r3,r3,r2
   8cdec:	1808d7fa 	srli	r4,r3,31
   8cdf0:	2a21c83a 	sub	r16,r5,r8
   8cdf4:	80800044 	addi	r2,r16,1
   8cdf8:	20c9883a 	add	r4,r4,r3
   8cdfc:	2027d07a 	srai	r19,r4,1
   8ce00:	a085883a 	add	r2,r20,r2
   8ce04:	980d883a 	mov	r6,r19
   8ce08:	9880022e 	bgeu	r19,r2,8ce14 <__sfvwrite_r+0x170>
   8ce0c:	1027883a 	mov	r19,r2
   8ce10:	100d883a 	mov	r6,r2
   8ce14:	3881000c 	andi	r2,r7,1024
   8ce18:	1000b826 	beq	r2,zero,8d0fc <__sfvwrite_r+0x458>
   8ce1c:	300b883a 	mov	r5,r6
   8ce20:	e009883a 	mov	r4,fp
   8ce24:	008d5180 	call	8d518 <_malloc_r>
   8ce28:	10003126 	beq	r2,zero,8cef0 <__sfvwrite_r+0x24c>
   8ce2c:	91400417 	ldw	r5,16(r18)
   8ce30:	1009883a 	mov	r4,r2
   8ce34:	800d883a 	mov	r6,r16
   8ce38:	1023883a 	mov	r17,r2
   8ce3c:	008dd3c0 	call	8dd3c <memcpy>
   8ce40:	90c0030b 	ldhu	r3,12(r18)
   8ce44:	00beffc4 	movi	r2,-1025
   8ce48:	1886703a 	and	r3,r3,r2
   8ce4c:	18c02014 	ori	r3,r3,128
   8ce50:	90c0030d 	sth	r3,12(r18)
   8ce54:	9c07c83a 	sub	r3,r19,r16
   8ce58:	8c05883a 	add	r2,r17,r16
   8ce5c:	a00d883a 	mov	r6,r20
   8ce60:	a021883a 	mov	r16,r20
   8ce64:	90800015 	stw	r2,0(r18)
   8ce68:	90c00215 	stw	r3,8(r18)
   8ce6c:	94400415 	stw	r17,16(r18)
   8ce70:	94c00515 	stw	r19,20(r18)
   8ce74:	91000017 	ldw	r4,0(r18)
   8ce78:	b80b883a 	mov	r5,r23
   8ce7c:	a023883a 	mov	r17,r20
   8ce80:	008dddc0 	call	8dddc <memmove>
   8ce84:	90c00217 	ldw	r3,8(r18)
   8ce88:	90800017 	ldw	r2,0(r18)
   8ce8c:	a027883a 	mov	r19,r20
   8ce90:	1c07c83a 	sub	r3,r3,r16
   8ce94:	1405883a 	add	r2,r2,r16
   8ce98:	90c00215 	stw	r3,8(r18)
   8ce9c:	a021883a 	mov	r16,r20
   8cea0:	90800015 	stw	r2,0(r18)
   8cea4:	b0800217 	ldw	r2,8(r22)
   8cea8:	1405c83a 	sub	r2,r2,r16
   8ceac:	b0800215 	stw	r2,8(r22)
   8ceb0:	103fa826 	beq	r2,zero,8cd54 <__sfvwrite_r+0xb0>
   8ceb4:	a469c83a 	sub	r20,r20,r17
   8ceb8:	91c0030b 	ldhu	r7,12(r18)
   8cebc:	bcef883a 	add	r23,r23,r19
   8cec0:	a03fbe1e 	bne	r20,zero,8cdbc <__sfvwrite_r+0x118>
   8cec4:	adc00017 	ldw	r23,0(r21)
   8cec8:	ad000117 	ldw	r20,4(r21)
   8cecc:	ad400204 	addi	r21,r21,8
   8ced0:	003fb906 	br	8cdb8 <__sfvwrite_r+0x114>
   8ced4:	ac400017 	ldw	r17,0(r21)
   8ced8:	ac000117 	ldw	r16,4(r21)
   8cedc:	ad400204 	addi	r21,r21,8
   8cee0:	003f8a06 	br	8cd0c <__sfvwrite_r+0x68>
   8cee4:	91400417 	ldw	r5,16(r18)
   8cee8:	e009883a 	mov	r4,fp
   8ceec:	008c9900 	call	8c990 <_free_r>
   8cef0:	00800304 	movi	r2,12
   8cef4:	e0800015 	stw	r2,0(fp)
   8cef8:	9080030b 	ldhu	r2,12(r18)
   8cefc:	013fffc4 	movi	r4,-1
   8cf00:	10801014 	ori	r2,r2,64
   8cf04:	9080030d 	sth	r2,12(r18)
   8cf08:	003f9306 	br	8cd58 <__sfvwrite_r+0xb4>
   8cf0c:	0027883a 	mov	r19,zero
   8cf10:	002f883a 	mov	r23,zero
   8cf14:	d8000015 	stw	zero,0(sp)
   8cf18:	0029883a 	mov	r20,zero
   8cf1c:	98001e26 	beq	r19,zero,8cf98 <__sfvwrite_r+0x2f4>
   8cf20:	d8c00017 	ldw	r3,0(sp)
   8cf24:	1804c03a 	cmpne	r2,r3,zero
   8cf28:	10005e26 	beq	r2,zero,8d0a4 <__sfvwrite_r+0x400>
   8cf2c:	9821883a 	mov	r16,r19
   8cf30:	a4c0012e 	bgeu	r20,r19,8cf38 <__sfvwrite_r+0x294>
   8cf34:	a021883a 	mov	r16,r20
   8cf38:	91000017 	ldw	r4,0(r18)
   8cf3c:	90800417 	ldw	r2,16(r18)
   8cf40:	91800217 	ldw	r6,8(r18)
   8cf44:	91c00517 	ldw	r7,20(r18)
   8cf48:	1100022e 	bgeu	r2,r4,8cf54 <__sfvwrite_r+0x2b0>
   8cf4c:	31e3883a 	add	r17,r6,r7
   8cf50:	8c001616 	blt	r17,r16,8cfac <__sfvwrite_r+0x308>
   8cf54:	81c03816 	blt	r16,r7,8d038 <__sfvwrite_r+0x394>
   8cf58:	90c00917 	ldw	r3,36(r18)
   8cf5c:	91400717 	ldw	r5,28(r18)
   8cf60:	e009883a 	mov	r4,fp
   8cf64:	b80d883a 	mov	r6,r23
   8cf68:	183ee83a 	callr	r3
   8cf6c:	1023883a 	mov	r17,r2
   8cf70:	00bfe10e 	bge	zero,r2,8cef8 <__sfvwrite_r+0x254>
   8cf74:	a469c83a 	sub	r20,r20,r17
   8cf78:	a0001826 	beq	r20,zero,8cfdc <__sfvwrite_r+0x338>
   8cf7c:	b0800217 	ldw	r2,8(r22)
   8cf80:	1445c83a 	sub	r2,r2,r17
   8cf84:	b0800215 	stw	r2,8(r22)
   8cf88:	103f7226 	beq	r2,zero,8cd54 <__sfvwrite_r+0xb0>
   8cf8c:	9c67c83a 	sub	r19,r19,r17
   8cf90:	bc6f883a 	add	r23,r23,r17
   8cf94:	983fe21e 	bne	r19,zero,8cf20 <__sfvwrite_r+0x27c>
   8cf98:	adc00017 	ldw	r23,0(r21)
   8cf9c:	acc00117 	ldw	r19,4(r21)
   8cfa0:	ad400204 	addi	r21,r21,8
   8cfa4:	d8000015 	stw	zero,0(sp)
   8cfa8:	003fdc06 	br	8cf1c <__sfvwrite_r+0x278>
   8cfac:	b80b883a 	mov	r5,r23
   8cfb0:	880d883a 	mov	r6,r17
   8cfb4:	008dddc0 	call	8dddc <memmove>
   8cfb8:	90c00017 	ldw	r3,0(r18)
   8cfbc:	e009883a 	mov	r4,fp
   8cfc0:	900b883a 	mov	r5,r18
   8cfc4:	1c47883a 	add	r3,r3,r17
   8cfc8:	90c00015 	stw	r3,0(r18)
   8cfcc:	008c3400 	call	8c340 <_fflush_r>
   8cfd0:	103fc91e 	bne	r2,zero,8cef8 <__sfvwrite_r+0x254>
   8cfd4:	a469c83a 	sub	r20,r20,r17
   8cfd8:	a03fe81e 	bne	r20,zero,8cf7c <__sfvwrite_r+0x2d8>
   8cfdc:	e009883a 	mov	r4,fp
   8cfe0:	900b883a 	mov	r5,r18
   8cfe4:	008c3400 	call	8c340 <_fflush_r>
   8cfe8:	103fc31e 	bne	r2,zero,8cef8 <__sfvwrite_r+0x254>
   8cfec:	d8000015 	stw	zero,0(sp)
   8cff0:	003fe206 	br	8cf7c <__sfvwrite_r+0x2d8>
   8cff4:	91000017 	ldw	r4,0(r18)
   8cff8:	90800417 	ldw	r2,16(r18)
   8cffc:	1100022e 	bgeu	r2,r4,8d008 <__sfvwrite_r+0x364>
   8d000:	8023883a 	mov	r17,r16
   8d004:	85003136 	bltu	r16,r20,8d0cc <__sfvwrite_r+0x428>
   8d008:	91c00517 	ldw	r7,20(r18)
   8d00c:	a1c01836 	bltu	r20,r7,8d070 <__sfvwrite_r+0x3cc>
   8d010:	90c00917 	ldw	r3,36(r18)
   8d014:	91400717 	ldw	r5,28(r18)
   8d018:	e009883a 	mov	r4,fp
   8d01c:	b80d883a 	mov	r6,r23
   8d020:	183ee83a 	callr	r3
   8d024:	1021883a 	mov	r16,r2
   8d028:	00bfb30e 	bge	zero,r2,8cef8 <__sfvwrite_r+0x254>
   8d02c:	1023883a 	mov	r17,r2
   8d030:	1027883a 	mov	r19,r2
   8d034:	003f9b06 	br	8cea4 <__sfvwrite_r+0x200>
   8d038:	b80b883a 	mov	r5,r23
   8d03c:	800d883a 	mov	r6,r16
   8d040:	008dddc0 	call	8dddc <memmove>
   8d044:	90c00217 	ldw	r3,8(r18)
   8d048:	90800017 	ldw	r2,0(r18)
   8d04c:	8023883a 	mov	r17,r16
   8d050:	1c07c83a 	sub	r3,r3,r16
   8d054:	1405883a 	add	r2,r2,r16
   8d058:	90c00215 	stw	r3,8(r18)
   8d05c:	90800015 	stw	r2,0(r18)
   8d060:	003fc406 	br	8cf74 <__sfvwrite_r+0x2d0>
   8d064:	a00d883a 	mov	r6,r20
   8d068:	a021883a 	mov	r16,r20
   8d06c:	003f8106 	br	8ce74 <__sfvwrite_r+0x1d0>
   8d070:	b80b883a 	mov	r5,r23
   8d074:	a00d883a 	mov	r6,r20
   8d078:	008dddc0 	call	8dddc <memmove>
   8d07c:	90c00217 	ldw	r3,8(r18)
   8d080:	90800017 	ldw	r2,0(r18)
   8d084:	a021883a 	mov	r16,r20
   8d088:	1d07c83a 	sub	r3,r3,r20
   8d08c:	1505883a 	add	r2,r2,r20
   8d090:	a023883a 	mov	r17,r20
   8d094:	a027883a 	mov	r19,r20
   8d098:	90c00215 	stw	r3,8(r18)
   8d09c:	90800015 	stw	r2,0(r18)
   8d0a0:	003f8006 	br	8cea4 <__sfvwrite_r+0x200>
   8d0a4:	b809883a 	mov	r4,r23
   8d0a8:	01400284 	movi	r5,10
   8d0ac:	980d883a 	mov	r6,r19
   8d0b0:	008dc580 	call	8dc58 <memchr>
   8d0b4:	10001726 	beq	r2,zero,8d114 <__sfvwrite_r+0x470>
   8d0b8:	15c5c83a 	sub	r2,r2,r23
   8d0bc:	15000044 	addi	r20,r2,1
   8d0c0:	00800044 	movi	r2,1
   8d0c4:	d8800015 	stw	r2,0(sp)
   8d0c8:	003f9806 	br	8cf2c <__sfvwrite_r+0x288>
   8d0cc:	b80b883a 	mov	r5,r23
   8d0d0:	800d883a 	mov	r6,r16
   8d0d4:	008dddc0 	call	8dddc <memmove>
   8d0d8:	90c00017 	ldw	r3,0(r18)
   8d0dc:	e009883a 	mov	r4,fp
   8d0e0:	900b883a 	mov	r5,r18
   8d0e4:	1c07883a 	add	r3,r3,r16
   8d0e8:	90c00015 	stw	r3,0(r18)
   8d0ec:	8027883a 	mov	r19,r16
   8d0f0:	008c3400 	call	8c340 <_fflush_r>
   8d0f4:	103f6b26 	beq	r2,zero,8cea4 <__sfvwrite_r+0x200>
   8d0f8:	003f7f06 	br	8cef8 <__sfvwrite_r+0x254>
   8d0fc:	400b883a 	mov	r5,r8
   8d100:	e009883a 	mov	r4,fp
   8d104:	008f1cc0 	call	8f1cc <_realloc_r>
   8d108:	103f7626 	beq	r2,zero,8cee4 <__sfvwrite_r+0x240>
   8d10c:	1023883a 	mov	r17,r2
   8d110:	003f5006 	br	8ce54 <__sfvwrite_r+0x1b0>
   8d114:	00c00044 	movi	r3,1
   8d118:	9d000044 	addi	r20,r19,1
   8d11c:	d8c00015 	stw	r3,0(sp)
   8d120:	003f8206 	br	8cf2c <__sfvwrite_r+0x288>
   8d124:	9080030b 	ldhu	r2,12(r18)
   8d128:	00c00244 	movi	r3,9
   8d12c:	013fffc4 	movi	r4,-1
   8d130:	10801014 	ori	r2,r2,64
   8d134:	9080030d 	sth	r2,12(r18)
   8d138:	e0c00015 	stw	r3,0(fp)
   8d13c:	003f0606 	br	8cd58 <__sfvwrite_r+0xb4>

0008d140 <_fwalk_reent>:
   8d140:	defff704 	addi	sp,sp,-36
   8d144:	dcc00315 	stw	r19,12(sp)
   8d148:	24c0b804 	addi	r19,r4,736
   8d14c:	dd800615 	stw	r22,24(sp)
   8d150:	dd400515 	stw	r21,20(sp)
   8d154:	dfc00815 	stw	ra,32(sp)
   8d158:	ddc00715 	stw	r23,28(sp)
   8d15c:	dd000415 	stw	r20,16(sp)
   8d160:	dc800215 	stw	r18,8(sp)
   8d164:	dc400115 	stw	r17,4(sp)
   8d168:	dc000015 	stw	r16,0(sp)
   8d16c:	202b883a 	mov	r21,r4
   8d170:	282d883a 	mov	r22,r5
   8d174:	008c5c80 	call	8c5c8 <__sfp_lock_acquire>
   8d178:	98002126 	beq	r19,zero,8d200 <_fwalk_reent+0xc0>
   8d17c:	002f883a 	mov	r23,zero
   8d180:	9c800117 	ldw	r18,4(r19)
   8d184:	9c000217 	ldw	r16,8(r19)
   8d188:	90bfffc4 	addi	r2,r18,-1
   8d18c:	10000d16 	blt	r2,zero,8d1c4 <_fwalk_reent+0x84>
   8d190:	0023883a 	mov	r17,zero
   8d194:	053fffc4 	movi	r20,-1
   8d198:	8080030f 	ldh	r2,12(r16)
   8d19c:	8c400044 	addi	r17,r17,1
   8d1a0:	10000626 	beq	r2,zero,8d1bc <_fwalk_reent+0x7c>
   8d1a4:	8080038f 	ldh	r2,14(r16)
   8d1a8:	800b883a 	mov	r5,r16
   8d1ac:	a809883a 	mov	r4,r21
   8d1b0:	15000226 	beq	r2,r20,8d1bc <_fwalk_reent+0x7c>
   8d1b4:	b03ee83a 	callr	r22
   8d1b8:	b8aeb03a 	or	r23,r23,r2
   8d1bc:	84001704 	addi	r16,r16,92
   8d1c0:	947ff51e 	bne	r18,r17,8d198 <_fwalk_reent+0x58>
   8d1c4:	9cc00017 	ldw	r19,0(r19)
   8d1c8:	983fed1e 	bne	r19,zero,8d180 <_fwalk_reent+0x40>
   8d1cc:	008c5cc0 	call	8c5cc <__sfp_lock_release>
   8d1d0:	b805883a 	mov	r2,r23
   8d1d4:	dfc00817 	ldw	ra,32(sp)
   8d1d8:	ddc00717 	ldw	r23,28(sp)
   8d1dc:	dd800617 	ldw	r22,24(sp)
   8d1e0:	dd400517 	ldw	r21,20(sp)
   8d1e4:	dd000417 	ldw	r20,16(sp)
   8d1e8:	dcc00317 	ldw	r19,12(sp)
   8d1ec:	dc800217 	ldw	r18,8(sp)
   8d1f0:	dc400117 	ldw	r17,4(sp)
   8d1f4:	dc000017 	ldw	r16,0(sp)
   8d1f8:	dec00904 	addi	sp,sp,36
   8d1fc:	f800283a 	ret
   8d200:	002f883a 	mov	r23,zero
   8d204:	003ff106 	br	8d1cc <_fwalk_reent+0x8c>

0008d208 <_fwalk>:
   8d208:	defff804 	addi	sp,sp,-32
   8d20c:	dcc00315 	stw	r19,12(sp)
   8d210:	24c0b804 	addi	r19,r4,736
   8d214:	dd400515 	stw	r21,20(sp)
   8d218:	dfc00715 	stw	ra,28(sp)
   8d21c:	dd800615 	stw	r22,24(sp)
   8d220:	dd000415 	stw	r20,16(sp)
   8d224:	dc800215 	stw	r18,8(sp)
   8d228:	dc400115 	stw	r17,4(sp)
   8d22c:	dc000015 	stw	r16,0(sp)
   8d230:	282b883a 	mov	r21,r5
   8d234:	008c5c80 	call	8c5c8 <__sfp_lock_acquire>
   8d238:	98001f26 	beq	r19,zero,8d2b8 <_fwalk+0xb0>
   8d23c:	002d883a 	mov	r22,zero
   8d240:	9c800117 	ldw	r18,4(r19)
   8d244:	9c000217 	ldw	r16,8(r19)
   8d248:	90bfffc4 	addi	r2,r18,-1
   8d24c:	10000c16 	blt	r2,zero,8d280 <_fwalk+0x78>
   8d250:	0023883a 	mov	r17,zero
   8d254:	053fffc4 	movi	r20,-1
   8d258:	8080030f 	ldh	r2,12(r16)
   8d25c:	8c400044 	addi	r17,r17,1
   8d260:	10000526 	beq	r2,zero,8d278 <_fwalk+0x70>
   8d264:	8080038f 	ldh	r2,14(r16)
   8d268:	8009883a 	mov	r4,r16
   8d26c:	15000226 	beq	r2,r20,8d278 <_fwalk+0x70>
   8d270:	a83ee83a 	callr	r21
   8d274:	b0acb03a 	or	r22,r22,r2
   8d278:	84001704 	addi	r16,r16,92
   8d27c:	947ff61e 	bne	r18,r17,8d258 <_fwalk+0x50>
   8d280:	9cc00017 	ldw	r19,0(r19)
   8d284:	983fee1e 	bne	r19,zero,8d240 <_fwalk+0x38>
   8d288:	008c5cc0 	call	8c5cc <__sfp_lock_release>
   8d28c:	b005883a 	mov	r2,r22
   8d290:	dfc00717 	ldw	ra,28(sp)
   8d294:	dd800617 	ldw	r22,24(sp)
   8d298:	dd400517 	ldw	r21,20(sp)
   8d29c:	dd000417 	ldw	r20,16(sp)
   8d2a0:	dcc00317 	ldw	r19,12(sp)
   8d2a4:	dc800217 	ldw	r18,8(sp)
   8d2a8:	dc400117 	ldw	r17,4(sp)
   8d2ac:	dc000017 	ldw	r16,0(sp)
   8d2b0:	dec00804 	addi	sp,sp,32
   8d2b4:	f800283a 	ret
   8d2b8:	002d883a 	mov	r22,zero
   8d2bc:	003ff206 	br	8d288 <_fwalk+0x80>

0008d2c0 <__locale_charset>:
   8d2c0:	d0a00417 	ldw	r2,-32752(gp)
   8d2c4:	f800283a 	ret

0008d2c8 <_localeconv_r>:
   8d2c8:	008002b4 	movhi	r2,10
   8d2cc:	10824d04 	addi	r2,r2,2356
   8d2d0:	f800283a 	ret

0008d2d4 <localeconv>:
   8d2d4:	008002b4 	movhi	r2,10
   8d2d8:	1089d704 	addi	r2,r2,10076
   8d2dc:	11000017 	ldw	r4,0(r2)
   8d2e0:	008d2c81 	jmpi	8d2c8 <_localeconv_r>

0008d2e4 <_setlocale_r>:
   8d2e4:	defffc04 	addi	sp,sp,-16
   8d2e8:	00c002b4 	movhi	r3,10
   8d2ec:	18c22304 	addi	r3,r3,2188
   8d2f0:	dc800215 	stw	r18,8(sp)
   8d2f4:	dc400115 	stw	r17,4(sp)
   8d2f8:	dc000015 	stw	r16,0(sp)
   8d2fc:	2023883a 	mov	r17,r4
   8d300:	2825883a 	mov	r18,r5
   8d304:	dfc00315 	stw	ra,12(sp)
   8d308:	3021883a 	mov	r16,r6
   8d30c:	3009883a 	mov	r4,r6
   8d310:	180b883a 	mov	r5,r3
   8d314:	30000926 	beq	r6,zero,8d33c <_setlocale_r+0x58>
   8d318:	008f9ec0 	call	8f9ec <strcmp>
   8d31c:	8009883a 	mov	r4,r16
   8d320:	014002b4 	movhi	r5,10
   8d324:	29423404 	addi	r5,r5,2256
   8d328:	10000b1e 	bne	r2,zero,8d358 <_setlocale_r+0x74>
   8d32c:	8c000d15 	stw	r16,52(r17)
   8d330:	8c800c15 	stw	r18,48(r17)
   8d334:	00c002b4 	movhi	r3,10
   8d338:	18c22304 	addi	r3,r3,2188
   8d33c:	1805883a 	mov	r2,r3
   8d340:	dfc00317 	ldw	ra,12(sp)
   8d344:	dc800217 	ldw	r18,8(sp)
   8d348:	dc400117 	ldw	r17,4(sp)
   8d34c:	dc000017 	ldw	r16,0(sp)
   8d350:	dec00404 	addi	sp,sp,16
   8d354:	f800283a 	ret
   8d358:	008f9ec0 	call	8f9ec <strcmp>
   8d35c:	0007883a 	mov	r3,zero
   8d360:	103ff226 	beq	r2,zero,8d32c <_setlocale_r+0x48>
   8d364:	003ff506 	br	8d33c <_setlocale_r+0x58>

0008d368 <setlocale>:
   8d368:	018002b4 	movhi	r6,10
   8d36c:	3189d704 	addi	r6,r6,10076
   8d370:	2007883a 	mov	r3,r4
   8d374:	31000017 	ldw	r4,0(r6)
   8d378:	280d883a 	mov	r6,r5
   8d37c:	180b883a 	mov	r5,r3
   8d380:	008d2e41 	jmpi	8d2e4 <_setlocale_r>

0008d384 <__smakebuf_r>:
   8d384:	2880030b 	ldhu	r2,12(r5)
   8d388:	deffed04 	addi	sp,sp,-76
   8d38c:	dc401015 	stw	r17,64(sp)
   8d390:	1080008c 	andi	r2,r2,2
   8d394:	dc000f15 	stw	r16,60(sp)
   8d398:	dfc01215 	stw	ra,72(sp)
   8d39c:	dc801115 	stw	r18,68(sp)
   8d3a0:	2821883a 	mov	r16,r5
   8d3a4:	2023883a 	mov	r17,r4
   8d3a8:	10000b26 	beq	r2,zero,8d3d8 <__smakebuf_r+0x54>
   8d3ac:	28c010c4 	addi	r3,r5,67
   8d3b0:	00800044 	movi	r2,1
   8d3b4:	28800515 	stw	r2,20(r5)
   8d3b8:	28c00415 	stw	r3,16(r5)
   8d3bc:	28c00015 	stw	r3,0(r5)
   8d3c0:	dfc01217 	ldw	ra,72(sp)
   8d3c4:	dc801117 	ldw	r18,68(sp)
   8d3c8:	dc401017 	ldw	r17,64(sp)
   8d3cc:	dc000f17 	ldw	r16,60(sp)
   8d3d0:	dec01304 	addi	sp,sp,76
   8d3d4:	f800283a 	ret
   8d3d8:	2940038f 	ldh	r5,14(r5)
   8d3dc:	28002116 	blt	r5,zero,8d464 <__smakebuf_r+0xe0>
   8d3e0:	d80d883a 	mov	r6,sp
   8d3e4:	008fec80 	call	8fec8 <_fstat_r>
   8d3e8:	10001e16 	blt	r2,zero,8d464 <__smakebuf_r+0xe0>
   8d3ec:	d8800117 	ldw	r2,4(sp)
   8d3f0:	00e00014 	movui	r3,32768
   8d3f4:	113c000c 	andi	r4,r2,61440
   8d3f8:	20c03126 	beq	r4,r3,8d4c0 <__smakebuf_r+0x13c>
   8d3fc:	8080030b 	ldhu	r2,12(r16)
   8d400:	00c80004 	movi	r3,8192
   8d404:	10820014 	ori	r2,r2,2048
   8d408:	8080030d 	sth	r2,12(r16)
   8d40c:	20c01e26 	beq	r4,r3,8d488 <__smakebuf_r+0x104>
   8d410:	04810004 	movi	r18,1024
   8d414:	8809883a 	mov	r4,r17
   8d418:	900b883a 	mov	r5,r18
   8d41c:	008d5180 	call	8d518 <_malloc_r>
   8d420:	1009883a 	mov	r4,r2
   8d424:	10003126 	beq	r2,zero,8d4ec <__smakebuf_r+0x168>
   8d428:	80c0030b 	ldhu	r3,12(r16)
   8d42c:	00800274 	movhi	r2,9
   8d430:	10b1af04 	addi	r2,r2,-14660
   8d434:	88800f15 	stw	r2,60(r17)
   8d438:	18c02014 	ori	r3,r3,128
   8d43c:	84800515 	stw	r18,20(r16)
   8d440:	80c0030d 	sth	r3,12(r16)
   8d444:	81000415 	stw	r4,16(r16)
   8d448:	81000015 	stw	r4,0(r16)
   8d44c:	dfc01217 	ldw	ra,72(sp)
   8d450:	dc801117 	ldw	r18,68(sp)
   8d454:	dc401017 	ldw	r17,64(sp)
   8d458:	dc000f17 	ldw	r16,60(sp)
   8d45c:	dec01304 	addi	sp,sp,76
   8d460:	f800283a 	ret
   8d464:	80c0030b 	ldhu	r3,12(r16)
   8d468:	1880200c 	andi	r2,r3,128
   8d46c:	10000426 	beq	r2,zero,8d480 <__smakebuf_r+0xfc>
   8d470:	04801004 	movi	r18,64
   8d474:	18820014 	ori	r2,r3,2048
   8d478:	8080030d 	sth	r2,12(r16)
   8d47c:	003fe506 	br	8d414 <__smakebuf_r+0x90>
   8d480:	04810004 	movi	r18,1024
   8d484:	003ffb06 	br	8d474 <__smakebuf_r+0xf0>
   8d488:	8140038f 	ldh	r5,14(r16)
   8d48c:	8809883a 	mov	r4,r17
   8d490:	008ff3c0 	call	8ff3c <_isatty_r>
   8d494:	103fde26 	beq	r2,zero,8d410 <__smakebuf_r+0x8c>
   8d498:	8080030b 	ldhu	r2,12(r16)
   8d49c:	80c010c4 	addi	r3,r16,67
   8d4a0:	04810004 	movi	r18,1024
   8d4a4:	10800054 	ori	r2,r2,1
   8d4a8:	8080030d 	sth	r2,12(r16)
   8d4ac:	00800044 	movi	r2,1
   8d4b0:	80c00415 	stw	r3,16(r16)
   8d4b4:	80800515 	stw	r2,20(r16)
   8d4b8:	80c00015 	stw	r3,0(r16)
   8d4bc:	003fd506 	br	8d414 <__smakebuf_r+0x90>
   8d4c0:	80c00a17 	ldw	r3,40(r16)
   8d4c4:	00800274 	movhi	r2,9
   8d4c8:	10be2a04 	addi	r2,r2,-1880
   8d4cc:	18bfcb1e 	bne	r3,r2,8d3fc <__smakebuf_r+0x78>
   8d4d0:	8080030b 	ldhu	r2,12(r16)
   8d4d4:	00c10004 	movi	r3,1024
   8d4d8:	1825883a 	mov	r18,r3
   8d4dc:	10c4b03a 	or	r2,r2,r3
   8d4e0:	8080030d 	sth	r2,12(r16)
   8d4e4:	80c01315 	stw	r3,76(r16)
   8d4e8:	003fca06 	br	8d414 <__smakebuf_r+0x90>
   8d4ec:	8100030b 	ldhu	r4,12(r16)
   8d4f0:	2080800c 	andi	r2,r4,512
   8d4f4:	103fb21e 	bne	r2,zero,8d3c0 <__smakebuf_r+0x3c>
   8d4f8:	80c010c4 	addi	r3,r16,67
   8d4fc:	21000094 	ori	r4,r4,2
   8d500:	00800044 	movi	r2,1
   8d504:	80800515 	stw	r2,20(r16)
   8d508:	8100030d 	sth	r4,12(r16)
   8d50c:	80c00415 	stw	r3,16(r16)
   8d510:	80c00015 	stw	r3,0(r16)
   8d514:	003faa06 	br	8d3c0 <__smakebuf_r+0x3c>

0008d518 <_malloc_r>:
   8d518:	defff604 	addi	sp,sp,-40
   8d51c:	28c002c4 	addi	r3,r5,11
   8d520:	00800584 	movi	r2,22
   8d524:	dc800215 	stw	r18,8(sp)
   8d528:	dfc00915 	stw	ra,36(sp)
   8d52c:	df000815 	stw	fp,32(sp)
   8d530:	ddc00715 	stw	r23,28(sp)
   8d534:	dd800615 	stw	r22,24(sp)
   8d538:	dd400515 	stw	r21,20(sp)
   8d53c:	dd000415 	stw	r20,16(sp)
   8d540:	dcc00315 	stw	r19,12(sp)
   8d544:	dc400115 	stw	r17,4(sp)
   8d548:	dc000015 	stw	r16,0(sp)
   8d54c:	2025883a 	mov	r18,r4
   8d550:	10c01236 	bltu	r2,r3,8d59c <_malloc_r+0x84>
   8d554:	04400404 	movi	r17,16
   8d558:	8940142e 	bgeu	r17,r5,8d5ac <_malloc_r+0x94>
   8d55c:	00800304 	movi	r2,12
   8d560:	0007883a 	mov	r3,zero
   8d564:	90800015 	stw	r2,0(r18)
   8d568:	1805883a 	mov	r2,r3
   8d56c:	dfc00917 	ldw	ra,36(sp)
   8d570:	df000817 	ldw	fp,32(sp)
   8d574:	ddc00717 	ldw	r23,28(sp)
   8d578:	dd800617 	ldw	r22,24(sp)
   8d57c:	dd400517 	ldw	r21,20(sp)
   8d580:	dd000417 	ldw	r20,16(sp)
   8d584:	dcc00317 	ldw	r19,12(sp)
   8d588:	dc800217 	ldw	r18,8(sp)
   8d58c:	dc400117 	ldw	r17,4(sp)
   8d590:	dc000017 	ldw	r16,0(sp)
   8d594:	dec00a04 	addi	sp,sp,40
   8d598:	f800283a 	ret
   8d59c:	00bffe04 	movi	r2,-8
   8d5a0:	18a2703a 	and	r17,r3,r2
   8d5a4:	883fed16 	blt	r17,zero,8d55c <_malloc_r+0x44>
   8d5a8:	897fec36 	bltu	r17,r5,8d55c <_malloc_r+0x44>
   8d5ac:	9009883a 	mov	r4,r18
   8d5b0:	00933400 	call	93340 <__malloc_lock>
   8d5b4:	00807dc4 	movi	r2,503
   8d5b8:	14402b2e 	bgeu	r2,r17,8d668 <_malloc_r+0x150>
   8d5bc:	8806d27a 	srli	r3,r17,9
   8d5c0:	18003f1e 	bne	r3,zero,8d6c0 <_malloc_r+0x1a8>
   8d5c4:	880cd0fa 	srli	r6,r17,3
   8d5c8:	300490fa 	slli	r2,r6,3
   8d5cc:	02c002b4 	movhi	r11,10
   8d5d0:	5ac44404 	addi	r11,r11,4368
   8d5d4:	12cb883a 	add	r5,r2,r11
   8d5d8:	2c000317 	ldw	r16,12(r5)
   8d5dc:	580f883a 	mov	r7,r11
   8d5e0:	2c00041e 	bne	r5,r16,8d5f4 <_malloc_r+0xdc>
   8d5e4:	00000a06 	br	8d610 <_malloc_r+0xf8>
   8d5e8:	1800860e 	bge	r3,zero,8d804 <_malloc_r+0x2ec>
   8d5ec:	84000317 	ldw	r16,12(r16)
   8d5f0:	2c000726 	beq	r5,r16,8d610 <_malloc_r+0xf8>
   8d5f4:	80800117 	ldw	r2,4(r16)
   8d5f8:	00ffff04 	movi	r3,-4
   8d5fc:	10c8703a 	and	r4,r2,r3
   8d600:	2447c83a 	sub	r3,r4,r17
   8d604:	008003c4 	movi	r2,15
   8d608:	10fff70e 	bge	r2,r3,8d5e8 <_malloc_r+0xd0>
   8d60c:	31bfffc4 	addi	r6,r6,-1
   8d610:	32400044 	addi	r9,r6,1
   8d614:	028002b4 	movhi	r10,10
   8d618:	52844604 	addi	r10,r10,4376
   8d61c:	54000217 	ldw	r16,8(r10)
   8d620:	8280a026 	beq	r16,r10,8d8a4 <_malloc_r+0x38c>
   8d624:	80800117 	ldw	r2,4(r16)
   8d628:	00ffff04 	movi	r3,-4
   8d62c:	10ca703a 	and	r5,r2,r3
   8d630:	2c4dc83a 	sub	r6,r5,r17
   8d634:	008003c4 	movi	r2,15
   8d638:	11808316 	blt	r2,r6,8d848 <_malloc_r+0x330>
   8d63c:	52800315 	stw	r10,12(r10)
   8d640:	52800215 	stw	r10,8(r10)
   8d644:	30002916 	blt	r6,zero,8d6ec <_malloc_r+0x1d4>
   8d648:	8147883a 	add	r3,r16,r5
   8d64c:	18800117 	ldw	r2,4(r3)
   8d650:	9009883a 	mov	r4,r18
   8d654:	10800054 	ori	r2,r2,1
   8d658:	18800115 	stw	r2,4(r3)
   8d65c:	00934480 	call	93448 <__malloc_unlock>
   8d660:	80c00204 	addi	r3,r16,8
   8d664:	003fc006 	br	8d568 <_malloc_r+0x50>
   8d668:	02c002b4 	movhi	r11,10
   8d66c:	5ac44404 	addi	r11,r11,4368
   8d670:	8ac5883a 	add	r2,r17,r11
   8d674:	14000317 	ldw	r16,12(r2)
   8d678:	580f883a 	mov	r7,r11
   8d67c:	8806d0fa 	srli	r3,r17,3
   8d680:	14006c26 	beq	r2,r16,8d834 <_malloc_r+0x31c>
   8d684:	80c00117 	ldw	r3,4(r16)
   8d688:	00bfff04 	movi	r2,-4
   8d68c:	81800317 	ldw	r6,12(r16)
   8d690:	1886703a 	and	r3,r3,r2
   8d694:	80c7883a 	add	r3,r16,r3
   8d698:	18800117 	ldw	r2,4(r3)
   8d69c:	81400217 	ldw	r5,8(r16)
   8d6a0:	9009883a 	mov	r4,r18
   8d6a4:	10800054 	ori	r2,r2,1
   8d6a8:	18800115 	stw	r2,4(r3)
   8d6ac:	31400215 	stw	r5,8(r6)
   8d6b0:	29800315 	stw	r6,12(r5)
   8d6b4:	00934480 	call	93448 <__malloc_unlock>
   8d6b8:	80c00204 	addi	r3,r16,8
   8d6bc:	003faa06 	br	8d568 <_malloc_r+0x50>
   8d6c0:	00800104 	movi	r2,4
   8d6c4:	10c0052e 	bgeu	r2,r3,8d6dc <_malloc_r+0x1c4>
   8d6c8:	00800504 	movi	r2,20
   8d6cc:	10c07836 	bltu	r2,r3,8d8b0 <_malloc_r+0x398>
   8d6d0:	198016c4 	addi	r6,r3,91
   8d6d4:	300490fa 	slli	r2,r6,3
   8d6d8:	003fbc06 	br	8d5cc <_malloc_r+0xb4>
   8d6dc:	8804d1ba 	srli	r2,r17,6
   8d6e0:	11800e04 	addi	r6,r2,56
   8d6e4:	300490fa 	slli	r2,r6,3
   8d6e8:	003fb806 	br	8d5cc <_malloc_r+0xb4>
   8d6ec:	00807fc4 	movi	r2,511
   8d6f0:	1140bb36 	bltu	r2,r5,8d9e0 <_malloc_r+0x4c8>
   8d6f4:	2806d0fa 	srli	r3,r5,3
   8d6f8:	573ffe04 	addi	fp,r10,-8
   8d6fc:	00800044 	movi	r2,1
   8d700:	180890fa 	slli	r4,r3,3
   8d704:	1807d0ba 	srai	r3,r3,2
   8d708:	e1c00117 	ldw	r7,4(fp)
   8d70c:	5909883a 	add	r4,r11,r4
   8d710:	21400217 	ldw	r5,8(r4)
   8d714:	10c4983a 	sll	r2,r2,r3
   8d718:	81000315 	stw	r4,12(r16)
   8d71c:	81400215 	stw	r5,8(r16)
   8d720:	388eb03a 	or	r7,r7,r2
   8d724:	2c000315 	stw	r16,12(r5)
   8d728:	24000215 	stw	r16,8(r4)
   8d72c:	e1c00115 	stw	r7,4(fp)
   8d730:	4807883a 	mov	r3,r9
   8d734:	4800cd16 	blt	r9,zero,8da6c <_malloc_r+0x554>
   8d738:	1807d0ba 	srai	r3,r3,2
   8d73c:	00800044 	movi	r2,1
   8d740:	10c8983a 	sll	r4,r2,r3
   8d744:	39004436 	bltu	r7,r4,8d858 <_malloc_r+0x340>
   8d748:	21c4703a 	and	r2,r4,r7
   8d74c:	10000a1e 	bne	r2,zero,8d778 <_malloc_r+0x260>
   8d750:	2109883a 	add	r4,r4,r4
   8d754:	00bfff04 	movi	r2,-4
   8d758:	4884703a 	and	r2,r9,r2
   8d75c:	3906703a 	and	r3,r7,r4
   8d760:	12400104 	addi	r9,r2,4
   8d764:	1800041e 	bne	r3,zero,8d778 <_malloc_r+0x260>
   8d768:	2109883a 	add	r4,r4,r4
   8d76c:	3904703a 	and	r2,r7,r4
   8d770:	4a400104 	addi	r9,r9,4
   8d774:	103ffc26 	beq	r2,zero,8d768 <_malloc_r+0x250>
   8d778:	480490fa 	slli	r2,r9,3
   8d77c:	4819883a 	mov	r12,r9
   8d780:	023fff04 	movi	r8,-4
   8d784:	589b883a 	add	r13,r11,r2
   8d788:	6807883a 	mov	r3,r13
   8d78c:	014003c4 	movi	r5,15
   8d790:	1c000317 	ldw	r16,12(r3)
   8d794:	1c00041e 	bne	r3,r16,8d7a8 <_malloc_r+0x290>
   8d798:	0000a706 	br	8da38 <_malloc_r+0x520>
   8d79c:	3000ab0e 	bge	r6,zero,8da4c <_malloc_r+0x534>
   8d7a0:	84000317 	ldw	r16,12(r16)
   8d7a4:	1c00a426 	beq	r3,r16,8da38 <_malloc_r+0x520>
   8d7a8:	80800117 	ldw	r2,4(r16)
   8d7ac:	1204703a 	and	r2,r2,r8
   8d7b0:	144dc83a 	sub	r6,r2,r17
   8d7b4:	29bff90e 	bge	r5,r6,8d79c <_malloc_r+0x284>
   8d7b8:	81000317 	ldw	r4,12(r16)
   8d7bc:	80c00217 	ldw	r3,8(r16)
   8d7c0:	89400054 	ori	r5,r17,1
   8d7c4:	8445883a 	add	r2,r16,r17
   8d7c8:	20c00215 	stw	r3,8(r4)
   8d7cc:	19000315 	stw	r4,12(r3)
   8d7d0:	81400115 	stw	r5,4(r16)
   8d7d4:	1187883a 	add	r3,r2,r6
   8d7d8:	31000054 	ori	r4,r6,1
   8d7dc:	50800315 	stw	r2,12(r10)
   8d7e0:	50800215 	stw	r2,8(r10)
   8d7e4:	19800015 	stw	r6,0(r3)
   8d7e8:	11000115 	stw	r4,4(r2)
   8d7ec:	12800215 	stw	r10,8(r2)
   8d7f0:	12800315 	stw	r10,12(r2)
   8d7f4:	9009883a 	mov	r4,r18
   8d7f8:	00934480 	call	93448 <__malloc_unlock>
   8d7fc:	80c00204 	addi	r3,r16,8
   8d800:	003f5906 	br	8d568 <_malloc_r+0x50>
   8d804:	8109883a 	add	r4,r16,r4
   8d808:	20800117 	ldw	r2,4(r4)
   8d80c:	80c00217 	ldw	r3,8(r16)
   8d810:	81400317 	ldw	r5,12(r16)
   8d814:	10800054 	ori	r2,r2,1
   8d818:	20800115 	stw	r2,4(r4)
   8d81c:	28c00215 	stw	r3,8(r5)
   8d820:	19400315 	stw	r5,12(r3)
   8d824:	9009883a 	mov	r4,r18
   8d828:	00934480 	call	93448 <__malloc_unlock>
   8d82c:	80c00204 	addi	r3,r16,8
   8d830:	003f4d06 	br	8d568 <_malloc_r+0x50>
   8d834:	80800204 	addi	r2,r16,8
   8d838:	14000317 	ldw	r16,12(r2)
   8d83c:	143f911e 	bne	r2,r16,8d684 <_malloc_r+0x16c>
   8d840:	1a400084 	addi	r9,r3,2
   8d844:	003f7306 	br	8d614 <_malloc_r+0xfc>
   8d848:	88c00054 	ori	r3,r17,1
   8d84c:	8445883a 	add	r2,r16,r17
   8d850:	80c00115 	stw	r3,4(r16)
   8d854:	003fdf06 	br	8d7d4 <_malloc_r+0x2bc>
   8d858:	e4000217 	ldw	r16,8(fp)
   8d85c:	00bfff04 	movi	r2,-4
   8d860:	80c00117 	ldw	r3,4(r16)
   8d864:	802d883a 	mov	r22,r16
   8d868:	18aa703a 	and	r21,r3,r2
   8d86c:	ac401636 	bltu	r21,r17,8d8c8 <_malloc_r+0x3b0>
   8d870:	ac49c83a 	sub	r4,r21,r17
   8d874:	008003c4 	movi	r2,15
   8d878:	1100130e 	bge	r2,r4,8d8c8 <_malloc_r+0x3b0>
   8d87c:	88800054 	ori	r2,r17,1
   8d880:	8447883a 	add	r3,r16,r17
   8d884:	80800115 	stw	r2,4(r16)
   8d888:	20800054 	ori	r2,r4,1
   8d88c:	18800115 	stw	r2,4(r3)
   8d890:	e0c00215 	stw	r3,8(fp)
   8d894:	9009883a 	mov	r4,r18
   8d898:	00934480 	call	93448 <__malloc_unlock>
   8d89c:	80c00204 	addi	r3,r16,8
   8d8a0:	003f3106 	br	8d568 <_malloc_r+0x50>
   8d8a4:	39c00117 	ldw	r7,4(r7)
   8d8a8:	573ffe04 	addi	fp,r10,-8
   8d8ac:	003fa006 	br	8d730 <_malloc_r+0x218>
   8d8b0:	00801504 	movi	r2,84
   8d8b4:	10c06736 	bltu	r2,r3,8da54 <_malloc_r+0x53c>
   8d8b8:	8804d33a 	srli	r2,r17,12
   8d8bc:	11801b84 	addi	r6,r2,110
   8d8c0:	300490fa 	slli	r2,r6,3
   8d8c4:	003f4106 	br	8d5cc <_malloc_r+0xb4>
   8d8c8:	d0a71417 	ldw	r2,-25520(gp)
   8d8cc:	d0e00617 	ldw	r3,-32744(gp)
   8d8d0:	053fffc4 	movi	r20,-1
   8d8d4:	10800404 	addi	r2,r2,16
   8d8d8:	88a7883a 	add	r19,r17,r2
   8d8dc:	1d000326 	beq	r3,r20,8d8ec <_malloc_r+0x3d4>
   8d8e0:	98c3ffc4 	addi	r3,r19,4095
   8d8e4:	00bc0004 	movi	r2,-4096
   8d8e8:	18a6703a 	and	r19,r3,r2
   8d8ec:	9009883a 	mov	r4,r18
   8d8f0:	980b883a 	mov	r5,r19
   8d8f4:	008f8300 	call	8f830 <_sbrk_r>
   8d8f8:	1009883a 	mov	r4,r2
   8d8fc:	15000426 	beq	r2,r20,8d910 <_malloc_r+0x3f8>
   8d900:	854b883a 	add	r5,r16,r21
   8d904:	1029883a 	mov	r20,r2
   8d908:	11405a2e 	bgeu	r2,r5,8da74 <_malloc_r+0x55c>
   8d90c:	87000c26 	beq	r16,fp,8d940 <_malloc_r+0x428>
   8d910:	e4000217 	ldw	r16,8(fp)
   8d914:	80c00117 	ldw	r3,4(r16)
   8d918:	00bfff04 	movi	r2,-4
   8d91c:	1884703a 	and	r2,r3,r2
   8d920:	14400336 	bltu	r2,r17,8d930 <_malloc_r+0x418>
   8d924:	1449c83a 	sub	r4,r2,r17
   8d928:	008003c4 	movi	r2,15
   8d92c:	113fd316 	blt	r2,r4,8d87c <_malloc_r+0x364>
   8d930:	9009883a 	mov	r4,r18
   8d934:	00934480 	call	93448 <__malloc_unlock>
   8d938:	0007883a 	mov	r3,zero
   8d93c:	003f0a06 	br	8d568 <_malloc_r+0x50>
   8d940:	05c002b4 	movhi	r23,10
   8d944:	bdd10d04 	addi	r23,r23,17460
   8d948:	b8800017 	ldw	r2,0(r23)
   8d94c:	988d883a 	add	r6,r19,r2
   8d950:	b9800015 	stw	r6,0(r23)
   8d954:	d0e00617 	ldw	r3,-32744(gp)
   8d958:	00bfffc4 	movi	r2,-1
   8d95c:	18808e26 	beq	r3,r2,8db98 <_malloc_r+0x680>
   8d960:	2145c83a 	sub	r2,r4,r5
   8d964:	3085883a 	add	r2,r6,r2
   8d968:	b8800015 	stw	r2,0(r23)
   8d96c:	20c001cc 	andi	r3,r4,7
   8d970:	18005f1e 	bne	r3,zero,8daf0 <_malloc_r+0x5d8>
   8d974:	000b883a 	mov	r5,zero
   8d978:	a4c5883a 	add	r2,r20,r19
   8d97c:	1083ffcc 	andi	r2,r2,4095
   8d980:	00c40004 	movi	r3,4096
   8d984:	1887c83a 	sub	r3,r3,r2
   8d988:	28e7883a 	add	r19,r5,r3
   8d98c:	9009883a 	mov	r4,r18
   8d990:	980b883a 	mov	r5,r19
   8d994:	008f8300 	call	8f830 <_sbrk_r>
   8d998:	1007883a 	mov	r3,r2
   8d99c:	00bfffc4 	movi	r2,-1
   8d9a0:	18807a26 	beq	r3,r2,8db8c <_malloc_r+0x674>
   8d9a4:	1d05c83a 	sub	r2,r3,r20
   8d9a8:	9885883a 	add	r2,r19,r2
   8d9ac:	10c00054 	ori	r3,r2,1
   8d9b0:	b8800017 	ldw	r2,0(r23)
   8d9b4:	a021883a 	mov	r16,r20
   8d9b8:	a0c00115 	stw	r3,4(r20)
   8d9bc:	9885883a 	add	r2,r19,r2
   8d9c0:	b8800015 	stw	r2,0(r23)
   8d9c4:	e5000215 	stw	r20,8(fp)
   8d9c8:	b7003626 	beq	r22,fp,8daa4 <_malloc_r+0x58c>
   8d9cc:	018003c4 	movi	r6,15
   8d9d0:	35404b36 	bltu	r6,r21,8db00 <_malloc_r+0x5e8>
   8d9d4:	00800044 	movi	r2,1
   8d9d8:	a0800115 	stw	r2,4(r20)
   8d9dc:	003fcd06 	br	8d914 <_malloc_r+0x3fc>
   8d9e0:	2808d27a 	srli	r4,r5,9
   8d9e4:	2000371e 	bne	r4,zero,8dac4 <_malloc_r+0x5ac>
   8d9e8:	2808d0fa 	srli	r4,r5,3
   8d9ec:	200690fa 	slli	r3,r4,3
   8d9f0:	1ad1883a 	add	r8,r3,r11
   8d9f4:	41800217 	ldw	r6,8(r8)
   8d9f8:	41805b26 	beq	r8,r6,8db68 <_malloc_r+0x650>
   8d9fc:	30800117 	ldw	r2,4(r6)
   8da00:	00ffff04 	movi	r3,-4
   8da04:	10c4703a 	and	r2,r2,r3
   8da08:	2880022e 	bgeu	r5,r2,8da14 <_malloc_r+0x4fc>
   8da0c:	31800217 	ldw	r6,8(r6)
   8da10:	41bffa1e 	bne	r8,r6,8d9fc <_malloc_r+0x4e4>
   8da14:	32000317 	ldw	r8,12(r6)
   8da18:	39c00117 	ldw	r7,4(r7)
   8da1c:	82000315 	stw	r8,12(r16)
   8da20:	81800215 	stw	r6,8(r16)
   8da24:	070002b4 	movhi	fp,10
   8da28:	e7044404 	addi	fp,fp,4368
   8da2c:	34000315 	stw	r16,12(r6)
   8da30:	44000215 	stw	r16,8(r8)
   8da34:	003f3e06 	br	8d730 <_malloc_r+0x218>
   8da38:	63000044 	addi	r12,r12,1
   8da3c:	608000cc 	andi	r2,r12,3
   8da40:	10005d26 	beq	r2,zero,8dbb8 <_malloc_r+0x6a0>
   8da44:	18c00204 	addi	r3,r3,8
   8da48:	003f5106 	br	8d790 <_malloc_r+0x278>
   8da4c:	8089883a 	add	r4,r16,r2
   8da50:	003f6d06 	br	8d808 <_malloc_r+0x2f0>
   8da54:	00805504 	movi	r2,340
   8da58:	10c02036 	bltu	r2,r3,8dadc <_malloc_r+0x5c4>
   8da5c:	8804d3fa 	srli	r2,r17,15
   8da60:	11801dc4 	addi	r6,r2,119
   8da64:	300490fa 	slli	r2,r6,3
   8da68:	003ed806 	br	8d5cc <_malloc_r+0xb4>
   8da6c:	48c000c4 	addi	r3,r9,3
   8da70:	003f3106 	br	8d738 <_malloc_r+0x220>
   8da74:	05c002b4 	movhi	r23,10
   8da78:	bdd10d04 	addi	r23,r23,17460
   8da7c:	b8800017 	ldw	r2,0(r23)
   8da80:	988d883a 	add	r6,r19,r2
   8da84:	b9800015 	stw	r6,0(r23)
   8da88:	293fb21e 	bne	r5,r4,8d954 <_malloc_r+0x43c>
   8da8c:	2083ffcc 	andi	r2,r4,4095
   8da90:	103fb01e 	bne	r2,zero,8d954 <_malloc_r+0x43c>
   8da94:	e4000217 	ldw	r16,8(fp)
   8da98:	9d45883a 	add	r2,r19,r21
   8da9c:	10800054 	ori	r2,r2,1
   8daa0:	80800115 	stw	r2,4(r16)
   8daa4:	b8c00017 	ldw	r3,0(r23)
   8daa8:	d0a71517 	ldw	r2,-25516(gp)
   8daac:	10c0012e 	bgeu	r2,r3,8dab4 <_malloc_r+0x59c>
   8dab0:	d0e71515 	stw	r3,-25516(gp)
   8dab4:	d0a71617 	ldw	r2,-25512(gp)
   8dab8:	10ff962e 	bgeu	r2,r3,8d914 <_malloc_r+0x3fc>
   8dabc:	d0e71615 	stw	r3,-25512(gp)
   8dac0:	003f9406 	br	8d914 <_malloc_r+0x3fc>
   8dac4:	00800104 	movi	r2,4
   8dac8:	11001e36 	bltu	r2,r4,8db44 <_malloc_r+0x62c>
   8dacc:	2804d1ba 	srli	r2,r5,6
   8dad0:	11000e04 	addi	r4,r2,56
   8dad4:	200690fa 	slli	r3,r4,3
   8dad8:	003fc506 	br	8d9f0 <_malloc_r+0x4d8>
   8dadc:	00815504 	movi	r2,1364
   8dae0:	10c01d2e 	bgeu	r2,r3,8db58 <_malloc_r+0x640>
   8dae4:	01801f84 	movi	r6,126
   8dae8:	0080fc04 	movi	r2,1008
   8daec:	003eb706 	br	8d5cc <_malloc_r+0xb4>
   8daf0:	00800204 	movi	r2,8
   8daf4:	10cbc83a 	sub	r5,r2,r3
   8daf8:	2169883a 	add	r20,r4,r5
   8dafc:	003f9e06 	br	8d978 <_malloc_r+0x460>
   8db00:	00bffe04 	movi	r2,-8
   8db04:	a93ffd04 	addi	r4,r21,-12
   8db08:	2088703a 	and	r4,r4,r2
   8db0c:	b10b883a 	add	r5,r22,r4
   8db10:	00c00144 	movi	r3,5
   8db14:	28c00215 	stw	r3,8(r5)
   8db18:	28c00115 	stw	r3,4(r5)
   8db1c:	b0800117 	ldw	r2,4(r22)
   8db20:	1080004c 	andi	r2,r2,1
   8db24:	2084b03a 	or	r2,r4,r2
   8db28:	b0800115 	stw	r2,4(r22)
   8db2c:	313fdd2e 	bgeu	r6,r4,8daa4 <_malloc_r+0x58c>
   8db30:	b1400204 	addi	r5,r22,8
   8db34:	9009883a 	mov	r4,r18
   8db38:	008c9900 	call	8c990 <_free_r>
   8db3c:	e4000217 	ldw	r16,8(fp)
   8db40:	003fd806 	br	8daa4 <_malloc_r+0x58c>
   8db44:	00800504 	movi	r2,20
   8db48:	11001536 	bltu	r2,r4,8dba0 <_malloc_r+0x688>
   8db4c:	210016c4 	addi	r4,r4,91
   8db50:	200690fa 	slli	r3,r4,3
   8db54:	003fa606 	br	8d9f0 <_malloc_r+0x4d8>
   8db58:	8804d4ba 	srli	r2,r17,18
   8db5c:	11801f04 	addi	r6,r2,124
   8db60:	300490fa 	slli	r2,r6,3
   8db64:	003e9906 	br	8d5cc <_malloc_r+0xb4>
   8db68:	2009d0ba 	srai	r4,r4,2
   8db6c:	014002b4 	movhi	r5,10
   8db70:	29444404 	addi	r5,r5,4368
   8db74:	00c00044 	movi	r3,1
   8db78:	28800117 	ldw	r2,4(r5)
   8db7c:	1906983a 	sll	r3,r3,r4
   8db80:	10c4b03a 	or	r2,r2,r3
   8db84:	28800115 	stw	r2,4(r5)
   8db88:	003fa306 	br	8da18 <_malloc_r+0x500>
   8db8c:	0027883a 	mov	r19,zero
   8db90:	00c00044 	movi	r3,1
   8db94:	003f8606 	br	8d9b0 <_malloc_r+0x498>
   8db98:	d1200615 	stw	r4,-32744(gp)
   8db9c:	003f7306 	br	8d96c <_malloc_r+0x454>
   8dba0:	00801504 	movi	r2,84
   8dba4:	11001936 	bltu	r2,r4,8dc0c <_malloc_r+0x6f4>
   8dba8:	2804d33a 	srli	r2,r5,12
   8dbac:	11001b84 	addi	r4,r2,110
   8dbb0:	200690fa 	slli	r3,r4,3
   8dbb4:	003f8e06 	br	8d9f0 <_malloc_r+0x4d8>
   8dbb8:	480b883a 	mov	r5,r9
   8dbbc:	6807883a 	mov	r3,r13
   8dbc0:	288000cc 	andi	r2,r5,3
   8dbc4:	18fffe04 	addi	r3,r3,-8
   8dbc8:	297fffc4 	addi	r5,r5,-1
   8dbcc:	10001526 	beq	r2,zero,8dc24 <_malloc_r+0x70c>
   8dbd0:	18800217 	ldw	r2,8(r3)
   8dbd4:	10fffa26 	beq	r2,r3,8dbc0 <_malloc_r+0x6a8>
   8dbd8:	2109883a 	add	r4,r4,r4
   8dbdc:	393f1e36 	bltu	r7,r4,8d858 <_malloc_r+0x340>
   8dbe0:	203f1d26 	beq	r4,zero,8d858 <_malloc_r+0x340>
   8dbe4:	21c4703a 	and	r2,r4,r7
   8dbe8:	10000226 	beq	r2,zero,8dbf4 <_malloc_r+0x6dc>
   8dbec:	6013883a 	mov	r9,r12
   8dbf0:	003ee106 	br	8d778 <_malloc_r+0x260>
   8dbf4:	2109883a 	add	r4,r4,r4
   8dbf8:	3904703a 	and	r2,r7,r4
   8dbfc:	63000104 	addi	r12,r12,4
   8dc00:	103ffc26 	beq	r2,zero,8dbf4 <_malloc_r+0x6dc>
   8dc04:	6013883a 	mov	r9,r12
   8dc08:	003edb06 	br	8d778 <_malloc_r+0x260>
   8dc0c:	00805504 	movi	r2,340
   8dc10:	11000836 	bltu	r2,r4,8dc34 <_malloc_r+0x71c>
   8dc14:	2804d3fa 	srli	r2,r5,15
   8dc18:	11001dc4 	addi	r4,r2,119
   8dc1c:	200690fa 	slli	r3,r4,3
   8dc20:	003f7306 	br	8d9f0 <_malloc_r+0x4d8>
   8dc24:	0104303a 	nor	r2,zero,r4
   8dc28:	388e703a 	and	r7,r7,r2
   8dc2c:	e1c00115 	stw	r7,4(fp)
   8dc30:	003fe906 	br	8dbd8 <_malloc_r+0x6c0>
   8dc34:	00815504 	movi	r2,1364
   8dc38:	1100032e 	bgeu	r2,r4,8dc48 <_malloc_r+0x730>
   8dc3c:	01001f84 	movi	r4,126
   8dc40:	00c0fc04 	movi	r3,1008
   8dc44:	003f6a06 	br	8d9f0 <_malloc_r+0x4d8>
   8dc48:	2804d4ba 	srli	r2,r5,18
   8dc4c:	11001f04 	addi	r4,r2,124
   8dc50:	200690fa 	slli	r3,r4,3
   8dc54:	003f6606 	br	8d9f0 <_malloc_r+0x4d8>

0008dc58 <memchr>:
   8dc58:	008000c4 	movi	r2,3
   8dc5c:	29403fcc 	andi	r5,r5,255
   8dc60:	2007883a 	mov	r3,r4
   8dc64:	1180022e 	bgeu	r2,r6,8dc70 <memchr+0x18>
   8dc68:	2084703a 	and	r2,r4,r2
   8dc6c:	10000b26 	beq	r2,zero,8dc9c <memchr+0x44>
   8dc70:	313fffc4 	addi	r4,r6,-1
   8dc74:	3000051e 	bne	r6,zero,8dc8c <memchr+0x34>
   8dc78:	00002c06 	br	8dd2c <memchr+0xd4>
   8dc7c:	213fffc4 	addi	r4,r4,-1
   8dc80:	00bfffc4 	movi	r2,-1
   8dc84:	18c00044 	addi	r3,r3,1
   8dc88:	20802826 	beq	r4,r2,8dd2c <memchr+0xd4>
   8dc8c:	18800003 	ldbu	r2,0(r3)
   8dc90:	28bffa1e 	bne	r5,r2,8dc7c <memchr+0x24>
   8dc94:	1805883a 	mov	r2,r3
   8dc98:	f800283a 	ret
   8dc9c:	0011883a 	mov	r8,zero
   8dca0:	0007883a 	mov	r3,zero
   8dca4:	01c00104 	movi	r7,4
   8dca8:	4004923a 	slli	r2,r8,8
   8dcac:	18c00044 	addi	r3,r3,1
   8dcb0:	1151883a 	add	r8,r2,r5
   8dcb4:	19fffc1e 	bne	r3,r7,8dca8 <memchr+0x50>
   8dcb8:	02bfbff4 	movhi	r10,65279
   8dcbc:	52bfbfc4 	addi	r10,r10,-257
   8dcc0:	02602074 	movhi	r9,32897
   8dcc4:	4a602004 	addi	r9,r9,-32640
   8dcc8:	02c000c4 	movi	r11,3
   8dccc:	20800017 	ldw	r2,0(r4)
   8dcd0:	31bfff04 	addi	r6,r6,-4
   8dcd4:	200f883a 	mov	r7,r4
   8dcd8:	1204f03a 	xor	r2,r2,r8
   8dcdc:	1287883a 	add	r3,r2,r10
   8dce0:	1a46703a 	and	r3,r3,r9
   8dce4:	0084303a 	nor	r2,zero,r2
   8dce8:	10c4703a 	and	r2,r2,r3
   8dcec:	10000b26 	beq	r2,zero,8dd1c <memchr+0xc4>
   8dcf0:	20800003 	ldbu	r2,0(r4)
   8dcf4:	28800f26 	beq	r5,r2,8dd34 <memchr+0xdc>
   8dcf8:	20800043 	ldbu	r2,1(r4)
   8dcfc:	21c00044 	addi	r7,r4,1
   8dd00:	28800c26 	beq	r5,r2,8dd34 <memchr+0xdc>
   8dd04:	20800083 	ldbu	r2,2(r4)
   8dd08:	21c00084 	addi	r7,r4,2
   8dd0c:	28800926 	beq	r5,r2,8dd34 <memchr+0xdc>
   8dd10:	208000c3 	ldbu	r2,3(r4)
   8dd14:	21c000c4 	addi	r7,r4,3
   8dd18:	28800626 	beq	r5,r2,8dd34 <memchr+0xdc>
   8dd1c:	21000104 	addi	r4,r4,4
   8dd20:	59bfea36 	bltu	r11,r6,8dccc <memchr+0x74>
   8dd24:	2007883a 	mov	r3,r4
   8dd28:	003fd106 	br	8dc70 <memchr+0x18>
   8dd2c:	0005883a 	mov	r2,zero
   8dd30:	f800283a 	ret
   8dd34:	3805883a 	mov	r2,r7
   8dd38:	f800283a 	ret

0008dd3c <memcpy>:
   8dd3c:	01c003c4 	movi	r7,15
   8dd40:	2007883a 	mov	r3,r4
   8dd44:	3980032e 	bgeu	r7,r6,8dd54 <memcpy+0x18>
   8dd48:	2904b03a 	or	r2,r5,r4
   8dd4c:	108000cc 	andi	r2,r2,3
   8dd50:	10000926 	beq	r2,zero,8dd78 <memcpy+0x3c>
   8dd54:	30000626 	beq	r6,zero,8dd70 <memcpy+0x34>
   8dd58:	30cd883a 	add	r6,r6,r3
   8dd5c:	28800003 	ldbu	r2,0(r5)
   8dd60:	29400044 	addi	r5,r5,1
   8dd64:	18800005 	stb	r2,0(r3)
   8dd68:	18c00044 	addi	r3,r3,1
   8dd6c:	30fffb1e 	bne	r6,r3,8dd5c <memcpy+0x20>
   8dd70:	2005883a 	mov	r2,r4
   8dd74:	f800283a 	ret
   8dd78:	3811883a 	mov	r8,r7
   8dd7c:	200f883a 	mov	r7,r4
   8dd80:	28c00017 	ldw	r3,0(r5)
   8dd84:	31bffc04 	addi	r6,r6,-16
   8dd88:	38c00015 	stw	r3,0(r7)
   8dd8c:	28800117 	ldw	r2,4(r5)
   8dd90:	38800115 	stw	r2,4(r7)
   8dd94:	28c00217 	ldw	r3,8(r5)
   8dd98:	38c00215 	stw	r3,8(r7)
   8dd9c:	28800317 	ldw	r2,12(r5)
   8dda0:	29400404 	addi	r5,r5,16
   8dda4:	38800315 	stw	r2,12(r7)
   8dda8:	39c00404 	addi	r7,r7,16
   8ddac:	41bff436 	bltu	r8,r6,8dd80 <memcpy+0x44>
   8ddb0:	008000c4 	movi	r2,3
   8ddb4:	1180072e 	bgeu	r2,r6,8ddd4 <memcpy+0x98>
   8ddb8:	1007883a 	mov	r3,r2
   8ddbc:	28800017 	ldw	r2,0(r5)
   8ddc0:	31bfff04 	addi	r6,r6,-4
   8ddc4:	29400104 	addi	r5,r5,4
   8ddc8:	38800015 	stw	r2,0(r7)
   8ddcc:	39c00104 	addi	r7,r7,4
   8ddd0:	19bffa36 	bltu	r3,r6,8ddbc <memcpy+0x80>
   8ddd4:	3807883a 	mov	r3,r7
   8ddd8:	003fde06 	br	8dd54 <memcpy+0x18>

0008dddc <memmove>:
   8dddc:	2807883a 	mov	r3,r5
   8dde0:	2011883a 	mov	r8,r4
   8dde4:	29000c2e 	bgeu	r5,r4,8de18 <memmove+0x3c>
   8dde8:	298f883a 	add	r7,r5,r6
   8ddec:	21c00a2e 	bgeu	r4,r7,8de18 <memmove+0x3c>
   8ddf0:	30000726 	beq	r6,zero,8de10 <memmove+0x34>
   8ddf4:	2187883a 	add	r3,r4,r6
   8ddf8:	198dc83a 	sub	r6,r3,r6
   8ddfc:	39ffffc4 	addi	r7,r7,-1
   8de00:	38800003 	ldbu	r2,0(r7)
   8de04:	18ffffc4 	addi	r3,r3,-1
   8de08:	18800005 	stb	r2,0(r3)
   8de0c:	19bffb1e 	bne	r3,r6,8ddfc <memmove+0x20>
   8de10:	2005883a 	mov	r2,r4
   8de14:	f800283a 	ret
   8de18:	01c003c4 	movi	r7,15
   8de1c:	39800a36 	bltu	r7,r6,8de48 <memmove+0x6c>
   8de20:	303ffb26 	beq	r6,zero,8de10 <memmove+0x34>
   8de24:	400f883a 	mov	r7,r8
   8de28:	320d883a 	add	r6,r6,r8
   8de2c:	28800003 	ldbu	r2,0(r5)
   8de30:	29400044 	addi	r5,r5,1
   8de34:	38800005 	stb	r2,0(r7)
   8de38:	39c00044 	addi	r7,r7,1
   8de3c:	39bffb1e 	bne	r7,r6,8de2c <memmove+0x50>
   8de40:	2005883a 	mov	r2,r4
   8de44:	f800283a 	ret
   8de48:	1904b03a 	or	r2,r3,r4
   8de4c:	108000cc 	andi	r2,r2,3
   8de50:	103ff31e 	bne	r2,zero,8de20 <memmove+0x44>
   8de54:	3811883a 	mov	r8,r7
   8de58:	180b883a 	mov	r5,r3
   8de5c:	200f883a 	mov	r7,r4
   8de60:	28c00017 	ldw	r3,0(r5)
   8de64:	31bffc04 	addi	r6,r6,-16
   8de68:	38c00015 	stw	r3,0(r7)
   8de6c:	28800117 	ldw	r2,4(r5)
   8de70:	38800115 	stw	r2,4(r7)
   8de74:	28c00217 	ldw	r3,8(r5)
   8de78:	38c00215 	stw	r3,8(r7)
   8de7c:	28800317 	ldw	r2,12(r5)
   8de80:	29400404 	addi	r5,r5,16
   8de84:	38800315 	stw	r2,12(r7)
   8de88:	39c00404 	addi	r7,r7,16
   8de8c:	41bff436 	bltu	r8,r6,8de60 <memmove+0x84>
   8de90:	008000c4 	movi	r2,3
   8de94:	1180072e 	bgeu	r2,r6,8deb4 <memmove+0xd8>
   8de98:	1007883a 	mov	r3,r2
   8de9c:	28800017 	ldw	r2,0(r5)
   8dea0:	31bfff04 	addi	r6,r6,-4
   8dea4:	29400104 	addi	r5,r5,4
   8dea8:	38800015 	stw	r2,0(r7)
   8deac:	39c00104 	addi	r7,r7,4
   8deb0:	19bffa36 	bltu	r3,r6,8de9c <memmove+0xc0>
   8deb4:	3811883a 	mov	r8,r7
   8deb8:	003fd906 	br	8de20 <memmove+0x44>

0008debc <memset>:
   8debc:	008000c4 	movi	r2,3
   8dec0:	29403fcc 	andi	r5,r5,255
   8dec4:	2007883a 	mov	r3,r4
   8dec8:	1180022e 	bgeu	r2,r6,8ded4 <memset+0x18>
   8decc:	2084703a 	and	r2,r4,r2
   8ded0:	10000826 	beq	r2,zero,8def4 <memset+0x38>
   8ded4:	30000526 	beq	r6,zero,8deec <memset+0x30>
   8ded8:	2805883a 	mov	r2,r5
   8dedc:	30cd883a 	add	r6,r6,r3
   8dee0:	18800005 	stb	r2,0(r3)
   8dee4:	18c00044 	addi	r3,r3,1
   8dee8:	19bffd1e 	bne	r3,r6,8dee0 <memset+0x24>
   8deec:	2005883a 	mov	r2,r4
   8def0:	f800283a 	ret
   8def4:	2804923a 	slli	r2,r5,8
   8def8:	020003c4 	movi	r8,15
   8defc:	200f883a 	mov	r7,r4
   8df00:	2884b03a 	or	r2,r5,r2
   8df04:	1006943a 	slli	r3,r2,16
   8df08:	10c6b03a 	or	r3,r2,r3
   8df0c:	41800a2e 	bgeu	r8,r6,8df38 <memset+0x7c>
   8df10:	4005883a 	mov	r2,r8
   8df14:	31bffc04 	addi	r6,r6,-16
   8df18:	38c00015 	stw	r3,0(r7)
   8df1c:	38c00115 	stw	r3,4(r7)
   8df20:	38c00215 	stw	r3,8(r7)
   8df24:	38c00315 	stw	r3,12(r7)
   8df28:	39c00404 	addi	r7,r7,16
   8df2c:	11bff936 	bltu	r2,r6,8df14 <memset+0x58>
   8df30:	008000c4 	movi	r2,3
   8df34:	1180052e 	bgeu	r2,r6,8df4c <memset+0x90>
   8df38:	31bfff04 	addi	r6,r6,-4
   8df3c:	008000c4 	movi	r2,3
   8df40:	38c00015 	stw	r3,0(r7)
   8df44:	39c00104 	addi	r7,r7,4
   8df48:	11bffb36 	bltu	r2,r6,8df38 <memset+0x7c>
   8df4c:	3807883a 	mov	r3,r7
   8df50:	003fe006 	br	8ded4 <memset+0x18>

0008df54 <_Bfree>:
   8df54:	28000826 	beq	r5,zero,8df78 <_Bfree+0x24>
   8df58:	28800117 	ldw	r2,4(r5)
   8df5c:	21001317 	ldw	r4,76(r4)
   8df60:	1085883a 	add	r2,r2,r2
   8df64:	1085883a 	add	r2,r2,r2
   8df68:	1105883a 	add	r2,r2,r4
   8df6c:	10c00017 	ldw	r3,0(r2)
   8df70:	28c00015 	stw	r3,0(r5)
   8df74:	11400015 	stw	r5,0(r2)
   8df78:	f800283a 	ret

0008df7c <__hi0bits>:
   8df7c:	20bfffec 	andhi	r2,r4,65535
   8df80:	10001426 	beq	r2,zero,8dfd4 <__hi0bits+0x58>
   8df84:	0007883a 	mov	r3,zero
   8df88:	20bfc02c 	andhi	r2,r4,65280
   8df8c:	1000021e 	bne	r2,zero,8df98 <__hi0bits+0x1c>
   8df90:	2008923a 	slli	r4,r4,8
   8df94:	18c00204 	addi	r3,r3,8
   8df98:	20bc002c 	andhi	r2,r4,61440
   8df9c:	1000021e 	bne	r2,zero,8dfa8 <__hi0bits+0x2c>
   8dfa0:	2008913a 	slli	r4,r4,4
   8dfa4:	18c00104 	addi	r3,r3,4
   8dfa8:	20b0002c 	andhi	r2,r4,49152
   8dfac:	1000031e 	bne	r2,zero,8dfbc <__hi0bits+0x40>
   8dfb0:	2105883a 	add	r2,r4,r4
   8dfb4:	18c00084 	addi	r3,r3,2
   8dfb8:	1089883a 	add	r4,r2,r2
   8dfbc:	20000316 	blt	r4,zero,8dfcc <__hi0bits+0x50>
   8dfc0:	2090002c 	andhi	r2,r4,16384
   8dfc4:	10000626 	beq	r2,zero,8dfe0 <__hi0bits+0x64>
   8dfc8:	18c00044 	addi	r3,r3,1
   8dfcc:	1805883a 	mov	r2,r3
   8dfd0:	f800283a 	ret
   8dfd4:	2008943a 	slli	r4,r4,16
   8dfd8:	00c00404 	movi	r3,16
   8dfdc:	003fea06 	br	8df88 <__hi0bits+0xc>
   8dfe0:	00c00804 	movi	r3,32
   8dfe4:	1805883a 	mov	r2,r3
   8dfe8:	f800283a 	ret

0008dfec <__lo0bits>:
   8dfec:	20c00017 	ldw	r3,0(r4)
   8dff0:	188001cc 	andi	r2,r3,7
   8dff4:	10000a26 	beq	r2,zero,8e020 <__lo0bits+0x34>
   8dff8:	1880004c 	andi	r2,r3,1
   8dffc:	1005003a 	cmpeq	r2,r2,zero
   8e000:	10002126 	beq	r2,zero,8e088 <__lo0bits+0x9c>
   8e004:	1880008c 	andi	r2,r3,2
   8e008:	1000251e 	bne	r2,zero,8e0a0 <__lo0bits+0xb4>
   8e00c:	1804d0ba 	srli	r2,r3,2
   8e010:	01400084 	movi	r5,2
   8e014:	20800015 	stw	r2,0(r4)
   8e018:	2805883a 	mov	r2,r5
   8e01c:	f800283a 	ret
   8e020:	18bfffcc 	andi	r2,r3,65535
   8e024:	10001526 	beq	r2,zero,8e07c <__lo0bits+0x90>
   8e028:	000b883a 	mov	r5,zero
   8e02c:	18803fcc 	andi	r2,r3,255
   8e030:	1000021e 	bne	r2,zero,8e03c <__lo0bits+0x50>
   8e034:	1806d23a 	srli	r3,r3,8
   8e038:	29400204 	addi	r5,r5,8
   8e03c:	188003cc 	andi	r2,r3,15
   8e040:	1000021e 	bne	r2,zero,8e04c <__lo0bits+0x60>
   8e044:	1806d13a 	srli	r3,r3,4
   8e048:	29400104 	addi	r5,r5,4
   8e04c:	188000cc 	andi	r2,r3,3
   8e050:	1000021e 	bne	r2,zero,8e05c <__lo0bits+0x70>
   8e054:	1806d0ba 	srli	r3,r3,2
   8e058:	29400084 	addi	r5,r5,2
   8e05c:	1880004c 	andi	r2,r3,1
   8e060:	1000031e 	bne	r2,zero,8e070 <__lo0bits+0x84>
   8e064:	1806d07a 	srli	r3,r3,1
   8e068:	18000a26 	beq	r3,zero,8e094 <__lo0bits+0xa8>
   8e06c:	29400044 	addi	r5,r5,1
   8e070:	2805883a 	mov	r2,r5
   8e074:	20c00015 	stw	r3,0(r4)
   8e078:	f800283a 	ret
   8e07c:	1806d43a 	srli	r3,r3,16
   8e080:	01400404 	movi	r5,16
   8e084:	003fe906 	br	8e02c <__lo0bits+0x40>
   8e088:	000b883a 	mov	r5,zero
   8e08c:	2805883a 	mov	r2,r5
   8e090:	f800283a 	ret
   8e094:	01400804 	movi	r5,32
   8e098:	2805883a 	mov	r2,r5
   8e09c:	f800283a 	ret
   8e0a0:	1804d07a 	srli	r2,r3,1
   8e0a4:	01400044 	movi	r5,1
   8e0a8:	20800015 	stw	r2,0(r4)
   8e0ac:	003fda06 	br	8e018 <__lo0bits+0x2c>

0008e0b0 <__mcmp>:
   8e0b0:	20800417 	ldw	r2,16(r4)
   8e0b4:	28c00417 	ldw	r3,16(r5)
   8e0b8:	10cfc83a 	sub	r7,r2,r3
   8e0bc:	38000c1e 	bne	r7,zero,8e0f0 <__mcmp+0x40>
   8e0c0:	18c5883a 	add	r2,r3,r3
   8e0c4:	1085883a 	add	r2,r2,r2
   8e0c8:	10c00504 	addi	r3,r2,20
   8e0cc:	21000504 	addi	r4,r4,20
   8e0d0:	28cb883a 	add	r5,r5,r3
   8e0d4:	2085883a 	add	r2,r4,r2
   8e0d8:	10bfff04 	addi	r2,r2,-4
   8e0dc:	297fff04 	addi	r5,r5,-4
   8e0e0:	11800017 	ldw	r6,0(r2)
   8e0e4:	28c00017 	ldw	r3,0(r5)
   8e0e8:	30c0031e 	bne	r6,r3,8e0f8 <__mcmp+0x48>
   8e0ec:	20bffa36 	bltu	r4,r2,8e0d8 <__mcmp+0x28>
   8e0f0:	3805883a 	mov	r2,r7
   8e0f4:	f800283a 	ret
   8e0f8:	30c00336 	bltu	r6,r3,8e108 <__mcmp+0x58>
   8e0fc:	01c00044 	movi	r7,1
   8e100:	3805883a 	mov	r2,r7
   8e104:	f800283a 	ret
   8e108:	01ffffc4 	movi	r7,-1
   8e10c:	003ff806 	br	8e0f0 <__mcmp+0x40>

0008e110 <__ulp>:
   8e110:	295ffc2c 	andhi	r5,r5,32752
   8e114:	013f3034 	movhi	r4,64704
   8e118:	290b883a 	add	r5,r5,r4
   8e11c:	0145c83a 	sub	r2,zero,r5
   8e120:	1007d53a 	srai	r3,r2,20
   8e124:	000d883a 	mov	r6,zero
   8e128:	0140040e 	bge	zero,r5,8e13c <__ulp+0x2c>
   8e12c:	280f883a 	mov	r7,r5
   8e130:	3807883a 	mov	r3,r7
   8e134:	3005883a 	mov	r2,r6
   8e138:	f800283a 	ret
   8e13c:	008004c4 	movi	r2,19
   8e140:	193ffb04 	addi	r4,r3,-20
   8e144:	10c00c0e 	bge	r2,r3,8e178 <__ulp+0x68>
   8e148:	008007c4 	movi	r2,31
   8e14c:	1107c83a 	sub	r3,r2,r4
   8e150:	00800784 	movi	r2,30
   8e154:	01400044 	movi	r5,1
   8e158:	11000216 	blt	r2,r4,8e164 <__ulp+0x54>
   8e15c:	00800044 	movi	r2,1
   8e160:	10ca983a 	sll	r5,r2,r3
   8e164:	000f883a 	mov	r7,zero
   8e168:	280d883a 	mov	r6,r5
   8e16c:	3807883a 	mov	r3,r7
   8e170:	3005883a 	mov	r2,r6
   8e174:	f800283a 	ret
   8e178:	00800234 	movhi	r2,8
   8e17c:	10cfd83a 	sra	r7,r2,r3
   8e180:	000d883a 	mov	r6,zero
   8e184:	3005883a 	mov	r2,r6
   8e188:	3807883a 	mov	r3,r7
   8e18c:	f800283a 	ret

0008e190 <__b2d>:
   8e190:	20800417 	ldw	r2,16(r4)
   8e194:	defff904 	addi	sp,sp,-28
   8e198:	dd000415 	stw	r20,16(sp)
   8e19c:	1085883a 	add	r2,r2,r2
   8e1a0:	25000504 	addi	r20,r4,20
   8e1a4:	1085883a 	add	r2,r2,r2
   8e1a8:	dc000015 	stw	r16,0(sp)
   8e1ac:	a0a1883a 	add	r16,r20,r2
   8e1b0:	dd400515 	stw	r21,20(sp)
   8e1b4:	857fff17 	ldw	r21,-4(r16)
   8e1b8:	dc400115 	stw	r17,4(sp)
   8e1bc:	dfc00615 	stw	ra,24(sp)
   8e1c0:	a809883a 	mov	r4,r21
   8e1c4:	2823883a 	mov	r17,r5
   8e1c8:	dcc00315 	stw	r19,12(sp)
   8e1cc:	dc800215 	stw	r18,8(sp)
   8e1d0:	008df7c0 	call	8df7c <__hi0bits>
   8e1d4:	100b883a 	mov	r5,r2
   8e1d8:	00800804 	movi	r2,32
   8e1dc:	1145c83a 	sub	r2,r2,r5
   8e1e0:	88800015 	stw	r2,0(r17)
   8e1e4:	00800284 	movi	r2,10
   8e1e8:	80ffff04 	addi	r3,r16,-4
   8e1ec:	11401416 	blt	r2,r5,8e240 <__b2d+0xb0>
   8e1f0:	008002c4 	movi	r2,11
   8e1f4:	1149c83a 	sub	r4,r2,r5
   8e1f8:	a0c02736 	bltu	r20,r3,8e298 <__b2d+0x108>
   8e1fc:	000d883a 	mov	r6,zero
   8e200:	28800544 	addi	r2,r5,21
   8e204:	a906d83a 	srl	r3,r21,r4
   8e208:	a884983a 	sll	r2,r21,r2
   8e20c:	1ccffc34 	orhi	r19,r3,16368
   8e210:	11a4b03a 	or	r18,r2,r6
   8e214:	9005883a 	mov	r2,r18
   8e218:	9807883a 	mov	r3,r19
   8e21c:	dfc00617 	ldw	ra,24(sp)
   8e220:	dd400517 	ldw	r21,20(sp)
   8e224:	dd000417 	ldw	r20,16(sp)
   8e228:	dcc00317 	ldw	r19,12(sp)
   8e22c:	dc800217 	ldw	r18,8(sp)
   8e230:	dc400117 	ldw	r17,4(sp)
   8e234:	dc000017 	ldw	r16,0(sp)
   8e238:	dec00704 	addi	sp,sp,28
   8e23c:	f800283a 	ret
   8e240:	a0c00e36 	bltu	r20,r3,8e27c <__b2d+0xec>
   8e244:	293ffd44 	addi	r4,r5,-11
   8e248:	000d883a 	mov	r6,zero
   8e24c:	20000f26 	beq	r4,zero,8e28c <__b2d+0xfc>
   8e250:	00800804 	movi	r2,32
   8e254:	110bc83a 	sub	r5,r2,r4
   8e258:	a0c01236 	bltu	r20,r3,8e2a4 <__b2d+0x114>
   8e25c:	000f883a 	mov	r7,zero
   8e260:	a904983a 	sll	r2,r21,r4
   8e264:	3146d83a 	srl	r3,r6,r5
   8e268:	3108983a 	sll	r4,r6,r4
   8e26c:	108ffc34 	orhi	r2,r2,16368
   8e270:	18a6b03a 	or	r19,r3,r2
   8e274:	3924b03a 	or	r18,r7,r4
   8e278:	003fe606 	br	8e214 <__b2d+0x84>
   8e27c:	293ffd44 	addi	r4,r5,-11
   8e280:	81bffe17 	ldw	r6,-8(r16)
   8e284:	80fffe04 	addi	r3,r16,-8
   8e288:	203ff11e 	bne	r4,zero,8e250 <__b2d+0xc0>
   8e28c:	accffc34 	orhi	r19,r21,16368
   8e290:	3025883a 	mov	r18,r6
   8e294:	003fdf06 	br	8e214 <__b2d+0x84>
   8e298:	18bfff17 	ldw	r2,-4(r3)
   8e29c:	110cd83a 	srl	r6,r2,r4
   8e2a0:	003fd706 	br	8e200 <__b2d+0x70>
   8e2a4:	18bfff17 	ldw	r2,-4(r3)
   8e2a8:	114ed83a 	srl	r7,r2,r5
   8e2ac:	003fec06 	br	8e260 <__b2d+0xd0>

0008e2b0 <__ratio>:
   8e2b0:	defff904 	addi	sp,sp,-28
   8e2b4:	dc400215 	stw	r17,8(sp)
   8e2b8:	2823883a 	mov	r17,r5
   8e2bc:	d80b883a 	mov	r5,sp
   8e2c0:	dfc00615 	stw	ra,24(sp)
   8e2c4:	dd000515 	stw	r20,20(sp)
   8e2c8:	dcc00415 	stw	r19,16(sp)
   8e2cc:	dc800315 	stw	r18,12(sp)
   8e2d0:	2025883a 	mov	r18,r4
   8e2d4:	008e1900 	call	8e190 <__b2d>
   8e2d8:	8809883a 	mov	r4,r17
   8e2dc:	d9400104 	addi	r5,sp,4
   8e2e0:	1027883a 	mov	r19,r2
   8e2e4:	1829883a 	mov	r20,r3
   8e2e8:	008e1900 	call	8e190 <__b2d>
   8e2ec:	89000417 	ldw	r4,16(r17)
   8e2f0:	91c00417 	ldw	r7,16(r18)
   8e2f4:	d9800117 	ldw	r6,4(sp)
   8e2f8:	180b883a 	mov	r5,r3
   8e2fc:	390fc83a 	sub	r7,r7,r4
   8e300:	1009883a 	mov	r4,r2
   8e304:	d8800017 	ldw	r2,0(sp)
   8e308:	380e917a 	slli	r7,r7,5
   8e30c:	2011883a 	mov	r8,r4
   8e310:	1185c83a 	sub	r2,r2,r6
   8e314:	11c5883a 	add	r2,r2,r7
   8e318:	1006953a 	slli	r3,r2,20
   8e31c:	2813883a 	mov	r9,r5
   8e320:	00800d0e 	bge	zero,r2,8e358 <__ratio+0xa8>
   8e324:	1d29883a 	add	r20,r3,r20
   8e328:	a00b883a 	mov	r5,r20
   8e32c:	480f883a 	mov	r7,r9
   8e330:	9809883a 	mov	r4,r19
   8e334:	400d883a 	mov	r6,r8
   8e338:	00916300 	call	91630 <__divdf3>
   8e33c:	dfc00617 	ldw	ra,24(sp)
   8e340:	dd000517 	ldw	r20,20(sp)
   8e344:	dcc00417 	ldw	r19,16(sp)
   8e348:	dc800317 	ldw	r18,12(sp)
   8e34c:	dc400217 	ldw	r17,8(sp)
   8e350:	dec00704 	addi	sp,sp,28
   8e354:	f800283a 	ret
   8e358:	28d3c83a 	sub	r9,r5,r3
   8e35c:	003ff206 	br	8e328 <__ratio+0x78>

0008e360 <_mprec_log10>:
   8e360:	defffe04 	addi	sp,sp,-8
   8e364:	008005c4 	movi	r2,23
   8e368:	dc000015 	stw	r16,0(sp)
   8e36c:	dfc00115 	stw	ra,4(sp)
   8e370:	2021883a 	mov	r16,r4
   8e374:	11000c16 	blt	r2,r4,8e3a8 <_mprec_log10+0x48>
   8e378:	200490fa 	slli	r2,r4,3
   8e37c:	00c002b4 	movhi	r3,10
   8e380:	18c25904 	addi	r3,r3,2404
   8e384:	10c5883a 	add	r2,r2,r3
   8e388:	12400117 	ldw	r9,4(r2)
   8e38c:	12000017 	ldw	r8,0(r2)
   8e390:	4807883a 	mov	r3,r9
   8e394:	4005883a 	mov	r2,r8
   8e398:	dfc00117 	ldw	ra,4(sp)
   8e39c:	dc000017 	ldw	r16,0(sp)
   8e3a0:	dec00204 	addi	sp,sp,8
   8e3a4:	f800283a 	ret
   8e3a8:	0011883a 	mov	r8,zero
   8e3ac:	024ffc34 	movhi	r9,16368
   8e3b0:	0005883a 	mov	r2,zero
   8e3b4:	00d00934 	movhi	r3,16420
   8e3b8:	480b883a 	mov	r5,r9
   8e3bc:	4009883a 	mov	r4,r8
   8e3c0:	180f883a 	mov	r7,r3
   8e3c4:	100d883a 	mov	r6,r2
   8e3c8:	009126c0 	call	9126c <__muldf3>
   8e3cc:	843fffc4 	addi	r16,r16,-1
   8e3d0:	1011883a 	mov	r8,r2
   8e3d4:	1813883a 	mov	r9,r3
   8e3d8:	803ff51e 	bne	r16,zero,8e3b0 <_mprec_log10+0x50>
   8e3dc:	4005883a 	mov	r2,r8
   8e3e0:	4807883a 	mov	r3,r9
   8e3e4:	dfc00117 	ldw	ra,4(sp)
   8e3e8:	dc000017 	ldw	r16,0(sp)
   8e3ec:	dec00204 	addi	sp,sp,8
   8e3f0:	f800283a 	ret

0008e3f4 <__copybits>:
   8e3f4:	297fffc4 	addi	r5,r5,-1
   8e3f8:	30800417 	ldw	r2,16(r6)
   8e3fc:	280bd17a 	srai	r5,r5,5
   8e400:	31800504 	addi	r6,r6,20
   8e404:	1085883a 	add	r2,r2,r2
   8e408:	294b883a 	add	r5,r5,r5
   8e40c:	294b883a 	add	r5,r5,r5
   8e410:	1085883a 	add	r2,r2,r2
   8e414:	290b883a 	add	r5,r5,r4
   8e418:	3087883a 	add	r3,r6,r2
   8e41c:	29400104 	addi	r5,r5,4
   8e420:	30c0052e 	bgeu	r6,r3,8e438 <__copybits+0x44>
   8e424:	30800017 	ldw	r2,0(r6)
   8e428:	31800104 	addi	r6,r6,4
   8e42c:	20800015 	stw	r2,0(r4)
   8e430:	21000104 	addi	r4,r4,4
   8e434:	30fffb36 	bltu	r6,r3,8e424 <__copybits+0x30>
   8e438:	2140032e 	bgeu	r4,r5,8e448 <__copybits+0x54>
   8e43c:	20000015 	stw	zero,0(r4)
   8e440:	21000104 	addi	r4,r4,4
   8e444:	217ffd36 	bltu	r4,r5,8e43c <__copybits+0x48>
   8e448:	f800283a 	ret

0008e44c <__any_on>:
   8e44c:	20800417 	ldw	r2,16(r4)
   8e450:	2807d17a 	srai	r3,r5,5
   8e454:	21000504 	addi	r4,r4,20
   8e458:	10c00d0e 	bge	r2,r3,8e490 <__any_on+0x44>
   8e45c:	1085883a 	add	r2,r2,r2
   8e460:	1085883a 	add	r2,r2,r2
   8e464:	208d883a 	add	r6,r4,r2
   8e468:	2180182e 	bgeu	r4,r6,8e4cc <__any_on+0x80>
   8e46c:	30bfff17 	ldw	r2,-4(r6)
   8e470:	30ffff04 	addi	r3,r6,-4
   8e474:	1000041e 	bne	r2,zero,8e488 <__any_on+0x3c>
   8e478:	20c0142e 	bgeu	r4,r3,8e4cc <__any_on+0x80>
   8e47c:	18ffff04 	addi	r3,r3,-4
   8e480:	18800017 	ldw	r2,0(r3)
   8e484:	103ffc26 	beq	r2,zero,8e478 <__any_on+0x2c>
   8e488:	00800044 	movi	r2,1
   8e48c:	f800283a 	ret
   8e490:	18800a0e 	bge	r3,r2,8e4bc <__any_on+0x70>
   8e494:	294007cc 	andi	r5,r5,31
   8e498:	28000826 	beq	r5,zero,8e4bc <__any_on+0x70>
   8e49c:	18c5883a 	add	r2,r3,r3
   8e4a0:	1085883a 	add	r2,r2,r2
   8e4a4:	208d883a 	add	r6,r4,r2
   8e4a8:	30c00017 	ldw	r3,0(r6)
   8e4ac:	1944d83a 	srl	r2,r3,r5
   8e4b0:	1144983a 	sll	r2,r2,r5
   8e4b4:	18bff41e 	bne	r3,r2,8e488 <__any_on+0x3c>
   8e4b8:	003feb06 	br	8e468 <__any_on+0x1c>
   8e4bc:	18c5883a 	add	r2,r3,r3
   8e4c0:	1085883a 	add	r2,r2,r2
   8e4c4:	208d883a 	add	r6,r4,r2
   8e4c8:	003fe706 	br	8e468 <__any_on+0x1c>
   8e4cc:	0005883a 	mov	r2,zero
   8e4d0:	f800283a 	ret

0008e4d4 <_Balloc>:
   8e4d4:	20c01317 	ldw	r3,76(r4)
   8e4d8:	defffb04 	addi	sp,sp,-20
   8e4dc:	dcc00315 	stw	r19,12(sp)
   8e4e0:	dc800215 	stw	r18,8(sp)
   8e4e4:	dfc00415 	stw	ra,16(sp)
   8e4e8:	2825883a 	mov	r18,r5
   8e4ec:	dc400115 	stw	r17,4(sp)
   8e4f0:	dc000015 	stw	r16,0(sp)
   8e4f4:	2027883a 	mov	r19,r4
   8e4f8:	01800404 	movi	r6,16
   8e4fc:	01400104 	movi	r5,4
   8e500:	18001726 	beq	r3,zero,8e560 <_Balloc+0x8c>
   8e504:	01400044 	movi	r5,1
   8e508:	9485883a 	add	r2,r18,r18
   8e50c:	2ca2983a 	sll	r17,r5,r18
   8e510:	1085883a 	add	r2,r2,r2
   8e514:	10c7883a 	add	r3,r2,r3
   8e518:	1c000017 	ldw	r16,0(r3)
   8e51c:	8c4d883a 	add	r6,r17,r17
   8e520:	318d883a 	add	r6,r6,r6
   8e524:	9809883a 	mov	r4,r19
   8e528:	31800504 	addi	r6,r6,20
   8e52c:	80001226 	beq	r16,zero,8e578 <_Balloc+0xa4>
   8e530:	80800017 	ldw	r2,0(r16)
   8e534:	18800015 	stw	r2,0(r3)
   8e538:	80000415 	stw	zero,16(r16)
   8e53c:	80000315 	stw	zero,12(r16)
   8e540:	8005883a 	mov	r2,r16
   8e544:	dfc00417 	ldw	ra,16(sp)
   8e548:	dcc00317 	ldw	r19,12(sp)
   8e54c:	dc800217 	ldw	r18,8(sp)
   8e550:	dc400117 	ldw	r17,4(sp)
   8e554:	dc000017 	ldw	r16,0(sp)
   8e558:	dec00504 	addi	sp,sp,20
   8e55c:	f800283a 	ret
   8e560:	008fc6c0 	call	8fc6c <_calloc_r>
   8e564:	1007883a 	mov	r3,r2
   8e568:	0021883a 	mov	r16,zero
   8e56c:	98801315 	stw	r2,76(r19)
   8e570:	103fe41e 	bne	r2,zero,8e504 <_Balloc+0x30>
   8e574:	003ff206 	br	8e540 <_Balloc+0x6c>
   8e578:	008fc6c0 	call	8fc6c <_calloc_r>
   8e57c:	103ff026 	beq	r2,zero,8e540 <_Balloc+0x6c>
   8e580:	1021883a 	mov	r16,r2
   8e584:	14800115 	stw	r18,4(r2)
   8e588:	14400215 	stw	r17,8(r2)
   8e58c:	003fea06 	br	8e538 <_Balloc+0x64>

0008e590 <__d2b>:
   8e590:	defff504 	addi	sp,sp,-44
   8e594:	dcc00515 	stw	r19,20(sp)
   8e598:	04c00044 	movi	r19,1
   8e59c:	dc000215 	stw	r16,8(sp)
   8e5a0:	2821883a 	mov	r16,r5
   8e5a4:	980b883a 	mov	r5,r19
   8e5a8:	ddc00915 	stw	r23,36(sp)
   8e5ac:	dd800815 	stw	r22,32(sp)
   8e5b0:	dd400715 	stw	r21,28(sp)
   8e5b4:	dd000615 	stw	r20,24(sp)
   8e5b8:	dc800415 	stw	r18,16(sp)
   8e5bc:	dc400315 	stw	r17,12(sp)
   8e5c0:	dfc00a15 	stw	ra,40(sp)
   8e5c4:	3023883a 	mov	r17,r6
   8e5c8:	382d883a 	mov	r22,r7
   8e5cc:	ddc00b17 	ldw	r23,44(sp)
   8e5d0:	008e4d40 	call	8e4d4 <_Balloc>
   8e5d4:	1025883a 	mov	r18,r2
   8e5d8:	00a00034 	movhi	r2,32768
   8e5dc:	10bfffc4 	addi	r2,r2,-1
   8e5e0:	8888703a 	and	r4,r17,r2
   8e5e4:	202ad53a 	srli	r21,r4,20
   8e5e8:	00800434 	movhi	r2,16
   8e5ec:	10bfffc4 	addi	r2,r2,-1
   8e5f0:	8886703a 	and	r3,r17,r2
   8e5f4:	a829003a 	cmpeq	r20,r21,zero
   8e5f8:	800b883a 	mov	r5,r16
   8e5fc:	d8c00115 	stw	r3,4(sp)
   8e600:	94000504 	addi	r16,r18,20
   8e604:	a000021e 	bne	r20,zero,8e610 <__d2b+0x80>
   8e608:	18c00434 	orhi	r3,r3,16
   8e60c:	d8c00115 	stw	r3,4(sp)
   8e610:	28002726 	beq	r5,zero,8e6b0 <__d2b+0x120>
   8e614:	d809883a 	mov	r4,sp
   8e618:	d9400015 	stw	r5,0(sp)
   8e61c:	008dfec0 	call	8dfec <__lo0bits>
   8e620:	100d883a 	mov	r6,r2
   8e624:	10003526 	beq	r2,zero,8e6fc <__d2b+0x16c>
   8e628:	d8c00117 	ldw	r3,4(sp)
   8e62c:	00800804 	movi	r2,32
   8e630:	1185c83a 	sub	r2,r2,r6
   8e634:	d9000017 	ldw	r4,0(sp)
   8e638:	1886983a 	sll	r3,r3,r2
   8e63c:	1906b03a 	or	r3,r3,r4
   8e640:	90c00515 	stw	r3,20(r18)
   8e644:	d8c00117 	ldw	r3,4(sp)
   8e648:	1986d83a 	srl	r3,r3,r6
   8e64c:	d8c00115 	stw	r3,4(sp)
   8e650:	180b003a 	cmpeq	r5,r3,zero
   8e654:	00800084 	movi	r2,2
   8e658:	114bc83a 	sub	r5,r2,r5
   8e65c:	80c00115 	stw	r3,4(r16)
   8e660:	91400415 	stw	r5,16(r18)
   8e664:	a0001a1e 	bne	r20,zero,8e6d0 <__d2b+0x140>
   8e668:	3545883a 	add	r2,r6,r21
   8e66c:	10bef344 	addi	r2,r2,-1075
   8e670:	00c00d44 	movi	r3,53
   8e674:	b0800015 	stw	r2,0(r22)
   8e678:	1987c83a 	sub	r3,r3,r6
   8e67c:	b8c00015 	stw	r3,0(r23)
   8e680:	9005883a 	mov	r2,r18
   8e684:	dfc00a17 	ldw	ra,40(sp)
   8e688:	ddc00917 	ldw	r23,36(sp)
   8e68c:	dd800817 	ldw	r22,32(sp)
   8e690:	dd400717 	ldw	r21,28(sp)
   8e694:	dd000617 	ldw	r20,24(sp)
   8e698:	dcc00517 	ldw	r19,20(sp)
   8e69c:	dc800417 	ldw	r18,16(sp)
   8e6a0:	dc400317 	ldw	r17,12(sp)
   8e6a4:	dc000217 	ldw	r16,8(sp)
   8e6a8:	dec00b04 	addi	sp,sp,44
   8e6ac:	f800283a 	ret
   8e6b0:	d9000104 	addi	r4,sp,4
   8e6b4:	008dfec0 	call	8dfec <__lo0bits>
   8e6b8:	11800804 	addi	r6,r2,32
   8e6bc:	d8800117 	ldw	r2,4(sp)
   8e6c0:	94c00415 	stw	r19,16(r18)
   8e6c4:	980b883a 	mov	r5,r19
   8e6c8:	90800515 	stw	r2,20(r18)
   8e6cc:	a03fe626 	beq	r20,zero,8e668 <__d2b+0xd8>
   8e6d0:	2945883a 	add	r2,r5,r5
   8e6d4:	1085883a 	add	r2,r2,r2
   8e6d8:	1405883a 	add	r2,r2,r16
   8e6dc:	113fff17 	ldw	r4,-4(r2)
   8e6e0:	30fef384 	addi	r3,r6,-1074
   8e6e4:	2820917a 	slli	r16,r5,5
   8e6e8:	b0c00015 	stw	r3,0(r22)
   8e6ec:	008df7c0 	call	8df7c <__hi0bits>
   8e6f0:	80a1c83a 	sub	r16,r16,r2
   8e6f4:	bc000015 	stw	r16,0(r23)
   8e6f8:	003fe106 	br	8e680 <__d2b+0xf0>
   8e6fc:	d8800017 	ldw	r2,0(sp)
   8e700:	90800515 	stw	r2,20(r18)
   8e704:	d8c00117 	ldw	r3,4(sp)
   8e708:	003fd106 	br	8e650 <__d2b+0xc0>

0008e70c <__mdiff>:
   8e70c:	defffb04 	addi	sp,sp,-20
   8e710:	dc000015 	stw	r16,0(sp)
   8e714:	2821883a 	mov	r16,r5
   8e718:	dc800215 	stw	r18,8(sp)
   8e71c:	300b883a 	mov	r5,r6
   8e720:	2025883a 	mov	r18,r4
   8e724:	8009883a 	mov	r4,r16
   8e728:	dc400115 	stw	r17,4(sp)
   8e72c:	dfc00415 	stw	ra,16(sp)
   8e730:	dcc00315 	stw	r19,12(sp)
   8e734:	3023883a 	mov	r17,r6
   8e738:	008e0b00 	call	8e0b0 <__mcmp>
   8e73c:	10004226 	beq	r2,zero,8e848 <__mdiff+0x13c>
   8e740:	10005016 	blt	r2,zero,8e884 <__mdiff+0x178>
   8e744:	0027883a 	mov	r19,zero
   8e748:	81400117 	ldw	r5,4(r16)
   8e74c:	9009883a 	mov	r4,r18
   8e750:	008e4d40 	call	8e4d4 <_Balloc>
   8e754:	1019883a 	mov	r12,r2
   8e758:	82800417 	ldw	r10,16(r16)
   8e75c:	88800417 	ldw	r2,16(r17)
   8e760:	81800504 	addi	r6,r16,20
   8e764:	5287883a 	add	r3,r10,r10
   8e768:	1085883a 	add	r2,r2,r2
   8e76c:	18c7883a 	add	r3,r3,r3
   8e770:	1085883a 	add	r2,r2,r2
   8e774:	8a000504 	addi	r8,r17,20
   8e778:	64c00315 	stw	r19,12(r12)
   8e77c:	30db883a 	add	r13,r6,r3
   8e780:	4097883a 	add	r11,r8,r2
   8e784:	61c00504 	addi	r7,r12,20
   8e788:	0013883a 	mov	r9,zero
   8e78c:	31000017 	ldw	r4,0(r6)
   8e790:	41400017 	ldw	r5,0(r8)
   8e794:	42000104 	addi	r8,r8,4
   8e798:	20bfffcc 	andi	r2,r4,65535
   8e79c:	28ffffcc 	andi	r3,r5,65535
   8e7a0:	10c5c83a 	sub	r2,r2,r3
   8e7a4:	1245883a 	add	r2,r2,r9
   8e7a8:	2008d43a 	srli	r4,r4,16
   8e7ac:	280ad43a 	srli	r5,r5,16
   8e7b0:	1007d43a 	srai	r3,r2,16
   8e7b4:	3880000d 	sth	r2,0(r7)
   8e7b8:	2149c83a 	sub	r4,r4,r5
   8e7bc:	20c9883a 	add	r4,r4,r3
   8e7c0:	3900008d 	sth	r4,2(r7)
   8e7c4:	31800104 	addi	r6,r6,4
   8e7c8:	39c00104 	addi	r7,r7,4
   8e7cc:	2013d43a 	srai	r9,r4,16
   8e7d0:	42ffee36 	bltu	r8,r11,8e78c <__mdiff+0x80>
   8e7d4:	33400c2e 	bgeu	r6,r13,8e808 <__mdiff+0xfc>
   8e7d8:	30800017 	ldw	r2,0(r6)
   8e7dc:	31800104 	addi	r6,r6,4
   8e7e0:	10ffffcc 	andi	r3,r2,65535
   8e7e4:	1a47883a 	add	r3,r3,r9
   8e7e8:	1004d43a 	srli	r2,r2,16
   8e7ec:	1809d43a 	srai	r4,r3,16
   8e7f0:	38c0000d 	sth	r3,0(r7)
   8e7f4:	1105883a 	add	r2,r2,r4
   8e7f8:	3880008d 	sth	r2,2(r7)
   8e7fc:	1013d43a 	srai	r9,r2,16
   8e800:	39c00104 	addi	r7,r7,4
   8e804:	337ff436 	bltu	r6,r13,8e7d8 <__mdiff+0xcc>
   8e808:	38bfff17 	ldw	r2,-4(r7)
   8e80c:	38ffff04 	addi	r3,r7,-4
   8e810:	1000041e 	bne	r2,zero,8e824 <__mdiff+0x118>
   8e814:	18ffff04 	addi	r3,r3,-4
   8e818:	18800017 	ldw	r2,0(r3)
   8e81c:	52bfffc4 	addi	r10,r10,-1
   8e820:	103ffc26 	beq	r2,zero,8e814 <__mdiff+0x108>
   8e824:	6005883a 	mov	r2,r12
   8e828:	62800415 	stw	r10,16(r12)
   8e82c:	dfc00417 	ldw	ra,16(sp)
   8e830:	dcc00317 	ldw	r19,12(sp)
   8e834:	dc800217 	ldw	r18,8(sp)
   8e838:	dc400117 	ldw	r17,4(sp)
   8e83c:	dc000017 	ldw	r16,0(sp)
   8e840:	dec00504 	addi	sp,sp,20
   8e844:	f800283a 	ret
   8e848:	9009883a 	mov	r4,r18
   8e84c:	000b883a 	mov	r5,zero
   8e850:	008e4d40 	call	8e4d4 <_Balloc>
   8e854:	1019883a 	mov	r12,r2
   8e858:	00800044 	movi	r2,1
   8e85c:	60800415 	stw	r2,16(r12)
   8e860:	6005883a 	mov	r2,r12
   8e864:	60000515 	stw	zero,20(r12)
   8e868:	dfc00417 	ldw	ra,16(sp)
   8e86c:	dcc00317 	ldw	r19,12(sp)
   8e870:	dc800217 	ldw	r18,8(sp)
   8e874:	dc400117 	ldw	r17,4(sp)
   8e878:	dc000017 	ldw	r16,0(sp)
   8e87c:	dec00504 	addi	sp,sp,20
   8e880:	f800283a 	ret
   8e884:	880d883a 	mov	r6,r17
   8e888:	04c00044 	movi	r19,1
   8e88c:	8023883a 	mov	r17,r16
   8e890:	3021883a 	mov	r16,r6
   8e894:	003fac06 	br	8e748 <__mdiff+0x3c>

0008e898 <__lshift>:
   8e898:	defff904 	addi	sp,sp,-28
   8e89c:	28800417 	ldw	r2,16(r5)
   8e8a0:	dc000015 	stw	r16,0(sp)
   8e8a4:	3021d17a 	srai	r16,r6,5
   8e8a8:	28c00217 	ldw	r3,8(r5)
   8e8ac:	10800044 	addi	r2,r2,1
   8e8b0:	dc400115 	stw	r17,4(sp)
   8e8b4:	80a3883a 	add	r17,r16,r2
   8e8b8:	dd400515 	stw	r21,20(sp)
   8e8bc:	dd000415 	stw	r20,16(sp)
   8e8c0:	dc800215 	stw	r18,8(sp)
   8e8c4:	dfc00615 	stw	ra,24(sp)
   8e8c8:	2825883a 	mov	r18,r5
   8e8cc:	dcc00315 	stw	r19,12(sp)
   8e8d0:	3029883a 	mov	r20,r6
   8e8d4:	202b883a 	mov	r21,r4
   8e8d8:	29400117 	ldw	r5,4(r5)
   8e8dc:	1c40030e 	bge	r3,r17,8e8ec <__lshift+0x54>
   8e8e0:	18c7883a 	add	r3,r3,r3
   8e8e4:	29400044 	addi	r5,r5,1
   8e8e8:	1c7ffd16 	blt	r3,r17,8e8e0 <__lshift+0x48>
   8e8ec:	a809883a 	mov	r4,r21
   8e8f0:	008e4d40 	call	8e4d4 <_Balloc>
   8e8f4:	1027883a 	mov	r19,r2
   8e8f8:	11400504 	addi	r5,r2,20
   8e8fc:	0400090e 	bge	zero,r16,8e924 <__lshift+0x8c>
   8e900:	2805883a 	mov	r2,r5
   8e904:	0007883a 	mov	r3,zero
   8e908:	18c00044 	addi	r3,r3,1
   8e90c:	10000015 	stw	zero,0(r2)
   8e910:	10800104 	addi	r2,r2,4
   8e914:	80fffc1e 	bne	r16,r3,8e908 <__lshift+0x70>
   8e918:	8405883a 	add	r2,r16,r16
   8e91c:	1085883a 	add	r2,r2,r2
   8e920:	288b883a 	add	r5,r5,r2
   8e924:	90800417 	ldw	r2,16(r18)
   8e928:	91000504 	addi	r4,r18,20
   8e92c:	a18007cc 	andi	r6,r20,31
   8e930:	1085883a 	add	r2,r2,r2
   8e934:	1085883a 	add	r2,r2,r2
   8e938:	208f883a 	add	r7,r4,r2
   8e93c:	30001e26 	beq	r6,zero,8e9b8 <__lshift+0x120>
   8e940:	00800804 	movi	r2,32
   8e944:	1191c83a 	sub	r8,r2,r6
   8e948:	0007883a 	mov	r3,zero
   8e94c:	20800017 	ldw	r2,0(r4)
   8e950:	1184983a 	sll	r2,r2,r6
   8e954:	1884b03a 	or	r2,r3,r2
   8e958:	28800015 	stw	r2,0(r5)
   8e95c:	20c00017 	ldw	r3,0(r4)
   8e960:	21000104 	addi	r4,r4,4
   8e964:	29400104 	addi	r5,r5,4
   8e968:	1a06d83a 	srl	r3,r3,r8
   8e96c:	21fff736 	bltu	r4,r7,8e94c <__lshift+0xb4>
   8e970:	28c00015 	stw	r3,0(r5)
   8e974:	18000126 	beq	r3,zero,8e97c <__lshift+0xe4>
   8e978:	8c400044 	addi	r17,r17,1
   8e97c:	88bfffc4 	addi	r2,r17,-1
   8e980:	98800415 	stw	r2,16(r19)
   8e984:	a809883a 	mov	r4,r21
   8e988:	900b883a 	mov	r5,r18
   8e98c:	008df540 	call	8df54 <_Bfree>
   8e990:	9805883a 	mov	r2,r19
   8e994:	dfc00617 	ldw	ra,24(sp)
   8e998:	dd400517 	ldw	r21,20(sp)
   8e99c:	dd000417 	ldw	r20,16(sp)
   8e9a0:	dcc00317 	ldw	r19,12(sp)
   8e9a4:	dc800217 	ldw	r18,8(sp)
   8e9a8:	dc400117 	ldw	r17,4(sp)
   8e9ac:	dc000017 	ldw	r16,0(sp)
   8e9b0:	dec00704 	addi	sp,sp,28
   8e9b4:	f800283a 	ret
   8e9b8:	20800017 	ldw	r2,0(r4)
   8e9bc:	21000104 	addi	r4,r4,4
   8e9c0:	28800015 	stw	r2,0(r5)
   8e9c4:	29400104 	addi	r5,r5,4
   8e9c8:	21ffec2e 	bgeu	r4,r7,8e97c <__lshift+0xe4>
   8e9cc:	20800017 	ldw	r2,0(r4)
   8e9d0:	21000104 	addi	r4,r4,4
   8e9d4:	28800015 	stw	r2,0(r5)
   8e9d8:	29400104 	addi	r5,r5,4
   8e9dc:	21fff636 	bltu	r4,r7,8e9b8 <__lshift+0x120>
   8e9e0:	003fe606 	br	8e97c <__lshift+0xe4>

0008e9e4 <__multiply>:
   8e9e4:	defff004 	addi	sp,sp,-64
   8e9e8:	dc800815 	stw	r18,32(sp)
   8e9ec:	dc400715 	stw	r17,28(sp)
   8e9f0:	2c800417 	ldw	r18,16(r5)
   8e9f4:	34400417 	ldw	r17,16(r6)
   8e9f8:	dcc00915 	stw	r19,36(sp)
   8e9fc:	dc000615 	stw	r16,24(sp)
   8ea00:	dfc00f15 	stw	ra,60(sp)
   8ea04:	df000e15 	stw	fp,56(sp)
   8ea08:	ddc00d15 	stw	r23,52(sp)
   8ea0c:	dd800c15 	stw	r22,48(sp)
   8ea10:	dd400b15 	stw	r21,44(sp)
   8ea14:	dd000a15 	stw	r20,40(sp)
   8ea18:	2821883a 	mov	r16,r5
   8ea1c:	3027883a 	mov	r19,r6
   8ea20:	9440040e 	bge	r18,r17,8ea34 <__multiply+0x50>
   8ea24:	8825883a 	mov	r18,r17
   8ea28:	2c400417 	ldw	r17,16(r5)
   8ea2c:	2827883a 	mov	r19,r5
   8ea30:	3021883a 	mov	r16,r6
   8ea34:	80800217 	ldw	r2,8(r16)
   8ea38:	9447883a 	add	r3,r18,r17
   8ea3c:	d8c00415 	stw	r3,16(sp)
   8ea40:	81400117 	ldw	r5,4(r16)
   8ea44:	10c0010e 	bge	r2,r3,8ea4c <__multiply+0x68>
   8ea48:	29400044 	addi	r5,r5,1
   8ea4c:	008e4d40 	call	8e4d4 <_Balloc>
   8ea50:	d8800515 	stw	r2,20(sp)
   8ea54:	d9000417 	ldw	r4,16(sp)
   8ea58:	d8c00517 	ldw	r3,20(sp)
   8ea5c:	2105883a 	add	r2,r4,r4
   8ea60:	1085883a 	add	r2,r2,r2
   8ea64:	19000504 	addi	r4,r3,20
   8ea68:	2085883a 	add	r2,r4,r2
   8ea6c:	d8800315 	stw	r2,12(sp)
   8ea70:	2080052e 	bgeu	r4,r2,8ea88 <__multiply+0xa4>
   8ea74:	2005883a 	mov	r2,r4
   8ea78:	d8c00317 	ldw	r3,12(sp)
   8ea7c:	10000015 	stw	zero,0(r2)
   8ea80:	10800104 	addi	r2,r2,4
   8ea84:	10fffc36 	bltu	r2,r3,8ea78 <__multiply+0x94>
   8ea88:	8c45883a 	add	r2,r17,r17
   8ea8c:	9487883a 	add	r3,r18,r18
   8ea90:	9dc00504 	addi	r23,r19,20
   8ea94:	1085883a 	add	r2,r2,r2
   8ea98:	84000504 	addi	r16,r16,20
   8ea9c:	18c7883a 	add	r3,r3,r3
   8eaa0:	b885883a 	add	r2,r23,r2
   8eaa4:	dc000015 	stw	r16,0(sp)
   8eaa8:	d8800215 	stw	r2,8(sp)
   8eaac:	80f9883a 	add	fp,r16,r3
   8eab0:	b880432e 	bgeu	r23,r2,8ebc0 <__multiply+0x1dc>
   8eab4:	d9000115 	stw	r4,4(sp)
   8eab8:	b9000017 	ldw	r4,0(r23)
   8eabc:	253fffcc 	andi	r20,r4,65535
   8eac0:	a0001a26 	beq	r20,zero,8eb2c <__multiply+0x148>
   8eac4:	dcc00017 	ldw	r19,0(sp)
   8eac8:	dc800117 	ldw	r18,4(sp)
   8eacc:	002b883a 	mov	r21,zero
   8ead0:	9c400017 	ldw	r17,0(r19)
   8ead4:	94000017 	ldw	r16,0(r18)
   8ead8:	a009883a 	mov	r4,r20
   8eadc:	897fffcc 	andi	r5,r17,65535
   8eae0:	00886b00 	call	886b0 <__mulsi3>
   8eae4:	880ad43a 	srli	r5,r17,16
   8eae8:	80ffffcc 	andi	r3,r16,65535
   8eaec:	a8c7883a 	add	r3,r21,r3
   8eaf0:	a009883a 	mov	r4,r20
   8eaf4:	10e3883a 	add	r17,r2,r3
   8eaf8:	8020d43a 	srli	r16,r16,16
   8eafc:	00886b00 	call	886b0 <__mulsi3>
   8eb00:	8806d43a 	srli	r3,r17,16
   8eb04:	1405883a 	add	r2,r2,r16
   8eb08:	9cc00104 	addi	r19,r19,4
   8eb0c:	1887883a 	add	r3,r3,r2
   8eb10:	90c0008d 	sth	r3,2(r18)
   8eb14:	9440000d 	sth	r17,0(r18)
   8eb18:	182ad43a 	srli	r21,r3,16
   8eb1c:	94800104 	addi	r18,r18,4
   8eb20:	9f3feb36 	bltu	r19,fp,8ead0 <__multiply+0xec>
   8eb24:	95400015 	stw	r21,0(r18)
   8eb28:	b9000017 	ldw	r4,0(r23)
   8eb2c:	202ad43a 	srli	r21,r4,16
   8eb30:	a8001c26 	beq	r21,zero,8eba4 <__multiply+0x1c0>
   8eb34:	d9000117 	ldw	r4,4(sp)
   8eb38:	dd000017 	ldw	r20,0(sp)
   8eb3c:	002d883a 	mov	r22,zero
   8eb40:	24c00017 	ldw	r19,0(r4)
   8eb44:	2025883a 	mov	r18,r4
   8eb48:	9823883a 	mov	r17,r19
   8eb4c:	a4000017 	ldw	r16,0(r20)
   8eb50:	a809883a 	mov	r4,r21
   8eb54:	a5000104 	addi	r20,r20,4
   8eb58:	817fffcc 	andi	r5,r16,65535
   8eb5c:	00886b00 	call	886b0 <__mulsi3>
   8eb60:	8806d43a 	srli	r3,r17,16
   8eb64:	800ad43a 	srli	r5,r16,16
   8eb68:	94c0000d 	sth	r19,0(r18)
   8eb6c:	b0c7883a 	add	r3,r22,r3
   8eb70:	10e1883a 	add	r16,r2,r3
   8eb74:	9400008d 	sth	r16,2(r18)
   8eb78:	a809883a 	mov	r4,r21
   8eb7c:	94800104 	addi	r18,r18,4
   8eb80:	00886b00 	call	886b0 <__mulsi3>
   8eb84:	94400017 	ldw	r17,0(r18)
   8eb88:	8020d43a 	srli	r16,r16,16
   8eb8c:	88ffffcc 	andi	r3,r17,65535
   8eb90:	10c5883a 	add	r2,r2,r3
   8eb94:	80a7883a 	add	r19,r16,r2
   8eb98:	982cd43a 	srli	r22,r19,16
   8eb9c:	a73feb36 	bltu	r20,fp,8eb4c <__multiply+0x168>
   8eba0:	94c00015 	stw	r19,0(r18)
   8eba4:	d8800217 	ldw	r2,8(sp)
   8eba8:	bdc00104 	addi	r23,r23,4
   8ebac:	b880042e 	bgeu	r23,r2,8ebc0 <__multiply+0x1dc>
   8ebb0:	d8c00117 	ldw	r3,4(sp)
   8ebb4:	18c00104 	addi	r3,r3,4
   8ebb8:	d8c00115 	stw	r3,4(sp)
   8ebbc:	003fbe06 	br	8eab8 <__multiply+0xd4>
   8ebc0:	d9000417 	ldw	r4,16(sp)
   8ebc4:	01000c0e 	bge	zero,r4,8ebf8 <__multiply+0x214>
   8ebc8:	d8c00317 	ldw	r3,12(sp)
   8ebcc:	18bfff17 	ldw	r2,-4(r3)
   8ebd0:	18ffff04 	addi	r3,r3,-4
   8ebd4:	10000326 	beq	r2,zero,8ebe4 <__multiply+0x200>
   8ebd8:	00000706 	br	8ebf8 <__multiply+0x214>
   8ebdc:	18800017 	ldw	r2,0(r3)
   8ebe0:	1000051e 	bne	r2,zero,8ebf8 <__multiply+0x214>
   8ebe4:	d9000417 	ldw	r4,16(sp)
   8ebe8:	18ffff04 	addi	r3,r3,-4
   8ebec:	213fffc4 	addi	r4,r4,-1
   8ebf0:	d9000415 	stw	r4,16(sp)
   8ebf4:	203ff91e 	bne	r4,zero,8ebdc <__multiply+0x1f8>
   8ebf8:	d8800417 	ldw	r2,16(sp)
   8ebfc:	d8c00517 	ldw	r3,20(sp)
   8ec00:	18800415 	stw	r2,16(r3)
   8ec04:	1805883a 	mov	r2,r3
   8ec08:	dfc00f17 	ldw	ra,60(sp)
   8ec0c:	df000e17 	ldw	fp,56(sp)
   8ec10:	ddc00d17 	ldw	r23,52(sp)
   8ec14:	dd800c17 	ldw	r22,48(sp)
   8ec18:	dd400b17 	ldw	r21,44(sp)
   8ec1c:	dd000a17 	ldw	r20,40(sp)
   8ec20:	dcc00917 	ldw	r19,36(sp)
   8ec24:	dc800817 	ldw	r18,32(sp)
   8ec28:	dc400717 	ldw	r17,28(sp)
   8ec2c:	dc000617 	ldw	r16,24(sp)
   8ec30:	dec01004 	addi	sp,sp,64
   8ec34:	f800283a 	ret

0008ec38 <__i2b>:
   8ec38:	defffd04 	addi	sp,sp,-12
   8ec3c:	dc000015 	stw	r16,0(sp)
   8ec40:	04000044 	movi	r16,1
   8ec44:	dc800115 	stw	r18,4(sp)
   8ec48:	2825883a 	mov	r18,r5
   8ec4c:	800b883a 	mov	r5,r16
   8ec50:	dfc00215 	stw	ra,8(sp)
   8ec54:	008e4d40 	call	8e4d4 <_Balloc>
   8ec58:	14000415 	stw	r16,16(r2)
   8ec5c:	14800515 	stw	r18,20(r2)
   8ec60:	dfc00217 	ldw	ra,8(sp)
   8ec64:	dc800117 	ldw	r18,4(sp)
   8ec68:	dc000017 	ldw	r16,0(sp)
   8ec6c:	dec00304 	addi	sp,sp,12
   8ec70:	f800283a 	ret

0008ec74 <__multadd>:
   8ec74:	defff604 	addi	sp,sp,-40
   8ec78:	dd800615 	stw	r22,24(sp)
   8ec7c:	2d800417 	ldw	r22,16(r5)
   8ec80:	df000815 	stw	fp,32(sp)
   8ec84:	ddc00715 	stw	r23,28(sp)
   8ec88:	dd400515 	stw	r21,20(sp)
   8ec8c:	dd000415 	stw	r20,16(sp)
   8ec90:	dcc00315 	stw	r19,12(sp)
   8ec94:	dc800215 	stw	r18,8(sp)
   8ec98:	dfc00915 	stw	ra,36(sp)
   8ec9c:	dc400115 	stw	r17,4(sp)
   8eca0:	dc000015 	stw	r16,0(sp)
   8eca4:	282f883a 	mov	r23,r5
   8eca8:	2039883a 	mov	fp,r4
   8ecac:	302b883a 	mov	r21,r6
   8ecb0:	3829883a 	mov	r20,r7
   8ecb4:	2c800504 	addi	r18,r5,20
   8ecb8:	0027883a 	mov	r19,zero
   8ecbc:	94400017 	ldw	r17,0(r18)
   8ecc0:	a80b883a 	mov	r5,r21
   8ecc4:	9cc00044 	addi	r19,r19,1
   8ecc8:	893fffcc 	andi	r4,r17,65535
   8eccc:	00886b00 	call	886b0 <__mulsi3>
   8ecd0:	8808d43a 	srli	r4,r17,16
   8ecd4:	1521883a 	add	r16,r2,r20
   8ecd8:	a80b883a 	mov	r5,r21
   8ecdc:	00886b00 	call	886b0 <__mulsi3>
   8ece0:	8008d43a 	srli	r4,r16,16
   8ece4:	843fffcc 	andi	r16,r16,65535
   8ece8:	1105883a 	add	r2,r2,r4
   8ecec:	1006943a 	slli	r3,r2,16
   8ecf0:	1028d43a 	srli	r20,r2,16
   8ecf4:	1c07883a 	add	r3,r3,r16
   8ecf8:	90c00015 	stw	r3,0(r18)
   8ecfc:	94800104 	addi	r18,r18,4
   8ed00:	9dbfee16 	blt	r19,r22,8ecbc <__multadd+0x48>
   8ed04:	a0000826 	beq	r20,zero,8ed28 <__multadd+0xb4>
   8ed08:	b8800217 	ldw	r2,8(r23)
   8ed0c:	b080130e 	bge	r22,r2,8ed5c <__multadd+0xe8>
   8ed10:	b585883a 	add	r2,r22,r22
   8ed14:	1085883a 	add	r2,r2,r2
   8ed18:	15c5883a 	add	r2,r2,r23
   8ed1c:	b0c00044 	addi	r3,r22,1
   8ed20:	15000515 	stw	r20,20(r2)
   8ed24:	b8c00415 	stw	r3,16(r23)
   8ed28:	b805883a 	mov	r2,r23
   8ed2c:	dfc00917 	ldw	ra,36(sp)
   8ed30:	df000817 	ldw	fp,32(sp)
   8ed34:	ddc00717 	ldw	r23,28(sp)
   8ed38:	dd800617 	ldw	r22,24(sp)
   8ed3c:	dd400517 	ldw	r21,20(sp)
   8ed40:	dd000417 	ldw	r20,16(sp)
   8ed44:	dcc00317 	ldw	r19,12(sp)
   8ed48:	dc800217 	ldw	r18,8(sp)
   8ed4c:	dc400117 	ldw	r17,4(sp)
   8ed50:	dc000017 	ldw	r16,0(sp)
   8ed54:	dec00a04 	addi	sp,sp,40
   8ed58:	f800283a 	ret
   8ed5c:	b9400117 	ldw	r5,4(r23)
   8ed60:	e009883a 	mov	r4,fp
   8ed64:	29400044 	addi	r5,r5,1
   8ed68:	008e4d40 	call	8e4d4 <_Balloc>
   8ed6c:	b9800417 	ldw	r6,16(r23)
   8ed70:	b9400304 	addi	r5,r23,12
   8ed74:	11000304 	addi	r4,r2,12
   8ed78:	318d883a 	add	r6,r6,r6
   8ed7c:	318d883a 	add	r6,r6,r6
   8ed80:	31800204 	addi	r6,r6,8
   8ed84:	1023883a 	mov	r17,r2
   8ed88:	008dd3c0 	call	8dd3c <memcpy>
   8ed8c:	b80b883a 	mov	r5,r23
   8ed90:	e009883a 	mov	r4,fp
   8ed94:	008df540 	call	8df54 <_Bfree>
   8ed98:	882f883a 	mov	r23,r17
   8ed9c:	003fdc06 	br	8ed10 <__multadd+0x9c>

0008eda0 <__pow5mult>:
   8eda0:	defffa04 	addi	sp,sp,-24
   8eda4:	308000cc 	andi	r2,r6,3
   8eda8:	dd000415 	stw	r20,16(sp)
   8edac:	dcc00315 	stw	r19,12(sp)
   8edb0:	dc000015 	stw	r16,0(sp)
   8edb4:	dfc00515 	stw	ra,20(sp)
   8edb8:	dc800215 	stw	r18,8(sp)
   8edbc:	dc400115 	stw	r17,4(sp)
   8edc0:	3021883a 	mov	r16,r6
   8edc4:	2027883a 	mov	r19,r4
   8edc8:	2829883a 	mov	r20,r5
   8edcc:	10002b1e 	bne	r2,zero,8ee7c <__pow5mult+0xdc>
   8edd0:	8025d0ba 	srai	r18,r16,2
   8edd4:	90001b26 	beq	r18,zero,8ee44 <__pow5mult+0xa4>
   8edd8:	9c001217 	ldw	r16,72(r19)
   8eddc:	8000081e 	bne	r16,zero,8ee00 <__pow5mult+0x60>
   8ede0:	00003006 	br	8eea4 <__pow5mult+0x104>
   8ede4:	800b883a 	mov	r5,r16
   8ede8:	800d883a 	mov	r6,r16
   8edec:	9809883a 	mov	r4,r19
   8edf0:	90001426 	beq	r18,zero,8ee44 <__pow5mult+0xa4>
   8edf4:	80800017 	ldw	r2,0(r16)
   8edf8:	10001b26 	beq	r2,zero,8ee68 <__pow5mult+0xc8>
   8edfc:	1021883a 	mov	r16,r2
   8ee00:	9080004c 	andi	r2,r18,1
   8ee04:	1005003a 	cmpeq	r2,r2,zero
   8ee08:	9025d07a 	srai	r18,r18,1
   8ee0c:	800d883a 	mov	r6,r16
   8ee10:	9809883a 	mov	r4,r19
   8ee14:	a00b883a 	mov	r5,r20
   8ee18:	103ff21e 	bne	r2,zero,8ede4 <__pow5mult+0x44>
   8ee1c:	008e9e40 	call	8e9e4 <__multiply>
   8ee20:	a00b883a 	mov	r5,r20
   8ee24:	9809883a 	mov	r4,r19
   8ee28:	1023883a 	mov	r17,r2
   8ee2c:	008df540 	call	8df54 <_Bfree>
   8ee30:	8829883a 	mov	r20,r17
   8ee34:	800b883a 	mov	r5,r16
   8ee38:	800d883a 	mov	r6,r16
   8ee3c:	9809883a 	mov	r4,r19
   8ee40:	903fec1e 	bne	r18,zero,8edf4 <__pow5mult+0x54>
   8ee44:	a005883a 	mov	r2,r20
   8ee48:	dfc00517 	ldw	ra,20(sp)
   8ee4c:	dd000417 	ldw	r20,16(sp)
   8ee50:	dcc00317 	ldw	r19,12(sp)
   8ee54:	dc800217 	ldw	r18,8(sp)
   8ee58:	dc400117 	ldw	r17,4(sp)
   8ee5c:	dc000017 	ldw	r16,0(sp)
   8ee60:	dec00604 	addi	sp,sp,24
   8ee64:	f800283a 	ret
   8ee68:	008e9e40 	call	8e9e4 <__multiply>
   8ee6c:	80800015 	stw	r2,0(r16)
   8ee70:	1021883a 	mov	r16,r2
   8ee74:	10000015 	stw	zero,0(r2)
   8ee78:	003fe106 	br	8ee00 <__pow5mult+0x60>
   8ee7c:	1085883a 	add	r2,r2,r2
   8ee80:	00c002b4 	movhi	r3,10
   8ee84:	18c29f04 	addi	r3,r3,2684
   8ee88:	1085883a 	add	r2,r2,r2
   8ee8c:	10c5883a 	add	r2,r2,r3
   8ee90:	11bfff17 	ldw	r6,-4(r2)
   8ee94:	000f883a 	mov	r7,zero
   8ee98:	008ec740 	call	8ec74 <__multadd>
   8ee9c:	1029883a 	mov	r20,r2
   8eea0:	003fcb06 	br	8edd0 <__pow5mult+0x30>
   8eea4:	9809883a 	mov	r4,r19
   8eea8:	01409c44 	movi	r5,625
   8eeac:	008ec380 	call	8ec38 <__i2b>
   8eeb0:	98801215 	stw	r2,72(r19)
   8eeb4:	1021883a 	mov	r16,r2
   8eeb8:	10000015 	stw	zero,0(r2)
   8eebc:	003fd006 	br	8ee00 <__pow5mult+0x60>

0008eec0 <__s2b>:
   8eec0:	defff904 	addi	sp,sp,-28
   8eec4:	dcc00315 	stw	r19,12(sp)
   8eec8:	dc800215 	stw	r18,8(sp)
   8eecc:	2827883a 	mov	r19,r5
   8eed0:	2025883a 	mov	r18,r4
   8eed4:	01400244 	movi	r5,9
   8eed8:	39000204 	addi	r4,r7,8
   8eedc:	dd000415 	stw	r20,16(sp)
   8eee0:	dc400115 	stw	r17,4(sp)
   8eee4:	dfc00615 	stw	ra,24(sp)
   8eee8:	dd400515 	stw	r21,20(sp)
   8eeec:	dc000015 	stw	r16,0(sp)
   8eef0:	3829883a 	mov	r20,r7
   8eef4:	3023883a 	mov	r17,r6
   8eef8:	00885e00 	call	885e0 <__divsi3>
   8eefc:	00c00044 	movi	r3,1
   8ef00:	1880350e 	bge	r3,r2,8efd8 <__s2b+0x118>
   8ef04:	000b883a 	mov	r5,zero
   8ef08:	18c7883a 	add	r3,r3,r3
   8ef0c:	29400044 	addi	r5,r5,1
   8ef10:	18bffd16 	blt	r3,r2,8ef08 <__s2b+0x48>
   8ef14:	9009883a 	mov	r4,r18
   8ef18:	008e4d40 	call	8e4d4 <_Balloc>
   8ef1c:	1011883a 	mov	r8,r2
   8ef20:	d8800717 	ldw	r2,28(sp)
   8ef24:	00c00044 	movi	r3,1
   8ef28:	01800244 	movi	r6,9
   8ef2c:	40800515 	stw	r2,20(r8)
   8ef30:	40c00415 	stw	r3,16(r8)
   8ef34:	3440260e 	bge	r6,r17,8efd0 <__s2b+0x110>
   8ef38:	3021883a 	mov	r16,r6
   8ef3c:	99ab883a 	add	r21,r19,r6
   8ef40:	9c05883a 	add	r2,r19,r16
   8ef44:	11c00007 	ldb	r7,0(r2)
   8ef48:	400b883a 	mov	r5,r8
   8ef4c:	9009883a 	mov	r4,r18
   8ef50:	39fff404 	addi	r7,r7,-48
   8ef54:	01800284 	movi	r6,10
   8ef58:	008ec740 	call	8ec74 <__multadd>
   8ef5c:	84000044 	addi	r16,r16,1
   8ef60:	1011883a 	mov	r8,r2
   8ef64:	8c3ff61e 	bne	r17,r16,8ef40 <__s2b+0x80>
   8ef68:	ac45883a 	add	r2,r21,r17
   8ef6c:	117ffe04 	addi	r5,r2,-8
   8ef70:	880d883a 	mov	r6,r17
   8ef74:	35000c0e 	bge	r6,r20,8efa8 <__s2b+0xe8>
   8ef78:	a185c83a 	sub	r2,r20,r6
   8ef7c:	2821883a 	mov	r16,r5
   8ef80:	28a3883a 	add	r17,r5,r2
   8ef84:	81c00007 	ldb	r7,0(r16)
   8ef88:	400b883a 	mov	r5,r8
   8ef8c:	9009883a 	mov	r4,r18
   8ef90:	39fff404 	addi	r7,r7,-48
   8ef94:	01800284 	movi	r6,10
   8ef98:	008ec740 	call	8ec74 <__multadd>
   8ef9c:	84000044 	addi	r16,r16,1
   8efa0:	1011883a 	mov	r8,r2
   8efa4:	847ff71e 	bne	r16,r17,8ef84 <__s2b+0xc4>
   8efa8:	4005883a 	mov	r2,r8
   8efac:	dfc00617 	ldw	ra,24(sp)
   8efb0:	dd400517 	ldw	r21,20(sp)
   8efb4:	dd000417 	ldw	r20,16(sp)
   8efb8:	dcc00317 	ldw	r19,12(sp)
   8efbc:	dc800217 	ldw	r18,8(sp)
   8efc0:	dc400117 	ldw	r17,4(sp)
   8efc4:	dc000017 	ldw	r16,0(sp)
   8efc8:	dec00704 	addi	sp,sp,28
   8efcc:	f800283a 	ret
   8efd0:	99400284 	addi	r5,r19,10
   8efd4:	003fe706 	br	8ef74 <__s2b+0xb4>
   8efd8:	000b883a 	mov	r5,zero
   8efdc:	003fcd06 	br	8ef14 <__s2b+0x54>

0008efe0 <putc>:
   8efe0:	defffc04 	addi	sp,sp,-16
   8efe4:	dc800215 	stw	r18,8(sp)
   8efe8:	048002b4 	movhi	r18,10
   8efec:	9489d704 	addi	r18,r18,10076
   8eff0:	90c00017 	ldw	r3,0(r18)
   8eff4:	dc400115 	stw	r17,4(sp)
   8eff8:	dc000015 	stw	r16,0(sp)
   8effc:	dfc00315 	stw	ra,12(sp)
   8f000:	2023883a 	mov	r17,r4
   8f004:	2821883a 	mov	r16,r5
   8f008:	18000226 	beq	r3,zero,8f014 <putc+0x34>
   8f00c:	18800e17 	ldw	r2,56(r3)
   8f010:	10001126 	beq	r2,zero,8f058 <putc+0x78>
   8f014:	80800217 	ldw	r2,8(r16)
   8f018:	10ffffc4 	addi	r3,r2,-1
   8f01c:	80c00215 	stw	r3,8(r16)
   8f020:	18001316 	blt	r3,zero,8f070 <putc+0x90>
   8f024:	80800017 	ldw	r2,0(r16)
   8f028:	14400005 	stb	r17,0(r2)
   8f02c:	80c00017 	ldw	r3,0(r16)
   8f030:	18800044 	addi	r2,r3,1
   8f034:	18c00003 	ldbu	r3,0(r3)
   8f038:	80800015 	stw	r2,0(r16)
   8f03c:	1805883a 	mov	r2,r3
   8f040:	dfc00317 	ldw	ra,12(sp)
   8f044:	dc800217 	ldw	r18,8(sp)
   8f048:	dc400117 	ldw	r17,4(sp)
   8f04c:	dc000017 	ldw	r16,0(sp)
   8f050:	dec00404 	addi	sp,sp,16
   8f054:	f800283a 	ret
   8f058:	1809883a 	mov	r4,r3
   8f05c:	008c5d80 	call	8c5d8 <__sinit>
   8f060:	80800217 	ldw	r2,8(r16)
   8f064:	10ffffc4 	addi	r3,r2,-1
   8f068:	80c00215 	stw	r3,8(r16)
   8f06c:	183fed0e 	bge	r3,zero,8f024 <putc+0x44>
   8f070:	80800617 	ldw	r2,24(r16)
   8f074:	18800f16 	blt	r3,r2,8f0b4 <putc+0xd4>
   8f078:	80800017 	ldw	r2,0(r16)
   8f07c:	14400005 	stb	r17,0(r2)
   8f080:	81000017 	ldw	r4,0(r16)
   8f084:	00800284 	movi	r2,10
   8f088:	20c00003 	ldbu	r3,0(r4)
   8f08c:	18801226 	beq	r3,r2,8f0d8 <putc+0xf8>
   8f090:	20800044 	addi	r2,r4,1
   8f094:	80800015 	stw	r2,0(r16)
   8f098:	1805883a 	mov	r2,r3
   8f09c:	dfc00317 	ldw	ra,12(sp)
   8f0a0:	dc800217 	ldw	r18,8(sp)
   8f0a4:	dc400117 	ldw	r17,4(sp)
   8f0a8:	dc000017 	ldw	r16,0(sp)
   8f0ac:	dec00404 	addi	sp,sp,16
   8f0b0:	f800283a 	ret
   8f0b4:	91000017 	ldw	r4,0(r18)
   8f0b8:	880b883a 	mov	r5,r17
   8f0bc:	800d883a 	mov	r6,r16
   8f0c0:	dfc00317 	ldw	ra,12(sp)
   8f0c4:	dc800217 	ldw	r18,8(sp)
   8f0c8:	dc400117 	ldw	r17,4(sp)
   8f0cc:	dc000017 	ldw	r16,0(sp)
   8f0d0:	dec00404 	addi	sp,sp,16
   8f0d4:	008faa81 	jmpi	8faa8 <__swbuf_r>
   8f0d8:	91000017 	ldw	r4,0(r18)
   8f0dc:	180b883a 	mov	r5,r3
   8f0e0:	003ff606 	br	8f0bc <putc+0xdc>

0008f0e4 <_putc_r>:
   8f0e4:	defffc04 	addi	sp,sp,-16
   8f0e8:	dc400215 	stw	r17,8(sp)
   8f0ec:	dc000115 	stw	r16,4(sp)
   8f0f0:	dfc00315 	stw	ra,12(sp)
   8f0f4:	2021883a 	mov	r16,r4
   8f0f8:	2823883a 	mov	r17,r5
   8f0fc:	20000226 	beq	r4,zero,8f108 <_putc_r+0x24>
   8f100:	20800e17 	ldw	r2,56(r4)
   8f104:	10001026 	beq	r2,zero,8f148 <_putc_r+0x64>
   8f108:	30800217 	ldw	r2,8(r6)
   8f10c:	10ffffc4 	addi	r3,r2,-1
   8f110:	30c00215 	stw	r3,8(r6)
   8f114:	18001316 	blt	r3,zero,8f164 <_putc_r+0x80>
   8f118:	30800017 	ldw	r2,0(r6)
   8f11c:	14400005 	stb	r17,0(r2)
   8f120:	30c00017 	ldw	r3,0(r6)
   8f124:	18800044 	addi	r2,r3,1
   8f128:	18c00003 	ldbu	r3,0(r3)
   8f12c:	30800015 	stw	r2,0(r6)
   8f130:	1805883a 	mov	r2,r3
   8f134:	dfc00317 	ldw	ra,12(sp)
   8f138:	dc400217 	ldw	r17,8(sp)
   8f13c:	dc000117 	ldw	r16,4(sp)
   8f140:	dec00404 	addi	sp,sp,16
   8f144:	f800283a 	ret
   8f148:	d9800015 	stw	r6,0(sp)
   8f14c:	008c5d80 	call	8c5d8 <__sinit>
   8f150:	d9800017 	ldw	r6,0(sp)
   8f154:	30800217 	ldw	r2,8(r6)
   8f158:	10ffffc4 	addi	r3,r2,-1
   8f15c:	30c00215 	stw	r3,8(r6)
   8f160:	183fed0e 	bge	r3,zero,8f118 <_putc_r+0x34>
   8f164:	30800617 	ldw	r2,24(r6)
   8f168:	18800e16 	blt	r3,r2,8f1a4 <_putc_r+0xc0>
   8f16c:	30800017 	ldw	r2,0(r6)
   8f170:	14400005 	stb	r17,0(r2)
   8f174:	31000017 	ldw	r4,0(r6)
   8f178:	00800284 	movi	r2,10
   8f17c:	20c00003 	ldbu	r3,0(r4)
   8f180:	18800f26 	beq	r3,r2,8f1c0 <_putc_r+0xdc>
   8f184:	20800044 	addi	r2,r4,1
   8f188:	30800015 	stw	r2,0(r6)
   8f18c:	1805883a 	mov	r2,r3
   8f190:	dfc00317 	ldw	ra,12(sp)
   8f194:	dc400217 	ldw	r17,8(sp)
   8f198:	dc000117 	ldw	r16,4(sp)
   8f19c:	dec00404 	addi	sp,sp,16
   8f1a0:	f800283a 	ret
   8f1a4:	8009883a 	mov	r4,r16
   8f1a8:	880b883a 	mov	r5,r17
   8f1ac:	dfc00317 	ldw	ra,12(sp)
   8f1b0:	dc400217 	ldw	r17,8(sp)
   8f1b4:	dc000117 	ldw	r16,4(sp)
   8f1b8:	dec00404 	addi	sp,sp,16
   8f1bc:	008faa81 	jmpi	8faa8 <__swbuf_r>
   8f1c0:	8009883a 	mov	r4,r16
   8f1c4:	180b883a 	mov	r5,r3
   8f1c8:	003ff806 	br	8f1ac <_putc_r+0xc8>

0008f1cc <_realloc_r>:
   8f1cc:	defff404 	addi	sp,sp,-48
   8f1d0:	dd800815 	stw	r22,32(sp)
   8f1d4:	dc800415 	stw	r18,16(sp)
   8f1d8:	dc400315 	stw	r17,12(sp)
   8f1dc:	dfc00b15 	stw	ra,44(sp)
   8f1e0:	df000a15 	stw	fp,40(sp)
   8f1e4:	ddc00915 	stw	r23,36(sp)
   8f1e8:	dd400715 	stw	r21,28(sp)
   8f1ec:	dd000615 	stw	r20,24(sp)
   8f1f0:	dcc00515 	stw	r19,20(sp)
   8f1f4:	dc000215 	stw	r16,8(sp)
   8f1f8:	2825883a 	mov	r18,r5
   8f1fc:	3023883a 	mov	r17,r6
   8f200:	202d883a 	mov	r22,r4
   8f204:	2800c926 	beq	r5,zero,8f52c <_realloc_r+0x360>
   8f208:	00933400 	call	93340 <__malloc_lock>
   8f20c:	943ffe04 	addi	r16,r18,-8
   8f210:	88c002c4 	addi	r3,r17,11
   8f214:	00800584 	movi	r2,22
   8f218:	82000117 	ldw	r8,4(r16)
   8f21c:	10c01b2e 	bgeu	r2,r3,8f28c <_realloc_r+0xc0>
   8f220:	00bffe04 	movi	r2,-8
   8f224:	188e703a 	and	r7,r3,r2
   8f228:	3839883a 	mov	fp,r7
   8f22c:	38001a16 	blt	r7,zero,8f298 <_realloc_r+0xcc>
   8f230:	e4401936 	bltu	fp,r17,8f298 <_realloc_r+0xcc>
   8f234:	013fff04 	movi	r4,-4
   8f238:	4126703a 	and	r19,r8,r4
   8f23c:	99c02616 	blt	r19,r7,8f2d8 <_realloc_r+0x10c>
   8f240:	802b883a 	mov	r21,r16
   8f244:	9829883a 	mov	r20,r19
   8f248:	84000204 	addi	r16,r16,8
   8f24c:	a80f883a 	mov	r7,r21
   8f250:	a70dc83a 	sub	r6,r20,fp
   8f254:	008003c4 	movi	r2,15
   8f258:	1180c136 	bltu	r2,r6,8f560 <_realloc_r+0x394>
   8f25c:	38800117 	ldw	r2,4(r7)
   8f260:	a549883a 	add	r4,r20,r21
   8f264:	1080004c 	andi	r2,r2,1
   8f268:	a084b03a 	or	r2,r20,r2
   8f26c:	38800115 	stw	r2,4(r7)
   8f270:	20c00117 	ldw	r3,4(r4)
   8f274:	18c00054 	ori	r3,r3,1
   8f278:	20c00115 	stw	r3,4(r4)
   8f27c:	b009883a 	mov	r4,r22
   8f280:	00934480 	call	93448 <__malloc_unlock>
   8f284:	8023883a 	mov	r17,r16
   8f288:	00000606 	br	8f2a4 <_realloc_r+0xd8>
   8f28c:	01c00404 	movi	r7,16
   8f290:	3839883a 	mov	fp,r7
   8f294:	e47fe72e 	bgeu	fp,r17,8f234 <_realloc_r+0x68>
   8f298:	00800304 	movi	r2,12
   8f29c:	0023883a 	mov	r17,zero
   8f2a0:	b0800015 	stw	r2,0(r22)
   8f2a4:	8805883a 	mov	r2,r17
   8f2a8:	dfc00b17 	ldw	ra,44(sp)
   8f2ac:	df000a17 	ldw	fp,40(sp)
   8f2b0:	ddc00917 	ldw	r23,36(sp)
   8f2b4:	dd800817 	ldw	r22,32(sp)
   8f2b8:	dd400717 	ldw	r21,28(sp)
   8f2bc:	dd000617 	ldw	r20,24(sp)
   8f2c0:	dcc00517 	ldw	r19,20(sp)
   8f2c4:	dc800417 	ldw	r18,16(sp)
   8f2c8:	dc400317 	ldw	r17,12(sp)
   8f2cc:	dc000217 	ldw	r16,8(sp)
   8f2d0:	dec00c04 	addi	sp,sp,48
   8f2d4:	f800283a 	ret
   8f2d8:	008002b4 	movhi	r2,10
   8f2dc:	10844404 	addi	r2,r2,4368
   8f2e0:	12400217 	ldw	r9,8(r2)
   8f2e4:	84cd883a 	add	r6,r16,r19
   8f2e8:	802b883a 	mov	r21,r16
   8f2ec:	3240b926 	beq	r6,r9,8f5d4 <_realloc_r+0x408>
   8f2f0:	31400117 	ldw	r5,4(r6)
   8f2f4:	00bfff84 	movi	r2,-2
   8f2f8:	2884703a 	and	r2,r5,r2
   8f2fc:	1185883a 	add	r2,r2,r6
   8f300:	10c00117 	ldw	r3,4(r2)
   8f304:	18c0004c 	andi	r3,r3,1
   8f308:	1807003a 	cmpeq	r3,r3,zero
   8f30c:	1800a326 	beq	r3,zero,8f59c <_realloc_r+0x3d0>
   8f310:	2908703a 	and	r4,r5,r4
   8f314:	9929883a 	add	r20,r19,r4
   8f318:	a1c0a30e 	bge	r20,r7,8f5a8 <_realloc_r+0x3dc>
   8f31c:	4080004c 	andi	r2,r8,1
   8f320:	1000551e 	bne	r2,zero,8f478 <_realloc_r+0x2ac>
   8f324:	80800017 	ldw	r2,0(r16)
   8f328:	80afc83a 	sub	r23,r16,r2
   8f32c:	b8c00117 	ldw	r3,4(r23)
   8f330:	00bfff04 	movi	r2,-4
   8f334:	1884703a 	and	r2,r3,r2
   8f338:	30002e26 	beq	r6,zero,8f3f4 <_realloc_r+0x228>
   8f33c:	3240b926 	beq	r6,r9,8f624 <_realloc_r+0x458>
   8f340:	98a9883a 	add	r20,r19,r2
   8f344:	2509883a 	add	r4,r4,r20
   8f348:	d9000015 	stw	r4,0(sp)
   8f34c:	21c02a16 	blt	r4,r7,8f3f8 <_realloc_r+0x22c>
   8f350:	30800317 	ldw	r2,12(r6)
   8f354:	30c00217 	ldw	r3,8(r6)
   8f358:	01400904 	movi	r5,36
   8f35c:	99bfff04 	addi	r6,r19,-4
   8f360:	18800315 	stw	r2,12(r3)
   8f364:	10c00215 	stw	r3,8(r2)
   8f368:	b9000317 	ldw	r4,12(r23)
   8f36c:	b8800217 	ldw	r2,8(r23)
   8f370:	b82b883a 	mov	r21,r23
   8f374:	bc000204 	addi	r16,r23,8
   8f378:	20800215 	stw	r2,8(r4)
   8f37c:	11000315 	stw	r4,12(r2)
   8f380:	2980e436 	bltu	r5,r6,8f714 <_realloc_r+0x548>
   8f384:	008004c4 	movi	r2,19
   8f388:	9009883a 	mov	r4,r18
   8f38c:	8011883a 	mov	r8,r16
   8f390:	11800f2e 	bgeu	r2,r6,8f3d0 <_realloc_r+0x204>
   8f394:	90800017 	ldw	r2,0(r18)
   8f398:	ba000404 	addi	r8,r23,16
   8f39c:	91000204 	addi	r4,r18,8
   8f3a0:	b8800215 	stw	r2,8(r23)
   8f3a4:	90c00117 	ldw	r3,4(r18)
   8f3a8:	008006c4 	movi	r2,27
   8f3ac:	b8c00315 	stw	r3,12(r23)
   8f3b0:	1180072e 	bgeu	r2,r6,8f3d0 <_realloc_r+0x204>
   8f3b4:	90c00217 	ldw	r3,8(r18)
   8f3b8:	ba000604 	addi	r8,r23,24
   8f3bc:	91000404 	addi	r4,r18,16
   8f3c0:	b8c00415 	stw	r3,16(r23)
   8f3c4:	90800317 	ldw	r2,12(r18)
   8f3c8:	b8800515 	stw	r2,20(r23)
   8f3cc:	3140e726 	beq	r6,r5,8f76c <_realloc_r+0x5a0>
   8f3d0:	20800017 	ldw	r2,0(r4)
   8f3d4:	dd000017 	ldw	r20,0(sp)
   8f3d8:	b80f883a 	mov	r7,r23
   8f3dc:	40800015 	stw	r2,0(r8)
   8f3e0:	20c00117 	ldw	r3,4(r4)
   8f3e4:	40c00115 	stw	r3,4(r8)
   8f3e8:	20800217 	ldw	r2,8(r4)
   8f3ec:	40800215 	stw	r2,8(r8)
   8f3f0:	003f9706 	br	8f250 <_realloc_r+0x84>
   8f3f4:	98a9883a 	add	r20,r19,r2
   8f3f8:	a1c01f16 	blt	r20,r7,8f478 <_realloc_r+0x2ac>
   8f3fc:	b8c00317 	ldw	r3,12(r23)
   8f400:	b8800217 	ldw	r2,8(r23)
   8f404:	99bfff04 	addi	r6,r19,-4
   8f408:	01400904 	movi	r5,36
   8f40c:	b82b883a 	mov	r21,r23
   8f410:	18800215 	stw	r2,8(r3)
   8f414:	10c00315 	stw	r3,12(r2)
   8f418:	bc000204 	addi	r16,r23,8
   8f41c:	2980c336 	bltu	r5,r6,8f72c <_realloc_r+0x560>
   8f420:	008004c4 	movi	r2,19
   8f424:	9009883a 	mov	r4,r18
   8f428:	8011883a 	mov	r8,r16
   8f42c:	11800f2e 	bgeu	r2,r6,8f46c <_realloc_r+0x2a0>
   8f430:	90800017 	ldw	r2,0(r18)
   8f434:	ba000404 	addi	r8,r23,16
   8f438:	91000204 	addi	r4,r18,8
   8f43c:	b8800215 	stw	r2,8(r23)
   8f440:	90c00117 	ldw	r3,4(r18)
   8f444:	008006c4 	movi	r2,27
   8f448:	b8c00315 	stw	r3,12(r23)
   8f44c:	1180072e 	bgeu	r2,r6,8f46c <_realloc_r+0x2a0>
   8f450:	90c00217 	ldw	r3,8(r18)
   8f454:	ba000604 	addi	r8,r23,24
   8f458:	91000404 	addi	r4,r18,16
   8f45c:	b8c00415 	stw	r3,16(r23)
   8f460:	90800317 	ldw	r2,12(r18)
   8f464:	b8800515 	stw	r2,20(r23)
   8f468:	3140c726 	beq	r6,r5,8f788 <_realloc_r+0x5bc>
   8f46c:	20800017 	ldw	r2,0(r4)
   8f470:	b80f883a 	mov	r7,r23
   8f474:	003fd906 	br	8f3dc <_realloc_r+0x210>
   8f478:	880b883a 	mov	r5,r17
   8f47c:	b009883a 	mov	r4,r22
   8f480:	008d5180 	call	8d518 <_malloc_r>
   8f484:	1023883a 	mov	r17,r2
   8f488:	10002526 	beq	r2,zero,8f520 <_realloc_r+0x354>
   8f48c:	80800117 	ldw	r2,4(r16)
   8f490:	00ffff84 	movi	r3,-2
   8f494:	893ffe04 	addi	r4,r17,-8
   8f498:	10c4703a 	and	r2,r2,r3
   8f49c:	8085883a 	add	r2,r16,r2
   8f4a0:	20809526 	beq	r4,r2,8f6f8 <_realloc_r+0x52c>
   8f4a4:	99bfff04 	addi	r6,r19,-4
   8f4a8:	01c00904 	movi	r7,36
   8f4ac:	39804536 	bltu	r7,r6,8f5c4 <_realloc_r+0x3f8>
   8f4b0:	008004c4 	movi	r2,19
   8f4b4:	9009883a 	mov	r4,r18
   8f4b8:	880b883a 	mov	r5,r17
   8f4bc:	11800f2e 	bgeu	r2,r6,8f4fc <_realloc_r+0x330>
   8f4c0:	90800017 	ldw	r2,0(r18)
   8f4c4:	89400204 	addi	r5,r17,8
   8f4c8:	91000204 	addi	r4,r18,8
   8f4cc:	88800015 	stw	r2,0(r17)
   8f4d0:	90c00117 	ldw	r3,4(r18)
   8f4d4:	008006c4 	movi	r2,27
   8f4d8:	88c00115 	stw	r3,4(r17)
   8f4dc:	1180072e 	bgeu	r2,r6,8f4fc <_realloc_r+0x330>
   8f4e0:	90c00217 	ldw	r3,8(r18)
   8f4e4:	89400404 	addi	r5,r17,16
   8f4e8:	91000404 	addi	r4,r18,16
   8f4ec:	88c00215 	stw	r3,8(r17)
   8f4f0:	90800317 	ldw	r2,12(r18)
   8f4f4:	88800315 	stw	r2,12(r17)
   8f4f8:	31c09126 	beq	r6,r7,8f740 <_realloc_r+0x574>
   8f4fc:	20800017 	ldw	r2,0(r4)
   8f500:	28800015 	stw	r2,0(r5)
   8f504:	20c00117 	ldw	r3,4(r4)
   8f508:	28c00115 	stw	r3,4(r5)
   8f50c:	20800217 	ldw	r2,8(r4)
   8f510:	28800215 	stw	r2,8(r5)
   8f514:	900b883a 	mov	r5,r18
   8f518:	b009883a 	mov	r4,r22
   8f51c:	008c9900 	call	8c990 <_free_r>
   8f520:	b009883a 	mov	r4,r22
   8f524:	00934480 	call	93448 <__malloc_unlock>
   8f528:	003f5e06 	br	8f2a4 <_realloc_r+0xd8>
   8f52c:	300b883a 	mov	r5,r6
   8f530:	dfc00b17 	ldw	ra,44(sp)
   8f534:	df000a17 	ldw	fp,40(sp)
   8f538:	ddc00917 	ldw	r23,36(sp)
   8f53c:	dd800817 	ldw	r22,32(sp)
   8f540:	dd400717 	ldw	r21,28(sp)
   8f544:	dd000617 	ldw	r20,24(sp)
   8f548:	dcc00517 	ldw	r19,20(sp)
   8f54c:	dc800417 	ldw	r18,16(sp)
   8f550:	dc400317 	ldw	r17,12(sp)
   8f554:	dc000217 	ldw	r16,8(sp)
   8f558:	dec00c04 	addi	sp,sp,48
   8f55c:	008d5181 	jmpi	8d518 <_malloc_r>
   8f560:	38800117 	ldw	r2,4(r7)
   8f564:	e54b883a 	add	r5,fp,r21
   8f568:	31000054 	ori	r4,r6,1
   8f56c:	1080004c 	andi	r2,r2,1
   8f570:	1704b03a 	or	r2,r2,fp
   8f574:	38800115 	stw	r2,4(r7)
   8f578:	29000115 	stw	r4,4(r5)
   8f57c:	2987883a 	add	r3,r5,r6
   8f580:	18800117 	ldw	r2,4(r3)
   8f584:	29400204 	addi	r5,r5,8
   8f588:	b009883a 	mov	r4,r22
   8f58c:	10800054 	ori	r2,r2,1
   8f590:	18800115 	stw	r2,4(r3)
   8f594:	008c9900 	call	8c990 <_free_r>
   8f598:	003f3806 	br	8f27c <_realloc_r+0xb0>
   8f59c:	000d883a 	mov	r6,zero
   8f5a0:	0009883a 	mov	r4,zero
   8f5a4:	003f5d06 	br	8f31c <_realloc_r+0x150>
   8f5a8:	30c00217 	ldw	r3,8(r6)
   8f5ac:	30800317 	ldw	r2,12(r6)
   8f5b0:	800f883a 	mov	r7,r16
   8f5b4:	84000204 	addi	r16,r16,8
   8f5b8:	10c00215 	stw	r3,8(r2)
   8f5bc:	18800315 	stw	r2,12(r3)
   8f5c0:	003f2306 	br	8f250 <_realloc_r+0x84>
   8f5c4:	8809883a 	mov	r4,r17
   8f5c8:	900b883a 	mov	r5,r18
   8f5cc:	008dddc0 	call	8dddc <memmove>
   8f5d0:	003fd006 	br	8f514 <_realloc_r+0x348>
   8f5d4:	30800117 	ldw	r2,4(r6)
   8f5d8:	e0c00404 	addi	r3,fp,16
   8f5dc:	1108703a 	and	r4,r2,r4
   8f5e0:	9905883a 	add	r2,r19,r4
   8f5e4:	10ff4d16 	blt	r2,r3,8f31c <_realloc_r+0x150>
   8f5e8:	1705c83a 	sub	r2,r2,fp
   8f5ec:	870b883a 	add	r5,r16,fp
   8f5f0:	10800054 	ori	r2,r2,1
   8f5f4:	28800115 	stw	r2,4(r5)
   8f5f8:	80c00117 	ldw	r3,4(r16)
   8f5fc:	008002b4 	movhi	r2,10
   8f600:	10844404 	addi	r2,r2,4368
   8f604:	b009883a 	mov	r4,r22
   8f608:	18c0004c 	andi	r3,r3,1
   8f60c:	e0c6b03a 	or	r3,fp,r3
   8f610:	11400215 	stw	r5,8(r2)
   8f614:	80c00115 	stw	r3,4(r16)
   8f618:	00934480 	call	93448 <__malloc_unlock>
   8f61c:	84400204 	addi	r17,r16,8
   8f620:	003f2006 	br	8f2a4 <_realloc_r+0xd8>
   8f624:	98a9883a 	add	r20,r19,r2
   8f628:	2509883a 	add	r4,r4,r20
   8f62c:	e0800404 	addi	r2,fp,16
   8f630:	d9000115 	stw	r4,4(sp)
   8f634:	20bf7016 	blt	r4,r2,8f3f8 <_realloc_r+0x22c>
   8f638:	b8c00317 	ldw	r3,12(r23)
   8f63c:	b8800217 	ldw	r2,8(r23)
   8f640:	99bfff04 	addi	r6,r19,-4
   8f644:	01400904 	movi	r5,36
   8f648:	18800215 	stw	r2,8(r3)
   8f64c:	10c00315 	stw	r3,12(r2)
   8f650:	bc400204 	addi	r17,r23,8
   8f654:	29804136 	bltu	r5,r6,8f75c <_realloc_r+0x590>
   8f658:	008004c4 	movi	r2,19
   8f65c:	9009883a 	mov	r4,r18
   8f660:	880f883a 	mov	r7,r17
   8f664:	11800f2e 	bgeu	r2,r6,8f6a4 <_realloc_r+0x4d8>
   8f668:	90800017 	ldw	r2,0(r18)
   8f66c:	b9c00404 	addi	r7,r23,16
   8f670:	91000204 	addi	r4,r18,8
   8f674:	b8800215 	stw	r2,8(r23)
   8f678:	90c00117 	ldw	r3,4(r18)
   8f67c:	008006c4 	movi	r2,27
   8f680:	b8c00315 	stw	r3,12(r23)
   8f684:	1180072e 	bgeu	r2,r6,8f6a4 <_realloc_r+0x4d8>
   8f688:	90c00217 	ldw	r3,8(r18)
   8f68c:	b9c00604 	addi	r7,r23,24
   8f690:	91000404 	addi	r4,r18,16
   8f694:	b8c00415 	stw	r3,16(r23)
   8f698:	90800317 	ldw	r2,12(r18)
   8f69c:	b8800515 	stw	r2,20(r23)
   8f6a0:	31404026 	beq	r6,r5,8f7a4 <_realloc_r+0x5d8>
   8f6a4:	20800017 	ldw	r2,0(r4)
   8f6a8:	38800015 	stw	r2,0(r7)
   8f6ac:	20c00117 	ldw	r3,4(r4)
   8f6b0:	38c00115 	stw	r3,4(r7)
   8f6b4:	20800217 	ldw	r2,8(r4)
   8f6b8:	38800215 	stw	r2,8(r7)
   8f6bc:	d8c00117 	ldw	r3,4(sp)
   8f6c0:	bf0b883a 	add	r5,r23,fp
   8f6c4:	b009883a 	mov	r4,r22
   8f6c8:	1f05c83a 	sub	r2,r3,fp
   8f6cc:	10800054 	ori	r2,r2,1
   8f6d0:	28800115 	stw	r2,4(r5)
   8f6d4:	b8c00117 	ldw	r3,4(r23)
   8f6d8:	008002b4 	movhi	r2,10
   8f6dc:	10844404 	addi	r2,r2,4368
   8f6e0:	11400215 	stw	r5,8(r2)
   8f6e4:	18c0004c 	andi	r3,r3,1
   8f6e8:	e0c6b03a 	or	r3,fp,r3
   8f6ec:	b8c00115 	stw	r3,4(r23)
   8f6f0:	00934480 	call	93448 <__malloc_unlock>
   8f6f4:	003eeb06 	br	8f2a4 <_realloc_r+0xd8>
   8f6f8:	20800117 	ldw	r2,4(r4)
   8f6fc:	00ffff04 	movi	r3,-4
   8f700:	800f883a 	mov	r7,r16
   8f704:	10c4703a 	and	r2,r2,r3
   8f708:	98a9883a 	add	r20,r19,r2
   8f70c:	84000204 	addi	r16,r16,8
   8f710:	003ecf06 	br	8f250 <_realloc_r+0x84>
   8f714:	900b883a 	mov	r5,r18
   8f718:	8009883a 	mov	r4,r16
   8f71c:	008dddc0 	call	8dddc <memmove>
   8f720:	dd000017 	ldw	r20,0(sp)
   8f724:	b80f883a 	mov	r7,r23
   8f728:	003ec906 	br	8f250 <_realloc_r+0x84>
   8f72c:	900b883a 	mov	r5,r18
   8f730:	8009883a 	mov	r4,r16
   8f734:	008dddc0 	call	8dddc <memmove>
   8f738:	b80f883a 	mov	r7,r23
   8f73c:	003ec406 	br	8f250 <_realloc_r+0x84>
   8f740:	90c00417 	ldw	r3,16(r18)
   8f744:	89400604 	addi	r5,r17,24
   8f748:	91000604 	addi	r4,r18,24
   8f74c:	88c00415 	stw	r3,16(r17)
   8f750:	90800517 	ldw	r2,20(r18)
   8f754:	88800515 	stw	r2,20(r17)
   8f758:	003f6806 	br	8f4fc <_realloc_r+0x330>
   8f75c:	900b883a 	mov	r5,r18
   8f760:	8809883a 	mov	r4,r17
   8f764:	008dddc0 	call	8dddc <memmove>
   8f768:	003fd406 	br	8f6bc <_realloc_r+0x4f0>
   8f76c:	90c00417 	ldw	r3,16(r18)
   8f770:	91000604 	addi	r4,r18,24
   8f774:	ba000804 	addi	r8,r23,32
   8f778:	b8c00615 	stw	r3,24(r23)
   8f77c:	90800517 	ldw	r2,20(r18)
   8f780:	b8800715 	stw	r2,28(r23)
   8f784:	003f1206 	br	8f3d0 <_realloc_r+0x204>
   8f788:	90c00417 	ldw	r3,16(r18)
   8f78c:	91000604 	addi	r4,r18,24
   8f790:	ba000804 	addi	r8,r23,32
   8f794:	b8c00615 	stw	r3,24(r23)
   8f798:	90800517 	ldw	r2,20(r18)
   8f79c:	b8800715 	stw	r2,28(r23)
   8f7a0:	003f3206 	br	8f46c <_realloc_r+0x2a0>
   8f7a4:	90c00417 	ldw	r3,16(r18)
   8f7a8:	91000604 	addi	r4,r18,24
   8f7ac:	b9c00804 	addi	r7,r23,32
   8f7b0:	b8c00615 	stw	r3,24(r23)
   8f7b4:	90800517 	ldw	r2,20(r18)
   8f7b8:	b8800715 	stw	r2,28(r23)
   8f7bc:	003fb906 	br	8f6a4 <_realloc_r+0x4d8>

0008f7c0 <__isinfd>:
   8f7c0:	200d883a 	mov	r6,r4
   8f7c4:	0109c83a 	sub	r4,zero,r4
   8f7c8:	2188b03a 	or	r4,r4,r6
   8f7cc:	2008d7fa 	srli	r4,r4,31
   8f7d0:	00a00034 	movhi	r2,32768
   8f7d4:	10bfffc4 	addi	r2,r2,-1
   8f7d8:	1144703a 	and	r2,r2,r5
   8f7dc:	2088b03a 	or	r4,r4,r2
   8f7e0:	009ffc34 	movhi	r2,32752
   8f7e4:	1105c83a 	sub	r2,r2,r4
   8f7e8:	0087c83a 	sub	r3,zero,r2
   8f7ec:	10c4b03a 	or	r2,r2,r3
   8f7f0:	1004d7fa 	srli	r2,r2,31
   8f7f4:	00c00044 	movi	r3,1
   8f7f8:	1885c83a 	sub	r2,r3,r2
   8f7fc:	f800283a 	ret

0008f800 <__isnand>:
   8f800:	200d883a 	mov	r6,r4
   8f804:	0109c83a 	sub	r4,zero,r4
   8f808:	2188b03a 	or	r4,r4,r6
   8f80c:	2008d7fa 	srli	r4,r4,31
   8f810:	00a00034 	movhi	r2,32768
   8f814:	10bfffc4 	addi	r2,r2,-1
   8f818:	1144703a 	and	r2,r2,r5
   8f81c:	2088b03a 	or	r4,r4,r2
   8f820:	009ffc34 	movhi	r2,32752
   8f824:	1105c83a 	sub	r2,r2,r4
   8f828:	1004d7fa 	srli	r2,r2,31
   8f82c:	f800283a 	ret

0008f830 <_sbrk_r>:
   8f830:	defffd04 	addi	sp,sp,-12
   8f834:	dc000015 	stw	r16,0(sp)
   8f838:	040002b4 	movhi	r16,10
   8f83c:	8410ed04 	addi	r16,r16,17332
   8f840:	dc400115 	stw	r17,4(sp)
   8f844:	80000015 	stw	zero,0(r16)
   8f848:	2023883a 	mov	r17,r4
   8f84c:	2809883a 	mov	r4,r5
   8f850:	dfc00215 	stw	ra,8(sp)
   8f854:	0092ff80 	call	92ff8 <sbrk>
   8f858:	1007883a 	mov	r3,r2
   8f85c:	00bfffc4 	movi	r2,-1
   8f860:	18800626 	beq	r3,r2,8f87c <_sbrk_r+0x4c>
   8f864:	1805883a 	mov	r2,r3
   8f868:	dfc00217 	ldw	ra,8(sp)
   8f86c:	dc400117 	ldw	r17,4(sp)
   8f870:	dc000017 	ldw	r16,0(sp)
   8f874:	dec00304 	addi	sp,sp,12
   8f878:	f800283a 	ret
   8f87c:	80800017 	ldw	r2,0(r16)
   8f880:	103ff826 	beq	r2,zero,8f864 <_sbrk_r+0x34>
   8f884:	88800015 	stw	r2,0(r17)
   8f888:	1805883a 	mov	r2,r3
   8f88c:	dfc00217 	ldw	ra,8(sp)
   8f890:	dc400117 	ldw	r17,4(sp)
   8f894:	dc000017 	ldw	r16,0(sp)
   8f898:	dec00304 	addi	sp,sp,12
   8f89c:	f800283a 	ret

0008f8a0 <__sclose>:
   8f8a0:	2940038f 	ldh	r5,14(r5)
   8f8a4:	008fd341 	jmpi	8fd34 <_close_r>

0008f8a8 <__sseek>:
   8f8a8:	defffe04 	addi	sp,sp,-8
   8f8ac:	dc000015 	stw	r16,0(sp)
   8f8b0:	2821883a 	mov	r16,r5
   8f8b4:	2940038f 	ldh	r5,14(r5)
   8f8b8:	dfc00115 	stw	ra,4(sp)
   8f8bc:	008ffac0 	call	8ffac <_lseek_r>
   8f8c0:	1007883a 	mov	r3,r2
   8f8c4:	00bfffc4 	movi	r2,-1
   8f8c8:	18800926 	beq	r3,r2,8f8f0 <__sseek+0x48>
   8f8cc:	8080030b 	ldhu	r2,12(r16)
   8f8d0:	80c01415 	stw	r3,80(r16)
   8f8d4:	10840014 	ori	r2,r2,4096
   8f8d8:	8080030d 	sth	r2,12(r16)
   8f8dc:	1805883a 	mov	r2,r3
   8f8e0:	dfc00117 	ldw	ra,4(sp)
   8f8e4:	dc000017 	ldw	r16,0(sp)
   8f8e8:	dec00204 	addi	sp,sp,8
   8f8ec:	f800283a 	ret
   8f8f0:	8080030b 	ldhu	r2,12(r16)
   8f8f4:	10bbffcc 	andi	r2,r2,61439
   8f8f8:	8080030d 	sth	r2,12(r16)
   8f8fc:	1805883a 	mov	r2,r3
   8f900:	dfc00117 	ldw	ra,4(sp)
   8f904:	dc000017 	ldw	r16,0(sp)
   8f908:	dec00204 	addi	sp,sp,8
   8f90c:	f800283a 	ret

0008f910 <__swrite>:
   8f910:	2880030b 	ldhu	r2,12(r5)
   8f914:	defffb04 	addi	sp,sp,-20
   8f918:	dcc00315 	stw	r19,12(sp)
   8f91c:	1080400c 	andi	r2,r2,256
   8f920:	dc800215 	stw	r18,8(sp)
   8f924:	dc400115 	stw	r17,4(sp)
   8f928:	dc000015 	stw	r16,0(sp)
   8f92c:	3027883a 	mov	r19,r6
   8f930:	3825883a 	mov	r18,r7
   8f934:	dfc00415 	stw	ra,16(sp)
   8f938:	2821883a 	mov	r16,r5
   8f93c:	000d883a 	mov	r6,zero
   8f940:	01c00084 	movi	r7,2
   8f944:	2023883a 	mov	r17,r4
   8f948:	10000226 	beq	r2,zero,8f954 <__swrite+0x44>
   8f94c:	2940038f 	ldh	r5,14(r5)
   8f950:	008ffac0 	call	8ffac <_lseek_r>
   8f954:	8080030b 	ldhu	r2,12(r16)
   8f958:	8140038f 	ldh	r5,14(r16)
   8f95c:	8809883a 	mov	r4,r17
   8f960:	10bbffcc 	andi	r2,r2,61439
   8f964:	980d883a 	mov	r6,r19
   8f968:	900f883a 	mov	r7,r18
   8f96c:	8080030d 	sth	r2,12(r16)
   8f970:	dfc00417 	ldw	ra,16(sp)
   8f974:	dcc00317 	ldw	r19,12(sp)
   8f978:	dc800217 	ldw	r18,8(sp)
   8f97c:	dc400117 	ldw	r17,4(sp)
   8f980:	dc000017 	ldw	r16,0(sp)
   8f984:	dec00504 	addi	sp,sp,20
   8f988:	008fbf41 	jmpi	8fbf4 <_write_r>

0008f98c <__sread>:
   8f98c:	defffe04 	addi	sp,sp,-8
   8f990:	dc000015 	stw	r16,0(sp)
   8f994:	2821883a 	mov	r16,r5
   8f998:	2940038f 	ldh	r5,14(r5)
   8f99c:	dfc00115 	stw	ra,4(sp)
   8f9a0:	00900240 	call	90024 <_read_r>
   8f9a4:	1007883a 	mov	r3,r2
   8f9a8:	10000816 	blt	r2,zero,8f9cc <__sread+0x40>
   8f9ac:	80801417 	ldw	r2,80(r16)
   8f9b0:	10c5883a 	add	r2,r2,r3
   8f9b4:	80801415 	stw	r2,80(r16)
   8f9b8:	1805883a 	mov	r2,r3
   8f9bc:	dfc00117 	ldw	ra,4(sp)
   8f9c0:	dc000017 	ldw	r16,0(sp)
   8f9c4:	dec00204 	addi	sp,sp,8
   8f9c8:	f800283a 	ret
   8f9cc:	8080030b 	ldhu	r2,12(r16)
   8f9d0:	10bbffcc 	andi	r2,r2,61439
   8f9d4:	8080030d 	sth	r2,12(r16)
   8f9d8:	1805883a 	mov	r2,r3
   8f9dc:	dfc00117 	ldw	ra,4(sp)
   8f9e0:	dc000017 	ldw	r16,0(sp)
   8f9e4:	dec00204 	addi	sp,sp,8
   8f9e8:	f800283a 	ret

0008f9ec <strcmp>:
   8f9ec:	2144b03a 	or	r2,r4,r5
   8f9f0:	108000cc 	andi	r2,r2,3
   8f9f4:	10001d1e 	bne	r2,zero,8fa6c <strcmp+0x80>
   8f9f8:	200f883a 	mov	r7,r4
   8f9fc:	28800017 	ldw	r2,0(r5)
   8fa00:	21000017 	ldw	r4,0(r4)
   8fa04:	280d883a 	mov	r6,r5
   8fa08:	2080161e 	bne	r4,r2,8fa64 <strcmp+0x78>
   8fa0c:	023fbff4 	movhi	r8,65279
   8fa10:	423fbfc4 	addi	r8,r8,-257
   8fa14:	2207883a 	add	r3,r4,r8
   8fa18:	01602074 	movhi	r5,32897
   8fa1c:	29602004 	addi	r5,r5,-32640
   8fa20:	1946703a 	and	r3,r3,r5
   8fa24:	0104303a 	nor	r2,zero,r4
   8fa28:	10c4703a 	and	r2,r2,r3
   8fa2c:	10001c1e 	bne	r2,zero,8faa0 <strcmp+0xb4>
   8fa30:	4013883a 	mov	r9,r8
   8fa34:	2811883a 	mov	r8,r5
   8fa38:	00000106 	br	8fa40 <strcmp+0x54>
   8fa3c:	1800181e 	bne	r3,zero,8faa0 <strcmp+0xb4>
   8fa40:	39c00104 	addi	r7,r7,4
   8fa44:	39000017 	ldw	r4,0(r7)
   8fa48:	31800104 	addi	r6,r6,4
   8fa4c:	31400017 	ldw	r5,0(r6)
   8fa50:	2245883a 	add	r2,r4,r9
   8fa54:	1204703a 	and	r2,r2,r8
   8fa58:	0106303a 	nor	r3,zero,r4
   8fa5c:	1886703a 	and	r3,r3,r2
   8fa60:	217ff626 	beq	r4,r5,8fa3c <strcmp+0x50>
   8fa64:	3809883a 	mov	r4,r7
   8fa68:	300b883a 	mov	r5,r6
   8fa6c:	20c00007 	ldb	r3,0(r4)
   8fa70:	1800051e 	bne	r3,zero,8fa88 <strcmp+0x9c>
   8fa74:	00000606 	br	8fa90 <strcmp+0xa4>
   8fa78:	21000044 	addi	r4,r4,1
   8fa7c:	20c00007 	ldb	r3,0(r4)
   8fa80:	29400044 	addi	r5,r5,1
   8fa84:	18000226 	beq	r3,zero,8fa90 <strcmp+0xa4>
   8fa88:	28800007 	ldb	r2,0(r5)
   8fa8c:	18bffa26 	beq	r3,r2,8fa78 <strcmp+0x8c>
   8fa90:	20c00003 	ldbu	r3,0(r4)
   8fa94:	28800003 	ldbu	r2,0(r5)
   8fa98:	1885c83a 	sub	r2,r3,r2
   8fa9c:	f800283a 	ret
   8faa0:	0005883a 	mov	r2,zero
   8faa4:	f800283a 	ret

0008faa8 <__swbuf_r>:
   8faa8:	defffc04 	addi	sp,sp,-16
   8faac:	dc400215 	stw	r17,8(sp)
   8fab0:	dc000115 	stw	r16,4(sp)
   8fab4:	dfc00315 	stw	ra,12(sp)
   8fab8:	2023883a 	mov	r17,r4
   8fabc:	2821883a 	mov	r16,r5
   8fac0:	20000226 	beq	r4,zero,8facc <__swbuf_r+0x24>
   8fac4:	20800e17 	ldw	r2,56(r4)
   8fac8:	10002f26 	beq	r2,zero,8fb88 <__swbuf_r+0xe0>
   8facc:	3080030b 	ldhu	r2,12(r6)
   8fad0:	30c00617 	ldw	r3,24(r6)
   8fad4:	1080020c 	andi	r2,r2,8
   8fad8:	30c00215 	stw	r3,8(r6)
   8fadc:	10002226 	beq	r2,zero,8fb68 <__swbuf_r+0xc0>
   8fae0:	30c00417 	ldw	r3,16(r6)
   8fae4:	18002026 	beq	r3,zero,8fb68 <__swbuf_r+0xc0>
   8fae8:	31000017 	ldw	r4,0(r6)
   8faec:	30800517 	ldw	r2,20(r6)
   8faf0:	20c7c83a 	sub	r3,r4,r3
   8faf4:	18802f0e 	bge	r3,r2,8fbb4 <__swbuf_r+0x10c>
   8faf8:	19400044 	addi	r5,r3,1
   8fafc:	30800217 	ldw	r2,8(r6)
   8fb00:	84003fcc 	andi	r16,r16,255
   8fb04:	20c00044 	addi	r3,r4,1
   8fb08:	10bfffc4 	addi	r2,r2,-1
   8fb0c:	30800215 	stw	r2,8(r6)
   8fb10:	24000005 	stb	r16,0(r4)
   8fb14:	30800517 	ldw	r2,20(r6)
   8fb18:	30c00015 	stw	r3,0(r6)
   8fb1c:	11400c26 	beq	r2,r5,8fb50 <__swbuf_r+0xa8>
   8fb20:	3080030b 	ldhu	r2,12(r6)
   8fb24:	1080004c 	andi	r2,r2,1
   8fb28:	1005003a 	cmpeq	r2,r2,zero
   8fb2c:	10000626 	beq	r2,zero,8fb48 <__swbuf_r+0xa0>
   8fb30:	8005883a 	mov	r2,r16
   8fb34:	dfc00317 	ldw	ra,12(sp)
   8fb38:	dc400217 	ldw	r17,8(sp)
   8fb3c:	dc000117 	ldw	r16,4(sp)
   8fb40:	dec00404 	addi	sp,sp,16
   8fb44:	f800283a 	ret
   8fb48:	00800284 	movi	r2,10
   8fb4c:	80bff81e 	bne	r16,r2,8fb30 <__swbuf_r+0x88>
   8fb50:	8809883a 	mov	r4,r17
   8fb54:	300b883a 	mov	r5,r6
   8fb58:	008c3400 	call	8c340 <_fflush_r>
   8fb5c:	103ff426 	beq	r2,zero,8fb30 <__swbuf_r+0x88>
   8fb60:	043fffc4 	movi	r16,-1
   8fb64:	003ff206 	br	8fb30 <__swbuf_r+0x88>
   8fb68:	300b883a 	mov	r5,r6
   8fb6c:	8809883a 	mov	r4,r17
   8fb70:	d9800015 	stw	r6,0(sp)
   8fb74:	008aa0c0 	call	8aa0c <__swsetup_r>
   8fb78:	d9800017 	ldw	r6,0(sp)
   8fb7c:	1000061e 	bne	r2,zero,8fb98 <__swbuf_r+0xf0>
   8fb80:	30c00417 	ldw	r3,16(r6)
   8fb84:	003fd806 	br	8fae8 <__swbuf_r+0x40>
   8fb88:	d9800015 	stw	r6,0(sp)
   8fb8c:	008c5d80 	call	8c5d8 <__sinit>
   8fb90:	d9800017 	ldw	r6,0(sp)
   8fb94:	003fcd06 	br	8facc <__swbuf_r+0x24>
   8fb98:	3080030b 	ldhu	r2,12(r6)
   8fb9c:	00c00244 	movi	r3,9
   8fba0:	043fffc4 	movi	r16,-1
   8fba4:	10801014 	ori	r2,r2,64
   8fba8:	3080030d 	sth	r2,12(r6)
   8fbac:	88c00015 	stw	r3,0(r17)
   8fbb0:	003fdf06 	br	8fb30 <__swbuf_r+0x88>
   8fbb4:	300b883a 	mov	r5,r6
   8fbb8:	8809883a 	mov	r4,r17
   8fbbc:	d9800015 	stw	r6,0(sp)
   8fbc0:	008c3400 	call	8c340 <_fflush_r>
   8fbc4:	d9800017 	ldw	r6,0(sp)
   8fbc8:	103fe51e 	bne	r2,zero,8fb60 <__swbuf_r+0xb8>
   8fbcc:	31000017 	ldw	r4,0(r6)
   8fbd0:	01400044 	movi	r5,1
   8fbd4:	003fc906 	br	8fafc <__swbuf_r+0x54>

0008fbd8 <__swbuf>:
   8fbd8:	018002b4 	movhi	r6,10
   8fbdc:	3189d704 	addi	r6,r6,10076
   8fbe0:	2007883a 	mov	r3,r4
   8fbe4:	31000017 	ldw	r4,0(r6)
   8fbe8:	280d883a 	mov	r6,r5
   8fbec:	180b883a 	mov	r5,r3
   8fbf0:	008faa81 	jmpi	8faa8 <__swbuf_r>

0008fbf4 <_write_r>:
   8fbf4:	defffd04 	addi	sp,sp,-12
   8fbf8:	dc000015 	stw	r16,0(sp)
   8fbfc:	040002b4 	movhi	r16,10
   8fc00:	8410ed04 	addi	r16,r16,17332
   8fc04:	dc400115 	stw	r17,4(sp)
   8fc08:	80000015 	stw	zero,0(r16)
   8fc0c:	2023883a 	mov	r17,r4
   8fc10:	2809883a 	mov	r4,r5
   8fc14:	300b883a 	mov	r5,r6
   8fc18:	380d883a 	mov	r6,r7
   8fc1c:	dfc00215 	stw	ra,8(sp)
   8fc20:	00930b40 	call	930b4 <write>
   8fc24:	1007883a 	mov	r3,r2
   8fc28:	00bfffc4 	movi	r2,-1
   8fc2c:	18800626 	beq	r3,r2,8fc48 <_write_r+0x54>
   8fc30:	1805883a 	mov	r2,r3
   8fc34:	dfc00217 	ldw	ra,8(sp)
   8fc38:	dc400117 	ldw	r17,4(sp)
   8fc3c:	dc000017 	ldw	r16,0(sp)
   8fc40:	dec00304 	addi	sp,sp,12
   8fc44:	f800283a 	ret
   8fc48:	80800017 	ldw	r2,0(r16)
   8fc4c:	103ff826 	beq	r2,zero,8fc30 <_write_r+0x3c>
   8fc50:	88800015 	stw	r2,0(r17)
   8fc54:	1805883a 	mov	r2,r3
   8fc58:	dfc00217 	ldw	ra,8(sp)
   8fc5c:	dc400117 	ldw	r17,4(sp)
   8fc60:	dc000017 	ldw	r16,0(sp)
   8fc64:	dec00304 	addi	sp,sp,12
   8fc68:	f800283a 	ret

0008fc6c <_calloc_r>:
   8fc6c:	defffe04 	addi	sp,sp,-8
   8fc70:	dc400015 	stw	r17,0(sp)
   8fc74:	2023883a 	mov	r17,r4
   8fc78:	2809883a 	mov	r4,r5
   8fc7c:	300b883a 	mov	r5,r6
   8fc80:	dfc00115 	stw	ra,4(sp)
   8fc84:	00886b00 	call	886b0 <__mulsi3>
   8fc88:	100b883a 	mov	r5,r2
   8fc8c:	8809883a 	mov	r4,r17
   8fc90:	008d5180 	call	8d518 <_malloc_r>
   8fc94:	1023883a 	mov	r17,r2
   8fc98:	01c00904 	movi	r7,36
   8fc9c:	10000d26 	beq	r2,zero,8fcd4 <_calloc_r+0x68>
   8fca0:	10ffff17 	ldw	r3,-4(r2)
   8fca4:	1009883a 	mov	r4,r2
   8fca8:	00bfff04 	movi	r2,-4
   8fcac:	1886703a 	and	r3,r3,r2
   8fcb0:	1887883a 	add	r3,r3,r2
   8fcb4:	180d883a 	mov	r6,r3
   8fcb8:	000b883a 	mov	r5,zero
   8fcbc:	38c01736 	bltu	r7,r3,8fd1c <_calloc_r+0xb0>
   8fcc0:	008004c4 	movi	r2,19
   8fcc4:	10c00836 	bltu	r2,r3,8fce8 <_calloc_r+0x7c>
   8fcc8:	20000215 	stw	zero,8(r4)
   8fccc:	20000015 	stw	zero,0(r4)
   8fcd0:	20000115 	stw	zero,4(r4)
   8fcd4:	8805883a 	mov	r2,r17
   8fcd8:	dfc00117 	ldw	ra,4(sp)
   8fcdc:	dc400017 	ldw	r17,0(sp)
   8fce0:	dec00204 	addi	sp,sp,8
   8fce4:	f800283a 	ret
   8fce8:	008006c4 	movi	r2,27
   8fcec:	88000015 	stw	zero,0(r17)
   8fcf0:	88000115 	stw	zero,4(r17)
   8fcf4:	89000204 	addi	r4,r17,8
   8fcf8:	10fff32e 	bgeu	r2,r3,8fcc8 <_calloc_r+0x5c>
   8fcfc:	88000215 	stw	zero,8(r17)
   8fd00:	88000315 	stw	zero,12(r17)
   8fd04:	89000404 	addi	r4,r17,16
   8fd08:	19ffef1e 	bne	r3,r7,8fcc8 <_calloc_r+0x5c>
   8fd0c:	89000604 	addi	r4,r17,24
   8fd10:	88000415 	stw	zero,16(r17)
   8fd14:	88000515 	stw	zero,20(r17)
   8fd18:	003feb06 	br	8fcc8 <_calloc_r+0x5c>
   8fd1c:	008debc0 	call	8debc <memset>
   8fd20:	8805883a 	mov	r2,r17
   8fd24:	dfc00117 	ldw	ra,4(sp)
   8fd28:	dc400017 	ldw	r17,0(sp)
   8fd2c:	dec00204 	addi	sp,sp,8
   8fd30:	f800283a 	ret

0008fd34 <_close_r>:
   8fd34:	defffd04 	addi	sp,sp,-12
   8fd38:	dc000015 	stw	r16,0(sp)
   8fd3c:	040002b4 	movhi	r16,10
   8fd40:	8410ed04 	addi	r16,r16,17332
   8fd44:	dc400115 	stw	r17,4(sp)
   8fd48:	80000015 	stw	zero,0(r16)
   8fd4c:	2023883a 	mov	r17,r4
   8fd50:	2809883a 	mov	r4,r5
   8fd54:	dfc00215 	stw	ra,8(sp)
   8fd58:	009254c0 	call	9254c <close>
   8fd5c:	1007883a 	mov	r3,r2
   8fd60:	00bfffc4 	movi	r2,-1
   8fd64:	18800626 	beq	r3,r2,8fd80 <_close_r+0x4c>
   8fd68:	1805883a 	mov	r2,r3
   8fd6c:	dfc00217 	ldw	ra,8(sp)
   8fd70:	dc400117 	ldw	r17,4(sp)
   8fd74:	dc000017 	ldw	r16,0(sp)
   8fd78:	dec00304 	addi	sp,sp,12
   8fd7c:	f800283a 	ret
   8fd80:	80800017 	ldw	r2,0(r16)
   8fd84:	103ff826 	beq	r2,zero,8fd68 <_close_r+0x34>
   8fd88:	88800015 	stw	r2,0(r17)
   8fd8c:	1805883a 	mov	r2,r3
   8fd90:	dfc00217 	ldw	ra,8(sp)
   8fd94:	dc400117 	ldw	r17,4(sp)
   8fd98:	dc000017 	ldw	r16,0(sp)
   8fd9c:	dec00304 	addi	sp,sp,12
   8fda0:	f800283a 	ret

0008fda4 <_fclose_r>:
   8fda4:	defffc04 	addi	sp,sp,-16
   8fda8:	dc400115 	stw	r17,4(sp)
   8fdac:	dc000015 	stw	r16,0(sp)
   8fdb0:	dfc00315 	stw	ra,12(sp)
   8fdb4:	dc800215 	stw	r18,8(sp)
   8fdb8:	2821883a 	mov	r16,r5
   8fdbc:	2023883a 	mov	r17,r4
   8fdc0:	28002926 	beq	r5,zero,8fe68 <_fclose_r+0xc4>
   8fdc4:	008c5c80 	call	8c5c8 <__sfp_lock_acquire>
   8fdc8:	88000226 	beq	r17,zero,8fdd4 <_fclose_r+0x30>
   8fdcc:	88800e17 	ldw	r2,56(r17)
   8fdd0:	10002d26 	beq	r2,zero,8fe88 <_fclose_r+0xe4>
   8fdd4:	8080030f 	ldh	r2,12(r16)
   8fdd8:	10002226 	beq	r2,zero,8fe64 <_fclose_r+0xc0>
   8fddc:	8809883a 	mov	r4,r17
   8fde0:	800b883a 	mov	r5,r16
   8fde4:	008c3400 	call	8c340 <_fflush_r>
   8fde8:	1025883a 	mov	r18,r2
   8fdec:	80800b17 	ldw	r2,44(r16)
   8fdf0:	10000426 	beq	r2,zero,8fe04 <_fclose_r+0x60>
   8fdf4:	81400717 	ldw	r5,28(r16)
   8fdf8:	8809883a 	mov	r4,r17
   8fdfc:	103ee83a 	callr	r2
   8fe00:	10002a16 	blt	r2,zero,8feac <_fclose_r+0x108>
   8fe04:	8080030b 	ldhu	r2,12(r16)
   8fe08:	1080200c 	andi	r2,r2,128
   8fe0c:	1000231e 	bne	r2,zero,8fe9c <_fclose_r+0xf8>
   8fe10:	81400c17 	ldw	r5,48(r16)
   8fe14:	28000526 	beq	r5,zero,8fe2c <_fclose_r+0x88>
   8fe18:	80801004 	addi	r2,r16,64
   8fe1c:	28800226 	beq	r5,r2,8fe28 <_fclose_r+0x84>
   8fe20:	8809883a 	mov	r4,r17
   8fe24:	008c9900 	call	8c990 <_free_r>
   8fe28:	80000c15 	stw	zero,48(r16)
   8fe2c:	81401117 	ldw	r5,68(r16)
   8fe30:	28000326 	beq	r5,zero,8fe40 <_fclose_r+0x9c>
   8fe34:	8809883a 	mov	r4,r17
   8fe38:	008c9900 	call	8c990 <_free_r>
   8fe3c:	80001115 	stw	zero,68(r16)
   8fe40:	8000030d 	sth	zero,12(r16)
   8fe44:	008c5cc0 	call	8c5cc <__sfp_lock_release>
   8fe48:	9005883a 	mov	r2,r18
   8fe4c:	dfc00317 	ldw	ra,12(sp)
   8fe50:	dc800217 	ldw	r18,8(sp)
   8fe54:	dc400117 	ldw	r17,4(sp)
   8fe58:	dc000017 	ldw	r16,0(sp)
   8fe5c:	dec00404 	addi	sp,sp,16
   8fe60:	f800283a 	ret
   8fe64:	008c5cc0 	call	8c5cc <__sfp_lock_release>
   8fe68:	0025883a 	mov	r18,zero
   8fe6c:	9005883a 	mov	r2,r18
   8fe70:	dfc00317 	ldw	ra,12(sp)
   8fe74:	dc800217 	ldw	r18,8(sp)
   8fe78:	dc400117 	ldw	r17,4(sp)
   8fe7c:	dc000017 	ldw	r16,0(sp)
   8fe80:	dec00404 	addi	sp,sp,16
   8fe84:	f800283a 	ret
   8fe88:	8809883a 	mov	r4,r17
   8fe8c:	008c5d80 	call	8c5d8 <__sinit>
   8fe90:	8080030f 	ldh	r2,12(r16)
   8fe94:	103fd11e 	bne	r2,zero,8fddc <_fclose_r+0x38>
   8fe98:	003ff206 	br	8fe64 <_fclose_r+0xc0>
   8fe9c:	81400417 	ldw	r5,16(r16)
   8fea0:	8809883a 	mov	r4,r17
   8fea4:	008c9900 	call	8c990 <_free_r>
   8fea8:	003fd906 	br	8fe10 <_fclose_r+0x6c>
   8feac:	04bfffc4 	movi	r18,-1
   8feb0:	003fd406 	br	8fe04 <_fclose_r+0x60>

0008feb4 <fclose>:
   8feb4:	008002b4 	movhi	r2,10
   8feb8:	1089d704 	addi	r2,r2,10076
   8febc:	200b883a 	mov	r5,r4
   8fec0:	11000017 	ldw	r4,0(r2)
   8fec4:	008fda41 	jmpi	8fda4 <_fclose_r>

0008fec8 <_fstat_r>:
   8fec8:	defffd04 	addi	sp,sp,-12
   8fecc:	dc000015 	stw	r16,0(sp)
   8fed0:	040002b4 	movhi	r16,10
   8fed4:	8410ed04 	addi	r16,r16,17332
   8fed8:	dc400115 	stw	r17,4(sp)
   8fedc:	80000015 	stw	zero,0(r16)
   8fee0:	2023883a 	mov	r17,r4
   8fee4:	2809883a 	mov	r4,r5
   8fee8:	300b883a 	mov	r5,r6
   8feec:	dfc00215 	stw	ra,8(sp)
   8fef0:	00926d80 	call	926d8 <fstat>
   8fef4:	1007883a 	mov	r3,r2
   8fef8:	00bfffc4 	movi	r2,-1
   8fefc:	18800626 	beq	r3,r2,8ff18 <_fstat_r+0x50>
   8ff00:	1805883a 	mov	r2,r3
   8ff04:	dfc00217 	ldw	ra,8(sp)
   8ff08:	dc400117 	ldw	r17,4(sp)
   8ff0c:	dc000017 	ldw	r16,0(sp)
   8ff10:	dec00304 	addi	sp,sp,12
   8ff14:	f800283a 	ret
   8ff18:	80800017 	ldw	r2,0(r16)
   8ff1c:	103ff826 	beq	r2,zero,8ff00 <_fstat_r+0x38>
   8ff20:	88800015 	stw	r2,0(r17)
   8ff24:	1805883a 	mov	r2,r3
   8ff28:	dfc00217 	ldw	ra,8(sp)
   8ff2c:	dc400117 	ldw	r17,4(sp)
   8ff30:	dc000017 	ldw	r16,0(sp)
   8ff34:	dec00304 	addi	sp,sp,12
   8ff38:	f800283a 	ret

0008ff3c <_isatty_r>:
   8ff3c:	defffd04 	addi	sp,sp,-12
   8ff40:	dc000015 	stw	r16,0(sp)
   8ff44:	040002b4 	movhi	r16,10
   8ff48:	8410ed04 	addi	r16,r16,17332
   8ff4c:	dc400115 	stw	r17,4(sp)
   8ff50:	80000015 	stw	zero,0(r16)
   8ff54:	2023883a 	mov	r17,r4
   8ff58:	2809883a 	mov	r4,r5
   8ff5c:	dfc00215 	stw	ra,8(sp)
   8ff60:	00929d00 	call	929d0 <isatty>
   8ff64:	1007883a 	mov	r3,r2
   8ff68:	00bfffc4 	movi	r2,-1
   8ff6c:	18800626 	beq	r3,r2,8ff88 <_isatty_r+0x4c>
   8ff70:	1805883a 	mov	r2,r3
   8ff74:	dfc00217 	ldw	ra,8(sp)
   8ff78:	dc400117 	ldw	r17,4(sp)
   8ff7c:	dc000017 	ldw	r16,0(sp)
   8ff80:	dec00304 	addi	sp,sp,12
   8ff84:	f800283a 	ret
   8ff88:	80800017 	ldw	r2,0(r16)
   8ff8c:	103ff826 	beq	r2,zero,8ff70 <_isatty_r+0x34>
   8ff90:	88800015 	stw	r2,0(r17)
   8ff94:	1805883a 	mov	r2,r3
   8ff98:	dfc00217 	ldw	ra,8(sp)
   8ff9c:	dc400117 	ldw	r17,4(sp)
   8ffa0:	dc000017 	ldw	r16,0(sp)
   8ffa4:	dec00304 	addi	sp,sp,12
   8ffa8:	f800283a 	ret

0008ffac <_lseek_r>:
   8ffac:	defffd04 	addi	sp,sp,-12
   8ffb0:	dc000015 	stw	r16,0(sp)
   8ffb4:	040002b4 	movhi	r16,10
   8ffb8:	8410ed04 	addi	r16,r16,17332
   8ffbc:	dc400115 	stw	r17,4(sp)
   8ffc0:	80000015 	stw	zero,0(r16)
   8ffc4:	2023883a 	mov	r17,r4
   8ffc8:	2809883a 	mov	r4,r5
   8ffcc:	300b883a 	mov	r5,r6
   8ffd0:	380d883a 	mov	r6,r7
   8ffd4:	dfc00215 	stw	ra,8(sp)
   8ffd8:	0092be00 	call	92be0 <lseek>
   8ffdc:	1007883a 	mov	r3,r2
   8ffe0:	00bfffc4 	movi	r2,-1
   8ffe4:	18800626 	beq	r3,r2,90000 <_lseek_r+0x54>
   8ffe8:	1805883a 	mov	r2,r3
   8ffec:	dfc00217 	ldw	ra,8(sp)
   8fff0:	dc400117 	ldw	r17,4(sp)
   8fff4:	dc000017 	ldw	r16,0(sp)
   8fff8:	dec00304 	addi	sp,sp,12
   8fffc:	f800283a 	ret
   90000:	80800017 	ldw	r2,0(r16)
   90004:	103ff826 	beq	r2,zero,8ffe8 <_lseek_r+0x3c>
   90008:	88800015 	stw	r2,0(r17)
   9000c:	1805883a 	mov	r2,r3
   90010:	dfc00217 	ldw	ra,8(sp)
   90014:	dc400117 	ldw	r17,4(sp)
   90018:	dc000017 	ldw	r16,0(sp)
   9001c:	dec00304 	addi	sp,sp,12
   90020:	f800283a 	ret

00090024 <_read_r>:
   90024:	defffd04 	addi	sp,sp,-12
   90028:	dc000015 	stw	r16,0(sp)
   9002c:	040002b4 	movhi	r16,10
   90030:	8410ed04 	addi	r16,r16,17332
   90034:	dc400115 	stw	r17,4(sp)
   90038:	80000015 	stw	zero,0(r16)
   9003c:	2023883a 	mov	r17,r4
   90040:	2809883a 	mov	r4,r5
   90044:	300b883a 	mov	r5,r6
   90048:	380d883a 	mov	r6,r7
   9004c:	dfc00215 	stw	ra,8(sp)
   90050:	0092dfc0 	call	92dfc <read>
   90054:	1007883a 	mov	r3,r2
   90058:	00bfffc4 	movi	r2,-1
   9005c:	18800626 	beq	r3,r2,90078 <_read_r+0x54>
   90060:	1805883a 	mov	r2,r3
   90064:	dfc00217 	ldw	ra,8(sp)
   90068:	dc400117 	ldw	r17,4(sp)
   9006c:	dc000017 	ldw	r16,0(sp)
   90070:	dec00304 	addi	sp,sp,12
   90074:	f800283a 	ret
   90078:	80800017 	ldw	r2,0(r16)
   9007c:	103ff826 	beq	r2,zero,90060 <_read_r+0x3c>
   90080:	88800015 	stw	r2,0(r17)
   90084:	1805883a 	mov	r2,r3
   90088:	dfc00217 	ldw	ra,8(sp)
   9008c:	dc400117 	ldw	r17,4(sp)
   90090:	dc000017 	ldw	r16,0(sp)
   90094:	dec00304 	addi	sp,sp,12
   90098:	f800283a 	ret

0009009c <__udivdi3>:
   9009c:	defff104 	addi	sp,sp,-60
   900a0:	0015883a 	mov	r10,zero
   900a4:	2005883a 	mov	r2,r4
   900a8:	3011883a 	mov	r8,r6
   900ac:	df000d15 	stw	fp,52(sp)
   900b0:	dd400a15 	stw	r21,40(sp)
   900b4:	dcc00815 	stw	r19,32(sp)
   900b8:	dfc00e15 	stw	ra,56(sp)
   900bc:	ddc00c15 	stw	r23,48(sp)
   900c0:	dd800b15 	stw	r22,44(sp)
   900c4:	dd000915 	stw	r20,36(sp)
   900c8:	dc800715 	stw	r18,28(sp)
   900cc:	dc400615 	stw	r17,24(sp)
   900d0:	dc000515 	stw	r16,20(sp)
   900d4:	da800315 	stw	r10,12(sp)
   900d8:	4027883a 	mov	r19,r8
   900dc:	1039883a 	mov	fp,r2
   900e0:	282b883a 	mov	r21,r5
   900e4:	da800415 	stw	r10,16(sp)
   900e8:	3800401e 	bne	r7,zero,901ec <__udivdi3+0x150>
   900ec:	2a006536 	bltu	r5,r8,90284 <__udivdi3+0x1e8>
   900f0:	4000b526 	beq	r8,zero,903c8 <__udivdi3+0x32c>
   900f4:	00bfffd4 	movui	r2,65535
   900f8:	14c0ad36 	bltu	r2,r19,903b0 <__udivdi3+0x314>
   900fc:	00803fc4 	movi	r2,255
   90100:	14c15e36 	bltu	r2,r19,9067c <__udivdi3+0x5e0>
   90104:	000b883a 	mov	r5,zero
   90108:	0005883a 	mov	r2,zero
   9010c:	9884d83a 	srl	r2,r19,r2
   90110:	010002b4 	movhi	r4,10
   90114:	2102a704 	addi	r4,r4,2716
   90118:	01800804 	movi	r6,32
   9011c:	1105883a 	add	r2,r2,r4
   90120:	10c00003 	ldbu	r3,0(r2)
   90124:	28c7883a 	add	r3,r5,r3
   90128:	30e9c83a 	sub	r20,r6,r3
   9012c:	a0010a1e 	bne	r20,zero,90558 <__udivdi3+0x4bc>
   90130:	982ed43a 	srli	r23,r19,16
   90134:	acebc83a 	sub	r21,r21,r19
   90138:	9dbfffcc 	andi	r22,r19,65535
   9013c:	05000044 	movi	r20,1
   90140:	a809883a 	mov	r4,r21
   90144:	b80b883a 	mov	r5,r23
   90148:	00886a00 	call	886a0 <__udivsi3>
   9014c:	100b883a 	mov	r5,r2
   90150:	b009883a 	mov	r4,r22
   90154:	1021883a 	mov	r16,r2
   90158:	00886b00 	call	886b0 <__mulsi3>
   9015c:	a809883a 	mov	r4,r21
   90160:	b80b883a 	mov	r5,r23
   90164:	1023883a 	mov	r17,r2
   90168:	00886a80 	call	886a8 <__umodsi3>
   9016c:	1004943a 	slli	r2,r2,16
   90170:	e006d43a 	srli	r3,fp,16
   90174:	10c4b03a 	or	r2,r2,r3
   90178:	1440042e 	bgeu	r2,r17,9018c <__udivdi3+0xf0>
   9017c:	14c5883a 	add	r2,r2,r19
   90180:	843fffc4 	addi	r16,r16,-1
   90184:	14c00136 	bltu	r2,r19,9018c <__udivdi3+0xf0>
   90188:	14415c36 	bltu	r2,r17,906fc <__udivdi3+0x660>
   9018c:	1463c83a 	sub	r17,r2,r17
   90190:	8809883a 	mov	r4,r17
   90194:	b80b883a 	mov	r5,r23
   90198:	00886a00 	call	886a0 <__udivsi3>
   9019c:	100b883a 	mov	r5,r2
   901a0:	b009883a 	mov	r4,r22
   901a4:	102b883a 	mov	r21,r2
   901a8:	00886b00 	call	886b0 <__mulsi3>
   901ac:	8809883a 	mov	r4,r17
   901b0:	b80b883a 	mov	r5,r23
   901b4:	1025883a 	mov	r18,r2
   901b8:	00886a80 	call	886a8 <__umodsi3>
   901bc:	1004943a 	slli	r2,r2,16
   901c0:	e0ffffcc 	andi	r3,fp,65535
   901c4:	10c4b03a 	or	r2,r2,r3
   901c8:	1480042e 	bgeu	r2,r18,901dc <__udivdi3+0x140>
   901cc:	9885883a 	add	r2,r19,r2
   901d0:	ad7fffc4 	addi	r21,r21,-1
   901d4:	14c00136 	bltu	r2,r19,901dc <__udivdi3+0x140>
   901d8:	14813c36 	bltu	r2,r18,906cc <__udivdi3+0x630>
   901dc:	8004943a 	slli	r2,r16,16
   901e0:	a009883a 	mov	r4,r20
   901e4:	a884b03a 	or	r2,r21,r2
   901e8:	00001506 	br	90240 <__udivdi3+0x1a4>
   901ec:	380d883a 	mov	r6,r7
   901f0:	29c06c36 	bltu	r5,r7,903a4 <__udivdi3+0x308>
   901f4:	00bfffd4 	movui	r2,65535
   901f8:	11c06436 	bltu	r2,r7,9038c <__udivdi3+0x2f0>
   901fc:	00803fc4 	movi	r2,255
   90200:	11c11836 	bltu	r2,r7,90664 <__udivdi3+0x5c8>
   90204:	000b883a 	mov	r5,zero
   90208:	0005883a 	mov	r2,zero
   9020c:	3084d83a 	srl	r2,r6,r2
   90210:	010002b4 	movhi	r4,10
   90214:	2102a704 	addi	r4,r4,2716
   90218:	01c00804 	movi	r7,32
   9021c:	1105883a 	add	r2,r2,r4
   90220:	10c00003 	ldbu	r3,0(r2)
   90224:	28c7883a 	add	r3,r5,r3
   90228:	38edc83a 	sub	r22,r7,r3
   9022c:	b000731e 	bne	r22,zero,903fc <__udivdi3+0x360>
   90230:	35400136 	bltu	r6,r21,90238 <__udivdi3+0x19c>
   90234:	e4c05b36 	bltu	fp,r19,903a4 <__udivdi3+0x308>
   90238:	00800044 	movi	r2,1
   9023c:	0009883a 	mov	r4,zero
   90240:	d8800315 	stw	r2,12(sp)
   90244:	d9400317 	ldw	r5,12(sp)
   90248:	d9000415 	stw	r4,16(sp)
   9024c:	2007883a 	mov	r3,r4
   90250:	2805883a 	mov	r2,r5
   90254:	dfc00e17 	ldw	ra,56(sp)
   90258:	df000d17 	ldw	fp,52(sp)
   9025c:	ddc00c17 	ldw	r23,48(sp)
   90260:	dd800b17 	ldw	r22,44(sp)
   90264:	dd400a17 	ldw	r21,40(sp)
   90268:	dd000917 	ldw	r20,36(sp)
   9026c:	dcc00817 	ldw	r19,32(sp)
   90270:	dc800717 	ldw	r18,28(sp)
   90274:	dc400617 	ldw	r17,24(sp)
   90278:	dc000517 	ldw	r16,20(sp)
   9027c:	dec00f04 	addi	sp,sp,60
   90280:	f800283a 	ret
   90284:	00bfffd4 	movui	r2,65535
   90288:	12005636 	bltu	r2,r8,903e4 <__udivdi3+0x348>
   9028c:	00803fc4 	movi	r2,255
   90290:	12010036 	bltu	r2,r8,90694 <__udivdi3+0x5f8>
   90294:	000b883a 	mov	r5,zero
   90298:	0005883a 	mov	r2,zero
   9029c:	9884d83a 	srl	r2,r19,r2
   902a0:	010002b4 	movhi	r4,10
   902a4:	2102a704 	addi	r4,r4,2716
   902a8:	01800804 	movi	r6,32
   902ac:	1105883a 	add	r2,r2,r4
   902b0:	10c00003 	ldbu	r3,0(r2)
   902b4:	28c7883a 	add	r3,r5,r3
   902b8:	30cbc83a 	sub	r5,r6,r3
   902bc:	28000626 	beq	r5,zero,902d8 <__udivdi3+0x23c>
   902c0:	3145c83a 	sub	r2,r6,r5
   902c4:	e084d83a 	srl	r2,fp,r2
   902c8:	a946983a 	sll	r3,r21,r5
   902cc:	e178983a 	sll	fp,fp,r5
   902d0:	9966983a 	sll	r19,r19,r5
   902d4:	18aab03a 	or	r21,r3,r2
   902d8:	982ed43a 	srli	r23,r19,16
   902dc:	a809883a 	mov	r4,r21
   902e0:	9cbfffcc 	andi	r18,r19,65535
   902e4:	b80b883a 	mov	r5,r23
   902e8:	00886a00 	call	886a0 <__udivsi3>
   902ec:	100b883a 	mov	r5,r2
   902f0:	9009883a 	mov	r4,r18
   902f4:	1021883a 	mov	r16,r2
   902f8:	00886b00 	call	886b0 <__mulsi3>
   902fc:	a809883a 	mov	r4,r21
   90300:	b80b883a 	mov	r5,r23
   90304:	1023883a 	mov	r17,r2
   90308:	00886a80 	call	886a8 <__umodsi3>
   9030c:	1004943a 	slli	r2,r2,16
   90310:	e006d43a 	srli	r3,fp,16
   90314:	10c4b03a 	or	r2,r2,r3
   90318:	1440042e 	bgeu	r2,r17,9032c <__udivdi3+0x290>
   9031c:	14c5883a 	add	r2,r2,r19
   90320:	843fffc4 	addi	r16,r16,-1
   90324:	14c00136 	bltu	r2,r19,9032c <__udivdi3+0x290>
   90328:	1440ea36 	bltu	r2,r17,906d4 <__udivdi3+0x638>
   9032c:	1463c83a 	sub	r17,r2,r17
   90330:	8809883a 	mov	r4,r17
   90334:	b80b883a 	mov	r5,r23
   90338:	00886a00 	call	886a0 <__udivsi3>
   9033c:	100b883a 	mov	r5,r2
   90340:	9009883a 	mov	r4,r18
   90344:	102b883a 	mov	r21,r2
   90348:	00886b00 	call	886b0 <__mulsi3>
   9034c:	8809883a 	mov	r4,r17
   90350:	b80b883a 	mov	r5,r23
   90354:	1025883a 	mov	r18,r2
   90358:	00886a80 	call	886a8 <__umodsi3>
   9035c:	1004943a 	slli	r2,r2,16
   90360:	e0ffffcc 	andi	r3,fp,65535
   90364:	10c4b03a 	or	r2,r2,r3
   90368:	1480042e 	bgeu	r2,r18,9037c <__udivdi3+0x2e0>
   9036c:	9885883a 	add	r2,r19,r2
   90370:	ad7fffc4 	addi	r21,r21,-1
   90374:	14c00136 	bltu	r2,r19,9037c <__udivdi3+0x2e0>
   90378:	1480d936 	bltu	r2,r18,906e0 <__udivdi3+0x644>
   9037c:	8004943a 	slli	r2,r16,16
   90380:	0009883a 	mov	r4,zero
   90384:	a884b03a 	or	r2,r21,r2
   90388:	003fad06 	br	90240 <__udivdi3+0x1a4>
   9038c:	00804034 	movhi	r2,256
   90390:	10bfffc4 	addi	r2,r2,-1
   90394:	11c0b636 	bltu	r2,r7,90670 <__udivdi3+0x5d4>
   90398:	01400404 	movi	r5,16
   9039c:	2805883a 	mov	r2,r5
   903a0:	003f9a06 	br	9020c <__udivdi3+0x170>
   903a4:	0005883a 	mov	r2,zero
   903a8:	0009883a 	mov	r4,zero
   903ac:	003fa406 	br	90240 <__udivdi3+0x1a4>
   903b0:	00804034 	movhi	r2,256
   903b4:	10bfffc4 	addi	r2,r2,-1
   903b8:	14c0b336 	bltu	r2,r19,90688 <__udivdi3+0x5ec>
   903bc:	01400404 	movi	r5,16
   903c0:	2805883a 	mov	r2,r5
   903c4:	003f5106 	br	9010c <__udivdi3+0x70>
   903c8:	01000044 	movi	r4,1
   903cc:	000b883a 	mov	r5,zero
   903d0:	00886a00 	call	886a0 <__udivsi3>
   903d4:	1027883a 	mov	r19,r2
   903d8:	00bfffd4 	movui	r2,65535
   903dc:	14fff436 	bltu	r2,r19,903b0 <__udivdi3+0x314>
   903e0:	003f4606 	br	900fc <__udivdi3+0x60>
   903e4:	00804034 	movhi	r2,256
   903e8:	10bfffc4 	addi	r2,r2,-1
   903ec:	1200ac36 	bltu	r2,r8,906a0 <__udivdi3+0x604>
   903f0:	01400404 	movi	r5,16
   903f4:	2805883a 	mov	r2,r5
   903f8:	003fa806 	br	9029c <__udivdi3+0x200>
   903fc:	3d85c83a 	sub	r2,r7,r22
   90400:	3588983a 	sll	r4,r6,r22
   90404:	9886d83a 	srl	r3,r19,r2
   90408:	a8a2d83a 	srl	r17,r21,r2
   9040c:	e084d83a 	srl	r2,fp,r2
   90410:	20eeb03a 	or	r23,r4,r3
   90414:	b824d43a 	srli	r18,r23,16
   90418:	ad86983a 	sll	r3,r21,r22
   9041c:	8809883a 	mov	r4,r17
   90420:	900b883a 	mov	r5,r18
   90424:	1886b03a 	or	r3,r3,r2
   90428:	d8c00115 	stw	r3,4(sp)
   9042c:	bc3fffcc 	andi	r16,r23,65535
   90430:	00886a00 	call	886a0 <__udivsi3>
   90434:	100b883a 	mov	r5,r2
   90438:	8009883a 	mov	r4,r16
   9043c:	1029883a 	mov	r20,r2
   90440:	00886b00 	call	886b0 <__mulsi3>
   90444:	900b883a 	mov	r5,r18
   90448:	8809883a 	mov	r4,r17
   9044c:	102b883a 	mov	r21,r2
   90450:	00886a80 	call	886a8 <__umodsi3>
   90454:	d9400117 	ldw	r5,4(sp)
   90458:	1004943a 	slli	r2,r2,16
   9045c:	9da6983a 	sll	r19,r19,r22
   90460:	2806d43a 	srli	r3,r5,16
   90464:	10c4b03a 	or	r2,r2,r3
   90468:	1540032e 	bgeu	r2,r21,90478 <__udivdi3+0x3dc>
   9046c:	15c5883a 	add	r2,r2,r23
   90470:	a53fffc4 	addi	r20,r20,-1
   90474:	15c0912e 	bgeu	r2,r23,906bc <__udivdi3+0x620>
   90478:	1563c83a 	sub	r17,r2,r21
   9047c:	8809883a 	mov	r4,r17
   90480:	900b883a 	mov	r5,r18
   90484:	00886a00 	call	886a0 <__udivsi3>
   90488:	100b883a 	mov	r5,r2
   9048c:	8009883a 	mov	r4,r16
   90490:	102b883a 	mov	r21,r2
   90494:	00886b00 	call	886b0 <__mulsi3>
   90498:	8809883a 	mov	r4,r17
   9049c:	900b883a 	mov	r5,r18
   904a0:	1021883a 	mov	r16,r2
   904a4:	00886a80 	call	886a8 <__umodsi3>
   904a8:	da800117 	ldw	r10,4(sp)
   904ac:	1004943a 	slli	r2,r2,16
   904b0:	50ffffcc 	andi	r3,r10,65535
   904b4:	10c6b03a 	or	r3,r2,r3
   904b8:	1c00032e 	bgeu	r3,r16,904c8 <__udivdi3+0x42c>
   904bc:	1dc7883a 	add	r3,r3,r23
   904c0:	ad7fffc4 	addi	r21,r21,-1
   904c4:	1dc0792e 	bgeu	r3,r23,906ac <__udivdi3+0x610>
   904c8:	a004943a 	slli	r2,r20,16
   904cc:	982ed43a 	srli	r23,r19,16
   904d0:	9cffffcc 	andi	r19,r19,65535
   904d4:	a8a4b03a 	or	r18,r21,r2
   904d8:	947fffcc 	andi	r17,r18,65535
   904dc:	902ad43a 	srli	r21,r18,16
   904e0:	8809883a 	mov	r4,r17
   904e4:	980b883a 	mov	r5,r19
   904e8:	1c21c83a 	sub	r16,r3,r16
   904ec:	00886b00 	call	886b0 <__mulsi3>
   904f0:	8809883a 	mov	r4,r17
   904f4:	b80b883a 	mov	r5,r23
   904f8:	1029883a 	mov	r20,r2
   904fc:	00886b00 	call	886b0 <__mulsi3>
   90500:	980b883a 	mov	r5,r19
   90504:	a809883a 	mov	r4,r21
   90508:	1023883a 	mov	r17,r2
   9050c:	00886b00 	call	886b0 <__mulsi3>
   90510:	a809883a 	mov	r4,r21
   90514:	b80b883a 	mov	r5,r23
   90518:	1027883a 	mov	r19,r2
   9051c:	00886b00 	call	886b0 <__mulsi3>
   90520:	1009883a 	mov	r4,r2
   90524:	a004d43a 	srli	r2,r20,16
   90528:	8ce3883a 	add	r17,r17,r19
   9052c:	1447883a 	add	r3,r2,r17
   90530:	1cc0022e 	bgeu	r3,r19,9053c <__udivdi3+0x4a0>
   90534:	00800074 	movhi	r2,1
   90538:	2089883a 	add	r4,r4,r2
   9053c:	1804d43a 	srli	r2,r3,16
   90540:	2085883a 	add	r2,r4,r2
   90544:	80804436 	bltu	r16,r2,90658 <__udivdi3+0x5bc>
   90548:	80803e26 	beq	r16,r2,90644 <__udivdi3+0x5a8>
   9054c:	9005883a 	mov	r2,r18
   90550:	0009883a 	mov	r4,zero
   90554:	003f3a06 	br	90240 <__udivdi3+0x1a4>
   90558:	9d26983a 	sll	r19,r19,r20
   9055c:	3505c83a 	sub	r2,r6,r20
   90560:	a8a2d83a 	srl	r17,r21,r2
   90564:	982ed43a 	srli	r23,r19,16
   90568:	e084d83a 	srl	r2,fp,r2
   9056c:	ad06983a 	sll	r3,r21,r20
   90570:	8809883a 	mov	r4,r17
   90574:	b80b883a 	mov	r5,r23
   90578:	1886b03a 	or	r3,r3,r2
   9057c:	d8c00015 	stw	r3,0(sp)
   90580:	9dbfffcc 	andi	r22,r19,65535
   90584:	00886a00 	call	886a0 <__udivsi3>
   90588:	100b883a 	mov	r5,r2
   9058c:	b009883a 	mov	r4,r22
   90590:	d8800215 	stw	r2,8(sp)
   90594:	00886b00 	call	886b0 <__mulsi3>
   90598:	8809883a 	mov	r4,r17
   9059c:	b80b883a 	mov	r5,r23
   905a0:	102b883a 	mov	r21,r2
   905a4:	00886a80 	call	886a8 <__umodsi3>
   905a8:	d9000017 	ldw	r4,0(sp)
   905ac:	1004943a 	slli	r2,r2,16
   905b0:	2006d43a 	srli	r3,r4,16
   905b4:	10c4b03a 	or	r2,r2,r3
   905b8:	1540052e 	bgeu	r2,r21,905d0 <__udivdi3+0x534>
   905bc:	d9400217 	ldw	r5,8(sp)
   905c0:	14c5883a 	add	r2,r2,r19
   905c4:	297fffc4 	addi	r5,r5,-1
   905c8:	d9400215 	stw	r5,8(sp)
   905cc:	14c0462e 	bgeu	r2,r19,906e8 <__udivdi3+0x64c>
   905d0:	1563c83a 	sub	r17,r2,r21
   905d4:	8809883a 	mov	r4,r17
   905d8:	b80b883a 	mov	r5,r23
   905dc:	00886a00 	call	886a0 <__udivsi3>
   905e0:	100b883a 	mov	r5,r2
   905e4:	b009883a 	mov	r4,r22
   905e8:	1025883a 	mov	r18,r2
   905ec:	00886b00 	call	886b0 <__mulsi3>
   905f0:	8809883a 	mov	r4,r17
   905f4:	b80b883a 	mov	r5,r23
   905f8:	1021883a 	mov	r16,r2
   905fc:	00886a80 	call	886a8 <__umodsi3>
   90600:	da800017 	ldw	r10,0(sp)
   90604:	1004943a 	slli	r2,r2,16
   90608:	50ffffcc 	andi	r3,r10,65535
   9060c:	10c6b03a 	or	r3,r2,r3
   90610:	1c00062e 	bgeu	r3,r16,9062c <__udivdi3+0x590>
   90614:	1cc7883a 	add	r3,r3,r19
   90618:	94bfffc4 	addi	r18,r18,-1
   9061c:	1cc00336 	bltu	r3,r19,9062c <__udivdi3+0x590>
   90620:	1c00022e 	bgeu	r3,r16,9062c <__udivdi3+0x590>
   90624:	94bfffc4 	addi	r18,r18,-1
   90628:	1cc7883a 	add	r3,r3,r19
   9062c:	d9000217 	ldw	r4,8(sp)
   90630:	e538983a 	sll	fp,fp,r20
   90634:	1c2bc83a 	sub	r21,r3,r16
   90638:	2004943a 	slli	r2,r4,16
   9063c:	90a8b03a 	or	r20,r18,r2
   90640:	003ebf06 	br	90140 <__udivdi3+0xa4>
   90644:	1804943a 	slli	r2,r3,16
   90648:	e588983a 	sll	r4,fp,r22
   9064c:	a0ffffcc 	andi	r3,r20,65535
   90650:	10c5883a 	add	r2,r2,r3
   90654:	20bfbd2e 	bgeu	r4,r2,9054c <__udivdi3+0x4b0>
   90658:	90bfffc4 	addi	r2,r18,-1
   9065c:	0009883a 	mov	r4,zero
   90660:	003ef706 	br	90240 <__udivdi3+0x1a4>
   90664:	01400204 	movi	r5,8
   90668:	2805883a 	mov	r2,r5
   9066c:	003ee706 	br	9020c <__udivdi3+0x170>
   90670:	01400604 	movi	r5,24
   90674:	2805883a 	mov	r2,r5
   90678:	003ee406 	br	9020c <__udivdi3+0x170>
   9067c:	01400204 	movi	r5,8
   90680:	2805883a 	mov	r2,r5
   90684:	003ea106 	br	9010c <__udivdi3+0x70>
   90688:	01400604 	movi	r5,24
   9068c:	2805883a 	mov	r2,r5
   90690:	003e9e06 	br	9010c <__udivdi3+0x70>
   90694:	01400204 	movi	r5,8
   90698:	2805883a 	mov	r2,r5
   9069c:	003eff06 	br	9029c <__udivdi3+0x200>
   906a0:	01400604 	movi	r5,24
   906a4:	2805883a 	mov	r2,r5
   906a8:	003efc06 	br	9029c <__udivdi3+0x200>
   906ac:	1c3f862e 	bgeu	r3,r16,904c8 <__udivdi3+0x42c>
   906b0:	1dc7883a 	add	r3,r3,r23
   906b4:	ad7fffc4 	addi	r21,r21,-1
   906b8:	003f8306 	br	904c8 <__udivdi3+0x42c>
   906bc:	157f6e2e 	bgeu	r2,r21,90478 <__udivdi3+0x3dc>
   906c0:	a53fffc4 	addi	r20,r20,-1
   906c4:	15c5883a 	add	r2,r2,r23
   906c8:	003f6b06 	br	90478 <__udivdi3+0x3dc>
   906cc:	ad7fffc4 	addi	r21,r21,-1
   906d0:	003ec206 	br	901dc <__udivdi3+0x140>
   906d4:	843fffc4 	addi	r16,r16,-1
   906d8:	14c5883a 	add	r2,r2,r19
   906dc:	003f1306 	br	9032c <__udivdi3+0x290>
   906e0:	ad7fffc4 	addi	r21,r21,-1
   906e4:	003f2506 	br	9037c <__udivdi3+0x2e0>
   906e8:	157fb92e 	bgeu	r2,r21,905d0 <__udivdi3+0x534>
   906ec:	297fffc4 	addi	r5,r5,-1
   906f0:	14c5883a 	add	r2,r2,r19
   906f4:	d9400215 	stw	r5,8(sp)
   906f8:	003fb506 	br	905d0 <__udivdi3+0x534>
   906fc:	843fffc4 	addi	r16,r16,-1
   90700:	14c5883a 	add	r2,r2,r19
   90704:	003ea106 	br	9018c <__udivdi3+0xf0>

00090708 <__umoddi3>:
   90708:	defff004 	addi	sp,sp,-64
   9070c:	3011883a 	mov	r8,r6
   90710:	000d883a 	mov	r6,zero
   90714:	dd400b15 	stw	r21,44(sp)
   90718:	dcc00915 	stw	r19,36(sp)
   9071c:	dc000615 	stw	r16,24(sp)
   90720:	dfc00f15 	stw	ra,60(sp)
   90724:	df000e15 	stw	fp,56(sp)
   90728:	ddc00d15 	stw	r23,52(sp)
   9072c:	dd800c15 	stw	r22,48(sp)
   90730:	dd000a15 	stw	r20,40(sp)
   90734:	dc800815 	stw	r18,32(sp)
   90738:	dc400715 	stw	r17,28(sp)
   9073c:	2817883a 	mov	r11,r5
   90740:	d9800415 	stw	r6,16(sp)
   90744:	4027883a 	mov	r19,r8
   90748:	d9800515 	stw	r6,20(sp)
   9074c:	2021883a 	mov	r16,r4
   90750:	282b883a 	mov	r21,r5
   90754:	38002c1e 	bne	r7,zero,90808 <__umoddi3+0x100>
   90758:	2a005636 	bltu	r5,r8,908b4 <__umoddi3+0x1ac>
   9075c:	40009a26 	beq	r8,zero,909c8 <__umoddi3+0x2c0>
   90760:	00bfffd4 	movui	r2,65535
   90764:	14c09236 	bltu	r2,r19,909b0 <__umoddi3+0x2a8>
   90768:	00803fc4 	movi	r2,255
   9076c:	14c15c36 	bltu	r2,r19,90ce0 <__umoddi3+0x5d8>
   90770:	000b883a 	mov	r5,zero
   90774:	0005883a 	mov	r2,zero
   90778:	9884d83a 	srl	r2,r19,r2
   9077c:	010002b4 	movhi	r4,10
   90780:	2102a704 	addi	r4,r4,2716
   90784:	01800804 	movi	r6,32
   90788:	1105883a 	add	r2,r2,r4
   9078c:	10c00003 	ldbu	r3,0(r2)
   90790:	28c7883a 	add	r3,r5,r3
   90794:	30e5c83a 	sub	r18,r6,r3
   90798:	9000a41e 	bne	r18,zero,90a2c <__umoddi3+0x324>
   9079c:	982ed43a 	srli	r23,r19,16
   907a0:	acebc83a 	sub	r21,r21,r19
   907a4:	9d3fffcc 	andi	r20,r19,65535
   907a8:	002d883a 	mov	r22,zero
   907ac:	a809883a 	mov	r4,r21
   907b0:	b80b883a 	mov	r5,r23
   907b4:	00886a00 	call	886a0 <__udivsi3>
   907b8:	100b883a 	mov	r5,r2
   907bc:	a009883a 	mov	r4,r20
   907c0:	00886b00 	call	886b0 <__mulsi3>
   907c4:	a809883a 	mov	r4,r21
   907c8:	b80b883a 	mov	r5,r23
   907cc:	1023883a 	mov	r17,r2
   907d0:	00886a80 	call	886a8 <__umodsi3>
   907d4:	1004943a 	slli	r2,r2,16
   907d8:	8006d43a 	srli	r3,r16,16
   907dc:	10c4b03a 	or	r2,r2,r3
   907e0:	1440032e 	bgeu	r2,r17,907f0 <__umoddi3+0xe8>
   907e4:	14c5883a 	add	r2,r2,r19
   907e8:	14c00136 	bltu	r2,r19,907f0 <__umoddi3+0xe8>
   907ec:	14415836 	bltu	r2,r17,90d50 <__umoddi3+0x648>
   907f0:	1463c83a 	sub	r17,r2,r17
   907f4:	8809883a 	mov	r4,r17
   907f8:	b80b883a 	mov	r5,r23
   907fc:	00886a00 	call	886a0 <__udivsi3>
   90800:	a009883a 	mov	r4,r20
   90804:	00005306 	br	90954 <__umoddi3+0x24c>
   90808:	380d883a 	mov	r6,r7
   9080c:	29c0132e 	bgeu	r5,r7,9085c <__umoddi3+0x154>
   90810:	d9000415 	stw	r4,16(sp)
   90814:	d9400515 	stw	r5,20(sp)
   90818:	d9400417 	ldw	r5,16(sp)
   9081c:	5813883a 	mov	r9,r11
   90820:	2811883a 	mov	r8,r5
   90824:	4005883a 	mov	r2,r8
   90828:	4807883a 	mov	r3,r9
   9082c:	dfc00f17 	ldw	ra,60(sp)
   90830:	df000e17 	ldw	fp,56(sp)
   90834:	ddc00d17 	ldw	r23,52(sp)
   90838:	dd800c17 	ldw	r22,48(sp)
   9083c:	dd400b17 	ldw	r21,44(sp)
   90840:	dd000a17 	ldw	r20,40(sp)
   90844:	dcc00917 	ldw	r19,36(sp)
   90848:	dc800817 	ldw	r18,32(sp)
   9084c:	dc400717 	ldw	r17,28(sp)
   90850:	dc000617 	ldw	r16,24(sp)
   90854:	dec01004 	addi	sp,sp,64
   90858:	f800283a 	ret
   9085c:	00bfffd4 	movui	r2,65535
   90860:	11c06636 	bltu	r2,r7,909fc <__umoddi3+0x2f4>
   90864:	00803fc4 	movi	r2,255
   90868:	11c12036 	bltu	r2,r7,90cec <__umoddi3+0x5e4>
   9086c:	000b883a 	mov	r5,zero
   90870:	0005883a 	mov	r2,zero
   90874:	3084d83a 	srl	r2,r6,r2
   90878:	010002b4 	movhi	r4,10
   9087c:	2102a704 	addi	r4,r4,2716
   90880:	01c00804 	movi	r7,32
   90884:	1105883a 	add	r2,r2,r4
   90888:	10c00003 	ldbu	r3,0(r2)
   9088c:	28c7883a 	add	r3,r5,r3
   90890:	38e5c83a 	sub	r18,r7,r3
   90894:	9000941e 	bne	r18,zero,90ae8 <__umoddi3+0x3e0>
   90898:	35405e36 	bltu	r6,r21,90a14 <__umoddi3+0x30c>
   9089c:	84c05d2e 	bgeu	r16,r19,90a14 <__umoddi3+0x30c>
   908a0:	8011883a 	mov	r8,r16
   908a4:	a813883a 	mov	r9,r21
   908a8:	dc000415 	stw	r16,16(sp)
   908ac:	dd400515 	stw	r21,20(sp)
   908b0:	003fdc06 	br	90824 <__umoddi3+0x11c>
   908b4:	00bfffd4 	movui	r2,65535
   908b8:	12004a36 	bltu	r2,r8,909e4 <__umoddi3+0x2dc>
   908bc:	00803fc4 	movi	r2,255
   908c0:	12010d36 	bltu	r2,r8,90cf8 <__umoddi3+0x5f0>
   908c4:	000b883a 	mov	r5,zero
   908c8:	0005883a 	mov	r2,zero
   908cc:	9884d83a 	srl	r2,r19,r2
   908d0:	010002b4 	movhi	r4,10
   908d4:	2102a704 	addi	r4,r4,2716
   908d8:	01800804 	movi	r6,32
   908dc:	1105883a 	add	r2,r2,r4
   908e0:	10c00003 	ldbu	r3,0(r2)
   908e4:	28c7883a 	add	r3,r5,r3
   908e8:	30c7c83a 	sub	r3,r6,r3
   908ec:	1800dc1e 	bne	r3,zero,90c60 <__umoddi3+0x558>
   908f0:	002d883a 	mov	r22,zero
   908f4:	982ed43a 	srli	r23,r19,16
   908f8:	a809883a 	mov	r4,r21
   908fc:	9cbfffcc 	andi	r18,r19,65535
   90900:	b80b883a 	mov	r5,r23
   90904:	00886a00 	call	886a0 <__udivsi3>
   90908:	100b883a 	mov	r5,r2
   9090c:	9009883a 	mov	r4,r18
   90910:	00886b00 	call	886b0 <__mulsi3>
   90914:	a809883a 	mov	r4,r21
   90918:	b80b883a 	mov	r5,r23
   9091c:	1023883a 	mov	r17,r2
   90920:	00886a80 	call	886a8 <__umodsi3>
   90924:	1004943a 	slli	r2,r2,16
   90928:	8006d43a 	srli	r3,r16,16
   9092c:	10c4b03a 	or	r2,r2,r3
   90930:	1440032e 	bgeu	r2,r17,90940 <__umoddi3+0x238>
   90934:	14c5883a 	add	r2,r2,r19
   90938:	14c00136 	bltu	r2,r19,90940 <__umoddi3+0x238>
   9093c:	14410236 	bltu	r2,r17,90d48 <__umoddi3+0x640>
   90940:	1463c83a 	sub	r17,r2,r17
   90944:	8809883a 	mov	r4,r17
   90948:	b80b883a 	mov	r5,r23
   9094c:	00886a00 	call	886a0 <__udivsi3>
   90950:	9009883a 	mov	r4,r18
   90954:	100b883a 	mov	r5,r2
   90958:	00886b00 	call	886b0 <__mulsi3>
   9095c:	8809883a 	mov	r4,r17
   90960:	b80b883a 	mov	r5,r23
   90964:	102b883a 	mov	r21,r2
   90968:	00886a80 	call	886a8 <__umodsi3>
   9096c:	1004943a 	slli	r2,r2,16
   90970:	80ffffcc 	andi	r3,r16,65535
   90974:	10c4b03a 	or	r2,r2,r3
   90978:	1540042e 	bgeu	r2,r21,9098c <__umoddi3+0x284>
   9097c:	14c5883a 	add	r2,r2,r19
   90980:	14c00236 	bltu	r2,r19,9098c <__umoddi3+0x284>
   90984:	1540012e 	bgeu	r2,r21,9098c <__umoddi3+0x284>
   90988:	14c5883a 	add	r2,r2,r19
   9098c:	1545c83a 	sub	r2,r2,r21
   90990:	1584d83a 	srl	r2,r2,r22
   90994:	0013883a 	mov	r9,zero
   90998:	d8800415 	stw	r2,16(sp)
   9099c:	d8c00417 	ldw	r3,16(sp)
   909a0:	0005883a 	mov	r2,zero
   909a4:	d8800515 	stw	r2,20(sp)
   909a8:	1811883a 	mov	r8,r3
   909ac:	003f9d06 	br	90824 <__umoddi3+0x11c>
   909b0:	00804034 	movhi	r2,256
   909b4:	10bfffc4 	addi	r2,r2,-1
   909b8:	14c0c636 	bltu	r2,r19,90cd4 <__umoddi3+0x5cc>
   909bc:	01400404 	movi	r5,16
   909c0:	2805883a 	mov	r2,r5
   909c4:	003f6c06 	br	90778 <__umoddi3+0x70>
   909c8:	01000044 	movi	r4,1
   909cc:	000b883a 	mov	r5,zero
   909d0:	00886a00 	call	886a0 <__udivsi3>
   909d4:	1027883a 	mov	r19,r2
   909d8:	00bfffd4 	movui	r2,65535
   909dc:	14fff436 	bltu	r2,r19,909b0 <__umoddi3+0x2a8>
   909e0:	003f6106 	br	90768 <__umoddi3+0x60>
   909e4:	00804034 	movhi	r2,256
   909e8:	10bfffc4 	addi	r2,r2,-1
   909ec:	1200c536 	bltu	r2,r8,90d04 <__umoddi3+0x5fc>
   909f0:	01400404 	movi	r5,16
   909f4:	2805883a 	mov	r2,r5
   909f8:	003fb406 	br	908cc <__umoddi3+0x1c4>
   909fc:	00804034 	movhi	r2,256
   90a00:	10bfffc4 	addi	r2,r2,-1
   90a04:	11c0c236 	bltu	r2,r7,90d10 <__umoddi3+0x608>
   90a08:	01400404 	movi	r5,16
   90a0c:	2805883a 	mov	r2,r5
   90a10:	003f9806 	br	90874 <__umoddi3+0x16c>
   90a14:	84c9c83a 	sub	r4,r16,r19
   90a18:	8105803a 	cmpltu	r2,r16,r4
   90a1c:	a987c83a 	sub	r3,r21,r6
   90a20:	18abc83a 	sub	r21,r3,r2
   90a24:	2021883a 	mov	r16,r4
   90a28:	003f9d06 	br	908a0 <__umoddi3+0x198>
   90a2c:	9ca6983a 	sll	r19,r19,r18
   90a30:	3485c83a 	sub	r2,r6,r18
   90a34:	a8a2d83a 	srl	r17,r21,r2
   90a38:	982ed43a 	srli	r23,r19,16
   90a3c:	ac86983a 	sll	r3,r21,r18
   90a40:	8084d83a 	srl	r2,r16,r2
   90a44:	8809883a 	mov	r4,r17
   90a48:	b80b883a 	mov	r5,r23
   90a4c:	18b8b03a 	or	fp,r3,r2
   90a50:	9d3fffcc 	andi	r20,r19,65535
   90a54:	00886a00 	call	886a0 <__udivsi3>
   90a58:	100b883a 	mov	r5,r2
   90a5c:	a009883a 	mov	r4,r20
   90a60:	00886b00 	call	886b0 <__mulsi3>
   90a64:	8809883a 	mov	r4,r17
   90a68:	b80b883a 	mov	r5,r23
   90a6c:	102b883a 	mov	r21,r2
   90a70:	00886a80 	call	886a8 <__umodsi3>
   90a74:	1004943a 	slli	r2,r2,16
   90a78:	e006d43a 	srli	r3,fp,16
   90a7c:	902d883a 	mov	r22,r18
   90a80:	10c4b03a 	or	r2,r2,r3
   90a84:	1540022e 	bgeu	r2,r21,90a90 <__umoddi3+0x388>
   90a88:	14c5883a 	add	r2,r2,r19
   90a8c:	14c0ab2e 	bgeu	r2,r19,90d3c <__umoddi3+0x634>
   90a90:	1563c83a 	sub	r17,r2,r21
   90a94:	8809883a 	mov	r4,r17
   90a98:	b80b883a 	mov	r5,r23
   90a9c:	00886a00 	call	886a0 <__udivsi3>
   90aa0:	100b883a 	mov	r5,r2
   90aa4:	a009883a 	mov	r4,r20
   90aa8:	00886b00 	call	886b0 <__mulsi3>
   90aac:	8809883a 	mov	r4,r17
   90ab0:	b80b883a 	mov	r5,r23
   90ab4:	102b883a 	mov	r21,r2
   90ab8:	00886a80 	call	886a8 <__umodsi3>
   90abc:	1004943a 	slli	r2,r2,16
   90ac0:	e0ffffcc 	andi	r3,fp,65535
   90ac4:	10c4b03a 	or	r2,r2,r3
   90ac8:	1540042e 	bgeu	r2,r21,90adc <__umoddi3+0x3d4>
   90acc:	14c5883a 	add	r2,r2,r19
   90ad0:	14c00236 	bltu	r2,r19,90adc <__umoddi3+0x3d4>
   90ad4:	1540012e 	bgeu	r2,r21,90adc <__umoddi3+0x3d4>
   90ad8:	14c5883a 	add	r2,r2,r19
   90adc:	84a0983a 	sll	r16,r16,r18
   90ae0:	156bc83a 	sub	r21,r2,r21
   90ae4:	003f3106 	br	907ac <__umoddi3+0xa4>
   90ae8:	3c8fc83a 	sub	r7,r7,r18
   90aec:	3486983a 	sll	r3,r6,r18
   90af0:	99c4d83a 	srl	r2,r19,r7
   90af4:	a9e2d83a 	srl	r17,r21,r7
   90af8:	ac8c983a 	sll	r6,r21,r18
   90afc:	18acb03a 	or	r22,r3,r2
   90b00:	b02ed43a 	srli	r23,r22,16
   90b04:	81c4d83a 	srl	r2,r16,r7
   90b08:	8809883a 	mov	r4,r17
   90b0c:	b80b883a 	mov	r5,r23
   90b10:	308cb03a 	or	r6,r6,r2
   90b14:	d9c00315 	stw	r7,12(sp)
   90b18:	d9800215 	stw	r6,8(sp)
   90b1c:	b53fffcc 	andi	r20,r22,65535
   90b20:	00886a00 	call	886a0 <__udivsi3>
   90b24:	100b883a 	mov	r5,r2
   90b28:	a009883a 	mov	r4,r20
   90b2c:	1039883a 	mov	fp,r2
   90b30:	00886b00 	call	886b0 <__mulsi3>
   90b34:	8809883a 	mov	r4,r17
   90b38:	b80b883a 	mov	r5,r23
   90b3c:	102b883a 	mov	r21,r2
   90b40:	00886a80 	call	886a8 <__umodsi3>
   90b44:	d9000217 	ldw	r4,8(sp)
   90b48:	1004943a 	slli	r2,r2,16
   90b4c:	9ca6983a 	sll	r19,r19,r18
   90b50:	2006d43a 	srli	r3,r4,16
   90b54:	84a0983a 	sll	r16,r16,r18
   90b58:	dcc00015 	stw	r19,0(sp)
   90b5c:	10c4b03a 	or	r2,r2,r3
   90b60:	dc000115 	stw	r16,4(sp)
   90b64:	1540032e 	bgeu	r2,r21,90b74 <__umoddi3+0x46c>
   90b68:	1585883a 	add	r2,r2,r22
   90b6c:	e73fffc4 	addi	fp,fp,-1
   90b70:	15806e2e 	bgeu	r2,r22,90d2c <__umoddi3+0x624>
   90b74:	1563c83a 	sub	r17,r2,r21
   90b78:	8809883a 	mov	r4,r17
   90b7c:	b80b883a 	mov	r5,r23
   90b80:	00886a00 	call	886a0 <__udivsi3>
   90b84:	100b883a 	mov	r5,r2
   90b88:	a009883a 	mov	r4,r20
   90b8c:	1021883a 	mov	r16,r2
   90b90:	00886b00 	call	886b0 <__mulsi3>
   90b94:	b80b883a 	mov	r5,r23
   90b98:	8809883a 	mov	r4,r17
   90b9c:	1029883a 	mov	r20,r2
   90ba0:	00886a80 	call	886a8 <__umodsi3>
   90ba4:	d9400217 	ldw	r5,8(sp)
   90ba8:	1004943a 	slli	r2,r2,16
   90bac:	28ffffcc 	andi	r3,r5,65535
   90bb0:	10c4b03a 	or	r2,r2,r3
   90bb4:	1500032e 	bgeu	r2,r20,90bc4 <__umoddi3+0x4bc>
   90bb8:	1585883a 	add	r2,r2,r22
   90bbc:	843fffc4 	addi	r16,r16,-1
   90bc0:	1580562e 	bgeu	r2,r22,90d1c <__umoddi3+0x614>
   90bc4:	d9800017 	ldw	r6,0(sp)
   90bc8:	e022943a 	slli	r17,fp,16
   90bcc:	302ed43a 	srli	r23,r6,16
   90bd0:	8462b03a 	or	r17,r16,r17
   90bd4:	34ffffcc 	andi	r19,r6,65535
   90bd8:	882ad43a 	srli	r21,r17,16
   90bdc:	8c7fffcc 	andi	r17,r17,65535
   90be0:	8809883a 	mov	r4,r17
   90be4:	980b883a 	mov	r5,r19
   90be8:	1521c83a 	sub	r16,r2,r20
   90bec:	00886b00 	call	886b0 <__mulsi3>
   90bf0:	8809883a 	mov	r4,r17
   90bf4:	b80b883a 	mov	r5,r23
   90bf8:	1029883a 	mov	r20,r2
   90bfc:	00886b00 	call	886b0 <__mulsi3>
   90c00:	980b883a 	mov	r5,r19
   90c04:	a809883a 	mov	r4,r21
   90c08:	1023883a 	mov	r17,r2
   90c0c:	00886b00 	call	886b0 <__mulsi3>
   90c10:	a809883a 	mov	r4,r21
   90c14:	b80b883a 	mov	r5,r23
   90c18:	1027883a 	mov	r19,r2
   90c1c:	00886b00 	call	886b0 <__mulsi3>
   90c20:	100b883a 	mov	r5,r2
   90c24:	a004d43a 	srli	r2,r20,16
   90c28:	8ce3883a 	add	r17,r17,r19
   90c2c:	1449883a 	add	r4,r2,r17
   90c30:	24c0022e 	bgeu	r4,r19,90c3c <__umoddi3+0x534>
   90c34:	00800074 	movhi	r2,1
   90c38:	288b883a 	add	r5,r5,r2
   90c3c:	2004d43a 	srli	r2,r4,16
   90c40:	2008943a 	slli	r4,r4,16
   90c44:	a0ffffcc 	andi	r3,r20,65535
   90c48:	288d883a 	add	r6,r5,r2
   90c4c:	20c9883a 	add	r4,r4,r3
   90c50:	81800b36 	bltu	r16,r6,90c80 <__umoddi3+0x578>
   90c54:	81804026 	beq	r16,r6,90d58 <__umoddi3+0x650>
   90c58:	818dc83a 	sub	r6,r16,r6
   90c5c:	00000f06 	br	90c9c <__umoddi3+0x594>
   90c60:	30c5c83a 	sub	r2,r6,r3
   90c64:	182d883a 	mov	r22,r3
   90c68:	8084d83a 	srl	r2,r16,r2
   90c6c:	a8c6983a 	sll	r3,r21,r3
   90c70:	9da6983a 	sll	r19,r19,r22
   90c74:	85a0983a 	sll	r16,r16,r22
   90c78:	18aab03a 	or	r21,r3,r2
   90c7c:	003f1d06 	br	908f4 <__umoddi3+0x1ec>
   90c80:	d8c00017 	ldw	r3,0(sp)
   90c84:	20c5c83a 	sub	r2,r4,r3
   90c88:	2089803a 	cmpltu	r4,r4,r2
   90c8c:	3587c83a 	sub	r3,r6,r22
   90c90:	1907c83a 	sub	r3,r3,r4
   90c94:	80cdc83a 	sub	r6,r16,r3
   90c98:	1009883a 	mov	r4,r2
   90c9c:	d9400117 	ldw	r5,4(sp)
   90ca0:	2905c83a 	sub	r2,r5,r4
   90ca4:	2887803a 	cmpltu	r3,r5,r2
   90ca8:	30c7c83a 	sub	r3,r6,r3
   90cac:	d9800317 	ldw	r6,12(sp)
   90cb0:	1484d83a 	srl	r2,r2,r18
   90cb4:	1988983a 	sll	r4,r3,r6
   90cb8:	1c86d83a 	srl	r3,r3,r18
   90cbc:	2088b03a 	or	r4,r4,r2
   90cc0:	2011883a 	mov	r8,r4
   90cc4:	1813883a 	mov	r9,r3
   90cc8:	d9000415 	stw	r4,16(sp)
   90ccc:	d8c00515 	stw	r3,20(sp)
   90cd0:	003ed406 	br	90824 <__umoddi3+0x11c>
   90cd4:	01400604 	movi	r5,24
   90cd8:	2805883a 	mov	r2,r5
   90cdc:	003ea606 	br	90778 <__umoddi3+0x70>
   90ce0:	01400204 	movi	r5,8
   90ce4:	2805883a 	mov	r2,r5
   90ce8:	003ea306 	br	90778 <__umoddi3+0x70>
   90cec:	01400204 	movi	r5,8
   90cf0:	2805883a 	mov	r2,r5
   90cf4:	003edf06 	br	90874 <__umoddi3+0x16c>
   90cf8:	01400204 	movi	r5,8
   90cfc:	2805883a 	mov	r2,r5
   90d00:	003ef206 	br	908cc <__umoddi3+0x1c4>
   90d04:	01400604 	movi	r5,24
   90d08:	2805883a 	mov	r2,r5
   90d0c:	003eef06 	br	908cc <__umoddi3+0x1c4>
   90d10:	01400604 	movi	r5,24
   90d14:	2805883a 	mov	r2,r5
   90d18:	003ed606 	br	90874 <__umoddi3+0x16c>
   90d1c:	153fa92e 	bgeu	r2,r20,90bc4 <__umoddi3+0x4bc>
   90d20:	843fffc4 	addi	r16,r16,-1
   90d24:	1585883a 	add	r2,r2,r22
   90d28:	003fa606 	br	90bc4 <__umoddi3+0x4bc>
   90d2c:	157f912e 	bgeu	r2,r21,90b74 <__umoddi3+0x46c>
   90d30:	e73fffc4 	addi	fp,fp,-1
   90d34:	1585883a 	add	r2,r2,r22
   90d38:	003f8e06 	br	90b74 <__umoddi3+0x46c>
   90d3c:	157f542e 	bgeu	r2,r21,90a90 <__umoddi3+0x388>
   90d40:	14c5883a 	add	r2,r2,r19
   90d44:	003f5206 	br	90a90 <__umoddi3+0x388>
   90d48:	14c5883a 	add	r2,r2,r19
   90d4c:	003efc06 	br	90940 <__umoddi3+0x238>
   90d50:	14c5883a 	add	r2,r2,r19
   90d54:	003ea606 	br	907f0 <__umoddi3+0xe8>
   90d58:	d8800117 	ldw	r2,4(sp)
   90d5c:	113fc836 	bltu	r2,r4,90c80 <__umoddi3+0x578>
   90d60:	000d883a 	mov	r6,zero
   90d64:	003fcd06 	br	90c9c <__umoddi3+0x594>

00090d68 <_fpadd_parts>:
   90d68:	defff804 	addi	sp,sp,-32
   90d6c:	dcc00315 	stw	r19,12(sp)
   90d70:	2027883a 	mov	r19,r4
   90d74:	21000017 	ldw	r4,0(r4)
   90d78:	00c00044 	movi	r3,1
   90d7c:	dd400515 	stw	r21,20(sp)
   90d80:	dd000415 	stw	r20,16(sp)
   90d84:	ddc00715 	stw	r23,28(sp)
   90d88:	dd800615 	stw	r22,24(sp)
   90d8c:	dc800215 	stw	r18,8(sp)
   90d90:	dc400115 	stw	r17,4(sp)
   90d94:	dc000015 	stw	r16,0(sp)
   90d98:	282b883a 	mov	r21,r5
   90d9c:	3029883a 	mov	r20,r6
   90da0:	1900632e 	bgeu	r3,r4,90f30 <_fpadd_parts+0x1c8>
   90da4:	28800017 	ldw	r2,0(r5)
   90da8:	1880812e 	bgeu	r3,r2,90fb0 <_fpadd_parts+0x248>
   90dac:	00c00104 	movi	r3,4
   90db0:	20c0dc26 	beq	r4,r3,91124 <_fpadd_parts+0x3bc>
   90db4:	10c07e26 	beq	r2,r3,90fb0 <_fpadd_parts+0x248>
   90db8:	00c00084 	movi	r3,2
   90dbc:	10c06726 	beq	r2,r3,90f5c <_fpadd_parts+0x1f4>
   90dc0:	20c07b26 	beq	r4,r3,90fb0 <_fpadd_parts+0x248>
   90dc4:	9dc00217 	ldw	r23,8(r19)
   90dc8:	28c00217 	ldw	r3,8(r5)
   90dcc:	9c400317 	ldw	r17,12(r19)
   90dd0:	2bc00317 	ldw	r15,12(r5)
   90dd4:	b8cdc83a 	sub	r6,r23,r3
   90dd8:	9c800417 	ldw	r18,16(r19)
   90ddc:	2c000417 	ldw	r16,16(r5)
   90de0:	3009883a 	mov	r4,r6
   90de4:	30009716 	blt	r6,zero,91044 <_fpadd_parts+0x2dc>
   90de8:	00800fc4 	movi	r2,63
   90dec:	11806b16 	blt	r2,r6,90f9c <_fpadd_parts+0x234>
   90df0:	0100a40e 	bge	zero,r4,91084 <_fpadd_parts+0x31c>
   90df4:	35bff804 	addi	r22,r6,-32
   90df8:	b000bc16 	blt	r22,zero,910ec <_fpadd_parts+0x384>
   90dfc:	8596d83a 	srl	r11,r16,r22
   90e00:	0019883a 	mov	r12,zero
   90e04:	0013883a 	mov	r9,zero
   90e08:	01000044 	movi	r4,1
   90e0c:	0015883a 	mov	r10,zero
   90e10:	b000be16 	blt	r22,zero,9110c <_fpadd_parts+0x3a4>
   90e14:	2590983a 	sll	r8,r4,r22
   90e18:	000f883a 	mov	r7,zero
   90e1c:	00bfffc4 	movi	r2,-1
   90e20:	3889883a 	add	r4,r7,r2
   90e24:	408b883a 	add	r5,r8,r2
   90e28:	21cd803a 	cmpltu	r6,r4,r7
   90e2c:	314b883a 	add	r5,r6,r5
   90e30:	7904703a 	and	r2,r15,r4
   90e34:	8146703a 	and	r3,r16,r5
   90e38:	10c4b03a 	or	r2,r2,r3
   90e3c:	10000226 	beq	r2,zero,90e48 <_fpadd_parts+0xe0>
   90e40:	02400044 	movi	r9,1
   90e44:	0015883a 	mov	r10,zero
   90e48:	5a5eb03a 	or	r15,r11,r9
   90e4c:	62a0b03a 	or	r16,r12,r10
   90e50:	99400117 	ldw	r5,4(r19)
   90e54:	a8800117 	ldw	r2,4(r21)
   90e58:	28806e26 	beq	r5,r2,91014 <_fpadd_parts+0x2ac>
   90e5c:	28006626 	beq	r5,zero,90ff8 <_fpadd_parts+0x290>
   90e60:	7c45c83a 	sub	r2,r15,r17
   90e64:	7889803a 	cmpltu	r4,r15,r2
   90e68:	8487c83a 	sub	r3,r16,r18
   90e6c:	1909c83a 	sub	r4,r3,r4
   90e70:	100d883a 	mov	r6,r2
   90e74:	200f883a 	mov	r7,r4
   90e78:	38007716 	blt	r7,zero,91058 <_fpadd_parts+0x2f0>
   90e7c:	a5c00215 	stw	r23,8(r20)
   90e80:	a1c00415 	stw	r7,16(r20)
   90e84:	a0000115 	stw	zero,4(r20)
   90e88:	a1800315 	stw	r6,12(r20)
   90e8c:	a2000317 	ldw	r8,12(r20)
   90e90:	a2400417 	ldw	r9,16(r20)
   90e94:	00bfffc4 	movi	r2,-1
   90e98:	408b883a 	add	r5,r8,r2
   90e9c:	2a09803a 	cmpltu	r4,r5,r8
   90ea0:	488d883a 	add	r6,r9,r2
   90ea4:	01c40034 	movhi	r7,4096
   90ea8:	39ffffc4 	addi	r7,r7,-1
   90eac:	218d883a 	add	r6,r4,r6
   90eb0:	39801736 	bltu	r7,r6,90f10 <_fpadd_parts+0x1a8>
   90eb4:	31c06526 	beq	r6,r7,9104c <_fpadd_parts+0x2e4>
   90eb8:	a3000217 	ldw	r12,8(r20)
   90ebc:	4209883a 	add	r4,r8,r8
   90ec0:	00bfffc4 	movi	r2,-1
   90ec4:	220f803a 	cmpltu	r7,r4,r8
   90ec8:	4a4b883a 	add	r5,r9,r9
   90ecc:	394f883a 	add	r7,r7,r5
   90ed0:	2095883a 	add	r10,r4,r2
   90ed4:	3897883a 	add	r11,r7,r2
   90ed8:	510d803a 	cmpltu	r6,r10,r4
   90edc:	6099883a 	add	r12,r12,r2
   90ee0:	32d7883a 	add	r11,r6,r11
   90ee4:	00840034 	movhi	r2,4096
   90ee8:	10bfffc4 	addi	r2,r2,-1
   90eec:	2011883a 	mov	r8,r4
   90ef0:	3813883a 	mov	r9,r7
   90ef4:	a1000315 	stw	r4,12(r20)
   90ef8:	a1c00415 	stw	r7,16(r20)
   90efc:	a3000215 	stw	r12,8(r20)
   90f00:	12c00336 	bltu	r2,r11,90f10 <_fpadd_parts+0x1a8>
   90f04:	58bfed1e 	bne	r11,r2,90ebc <_fpadd_parts+0x154>
   90f08:	00bfff84 	movi	r2,-2
   90f0c:	12bfeb2e 	bgeu	r2,r10,90ebc <_fpadd_parts+0x154>
   90f10:	a2800417 	ldw	r10,16(r20)
   90f14:	008000c4 	movi	r2,3
   90f18:	00c80034 	movhi	r3,8192
   90f1c:	18ffffc4 	addi	r3,r3,-1
   90f20:	a2400317 	ldw	r9,12(r20)
   90f24:	a0800015 	stw	r2,0(r20)
   90f28:	1a802336 	bltu	r3,r10,90fb8 <_fpadd_parts+0x250>
   90f2c:	a027883a 	mov	r19,r20
   90f30:	9805883a 	mov	r2,r19
   90f34:	ddc00717 	ldw	r23,28(sp)
   90f38:	dd800617 	ldw	r22,24(sp)
   90f3c:	dd400517 	ldw	r21,20(sp)
   90f40:	dd000417 	ldw	r20,16(sp)
   90f44:	dcc00317 	ldw	r19,12(sp)
   90f48:	dc800217 	ldw	r18,8(sp)
   90f4c:	dc400117 	ldw	r17,4(sp)
   90f50:	dc000017 	ldw	r16,0(sp)
   90f54:	dec00804 	addi	sp,sp,32
   90f58:	f800283a 	ret
   90f5c:	20fff41e 	bne	r4,r3,90f30 <_fpadd_parts+0x1c8>
   90f60:	31000015 	stw	r4,0(r6)
   90f64:	98800117 	ldw	r2,4(r19)
   90f68:	30800115 	stw	r2,4(r6)
   90f6c:	98c00217 	ldw	r3,8(r19)
   90f70:	30c00215 	stw	r3,8(r6)
   90f74:	98800317 	ldw	r2,12(r19)
   90f78:	30800315 	stw	r2,12(r6)
   90f7c:	98c00417 	ldw	r3,16(r19)
   90f80:	30c00415 	stw	r3,16(r6)
   90f84:	98800117 	ldw	r2,4(r19)
   90f88:	28c00117 	ldw	r3,4(r5)
   90f8c:	3027883a 	mov	r19,r6
   90f90:	10c4703a 	and	r2,r2,r3
   90f94:	30800115 	stw	r2,4(r6)
   90f98:	003fe506 	br	90f30 <_fpadd_parts+0x1c8>
   90f9c:	1dc02616 	blt	r3,r23,91038 <_fpadd_parts+0x2d0>
   90fa0:	0023883a 	mov	r17,zero
   90fa4:	182f883a 	mov	r23,r3
   90fa8:	0025883a 	mov	r18,zero
   90fac:	003fa806 	br	90e50 <_fpadd_parts+0xe8>
   90fb0:	a827883a 	mov	r19,r21
   90fb4:	003fde06 	br	90f30 <_fpadd_parts+0x1c8>
   90fb8:	01800044 	movi	r6,1
   90fbc:	500497fa 	slli	r2,r10,31
   90fc0:	4808d07a 	srli	r4,r9,1
   90fc4:	518ad83a 	srl	r5,r10,r6
   90fc8:	a2000217 	ldw	r8,8(r20)
   90fcc:	1108b03a 	or	r4,r2,r4
   90fd0:	0007883a 	mov	r3,zero
   90fd4:	4984703a 	and	r2,r9,r6
   90fd8:	208cb03a 	or	r6,r4,r2
   90fdc:	28ceb03a 	or	r7,r5,r3
   90fe0:	42000044 	addi	r8,r8,1
   90fe4:	a027883a 	mov	r19,r20
   90fe8:	a1c00415 	stw	r7,16(r20)
   90fec:	a2000215 	stw	r8,8(r20)
   90ff0:	a1800315 	stw	r6,12(r20)
   90ff4:	003fce06 	br	90f30 <_fpadd_parts+0x1c8>
   90ff8:	8bc5c83a 	sub	r2,r17,r15
   90ffc:	8889803a 	cmpltu	r4,r17,r2
   91000:	9407c83a 	sub	r3,r18,r16
   91004:	1909c83a 	sub	r4,r3,r4
   91008:	100d883a 	mov	r6,r2
   9100c:	200f883a 	mov	r7,r4
   91010:	003f9906 	br	90e78 <_fpadd_parts+0x110>
   91014:	7c45883a 	add	r2,r15,r17
   91018:	13c9803a 	cmpltu	r4,r2,r15
   9101c:	8487883a 	add	r3,r16,r18
   91020:	20c9883a 	add	r4,r4,r3
   91024:	a1400115 	stw	r5,4(r20)
   91028:	a5c00215 	stw	r23,8(r20)
   9102c:	a0800315 	stw	r2,12(r20)
   91030:	a1000415 	stw	r4,16(r20)
   91034:	003fb606 	br	90f10 <_fpadd_parts+0x1a8>
   91038:	001f883a 	mov	r15,zero
   9103c:	0021883a 	mov	r16,zero
   91040:	003f8306 	br	90e50 <_fpadd_parts+0xe8>
   91044:	018dc83a 	sub	r6,zero,r6
   91048:	003f6706 	br	90de8 <_fpadd_parts+0x80>
   9104c:	00bfff84 	movi	r2,-2
   91050:	117faf36 	bltu	r2,r5,90f10 <_fpadd_parts+0x1a8>
   91054:	003f9806 	br	90eb8 <_fpadd_parts+0x150>
   91058:	0005883a 	mov	r2,zero
   9105c:	1189c83a 	sub	r4,r2,r6
   91060:	1105803a 	cmpltu	r2,r2,r4
   91064:	01cbc83a 	sub	r5,zero,r7
   91068:	2885c83a 	sub	r2,r5,r2
   9106c:	01800044 	movi	r6,1
   91070:	a1800115 	stw	r6,4(r20)
   91074:	a5c00215 	stw	r23,8(r20)
   91078:	a1000315 	stw	r4,12(r20)
   9107c:	a0800415 	stw	r2,16(r20)
   91080:	003f8206 	br	90e8c <_fpadd_parts+0x124>
   91084:	203f7226 	beq	r4,zero,90e50 <_fpadd_parts+0xe8>
   91088:	35bff804 	addi	r22,r6,-32
   9108c:	b9af883a 	add	r23,r23,r6
   91090:	b0003116 	blt	r22,zero,91158 <_fpadd_parts+0x3f0>
   91094:	959ad83a 	srl	r13,r18,r22
   91098:	001d883a 	mov	r14,zero
   9109c:	000f883a 	mov	r7,zero
   910a0:	01000044 	movi	r4,1
   910a4:	0011883a 	mov	r8,zero
   910a8:	b0002516 	blt	r22,zero,91140 <_fpadd_parts+0x3d8>
   910ac:	2594983a 	sll	r10,r4,r22
   910b0:	0013883a 	mov	r9,zero
   910b4:	00bfffc4 	movi	r2,-1
   910b8:	4889883a 	add	r4,r9,r2
   910bc:	508b883a 	add	r5,r10,r2
   910c0:	224d803a 	cmpltu	r6,r4,r9
   910c4:	314b883a 	add	r5,r6,r5
   910c8:	8904703a 	and	r2,r17,r4
   910cc:	9146703a 	and	r3,r18,r5
   910d0:	10c4b03a 	or	r2,r2,r3
   910d4:	10000226 	beq	r2,zero,910e0 <_fpadd_parts+0x378>
   910d8:	01c00044 	movi	r7,1
   910dc:	0011883a 	mov	r8,zero
   910e0:	69e2b03a 	or	r17,r13,r7
   910e4:	7224b03a 	or	r18,r14,r8
   910e8:	003f5906 	br	90e50 <_fpadd_parts+0xe8>
   910ec:	8407883a 	add	r3,r16,r16
   910f0:	008007c4 	movi	r2,31
   910f4:	1185c83a 	sub	r2,r2,r6
   910f8:	1886983a 	sll	r3,r3,r2
   910fc:	7996d83a 	srl	r11,r15,r6
   91100:	8198d83a 	srl	r12,r16,r6
   91104:	1ad6b03a 	or	r11,r3,r11
   91108:	003f3e06 	br	90e04 <_fpadd_parts+0x9c>
   9110c:	2006d07a 	srli	r3,r4,1
   91110:	008007c4 	movi	r2,31
   91114:	1185c83a 	sub	r2,r2,r6
   91118:	1890d83a 	srl	r8,r3,r2
   9111c:	218e983a 	sll	r7,r4,r6
   91120:	003f3e06 	br	90e1c <_fpadd_parts+0xb4>
   91124:	113f821e 	bne	r2,r4,90f30 <_fpadd_parts+0x1c8>
   91128:	28c00117 	ldw	r3,4(r5)
   9112c:	98800117 	ldw	r2,4(r19)
   91130:	10ff7f26 	beq	r2,r3,90f30 <_fpadd_parts+0x1c8>
   91134:	04c002b4 	movhi	r19,10
   91138:	9cc2a204 	addi	r19,r19,2696
   9113c:	003f7c06 	br	90f30 <_fpadd_parts+0x1c8>
   91140:	2006d07a 	srli	r3,r4,1
   91144:	008007c4 	movi	r2,31
   91148:	1185c83a 	sub	r2,r2,r6
   9114c:	1894d83a 	srl	r10,r3,r2
   91150:	2192983a 	sll	r9,r4,r6
   91154:	003fd706 	br	910b4 <_fpadd_parts+0x34c>
   91158:	9487883a 	add	r3,r18,r18
   9115c:	008007c4 	movi	r2,31
   91160:	1185c83a 	sub	r2,r2,r6
   91164:	1886983a 	sll	r3,r3,r2
   91168:	899ad83a 	srl	r13,r17,r6
   9116c:	919cd83a 	srl	r14,r18,r6
   91170:	1b5ab03a 	or	r13,r3,r13
   91174:	003fc906 	br	9109c <_fpadd_parts+0x334>

00091178 <__subdf3>:
   91178:	deffea04 	addi	sp,sp,-88
   9117c:	dcc01415 	stw	r19,80(sp)
   91180:	dcc00404 	addi	r19,sp,16
   91184:	2011883a 	mov	r8,r4
   91188:	2813883a 	mov	r9,r5
   9118c:	dc401315 	stw	r17,76(sp)
   91190:	d809883a 	mov	r4,sp
   91194:	980b883a 	mov	r5,r19
   91198:	dc400904 	addi	r17,sp,36
   9119c:	dfc01515 	stw	ra,84(sp)
   911a0:	da400115 	stw	r9,4(sp)
   911a4:	d9c00315 	stw	r7,12(sp)
   911a8:	da000015 	stw	r8,0(sp)
   911ac:	d9800215 	stw	r6,8(sp)
   911b0:	009234c0 	call	9234c <__unpack_d>
   911b4:	d9000204 	addi	r4,sp,8
   911b8:	880b883a 	mov	r5,r17
   911bc:	009234c0 	call	9234c <__unpack_d>
   911c0:	d8800a17 	ldw	r2,40(sp)
   911c4:	880b883a 	mov	r5,r17
   911c8:	9809883a 	mov	r4,r19
   911cc:	d9800e04 	addi	r6,sp,56
   911d0:	1080005c 	xori	r2,r2,1
   911d4:	d8800a15 	stw	r2,40(sp)
   911d8:	0090d680 	call	90d68 <_fpadd_parts>
   911dc:	1009883a 	mov	r4,r2
   911e0:	00920380 	call	92038 <__pack_d>
   911e4:	dfc01517 	ldw	ra,84(sp)
   911e8:	dcc01417 	ldw	r19,80(sp)
   911ec:	dc401317 	ldw	r17,76(sp)
   911f0:	dec01604 	addi	sp,sp,88
   911f4:	f800283a 	ret

000911f8 <__adddf3>:
   911f8:	deffea04 	addi	sp,sp,-88
   911fc:	dcc01415 	stw	r19,80(sp)
   91200:	dcc00404 	addi	r19,sp,16
   91204:	2011883a 	mov	r8,r4
   91208:	2813883a 	mov	r9,r5
   9120c:	dc401315 	stw	r17,76(sp)
   91210:	d809883a 	mov	r4,sp
   91214:	980b883a 	mov	r5,r19
   91218:	dc400904 	addi	r17,sp,36
   9121c:	dfc01515 	stw	ra,84(sp)
   91220:	da400115 	stw	r9,4(sp)
   91224:	d9c00315 	stw	r7,12(sp)
   91228:	da000015 	stw	r8,0(sp)
   9122c:	d9800215 	stw	r6,8(sp)
   91230:	009234c0 	call	9234c <__unpack_d>
   91234:	d9000204 	addi	r4,sp,8
   91238:	880b883a 	mov	r5,r17
   9123c:	009234c0 	call	9234c <__unpack_d>
   91240:	d9800e04 	addi	r6,sp,56
   91244:	9809883a 	mov	r4,r19
   91248:	880b883a 	mov	r5,r17
   9124c:	0090d680 	call	90d68 <_fpadd_parts>
   91250:	1009883a 	mov	r4,r2
   91254:	00920380 	call	92038 <__pack_d>
   91258:	dfc01517 	ldw	ra,84(sp)
   9125c:	dcc01417 	ldw	r19,80(sp)
   91260:	dc401317 	ldw	r17,76(sp)
   91264:	dec01604 	addi	sp,sp,88
   91268:	f800283a 	ret

0009126c <__muldf3>:
   9126c:	deffe004 	addi	sp,sp,-128
   91270:	dc401815 	stw	r17,96(sp)
   91274:	dc400404 	addi	r17,sp,16
   91278:	2011883a 	mov	r8,r4
   9127c:	2813883a 	mov	r9,r5
   91280:	dc001715 	stw	r16,92(sp)
   91284:	d809883a 	mov	r4,sp
   91288:	880b883a 	mov	r5,r17
   9128c:	dc000904 	addi	r16,sp,36
   91290:	dfc01f15 	stw	ra,124(sp)
   91294:	da400115 	stw	r9,4(sp)
   91298:	d9c00315 	stw	r7,12(sp)
   9129c:	da000015 	stw	r8,0(sp)
   912a0:	d9800215 	stw	r6,8(sp)
   912a4:	ddc01e15 	stw	r23,120(sp)
   912a8:	dd801d15 	stw	r22,116(sp)
   912ac:	dd401c15 	stw	r21,112(sp)
   912b0:	dd001b15 	stw	r20,108(sp)
   912b4:	dcc01a15 	stw	r19,104(sp)
   912b8:	dc801915 	stw	r18,100(sp)
   912bc:	009234c0 	call	9234c <__unpack_d>
   912c0:	d9000204 	addi	r4,sp,8
   912c4:	800b883a 	mov	r5,r16
   912c8:	009234c0 	call	9234c <__unpack_d>
   912cc:	d9000417 	ldw	r4,16(sp)
   912d0:	00800044 	movi	r2,1
   912d4:	1100102e 	bgeu	r2,r4,91318 <__muldf3+0xac>
   912d8:	d8c00917 	ldw	r3,36(sp)
   912dc:	10c0062e 	bgeu	r2,r3,912f8 <__muldf3+0x8c>
   912e0:	00800104 	movi	r2,4
   912e4:	20800a26 	beq	r4,r2,91310 <__muldf3+0xa4>
   912e8:	1880cc26 	beq	r3,r2,9161c <__muldf3+0x3b0>
   912ec:	00800084 	movi	r2,2
   912f0:	20800926 	beq	r4,r2,91318 <__muldf3+0xac>
   912f4:	1880191e 	bne	r3,r2,9135c <__muldf3+0xf0>
   912f8:	d8c00a17 	ldw	r3,40(sp)
   912fc:	d8800517 	ldw	r2,20(sp)
   91300:	8009883a 	mov	r4,r16
   91304:	10c4c03a 	cmpne	r2,r2,r3
   91308:	d8800a15 	stw	r2,40(sp)
   9130c:	00000706 	br	9132c <__muldf3+0xc0>
   91310:	00800084 	movi	r2,2
   91314:	1880c326 	beq	r3,r2,91624 <__muldf3+0x3b8>
   91318:	d8800517 	ldw	r2,20(sp)
   9131c:	d8c00a17 	ldw	r3,40(sp)
   91320:	8809883a 	mov	r4,r17
   91324:	10c4c03a 	cmpne	r2,r2,r3
   91328:	d8800515 	stw	r2,20(sp)
   9132c:	00920380 	call	92038 <__pack_d>
   91330:	dfc01f17 	ldw	ra,124(sp)
   91334:	ddc01e17 	ldw	r23,120(sp)
   91338:	dd801d17 	ldw	r22,116(sp)
   9133c:	dd401c17 	ldw	r21,112(sp)
   91340:	dd001b17 	ldw	r20,108(sp)
   91344:	dcc01a17 	ldw	r19,104(sp)
   91348:	dc801917 	ldw	r18,100(sp)
   9134c:	dc401817 	ldw	r17,96(sp)
   91350:	dc001717 	ldw	r16,92(sp)
   91354:	dec02004 	addi	sp,sp,128
   91358:	f800283a 	ret
   9135c:	dd800717 	ldw	r22,28(sp)
   91360:	dc800c17 	ldw	r18,48(sp)
   91364:	002b883a 	mov	r21,zero
   91368:	0023883a 	mov	r17,zero
   9136c:	a80b883a 	mov	r5,r21
   91370:	b00d883a 	mov	r6,r22
   91374:	880f883a 	mov	r7,r17
   91378:	ddc00817 	ldw	r23,32(sp)
   9137c:	dcc00d17 	ldw	r19,52(sp)
   91380:	9009883a 	mov	r4,r18
   91384:	0091e940 	call	91e94 <__muldi3>
   91388:	001b883a 	mov	r13,zero
   9138c:	680f883a 	mov	r7,r13
   91390:	b009883a 	mov	r4,r22
   91394:	000b883a 	mov	r5,zero
   91398:	980d883a 	mov	r6,r19
   9139c:	b82d883a 	mov	r22,r23
   913a0:	002f883a 	mov	r23,zero
   913a4:	db401615 	stw	r13,88(sp)
   913a8:	d8801315 	stw	r2,76(sp)
   913ac:	d8c01415 	stw	r3,80(sp)
   913b0:	dcc01515 	stw	r19,84(sp)
   913b4:	0091e940 	call	91e94 <__muldi3>
   913b8:	b00d883a 	mov	r6,r22
   913bc:	000b883a 	mov	r5,zero
   913c0:	9009883a 	mov	r4,r18
   913c4:	b80f883a 	mov	r7,r23
   913c8:	1021883a 	mov	r16,r2
   913cc:	1823883a 	mov	r17,r3
   913d0:	0091e940 	call	91e94 <__muldi3>
   913d4:	8085883a 	add	r2,r16,r2
   913d8:	140d803a 	cmpltu	r6,r2,r16
   913dc:	88c7883a 	add	r3,r17,r3
   913e0:	30cd883a 	add	r6,r6,r3
   913e4:	1029883a 	mov	r20,r2
   913e8:	302b883a 	mov	r21,r6
   913ec:	da801317 	ldw	r10,76(sp)
   913f0:	dac01417 	ldw	r11,80(sp)
   913f4:	db001517 	ldw	r12,84(sp)
   913f8:	db401617 	ldw	r13,88(sp)
   913fc:	3440612e 	bgeu	r6,r17,91584 <__muldf3+0x318>
   91400:	0009883a 	mov	r4,zero
   91404:	5105883a 	add	r2,r10,r4
   91408:	128d803a 	cmpltu	r6,r2,r10
   9140c:	5d07883a 	add	r3,r11,r20
   91410:	30cd883a 	add	r6,r6,r3
   91414:	0021883a 	mov	r16,zero
   91418:	04400044 	movi	r17,1
   9141c:	1025883a 	mov	r18,r2
   91420:	3027883a 	mov	r19,r6
   91424:	32c06236 	bltu	r6,r11,915b0 <__muldf3+0x344>
   91428:	59807a26 	beq	r11,r6,91614 <__muldf3+0x3a8>
   9142c:	680b883a 	mov	r5,r13
   91430:	b80f883a 	mov	r7,r23
   91434:	6009883a 	mov	r4,r12
   91438:	b00d883a 	mov	r6,r22
   9143c:	0091e940 	call	91e94 <__muldi3>
   91440:	1009883a 	mov	r4,r2
   91444:	000f883a 	mov	r7,zero
   91448:	1545883a 	add	r2,r2,r21
   9144c:	1111803a 	cmpltu	r8,r2,r4
   91450:	19c7883a 	add	r3,r3,r7
   91454:	40c7883a 	add	r3,r8,r3
   91458:	88cb883a 	add	r5,r17,r3
   9145c:	d8c00617 	ldw	r3,24(sp)
   91460:	8089883a 	add	r4,r16,r2
   91464:	d8800b17 	ldw	r2,44(sp)
   91468:	18c00104 	addi	r3,r3,4
   9146c:	240d803a 	cmpltu	r6,r4,r16
   91470:	10c7883a 	add	r3,r2,r3
   91474:	2013883a 	mov	r9,r4
   91478:	d8800a17 	ldw	r2,40(sp)
   9147c:	d9000517 	ldw	r4,20(sp)
   91480:	314d883a 	add	r6,r6,r5
   91484:	3015883a 	mov	r10,r6
   91488:	2088c03a 	cmpne	r4,r4,r2
   9148c:	00880034 	movhi	r2,8192
   91490:	10bfffc4 	addi	r2,r2,-1
   91494:	d9000f15 	stw	r4,60(sp)
   91498:	d8c01015 	stw	r3,64(sp)
   9149c:	1180162e 	bgeu	r2,r6,914f8 <__muldf3+0x28c>
   914a0:	1811883a 	mov	r8,r3
   914a4:	101f883a 	mov	r15,r2
   914a8:	980497fa 	slli	r2,r19,31
   914ac:	9016d07a 	srli	r11,r18,1
   914b0:	500697fa 	slli	r3,r10,31
   914b4:	480cd07a 	srli	r6,r9,1
   914b8:	500ed07a 	srli	r7,r10,1
   914bc:	12d6b03a 	or	r11,r2,r11
   914c0:	00800044 	movi	r2,1
   914c4:	198cb03a 	or	r6,r3,r6
   914c8:	4888703a 	and	r4,r9,r2
   914cc:	9818d07a 	srli	r12,r19,1
   914d0:	001b883a 	mov	r13,zero
   914d4:	03a00034 	movhi	r14,32768
   914d8:	3013883a 	mov	r9,r6
   914dc:	3815883a 	mov	r10,r7
   914e0:	4091883a 	add	r8,r8,r2
   914e4:	20000226 	beq	r4,zero,914f0 <__muldf3+0x284>
   914e8:	5b64b03a 	or	r18,r11,r13
   914ec:	63a6b03a 	or	r19,r12,r14
   914f0:	7abfed36 	bltu	r15,r10,914a8 <__muldf3+0x23c>
   914f4:	da001015 	stw	r8,64(sp)
   914f8:	00840034 	movhi	r2,4096
   914fc:	10bfffc4 	addi	r2,r2,-1
   91500:	12801436 	bltu	r2,r10,91554 <__muldf3+0x2e8>
   91504:	da001017 	ldw	r8,64(sp)
   91508:	101f883a 	mov	r15,r2
   9150c:	4a45883a 	add	r2,r9,r9
   91510:	124d803a 	cmpltu	r6,r2,r9
   91514:	5287883a 	add	r3,r10,r10
   91518:	9497883a 	add	r11,r18,r18
   9151c:	5c8f803a 	cmpltu	r7,r11,r18
   91520:	9cd9883a 	add	r12,r19,r19
   91524:	01000044 	movi	r4,1
   91528:	30cd883a 	add	r6,r6,r3
   9152c:	3b0f883a 	add	r7,r7,r12
   91530:	423fffc4 	addi	r8,r8,-1
   91534:	1013883a 	mov	r9,r2
   91538:	3015883a 	mov	r10,r6
   9153c:	111ab03a 	or	r13,r2,r4
   91540:	98003016 	blt	r19,zero,91604 <__muldf3+0x398>
   91544:	5825883a 	mov	r18,r11
   91548:	3827883a 	mov	r19,r7
   9154c:	7abfef2e 	bgeu	r15,r10,9150c <__muldf3+0x2a0>
   91550:	da001015 	stw	r8,64(sp)
   91554:	00803fc4 	movi	r2,255
   91558:	488e703a 	and	r7,r9,r2
   9155c:	00802004 	movi	r2,128
   91560:	0007883a 	mov	r3,zero
   91564:	0011883a 	mov	r8,zero
   91568:	38801826 	beq	r7,r2,915cc <__muldf3+0x360>
   9156c:	008000c4 	movi	r2,3
   91570:	d9000e04 	addi	r4,sp,56
   91574:	da801215 	stw	r10,72(sp)
   91578:	d8800e15 	stw	r2,56(sp)
   9157c:	da401115 	stw	r9,68(sp)
   91580:	003f6a06 	br	9132c <__muldf3+0xc0>
   91584:	89802126 	beq	r17,r6,9160c <__muldf3+0x3a0>
   91588:	0009883a 	mov	r4,zero
   9158c:	5105883a 	add	r2,r10,r4
   91590:	128d803a 	cmpltu	r6,r2,r10
   91594:	5d07883a 	add	r3,r11,r20
   91598:	30cd883a 	add	r6,r6,r3
   9159c:	0021883a 	mov	r16,zero
   915a0:	0023883a 	mov	r17,zero
   915a4:	1025883a 	mov	r18,r2
   915a8:	3027883a 	mov	r19,r6
   915ac:	32ff9e2e 	bgeu	r6,r11,91428 <__muldf3+0x1bc>
   915b0:	00800044 	movi	r2,1
   915b4:	8089883a 	add	r4,r16,r2
   915b8:	240d803a 	cmpltu	r6,r4,r16
   915bc:	344d883a 	add	r6,r6,r17
   915c0:	2021883a 	mov	r16,r4
   915c4:	3023883a 	mov	r17,r6
   915c8:	003f9806 	br	9142c <__muldf3+0x1c0>
   915cc:	403fe71e 	bne	r8,zero,9156c <__muldf3+0x300>
   915d0:	01004004 	movi	r4,256
   915d4:	4904703a 	and	r2,r9,r4
   915d8:	10c4b03a 	or	r2,r2,r3
   915dc:	103fe31e 	bne	r2,zero,9156c <__muldf3+0x300>
   915e0:	94c4b03a 	or	r2,r18,r19
   915e4:	103fe126 	beq	r2,zero,9156c <__muldf3+0x300>
   915e8:	49c5883a 	add	r2,r9,r7
   915ec:	1251803a 	cmpltu	r8,r2,r9
   915f0:	4291883a 	add	r8,r8,r10
   915f4:	013fc004 	movi	r4,-256
   915f8:	1112703a 	and	r9,r2,r4
   915fc:	4015883a 	mov	r10,r8
   91600:	003fda06 	br	9156c <__muldf3+0x300>
   91604:	6813883a 	mov	r9,r13
   91608:	003fce06 	br	91544 <__muldf3+0x2d8>
   9160c:	143f7c36 	bltu	r2,r16,91400 <__muldf3+0x194>
   91610:	003fdd06 	br	91588 <__muldf3+0x31c>
   91614:	12bf852e 	bgeu	r2,r10,9142c <__muldf3+0x1c0>
   91618:	003fe506 	br	915b0 <__muldf3+0x344>
   9161c:	00800084 	movi	r2,2
   91620:	20bf351e 	bne	r4,r2,912f8 <__muldf3+0x8c>
   91624:	010002b4 	movhi	r4,10
   91628:	2102a204 	addi	r4,r4,2696
   9162c:	003f3f06 	br	9132c <__muldf3+0xc0>

00091630 <__divdf3>:
   91630:	deffed04 	addi	sp,sp,-76
   91634:	dcc01115 	stw	r19,68(sp)
   91638:	dcc00404 	addi	r19,sp,16
   9163c:	2011883a 	mov	r8,r4
   91640:	2813883a 	mov	r9,r5
   91644:	dc000e15 	stw	r16,56(sp)
   91648:	d809883a 	mov	r4,sp
   9164c:	980b883a 	mov	r5,r19
   91650:	dc000904 	addi	r16,sp,36
   91654:	dfc01215 	stw	ra,72(sp)
   91658:	da400115 	stw	r9,4(sp)
   9165c:	d9c00315 	stw	r7,12(sp)
   91660:	da000015 	stw	r8,0(sp)
   91664:	d9800215 	stw	r6,8(sp)
   91668:	dc801015 	stw	r18,64(sp)
   9166c:	dc400f15 	stw	r17,60(sp)
   91670:	009234c0 	call	9234c <__unpack_d>
   91674:	d9000204 	addi	r4,sp,8
   91678:	800b883a 	mov	r5,r16
   9167c:	009234c0 	call	9234c <__unpack_d>
   91680:	d9000417 	ldw	r4,16(sp)
   91684:	00800044 	movi	r2,1
   91688:	11000b2e 	bgeu	r2,r4,916b8 <__divdf3+0x88>
   9168c:	d9400917 	ldw	r5,36(sp)
   91690:	1140762e 	bgeu	r2,r5,9186c <__divdf3+0x23c>
   91694:	d8800517 	ldw	r2,20(sp)
   91698:	d8c00a17 	ldw	r3,40(sp)
   9169c:	01800104 	movi	r6,4
   916a0:	10c4f03a 	xor	r2,r2,r3
   916a4:	d8800515 	stw	r2,20(sp)
   916a8:	21800226 	beq	r4,r6,916b4 <__divdf3+0x84>
   916ac:	00800084 	movi	r2,2
   916b0:	2080141e 	bne	r4,r2,91704 <__divdf3+0xd4>
   916b4:	29000926 	beq	r5,r4,916dc <__divdf3+0xac>
   916b8:	9809883a 	mov	r4,r19
   916bc:	00920380 	call	92038 <__pack_d>
   916c0:	dfc01217 	ldw	ra,72(sp)
   916c4:	dcc01117 	ldw	r19,68(sp)
   916c8:	dc801017 	ldw	r18,64(sp)
   916cc:	dc400f17 	ldw	r17,60(sp)
   916d0:	dc000e17 	ldw	r16,56(sp)
   916d4:	dec01304 	addi	sp,sp,76
   916d8:	f800283a 	ret
   916dc:	010002b4 	movhi	r4,10
   916e0:	2102a204 	addi	r4,r4,2696
   916e4:	00920380 	call	92038 <__pack_d>
   916e8:	dfc01217 	ldw	ra,72(sp)
   916ec:	dcc01117 	ldw	r19,68(sp)
   916f0:	dc801017 	ldw	r18,64(sp)
   916f4:	dc400f17 	ldw	r17,60(sp)
   916f8:	dc000e17 	ldw	r16,56(sp)
   916fc:	dec01304 	addi	sp,sp,76
   91700:	f800283a 	ret
   91704:	29805b26 	beq	r5,r6,91874 <__divdf3+0x244>
   91708:	28802d26 	beq	r5,r2,917c0 <__divdf3+0x190>
   9170c:	d8c00617 	ldw	r3,24(sp)
   91710:	d8800b17 	ldw	r2,44(sp)
   91714:	d9c00817 	ldw	r7,32(sp)
   91718:	dc400d17 	ldw	r17,52(sp)
   9171c:	188bc83a 	sub	r5,r3,r2
   91720:	d9800717 	ldw	r6,28(sp)
   91724:	dc000c17 	ldw	r16,48(sp)
   91728:	d9400615 	stw	r5,24(sp)
   9172c:	3c403836 	bltu	r7,r17,91810 <__divdf3+0x1e0>
   91730:	89c03626 	beq	r17,r7,9180c <__divdf3+0x1dc>
   91734:	0015883a 	mov	r10,zero
   91738:	001d883a 	mov	r14,zero
   9173c:	02c40034 	movhi	r11,4096
   91740:	001f883a 	mov	r15,zero
   91744:	003f883a 	mov	ra,zero
   91748:	04800f44 	movi	r18,61
   9174c:	00000f06 	br	9178c <__divdf3+0x15c>
   91750:	601d883a 	mov	r14,r12
   91754:	681f883a 	mov	r15,r13
   91758:	400d883a 	mov	r6,r8
   9175c:	100f883a 	mov	r7,r2
   91760:	3191883a 	add	r8,r6,r6
   91764:	5808d07a 	srli	r4,r11,1
   91768:	4185803a 	cmpltu	r2,r8,r6
   9176c:	39d3883a 	add	r9,r7,r7
   91770:	28c6b03a 	or	r3,r5,r3
   91774:	1245883a 	add	r2,r2,r9
   91778:	1815883a 	mov	r10,r3
   9177c:	2017883a 	mov	r11,r4
   91780:	400d883a 	mov	r6,r8
   91784:	100f883a 	mov	r7,r2
   91788:	fc801726 	beq	ra,r18,917e8 <__divdf3+0x1b8>
   9178c:	580a97fa 	slli	r5,r11,31
   91790:	5006d07a 	srli	r3,r10,1
   91794:	ffc00044 	addi	ra,ra,1
   91798:	3c7ff136 	bltu	r7,r17,91760 <__divdf3+0x130>
   9179c:	3411c83a 	sub	r8,r6,r16
   917a0:	3205803a 	cmpltu	r2,r6,r8
   917a4:	3c53c83a 	sub	r9,r7,r17
   917a8:	7298b03a 	or	r12,r14,r10
   917ac:	7adab03a 	or	r13,r15,r11
   917b0:	4885c83a 	sub	r2,r9,r2
   917b4:	89ffe61e 	bne	r17,r7,91750 <__divdf3+0x120>
   917b8:	343fe936 	bltu	r6,r16,91760 <__divdf3+0x130>
   917bc:	003fe406 	br	91750 <__divdf3+0x120>
   917c0:	9809883a 	mov	r4,r19
   917c4:	d9800415 	stw	r6,16(sp)
   917c8:	00920380 	call	92038 <__pack_d>
   917cc:	dfc01217 	ldw	ra,72(sp)
   917d0:	dcc01117 	ldw	r19,68(sp)
   917d4:	dc801017 	ldw	r18,64(sp)
   917d8:	dc400f17 	ldw	r17,60(sp)
   917dc:	dc000e17 	ldw	r16,56(sp)
   917e0:	dec01304 	addi	sp,sp,76
   917e4:	f800283a 	ret
   917e8:	00803fc4 	movi	r2,255
   917ec:	7090703a 	and	r8,r14,r2
   917f0:	00802004 	movi	r2,128
   917f4:	0007883a 	mov	r3,zero
   917f8:	0013883a 	mov	r9,zero
   917fc:	40800d26 	beq	r8,r2,91834 <__divdf3+0x204>
   91800:	dbc00815 	stw	r15,32(sp)
   91804:	db800715 	stw	r14,28(sp)
   91808:	003fab06 	br	916b8 <__divdf3+0x88>
   9180c:	343fc92e 	bgeu	r6,r16,91734 <__divdf3+0x104>
   91810:	3185883a 	add	r2,r6,r6
   91814:	1189803a 	cmpltu	r4,r2,r6
   91818:	39c7883a 	add	r3,r7,r7
   9181c:	20c9883a 	add	r4,r4,r3
   91820:	297fffc4 	addi	r5,r5,-1
   91824:	100d883a 	mov	r6,r2
   91828:	200f883a 	mov	r7,r4
   9182c:	d9400615 	stw	r5,24(sp)
   91830:	003fc006 	br	91734 <__divdf3+0x104>
   91834:	483ff21e 	bne	r9,zero,91800 <__divdf3+0x1d0>
   91838:	01004004 	movi	r4,256
   9183c:	7104703a 	and	r2,r14,r4
   91840:	10c4b03a 	or	r2,r2,r3
   91844:	103fee1e 	bne	r2,zero,91800 <__divdf3+0x1d0>
   91848:	31c4b03a 	or	r2,r6,r7
   9184c:	103fec26 	beq	r2,zero,91800 <__divdf3+0x1d0>
   91850:	7205883a 	add	r2,r14,r8
   91854:	1391803a 	cmpltu	r8,r2,r14
   91858:	43d1883a 	add	r8,r8,r15
   9185c:	013fc004 	movi	r4,-256
   91860:	111c703a 	and	r14,r2,r4
   91864:	401f883a 	mov	r15,r8
   91868:	003fe506 	br	91800 <__divdf3+0x1d0>
   9186c:	8009883a 	mov	r4,r16
   91870:	003f9206 	br	916bc <__divdf3+0x8c>
   91874:	9809883a 	mov	r4,r19
   91878:	d8000715 	stw	zero,28(sp)
   9187c:	d8000815 	stw	zero,32(sp)
   91880:	d8000615 	stw	zero,24(sp)
   91884:	003f8d06 	br	916bc <__divdf3+0x8c>

00091888 <__eqdf2>:
   91888:	deffef04 	addi	sp,sp,-68
   9188c:	dc400f15 	stw	r17,60(sp)
   91890:	dc400404 	addi	r17,sp,16
   91894:	2005883a 	mov	r2,r4
   91898:	2807883a 	mov	r3,r5
   9189c:	dc000e15 	stw	r16,56(sp)
   918a0:	d809883a 	mov	r4,sp
   918a4:	880b883a 	mov	r5,r17
   918a8:	dc000904 	addi	r16,sp,36
   918ac:	d8c00115 	stw	r3,4(sp)
   918b0:	d8800015 	stw	r2,0(sp)
   918b4:	d9800215 	stw	r6,8(sp)
   918b8:	dfc01015 	stw	ra,64(sp)
   918bc:	d9c00315 	stw	r7,12(sp)
   918c0:	009234c0 	call	9234c <__unpack_d>
   918c4:	d9000204 	addi	r4,sp,8
   918c8:	800b883a 	mov	r5,r16
   918cc:	009234c0 	call	9234c <__unpack_d>
   918d0:	d8800417 	ldw	r2,16(sp)
   918d4:	00c00044 	movi	r3,1
   918d8:	180d883a 	mov	r6,r3
   918dc:	1880062e 	bgeu	r3,r2,918f8 <__eqdf2+0x70>
   918e0:	d8800917 	ldw	r2,36(sp)
   918e4:	8809883a 	mov	r4,r17
   918e8:	800b883a 	mov	r5,r16
   918ec:	1880022e 	bgeu	r3,r2,918f8 <__eqdf2+0x70>
   918f0:	00924840 	call	92484 <__fpcmp_parts_d>
   918f4:	100d883a 	mov	r6,r2
   918f8:	3005883a 	mov	r2,r6
   918fc:	dfc01017 	ldw	ra,64(sp)
   91900:	dc400f17 	ldw	r17,60(sp)
   91904:	dc000e17 	ldw	r16,56(sp)
   91908:	dec01104 	addi	sp,sp,68
   9190c:	f800283a 	ret

00091910 <__nedf2>:
   91910:	deffef04 	addi	sp,sp,-68
   91914:	dc400f15 	stw	r17,60(sp)
   91918:	dc400404 	addi	r17,sp,16
   9191c:	2005883a 	mov	r2,r4
   91920:	2807883a 	mov	r3,r5
   91924:	dc000e15 	stw	r16,56(sp)
   91928:	d809883a 	mov	r4,sp
   9192c:	880b883a 	mov	r5,r17
   91930:	dc000904 	addi	r16,sp,36
   91934:	d8c00115 	stw	r3,4(sp)
   91938:	d8800015 	stw	r2,0(sp)
   9193c:	d9800215 	stw	r6,8(sp)
   91940:	dfc01015 	stw	ra,64(sp)
   91944:	d9c00315 	stw	r7,12(sp)
   91948:	009234c0 	call	9234c <__unpack_d>
   9194c:	d9000204 	addi	r4,sp,8
   91950:	800b883a 	mov	r5,r16
   91954:	009234c0 	call	9234c <__unpack_d>
   91958:	d8800417 	ldw	r2,16(sp)
   9195c:	00c00044 	movi	r3,1
   91960:	180d883a 	mov	r6,r3
   91964:	1880062e 	bgeu	r3,r2,91980 <__nedf2+0x70>
   91968:	d8800917 	ldw	r2,36(sp)
   9196c:	8809883a 	mov	r4,r17
   91970:	800b883a 	mov	r5,r16
   91974:	1880022e 	bgeu	r3,r2,91980 <__nedf2+0x70>
   91978:	00924840 	call	92484 <__fpcmp_parts_d>
   9197c:	100d883a 	mov	r6,r2
   91980:	3005883a 	mov	r2,r6
   91984:	dfc01017 	ldw	ra,64(sp)
   91988:	dc400f17 	ldw	r17,60(sp)
   9198c:	dc000e17 	ldw	r16,56(sp)
   91990:	dec01104 	addi	sp,sp,68
   91994:	f800283a 	ret

00091998 <__gtdf2>:
   91998:	deffef04 	addi	sp,sp,-68
   9199c:	dc400f15 	stw	r17,60(sp)
   919a0:	dc400404 	addi	r17,sp,16
   919a4:	2005883a 	mov	r2,r4
   919a8:	2807883a 	mov	r3,r5
   919ac:	dc000e15 	stw	r16,56(sp)
   919b0:	d809883a 	mov	r4,sp
   919b4:	880b883a 	mov	r5,r17
   919b8:	dc000904 	addi	r16,sp,36
   919bc:	d8c00115 	stw	r3,4(sp)
   919c0:	d8800015 	stw	r2,0(sp)
   919c4:	d9800215 	stw	r6,8(sp)
   919c8:	dfc01015 	stw	ra,64(sp)
   919cc:	d9c00315 	stw	r7,12(sp)
   919d0:	009234c0 	call	9234c <__unpack_d>
   919d4:	d9000204 	addi	r4,sp,8
   919d8:	800b883a 	mov	r5,r16
   919dc:	009234c0 	call	9234c <__unpack_d>
   919e0:	d8800417 	ldw	r2,16(sp)
   919e4:	00c00044 	movi	r3,1
   919e8:	01bfffc4 	movi	r6,-1
   919ec:	1880062e 	bgeu	r3,r2,91a08 <__gtdf2+0x70>
   919f0:	d8800917 	ldw	r2,36(sp)
   919f4:	8809883a 	mov	r4,r17
   919f8:	800b883a 	mov	r5,r16
   919fc:	1880022e 	bgeu	r3,r2,91a08 <__gtdf2+0x70>
   91a00:	00924840 	call	92484 <__fpcmp_parts_d>
   91a04:	100d883a 	mov	r6,r2
   91a08:	3005883a 	mov	r2,r6
   91a0c:	dfc01017 	ldw	ra,64(sp)
   91a10:	dc400f17 	ldw	r17,60(sp)
   91a14:	dc000e17 	ldw	r16,56(sp)
   91a18:	dec01104 	addi	sp,sp,68
   91a1c:	f800283a 	ret

00091a20 <__gedf2>:
   91a20:	deffef04 	addi	sp,sp,-68
   91a24:	dc400f15 	stw	r17,60(sp)
   91a28:	dc400404 	addi	r17,sp,16
   91a2c:	2005883a 	mov	r2,r4
   91a30:	2807883a 	mov	r3,r5
   91a34:	dc000e15 	stw	r16,56(sp)
   91a38:	d809883a 	mov	r4,sp
   91a3c:	880b883a 	mov	r5,r17
   91a40:	dc000904 	addi	r16,sp,36
   91a44:	d8c00115 	stw	r3,4(sp)
   91a48:	d8800015 	stw	r2,0(sp)
   91a4c:	d9800215 	stw	r6,8(sp)
   91a50:	dfc01015 	stw	ra,64(sp)
   91a54:	d9c00315 	stw	r7,12(sp)
   91a58:	009234c0 	call	9234c <__unpack_d>
   91a5c:	d9000204 	addi	r4,sp,8
   91a60:	800b883a 	mov	r5,r16
   91a64:	009234c0 	call	9234c <__unpack_d>
   91a68:	d8800417 	ldw	r2,16(sp)
   91a6c:	00c00044 	movi	r3,1
   91a70:	01bfffc4 	movi	r6,-1
   91a74:	1880062e 	bgeu	r3,r2,91a90 <__gedf2+0x70>
   91a78:	d8800917 	ldw	r2,36(sp)
   91a7c:	8809883a 	mov	r4,r17
   91a80:	800b883a 	mov	r5,r16
   91a84:	1880022e 	bgeu	r3,r2,91a90 <__gedf2+0x70>
   91a88:	00924840 	call	92484 <__fpcmp_parts_d>
   91a8c:	100d883a 	mov	r6,r2
   91a90:	3005883a 	mov	r2,r6
   91a94:	dfc01017 	ldw	ra,64(sp)
   91a98:	dc400f17 	ldw	r17,60(sp)
   91a9c:	dc000e17 	ldw	r16,56(sp)
   91aa0:	dec01104 	addi	sp,sp,68
   91aa4:	f800283a 	ret

00091aa8 <__ltdf2>:
   91aa8:	deffef04 	addi	sp,sp,-68
   91aac:	dc400f15 	stw	r17,60(sp)
   91ab0:	dc400404 	addi	r17,sp,16
   91ab4:	2005883a 	mov	r2,r4
   91ab8:	2807883a 	mov	r3,r5
   91abc:	dc000e15 	stw	r16,56(sp)
   91ac0:	d809883a 	mov	r4,sp
   91ac4:	880b883a 	mov	r5,r17
   91ac8:	dc000904 	addi	r16,sp,36
   91acc:	d8c00115 	stw	r3,4(sp)
   91ad0:	d8800015 	stw	r2,0(sp)
   91ad4:	d9800215 	stw	r6,8(sp)
   91ad8:	dfc01015 	stw	ra,64(sp)
   91adc:	d9c00315 	stw	r7,12(sp)
   91ae0:	009234c0 	call	9234c <__unpack_d>
   91ae4:	d9000204 	addi	r4,sp,8
   91ae8:	800b883a 	mov	r5,r16
   91aec:	009234c0 	call	9234c <__unpack_d>
   91af0:	d8800417 	ldw	r2,16(sp)
   91af4:	00c00044 	movi	r3,1
   91af8:	180d883a 	mov	r6,r3
   91afc:	1880062e 	bgeu	r3,r2,91b18 <__ltdf2+0x70>
   91b00:	d8800917 	ldw	r2,36(sp)
   91b04:	8809883a 	mov	r4,r17
   91b08:	800b883a 	mov	r5,r16
   91b0c:	1880022e 	bgeu	r3,r2,91b18 <__ltdf2+0x70>
   91b10:	00924840 	call	92484 <__fpcmp_parts_d>
   91b14:	100d883a 	mov	r6,r2
   91b18:	3005883a 	mov	r2,r6
   91b1c:	dfc01017 	ldw	ra,64(sp)
   91b20:	dc400f17 	ldw	r17,60(sp)
   91b24:	dc000e17 	ldw	r16,56(sp)
   91b28:	dec01104 	addi	sp,sp,68
   91b2c:	f800283a 	ret

00091b30 <__floatsidf>:
   91b30:	2006d7fa 	srli	r3,r4,31
   91b34:	defff604 	addi	sp,sp,-40
   91b38:	008000c4 	movi	r2,3
   91b3c:	dfc00915 	stw	ra,36(sp)
   91b40:	dcc00815 	stw	r19,32(sp)
   91b44:	dc800715 	stw	r18,28(sp)
   91b48:	dc400615 	stw	r17,24(sp)
   91b4c:	dc000515 	stw	r16,20(sp)
   91b50:	d8800015 	stw	r2,0(sp)
   91b54:	d8c00115 	stw	r3,4(sp)
   91b58:	20000f1e 	bne	r4,zero,91b98 <__floatsidf+0x68>
   91b5c:	00800084 	movi	r2,2
   91b60:	d8800015 	stw	r2,0(sp)
   91b64:	d809883a 	mov	r4,sp
   91b68:	00920380 	call	92038 <__pack_d>
   91b6c:	1009883a 	mov	r4,r2
   91b70:	180b883a 	mov	r5,r3
   91b74:	2005883a 	mov	r2,r4
   91b78:	2807883a 	mov	r3,r5
   91b7c:	dfc00917 	ldw	ra,36(sp)
   91b80:	dcc00817 	ldw	r19,32(sp)
   91b84:	dc800717 	ldw	r18,28(sp)
   91b88:	dc400617 	ldw	r17,24(sp)
   91b8c:	dc000517 	ldw	r16,20(sp)
   91b90:	dec00a04 	addi	sp,sp,40
   91b94:	f800283a 	ret
   91b98:	00800f04 	movi	r2,60
   91b9c:	1807003a 	cmpeq	r3,r3,zero
   91ba0:	d8800215 	stw	r2,8(sp)
   91ba4:	18001126 	beq	r3,zero,91bec <__floatsidf+0xbc>
   91ba8:	0027883a 	mov	r19,zero
   91bac:	2025883a 	mov	r18,r4
   91bb0:	d9000315 	stw	r4,12(sp)
   91bb4:	dcc00415 	stw	r19,16(sp)
   91bb8:	0091fb80 	call	91fb8 <__clzsi2>
   91bbc:	11000744 	addi	r4,r2,29
   91bc0:	013fe80e 	bge	zero,r4,91b64 <__floatsidf+0x34>
   91bc4:	10bfff44 	addi	r2,r2,-3
   91bc8:	10000c16 	blt	r2,zero,91bfc <__floatsidf+0xcc>
   91bcc:	90a2983a 	sll	r17,r18,r2
   91bd0:	0021883a 	mov	r16,zero
   91bd4:	d8800217 	ldw	r2,8(sp)
   91bd8:	dc400415 	stw	r17,16(sp)
   91bdc:	dc000315 	stw	r16,12(sp)
   91be0:	1105c83a 	sub	r2,r2,r4
   91be4:	d8800215 	stw	r2,8(sp)
   91be8:	003fde06 	br	91b64 <__floatsidf+0x34>
   91bec:	00a00034 	movhi	r2,32768
   91bf0:	20800a26 	beq	r4,r2,91c1c <__floatsidf+0xec>
   91bf4:	0109c83a 	sub	r4,zero,r4
   91bf8:	003feb06 	br	91ba8 <__floatsidf+0x78>
   91bfc:	9006d07a 	srli	r3,r18,1
   91c00:	008007c4 	movi	r2,31
   91c04:	1105c83a 	sub	r2,r2,r4
   91c08:	1886d83a 	srl	r3,r3,r2
   91c0c:	9922983a 	sll	r17,r19,r4
   91c10:	9120983a 	sll	r16,r18,r4
   91c14:	1c62b03a 	or	r17,r3,r17
   91c18:	003fee06 	br	91bd4 <__floatsidf+0xa4>
   91c1c:	0009883a 	mov	r4,zero
   91c20:	01707834 	movhi	r5,49632
   91c24:	003fd306 	br	91b74 <__floatsidf+0x44>

00091c28 <__fixdfsi>:
   91c28:	defff804 	addi	sp,sp,-32
   91c2c:	2005883a 	mov	r2,r4
   91c30:	2807883a 	mov	r3,r5
   91c34:	d809883a 	mov	r4,sp
   91c38:	d9400204 	addi	r5,sp,8
   91c3c:	d8c00115 	stw	r3,4(sp)
   91c40:	d8800015 	stw	r2,0(sp)
   91c44:	dfc00715 	stw	ra,28(sp)
   91c48:	009234c0 	call	9234c <__unpack_d>
   91c4c:	d8c00217 	ldw	r3,8(sp)
   91c50:	00800084 	movi	r2,2
   91c54:	1880051e 	bne	r3,r2,91c6c <__fixdfsi+0x44>
   91c58:	0007883a 	mov	r3,zero
   91c5c:	1805883a 	mov	r2,r3
   91c60:	dfc00717 	ldw	ra,28(sp)
   91c64:	dec00804 	addi	sp,sp,32
   91c68:	f800283a 	ret
   91c6c:	00800044 	movi	r2,1
   91c70:	10fff92e 	bgeu	r2,r3,91c58 <__fixdfsi+0x30>
   91c74:	00800104 	movi	r2,4
   91c78:	18800426 	beq	r3,r2,91c8c <__fixdfsi+0x64>
   91c7c:	d8c00417 	ldw	r3,16(sp)
   91c80:	183ff516 	blt	r3,zero,91c58 <__fixdfsi+0x30>
   91c84:	00800784 	movi	r2,30
   91c88:	10c0080e 	bge	r2,r3,91cac <__fixdfsi+0x84>
   91c8c:	d8800317 	ldw	r2,12(sp)
   91c90:	1000121e 	bne	r2,zero,91cdc <__fixdfsi+0xb4>
   91c94:	00e00034 	movhi	r3,32768
   91c98:	18ffffc4 	addi	r3,r3,-1
   91c9c:	1805883a 	mov	r2,r3
   91ca0:	dfc00717 	ldw	ra,28(sp)
   91ca4:	dec00804 	addi	sp,sp,32
   91ca8:	f800283a 	ret
   91cac:	00800f04 	movi	r2,60
   91cb0:	10d1c83a 	sub	r8,r2,r3
   91cb4:	40bff804 	addi	r2,r8,-32
   91cb8:	d9800517 	ldw	r6,20(sp)
   91cbc:	d9c00617 	ldw	r7,24(sp)
   91cc0:	10000816 	blt	r2,zero,91ce4 <__fixdfsi+0xbc>
   91cc4:	3888d83a 	srl	r4,r7,r2
   91cc8:	d8800317 	ldw	r2,12(sp)
   91ccc:	2007883a 	mov	r3,r4
   91cd0:	103fe226 	beq	r2,zero,91c5c <__fixdfsi+0x34>
   91cd4:	0107c83a 	sub	r3,zero,r4
   91cd8:	003fe006 	br	91c5c <__fixdfsi+0x34>
   91cdc:	00e00034 	movhi	r3,32768
   91ce0:	003fde06 	br	91c5c <__fixdfsi+0x34>
   91ce4:	39c7883a 	add	r3,r7,r7
   91ce8:	008007c4 	movi	r2,31
   91cec:	1205c83a 	sub	r2,r2,r8
   91cf0:	1886983a 	sll	r3,r3,r2
   91cf4:	3208d83a 	srl	r4,r6,r8
   91cf8:	1908b03a 	or	r4,r3,r4
   91cfc:	003ff206 	br	91cc8 <__fixdfsi+0xa0>

00091d00 <__floatunsidf>:
   91d00:	defff204 	addi	sp,sp,-56
   91d04:	dfc00d15 	stw	ra,52(sp)
   91d08:	ddc00c15 	stw	r23,48(sp)
   91d0c:	dd800b15 	stw	r22,44(sp)
   91d10:	dd400a15 	stw	r21,40(sp)
   91d14:	dd000915 	stw	r20,36(sp)
   91d18:	dcc00815 	stw	r19,32(sp)
   91d1c:	dc800715 	stw	r18,28(sp)
   91d20:	dc400615 	stw	r17,24(sp)
   91d24:	dc000515 	stw	r16,20(sp)
   91d28:	d8000115 	stw	zero,4(sp)
   91d2c:	20000f1e 	bne	r4,zero,91d6c <__floatunsidf+0x6c>
   91d30:	00800084 	movi	r2,2
   91d34:	d8800015 	stw	r2,0(sp)
   91d38:	d809883a 	mov	r4,sp
   91d3c:	00920380 	call	92038 <__pack_d>
   91d40:	dfc00d17 	ldw	ra,52(sp)
   91d44:	ddc00c17 	ldw	r23,48(sp)
   91d48:	dd800b17 	ldw	r22,44(sp)
   91d4c:	dd400a17 	ldw	r21,40(sp)
   91d50:	dd000917 	ldw	r20,36(sp)
   91d54:	dcc00817 	ldw	r19,32(sp)
   91d58:	dc800717 	ldw	r18,28(sp)
   91d5c:	dc400617 	ldw	r17,24(sp)
   91d60:	dc000517 	ldw	r16,20(sp)
   91d64:	dec00e04 	addi	sp,sp,56
   91d68:	f800283a 	ret
   91d6c:	008000c4 	movi	r2,3
   91d70:	00c00f04 	movi	r3,60
   91d74:	002f883a 	mov	r23,zero
   91d78:	202d883a 	mov	r22,r4
   91d7c:	d8800015 	stw	r2,0(sp)
   91d80:	d8c00215 	stw	r3,8(sp)
   91d84:	d9000315 	stw	r4,12(sp)
   91d88:	ddc00415 	stw	r23,16(sp)
   91d8c:	0091fb80 	call	91fb8 <__clzsi2>
   91d90:	12400744 	addi	r9,r2,29
   91d94:	48000b16 	blt	r9,zero,91dc4 <__floatunsidf+0xc4>
   91d98:	483fe726 	beq	r9,zero,91d38 <__floatunsidf+0x38>
   91d9c:	10bfff44 	addi	r2,r2,-3
   91da0:	10002e16 	blt	r2,zero,91e5c <__floatunsidf+0x15c>
   91da4:	b0a2983a 	sll	r17,r22,r2
   91da8:	0021883a 	mov	r16,zero
   91dac:	d8800217 	ldw	r2,8(sp)
   91db0:	dc400415 	stw	r17,16(sp)
   91db4:	dc000315 	stw	r16,12(sp)
   91db8:	1245c83a 	sub	r2,r2,r9
   91dbc:	d8800215 	stw	r2,8(sp)
   91dc0:	003fdd06 	br	91d38 <__floatunsidf+0x38>
   91dc4:	0255c83a 	sub	r10,zero,r9
   91dc8:	51bff804 	addi	r6,r10,-32
   91dcc:	30001b16 	blt	r6,zero,91e3c <__floatunsidf+0x13c>
   91dd0:	b9a8d83a 	srl	r20,r23,r6
   91dd4:	002b883a 	mov	r21,zero
   91dd8:	000f883a 	mov	r7,zero
   91ddc:	01000044 	movi	r4,1
   91de0:	0011883a 	mov	r8,zero
   91de4:	30002516 	blt	r6,zero,91e7c <__floatunsidf+0x17c>
   91de8:	21a6983a 	sll	r19,r4,r6
   91dec:	0025883a 	mov	r18,zero
   91df0:	00bfffc4 	movi	r2,-1
   91df4:	9089883a 	add	r4,r18,r2
   91df8:	988b883a 	add	r5,r19,r2
   91dfc:	248d803a 	cmpltu	r6,r4,r18
   91e00:	314b883a 	add	r5,r6,r5
   91e04:	b104703a 	and	r2,r22,r4
   91e08:	b946703a 	and	r3,r23,r5
   91e0c:	10c4b03a 	or	r2,r2,r3
   91e10:	10000226 	beq	r2,zero,91e1c <__floatunsidf+0x11c>
   91e14:	01c00044 	movi	r7,1
   91e18:	0011883a 	mov	r8,zero
   91e1c:	d9000217 	ldw	r4,8(sp)
   91e20:	a1c4b03a 	or	r2,r20,r7
   91e24:	aa06b03a 	or	r3,r21,r8
   91e28:	2249c83a 	sub	r4,r4,r9
   91e2c:	d8c00415 	stw	r3,16(sp)
   91e30:	d9000215 	stw	r4,8(sp)
   91e34:	d8800315 	stw	r2,12(sp)
   91e38:	003fbf06 	br	91d38 <__floatunsidf+0x38>
   91e3c:	bdc7883a 	add	r3,r23,r23
   91e40:	008007c4 	movi	r2,31
   91e44:	1285c83a 	sub	r2,r2,r10
   91e48:	1886983a 	sll	r3,r3,r2
   91e4c:	b2a8d83a 	srl	r20,r22,r10
   91e50:	baaad83a 	srl	r21,r23,r10
   91e54:	1d28b03a 	or	r20,r3,r20
   91e58:	003fdf06 	br	91dd8 <__floatunsidf+0xd8>
   91e5c:	b006d07a 	srli	r3,r22,1
   91e60:	008007c4 	movi	r2,31
   91e64:	1245c83a 	sub	r2,r2,r9
   91e68:	1886d83a 	srl	r3,r3,r2
   91e6c:	ba62983a 	sll	r17,r23,r9
   91e70:	b260983a 	sll	r16,r22,r9
   91e74:	1c62b03a 	or	r17,r3,r17
   91e78:	003fcc06 	br	91dac <__floatunsidf+0xac>
   91e7c:	2006d07a 	srli	r3,r4,1
   91e80:	008007c4 	movi	r2,31
   91e84:	1285c83a 	sub	r2,r2,r10
   91e88:	18a6d83a 	srl	r19,r3,r2
   91e8c:	22a4983a 	sll	r18,r4,r10
   91e90:	003fd706 	br	91df0 <__floatunsidf+0xf0>

00091e94 <__muldi3>:
   91e94:	defff204 	addi	sp,sp,-56
   91e98:	df000c15 	stw	fp,48(sp)
   91e9c:	3038d43a 	srli	fp,r6,16
   91ea0:	dd000815 	stw	r20,32(sp)
   91ea4:	dc400515 	stw	r17,20(sp)
   91ea8:	2028d43a 	srli	r20,r4,16
   91eac:	247fffcc 	andi	r17,r4,65535
   91eb0:	dc000415 	stw	r16,16(sp)
   91eb4:	343fffcc 	andi	r16,r6,65535
   91eb8:	dcc00715 	stw	r19,28(sp)
   91ebc:	d9000015 	stw	r4,0(sp)
   91ec0:	2827883a 	mov	r19,r5
   91ec4:	8809883a 	mov	r4,r17
   91ec8:	d9400115 	stw	r5,4(sp)
   91ecc:	800b883a 	mov	r5,r16
   91ed0:	d9800215 	stw	r6,8(sp)
   91ed4:	dfc00d15 	stw	ra,52(sp)
   91ed8:	d9c00315 	stw	r7,12(sp)
   91edc:	dd800a15 	stw	r22,40(sp)
   91ee0:	dd400915 	stw	r21,36(sp)
   91ee4:	302d883a 	mov	r22,r6
   91ee8:	ddc00b15 	stw	r23,44(sp)
   91eec:	dc800615 	stw	r18,24(sp)
   91ef0:	00886b00 	call	886b0 <__mulsi3>
   91ef4:	8809883a 	mov	r4,r17
   91ef8:	e00b883a 	mov	r5,fp
   91efc:	102b883a 	mov	r21,r2
   91f00:	00886b00 	call	886b0 <__mulsi3>
   91f04:	800b883a 	mov	r5,r16
   91f08:	a009883a 	mov	r4,r20
   91f0c:	1023883a 	mov	r17,r2
   91f10:	00886b00 	call	886b0 <__mulsi3>
   91f14:	a009883a 	mov	r4,r20
   91f18:	e00b883a 	mov	r5,fp
   91f1c:	1021883a 	mov	r16,r2
   91f20:	00886b00 	call	886b0 <__mulsi3>
   91f24:	a8ffffcc 	andi	r3,r21,65535
   91f28:	a82ad43a 	srli	r21,r21,16
   91f2c:	8c23883a 	add	r17,r17,r16
   91f30:	1011883a 	mov	r8,r2
   91f34:	ac6b883a 	add	r21,r21,r17
   91f38:	a804943a 	slli	r2,r21,16
   91f3c:	b009883a 	mov	r4,r22
   91f40:	980b883a 	mov	r5,r19
   91f44:	10c7883a 	add	r3,r2,r3
   91f48:	a812d43a 	srli	r9,r21,16
   91f4c:	180d883a 	mov	r6,r3
   91f50:	ac00022e 	bgeu	r21,r16,91f5c <__muldi3+0xc8>
   91f54:	00800074 	movhi	r2,1
   91f58:	4091883a 	add	r8,r8,r2
   91f5c:	4267883a 	add	r19,r8,r9
   91f60:	302d883a 	mov	r22,r6
   91f64:	00886b00 	call	886b0 <__mulsi3>
   91f68:	d9400317 	ldw	r5,12(sp)
   91f6c:	d9000017 	ldw	r4,0(sp)
   91f70:	1023883a 	mov	r17,r2
   91f74:	00886b00 	call	886b0 <__mulsi3>
   91f78:	14cb883a 	add	r5,r2,r19
   91f7c:	894b883a 	add	r5,r17,r5
   91f80:	b005883a 	mov	r2,r22
   91f84:	2807883a 	mov	r3,r5
   91f88:	dfc00d17 	ldw	ra,52(sp)
   91f8c:	df000c17 	ldw	fp,48(sp)
   91f90:	ddc00b17 	ldw	r23,44(sp)
   91f94:	dd800a17 	ldw	r22,40(sp)
   91f98:	dd400917 	ldw	r21,36(sp)
   91f9c:	dd000817 	ldw	r20,32(sp)
   91fa0:	dcc00717 	ldw	r19,28(sp)
   91fa4:	dc800617 	ldw	r18,24(sp)
   91fa8:	dc400517 	ldw	r17,20(sp)
   91fac:	dc000417 	ldw	r16,16(sp)
   91fb0:	dec00e04 	addi	sp,sp,56
   91fb4:	f800283a 	ret

00091fb8 <__clzsi2>:
   91fb8:	00bfffd4 	movui	r2,65535
   91fbc:	11000e36 	bltu	r2,r4,91ff8 <__clzsi2+0x40>
   91fc0:	00803fc4 	movi	r2,255
   91fc4:	01400204 	movi	r5,8
   91fc8:	0007883a 	mov	r3,zero
   91fcc:	11001036 	bltu	r2,r4,92010 <__clzsi2+0x58>
   91fd0:	000b883a 	mov	r5,zero
   91fd4:	20c6d83a 	srl	r3,r4,r3
   91fd8:	008002b4 	movhi	r2,10
   91fdc:	1082a704 	addi	r2,r2,2716
   91fe0:	1887883a 	add	r3,r3,r2
   91fe4:	18800003 	ldbu	r2,0(r3)
   91fe8:	00c00804 	movi	r3,32
   91fec:	2885883a 	add	r2,r5,r2
   91ff0:	1885c83a 	sub	r2,r3,r2
   91ff4:	f800283a 	ret
   91ff8:	01400404 	movi	r5,16
   91ffc:	00804034 	movhi	r2,256
   92000:	10bfffc4 	addi	r2,r2,-1
   92004:	2807883a 	mov	r3,r5
   92008:	113ff22e 	bgeu	r2,r4,91fd4 <__clzsi2+0x1c>
   9200c:	01400604 	movi	r5,24
   92010:	2807883a 	mov	r3,r5
   92014:	20c6d83a 	srl	r3,r4,r3
   92018:	008002b4 	movhi	r2,10
   9201c:	1082a704 	addi	r2,r2,2716
   92020:	1887883a 	add	r3,r3,r2
   92024:	18800003 	ldbu	r2,0(r3)
   92028:	00c00804 	movi	r3,32
   9202c:	2885883a 	add	r2,r5,r2
   92030:	1885c83a 	sub	r2,r3,r2
   92034:	f800283a 	ret

00092038 <__pack_d>:
   92038:	20c00017 	ldw	r3,0(r4)
   9203c:	defffd04 	addi	sp,sp,-12
   92040:	dc000015 	stw	r16,0(sp)
   92044:	dc800215 	stw	r18,8(sp)
   92048:	dc400115 	stw	r17,4(sp)
   9204c:	00800044 	movi	r2,1
   92050:	22000317 	ldw	r8,12(r4)
   92054:	001f883a 	mov	r15,zero
   92058:	22400417 	ldw	r9,16(r4)
   9205c:	24000117 	ldw	r16,4(r4)
   92060:	10c0552e 	bgeu	r2,r3,921b8 <__pack_d+0x180>
   92064:	00800104 	movi	r2,4
   92068:	18804f26 	beq	r3,r2,921a8 <__pack_d+0x170>
   9206c:	00800084 	movi	r2,2
   92070:	18800226 	beq	r3,r2,9207c <__pack_d+0x44>
   92074:	4244b03a 	or	r2,r8,r9
   92078:	10001a1e 	bne	r2,zero,920e4 <__pack_d+0xac>
   9207c:	000d883a 	mov	r6,zero
   92080:	000f883a 	mov	r7,zero
   92084:	0011883a 	mov	r8,zero
   92088:	00800434 	movhi	r2,16
   9208c:	10bfffc4 	addi	r2,r2,-1
   92090:	301d883a 	mov	r14,r6
   92094:	3884703a 	and	r2,r7,r2
   92098:	400a953a 	slli	r5,r8,20
   9209c:	79bffc2c 	andhi	r6,r15,65520
   920a0:	308cb03a 	or	r6,r6,r2
   920a4:	00e00434 	movhi	r3,32784
   920a8:	18ffffc4 	addi	r3,r3,-1
   920ac:	800497fa 	slli	r2,r16,31
   920b0:	30c6703a 	and	r3,r6,r3
   920b4:	1946b03a 	or	r3,r3,r5
   920b8:	01600034 	movhi	r5,32768
   920bc:	297fffc4 	addi	r5,r5,-1
   920c0:	194a703a 	and	r5,r3,r5
   920c4:	288ab03a 	or	r5,r5,r2
   920c8:	2807883a 	mov	r3,r5
   920cc:	7005883a 	mov	r2,r14
   920d0:	dc800217 	ldw	r18,8(sp)
   920d4:	dc400117 	ldw	r17,4(sp)
   920d8:	dc000017 	ldw	r16,0(sp)
   920dc:	dec00304 	addi	sp,sp,12
   920e0:	f800283a 	ret
   920e4:	21000217 	ldw	r4,8(r4)
   920e8:	00bf0084 	movi	r2,-1022
   920ec:	20803f16 	blt	r4,r2,921ec <__pack_d+0x1b4>
   920f0:	0080ffc4 	movi	r2,1023
   920f4:	11002c16 	blt	r2,r4,921a8 <__pack_d+0x170>
   920f8:	00803fc4 	movi	r2,255
   920fc:	408c703a 	and	r6,r8,r2
   92100:	00802004 	movi	r2,128
   92104:	0007883a 	mov	r3,zero
   92108:	000f883a 	mov	r7,zero
   9210c:	2280ffc4 	addi	r10,r4,1023
   92110:	30801e26 	beq	r6,r2,9218c <__pack_d+0x154>
   92114:	00801fc4 	movi	r2,127
   92118:	4089883a 	add	r4,r8,r2
   9211c:	220d803a 	cmpltu	r6,r4,r8
   92120:	324d883a 	add	r6,r6,r9
   92124:	2011883a 	mov	r8,r4
   92128:	3013883a 	mov	r9,r6
   9212c:	00880034 	movhi	r2,8192
   92130:	10bfffc4 	addi	r2,r2,-1
   92134:	12400d36 	bltu	r2,r9,9216c <__pack_d+0x134>
   92138:	4804963a 	slli	r2,r9,24
   9213c:	400cd23a 	srli	r6,r8,8
   92140:	480ed23a 	srli	r7,r9,8
   92144:	013fffc4 	movi	r4,-1
   92148:	118cb03a 	or	r6,r2,r6
   9214c:	01400434 	movhi	r5,16
   92150:	297fffc4 	addi	r5,r5,-1
   92154:	3104703a 	and	r2,r6,r4
   92158:	3946703a 	and	r3,r7,r5
   9215c:	5201ffcc 	andi	r8,r10,2047
   92160:	100d883a 	mov	r6,r2
   92164:	180f883a 	mov	r7,r3
   92168:	003fc706 	br	92088 <__pack_d+0x50>
   9216c:	480897fa 	slli	r4,r9,31
   92170:	4004d07a 	srli	r2,r8,1
   92174:	4806d07a 	srli	r3,r9,1
   92178:	52800044 	addi	r10,r10,1
   9217c:	2084b03a 	or	r2,r4,r2
   92180:	1011883a 	mov	r8,r2
   92184:	1813883a 	mov	r9,r3
   92188:	003feb06 	br	92138 <__pack_d+0x100>
   9218c:	383fe11e 	bne	r7,zero,92114 <__pack_d+0xdc>
   92190:	01004004 	movi	r4,256
   92194:	4104703a 	and	r2,r8,r4
   92198:	10c4b03a 	or	r2,r2,r3
   9219c:	103fe326 	beq	r2,zero,9212c <__pack_d+0xf4>
   921a0:	3005883a 	mov	r2,r6
   921a4:	003fdc06 	br	92118 <__pack_d+0xe0>
   921a8:	000d883a 	mov	r6,zero
   921ac:	000f883a 	mov	r7,zero
   921b0:	0201ffc4 	movi	r8,2047
   921b4:	003fb406 	br	92088 <__pack_d+0x50>
   921b8:	0005883a 	mov	r2,zero
   921bc:	00c00234 	movhi	r3,8
   921c0:	408cb03a 	or	r6,r8,r2
   921c4:	48ceb03a 	or	r7,r9,r3
   921c8:	013fffc4 	movi	r4,-1
   921cc:	01400434 	movhi	r5,16
   921d0:	297fffc4 	addi	r5,r5,-1
   921d4:	3104703a 	and	r2,r6,r4
   921d8:	3946703a 	and	r3,r7,r5
   921dc:	100d883a 	mov	r6,r2
   921e0:	180f883a 	mov	r7,r3
   921e4:	0201ffc4 	movi	r8,2047
   921e8:	003fa706 	br	92088 <__pack_d+0x50>
   921ec:	1109c83a 	sub	r4,r2,r4
   921f0:	00800e04 	movi	r2,56
   921f4:	11004316 	blt	r2,r4,92304 <__pack_d+0x2cc>
   921f8:	21fff804 	addi	r7,r4,-32
   921fc:	38004516 	blt	r7,zero,92314 <__pack_d+0x2dc>
   92200:	49d8d83a 	srl	r12,r9,r7
   92204:	001b883a 	mov	r13,zero
   92208:	0023883a 	mov	r17,zero
   9220c:	01400044 	movi	r5,1
   92210:	0025883a 	mov	r18,zero
   92214:	38004716 	blt	r7,zero,92334 <__pack_d+0x2fc>
   92218:	29d6983a 	sll	r11,r5,r7
   9221c:	0015883a 	mov	r10,zero
   92220:	00bfffc4 	movi	r2,-1
   92224:	5089883a 	add	r4,r10,r2
   92228:	588b883a 	add	r5,r11,r2
   9222c:	228d803a 	cmpltu	r6,r4,r10
   92230:	314b883a 	add	r5,r6,r5
   92234:	4104703a 	and	r2,r8,r4
   92238:	4946703a 	and	r3,r9,r5
   9223c:	10c4b03a 	or	r2,r2,r3
   92240:	10000226 	beq	r2,zero,9224c <__pack_d+0x214>
   92244:	04400044 	movi	r17,1
   92248:	0025883a 	mov	r18,zero
   9224c:	00803fc4 	movi	r2,255
   92250:	644eb03a 	or	r7,r12,r17
   92254:	3892703a 	and	r9,r7,r2
   92258:	00802004 	movi	r2,128
   9225c:	6c90b03a 	or	r8,r13,r18
   92260:	0015883a 	mov	r10,zero
   92264:	48801626 	beq	r9,r2,922c0 <__pack_d+0x288>
   92268:	01001fc4 	movi	r4,127
   9226c:	3905883a 	add	r2,r7,r4
   92270:	11cd803a 	cmpltu	r6,r2,r7
   92274:	320d883a 	add	r6,r6,r8
   92278:	100f883a 	mov	r7,r2
   9227c:	00840034 	movhi	r2,4096
   92280:	10bfffc4 	addi	r2,r2,-1
   92284:	3011883a 	mov	r8,r6
   92288:	0007883a 	mov	r3,zero
   9228c:	11801b36 	bltu	r2,r6,922fc <__pack_d+0x2c4>
   92290:	4004963a 	slli	r2,r8,24
   92294:	3808d23a 	srli	r4,r7,8
   92298:	400ad23a 	srli	r5,r8,8
   9229c:	1813883a 	mov	r9,r3
   922a0:	1108b03a 	or	r4,r2,r4
   922a4:	00bfffc4 	movi	r2,-1
   922a8:	00c00434 	movhi	r3,16
   922ac:	18ffffc4 	addi	r3,r3,-1
   922b0:	208c703a 	and	r6,r4,r2
   922b4:	28ce703a 	and	r7,r5,r3
   922b8:	4a01ffcc 	andi	r8,r9,2047
   922bc:	003f7206 	br	92088 <__pack_d+0x50>
   922c0:	503fe91e 	bne	r10,zero,92268 <__pack_d+0x230>
   922c4:	01004004 	movi	r4,256
   922c8:	3904703a 	and	r2,r7,r4
   922cc:	0007883a 	mov	r3,zero
   922d0:	10c4b03a 	or	r2,r2,r3
   922d4:	10000626 	beq	r2,zero,922f0 <__pack_d+0x2b8>
   922d8:	3a45883a 	add	r2,r7,r9
   922dc:	11cd803a 	cmpltu	r6,r2,r7
   922e0:	320d883a 	add	r6,r6,r8
   922e4:	100f883a 	mov	r7,r2
   922e8:	3011883a 	mov	r8,r6
   922ec:	0007883a 	mov	r3,zero
   922f0:	00840034 	movhi	r2,4096
   922f4:	10bfffc4 	addi	r2,r2,-1
   922f8:	123fe52e 	bgeu	r2,r8,92290 <__pack_d+0x258>
   922fc:	00c00044 	movi	r3,1
   92300:	003fe306 	br	92290 <__pack_d+0x258>
   92304:	0009883a 	mov	r4,zero
   92308:	0013883a 	mov	r9,zero
   9230c:	000b883a 	mov	r5,zero
   92310:	003fe406 	br	922a4 <__pack_d+0x26c>
   92314:	4a47883a 	add	r3,r9,r9
   92318:	008007c4 	movi	r2,31
   9231c:	1105c83a 	sub	r2,r2,r4
   92320:	1886983a 	sll	r3,r3,r2
   92324:	4118d83a 	srl	r12,r8,r4
   92328:	491ad83a 	srl	r13,r9,r4
   9232c:	1b18b03a 	or	r12,r3,r12
   92330:	003fb506 	br	92208 <__pack_d+0x1d0>
   92334:	2806d07a 	srli	r3,r5,1
   92338:	008007c4 	movi	r2,31
   9233c:	1105c83a 	sub	r2,r2,r4
   92340:	1896d83a 	srl	r11,r3,r2
   92344:	2914983a 	sll	r10,r5,r4
   92348:	003fb506 	br	92220 <__pack_d+0x1e8>

0009234c <__unpack_d>:
   9234c:	20c00117 	ldw	r3,4(r4)
   92350:	22400017 	ldw	r9,0(r4)
   92354:	00800434 	movhi	r2,16
   92358:	10bfffc4 	addi	r2,r2,-1
   9235c:	1808d53a 	srli	r4,r3,20
   92360:	180cd7fa 	srli	r6,r3,31
   92364:	1894703a 	and	r10,r3,r2
   92368:	2201ffcc 	andi	r8,r4,2047
   9236c:	281b883a 	mov	r13,r5
   92370:	4817883a 	mov	r11,r9
   92374:	29800115 	stw	r6,4(r5)
   92378:	5019883a 	mov	r12,r10
   9237c:	40001e1e 	bne	r8,zero,923f8 <__unpack_d+0xac>
   92380:	4a84b03a 	or	r2,r9,r10
   92384:	10001926 	beq	r2,zero,923ec <__unpack_d+0xa0>
   92388:	4804d63a 	srli	r2,r9,24
   9238c:	500c923a 	slli	r6,r10,8
   92390:	013f0084 	movi	r4,-1022
   92394:	00c40034 	movhi	r3,4096
   92398:	18ffffc4 	addi	r3,r3,-1
   9239c:	118cb03a 	or	r6,r2,r6
   923a0:	008000c4 	movi	r2,3
   923a4:	480a923a 	slli	r5,r9,8
   923a8:	68800015 	stw	r2,0(r13)
   923ac:	69000215 	stw	r4,8(r13)
   923b0:	19800b36 	bltu	r3,r6,923e0 <__unpack_d+0x94>
   923b4:	200f883a 	mov	r7,r4
   923b8:	1811883a 	mov	r8,r3
   923bc:	2945883a 	add	r2,r5,r5
   923c0:	1149803a 	cmpltu	r4,r2,r5
   923c4:	3187883a 	add	r3,r6,r6
   923c8:	20c9883a 	add	r4,r4,r3
   923cc:	100b883a 	mov	r5,r2
   923d0:	200d883a 	mov	r6,r4
   923d4:	39ffffc4 	addi	r7,r7,-1
   923d8:	413ff82e 	bgeu	r8,r4,923bc <__unpack_d+0x70>
   923dc:	69c00215 	stw	r7,8(r13)
   923e0:	69800415 	stw	r6,16(r13)
   923e4:	69400315 	stw	r5,12(r13)
   923e8:	f800283a 	ret
   923ec:	00800084 	movi	r2,2
   923f0:	28800015 	stw	r2,0(r5)
   923f4:	f800283a 	ret
   923f8:	0081ffc4 	movi	r2,2047
   923fc:	40800f26 	beq	r8,r2,9243c <__unpack_d+0xf0>
   92400:	480cd63a 	srli	r6,r9,24
   92404:	5006923a 	slli	r3,r10,8
   92408:	4804923a 	slli	r2,r9,8
   9240c:	0009883a 	mov	r4,zero
   92410:	30c6b03a 	or	r3,r6,r3
   92414:	01440034 	movhi	r5,4096
   92418:	110cb03a 	or	r6,r2,r4
   9241c:	423f0044 	addi	r8,r8,-1023
   92420:	194eb03a 	or	r7,r3,r5
   92424:	008000c4 	movi	r2,3
   92428:	69c00415 	stw	r7,16(r13)
   9242c:	6a000215 	stw	r8,8(r13)
   92430:	68800015 	stw	r2,0(r13)
   92434:	69800315 	stw	r6,12(r13)
   92438:	f800283a 	ret
   9243c:	4a84b03a 	or	r2,r9,r10
   92440:	1000031e 	bne	r2,zero,92450 <__unpack_d+0x104>
   92444:	00800104 	movi	r2,4
   92448:	28800015 	stw	r2,0(r5)
   9244c:	f800283a 	ret
   92450:	0009883a 	mov	r4,zero
   92454:	01400234 	movhi	r5,8
   92458:	4904703a 	and	r2,r9,r4
   9245c:	5146703a 	and	r3,r10,r5
   92460:	10c4b03a 	or	r2,r2,r3
   92464:	10000526 	beq	r2,zero,9247c <__unpack_d+0x130>
   92468:	00800044 	movi	r2,1
   9246c:	68800015 	stw	r2,0(r13)
   92470:	6b000415 	stw	r12,16(r13)
   92474:	6ac00315 	stw	r11,12(r13)
   92478:	f800283a 	ret
   9247c:	68000015 	stw	zero,0(r13)
   92480:	003ffb06 	br	92470 <__unpack_d+0x124>

00092484 <__fpcmp_parts_d>:
   92484:	21800017 	ldw	r6,0(r4)
   92488:	00c00044 	movi	r3,1
   9248c:	19800a2e 	bgeu	r3,r6,924b8 <__fpcmp_parts_d+0x34>
   92490:	28800017 	ldw	r2,0(r5)
   92494:	1880082e 	bgeu	r3,r2,924b8 <__fpcmp_parts_d+0x34>
   92498:	00c00104 	movi	r3,4
   9249c:	30c02626 	beq	r6,r3,92538 <__fpcmp_parts_d+0xb4>
   924a0:	10c02226 	beq	r2,r3,9252c <__fpcmp_parts_d+0xa8>
   924a4:	00c00084 	movi	r3,2
   924a8:	30c00526 	beq	r6,r3,924c0 <__fpcmp_parts_d+0x3c>
   924ac:	10c0071e 	bne	r2,r3,924cc <__fpcmp_parts_d+0x48>
   924b0:	20800117 	ldw	r2,4(r4)
   924b4:	1000091e 	bne	r2,zero,924dc <__fpcmp_parts_d+0x58>
   924b8:	00800044 	movi	r2,1
   924bc:	f800283a 	ret
   924c0:	10c01a1e 	bne	r2,r3,9252c <__fpcmp_parts_d+0xa8>
   924c4:	0005883a 	mov	r2,zero
   924c8:	f800283a 	ret
   924cc:	22000117 	ldw	r8,4(r4)
   924d0:	28800117 	ldw	r2,4(r5)
   924d4:	40800326 	beq	r8,r2,924e4 <__fpcmp_parts_d+0x60>
   924d8:	403ff726 	beq	r8,zero,924b8 <__fpcmp_parts_d+0x34>
   924dc:	00bfffc4 	movi	r2,-1
   924e0:	f800283a 	ret
   924e4:	20c00217 	ldw	r3,8(r4)
   924e8:	28800217 	ldw	r2,8(r5)
   924ec:	10fffa16 	blt	r2,r3,924d8 <__fpcmp_parts_d+0x54>
   924f0:	18800916 	blt	r3,r2,92518 <__fpcmp_parts_d+0x94>
   924f4:	21c00417 	ldw	r7,16(r4)
   924f8:	28c00417 	ldw	r3,16(r5)
   924fc:	21800317 	ldw	r6,12(r4)
   92500:	28800317 	ldw	r2,12(r5)
   92504:	19fff436 	bltu	r3,r7,924d8 <__fpcmp_parts_d+0x54>
   92508:	38c00526 	beq	r7,r3,92520 <__fpcmp_parts_d+0x9c>
   9250c:	38c00236 	bltu	r7,r3,92518 <__fpcmp_parts_d+0x94>
   92510:	19ffec1e 	bne	r3,r7,924c4 <__fpcmp_parts_d+0x40>
   92514:	30bfeb2e 	bgeu	r6,r2,924c4 <__fpcmp_parts_d+0x40>
   92518:	403fe71e 	bne	r8,zero,924b8 <__fpcmp_parts_d+0x34>
   9251c:	003fef06 	br	924dc <__fpcmp_parts_d+0x58>
   92520:	11bffa2e 	bgeu	r2,r6,9250c <__fpcmp_parts_d+0x88>
   92524:	403fe426 	beq	r8,zero,924b8 <__fpcmp_parts_d+0x34>
   92528:	003fec06 	br	924dc <__fpcmp_parts_d+0x58>
   9252c:	28800117 	ldw	r2,4(r5)
   92530:	103fe11e 	bne	r2,zero,924b8 <__fpcmp_parts_d+0x34>
   92534:	003fe906 	br	924dc <__fpcmp_parts_d+0x58>
   92538:	11bfdd1e 	bne	r2,r6,924b0 <__fpcmp_parts_d+0x2c>
   9253c:	28c00117 	ldw	r3,4(r5)
   92540:	20800117 	ldw	r2,4(r4)
   92544:	1885c83a 	sub	r2,r3,r2
   92548:	f800283a 	ret

0009254c <close>:
   9254c:	defff804 	addi	sp,sp,-32
   92550:	dfc00715 	stw	ra,28(sp)
   92554:	df000615 	stw	fp,24(sp)
   92558:	df000604 	addi	fp,sp,24
   9255c:	e13ffc15 	stw	r4,-16(fp)
   92560:	e0bffc17 	ldw	r2,-16(fp)
   92564:	1004803a 	cmplt	r2,r2,zero
   92568:	1000091e 	bne	r2,zero,92590 <close+0x44>
   9256c:	e13ffc17 	ldw	r4,-16(fp)
   92570:	01400304 	movi	r5,12
   92574:	00886b00 	call	886b0 <__mulsi3>
   92578:	1007883a 	mov	r3,r2
   9257c:	008002b4 	movhi	r2,10
   92580:	10855004 	addi	r2,r2,5440
   92584:	1887883a 	add	r3,r3,r2
   92588:	e0ffff15 	stw	r3,-4(fp)
   9258c:	00000106 	br	92594 <close+0x48>
   92590:	e03fff15 	stw	zero,-4(fp)
   92594:	e0bfff17 	ldw	r2,-4(fp)
   92598:	e0bffb15 	stw	r2,-20(fp)
   9259c:	e0bffb17 	ldw	r2,-20(fp)
   925a0:	1005003a 	cmpeq	r2,r2,zero
   925a4:	10001d1e 	bne	r2,zero,9261c <close+0xd0>
   925a8:	e0bffb17 	ldw	r2,-20(fp)
   925ac:	10800017 	ldw	r2,0(r2)
   925b0:	10800417 	ldw	r2,16(r2)
   925b4:	1005003a 	cmpeq	r2,r2,zero
   925b8:	1000071e 	bne	r2,zero,925d8 <close+0x8c>
   925bc:	e0bffb17 	ldw	r2,-20(fp)
   925c0:	10800017 	ldw	r2,0(r2)
   925c4:	10800417 	ldw	r2,16(r2)
   925c8:	e13ffb17 	ldw	r4,-20(fp)
   925cc:	103ee83a 	callr	r2
   925d0:	e0bffe15 	stw	r2,-8(fp)
   925d4:	00000106 	br	925dc <close+0x90>
   925d8:	e03ffe15 	stw	zero,-8(fp)
   925dc:	e0bffe17 	ldw	r2,-8(fp)
   925e0:	e0bffa15 	stw	r2,-24(fp)
   925e4:	e13ffc17 	ldw	r4,-16(fp)
   925e8:	0092f800 	call	92f80 <alt_release_fd>
   925ec:	e0bffa17 	ldw	r2,-24(fp)
   925f0:	1004403a 	cmpge	r2,r2,zero
   925f4:	1000071e 	bne	r2,zero,92614 <close+0xc8>
   925f8:	009264c0 	call	9264c <alt_get_errno>
   925fc:	e0fffa17 	ldw	r3,-24(fp)
   92600:	00c7c83a 	sub	r3,zero,r3
   92604:	10c00015 	stw	r3,0(r2)
   92608:	00bfffc4 	movi	r2,-1
   9260c:	e0bffd15 	stw	r2,-12(fp)
   92610:	00000806 	br	92634 <close+0xe8>
   92614:	e03ffd15 	stw	zero,-12(fp)
   92618:	00000606 	br	92634 <close+0xe8>
   9261c:	009264c0 	call	9264c <alt_get_errno>
   92620:	1007883a 	mov	r3,r2
   92624:	00801444 	movi	r2,81
   92628:	18800015 	stw	r2,0(r3)
   9262c:	00bfffc4 	movi	r2,-1
   92630:	e0bffd15 	stw	r2,-12(fp)
   92634:	e0bffd17 	ldw	r2,-12(fp)
   92638:	e037883a 	mov	sp,fp
   9263c:	dfc00117 	ldw	ra,4(sp)
   92640:	df000017 	ldw	fp,0(sp)
   92644:	dec00204 	addi	sp,sp,8
   92648:	f800283a 	ret

0009264c <alt_get_errno>:
   9264c:	defffd04 	addi	sp,sp,-12
   92650:	dfc00215 	stw	ra,8(sp)
   92654:	df000115 	stw	fp,4(sp)
   92658:	df000104 	addi	fp,sp,4
   9265c:	008002b4 	movhi	r2,10
   92660:	1089e204 	addi	r2,r2,10120
   92664:	10800017 	ldw	r2,0(r2)
   92668:	1005003a 	cmpeq	r2,r2,zero
   9266c:	1000061e 	bne	r2,zero,92688 <alt_get_errno+0x3c>
   92670:	008002b4 	movhi	r2,10
   92674:	1089e204 	addi	r2,r2,10120
   92678:	10800017 	ldw	r2,0(r2)
   9267c:	103ee83a 	callr	r2
   92680:	e0bfff15 	stw	r2,-4(fp)
   92684:	00000306 	br	92694 <alt_get_errno+0x48>
   92688:	008002b4 	movhi	r2,10
   9268c:	1090ed04 	addi	r2,r2,17332
   92690:	e0bfff15 	stw	r2,-4(fp)
   92694:	e0bfff17 	ldw	r2,-4(fp)
   92698:	e037883a 	mov	sp,fp
   9269c:	dfc00117 	ldw	ra,4(sp)
   926a0:	df000017 	ldw	fp,0(sp)
   926a4:	dec00204 	addi	sp,sp,8
   926a8:	f800283a 	ret

000926ac <alt_dev_null_write>:
   926ac:	defffc04 	addi	sp,sp,-16
   926b0:	df000315 	stw	fp,12(sp)
   926b4:	df000304 	addi	fp,sp,12
   926b8:	e13ffd15 	stw	r4,-12(fp)
   926bc:	e17ffe15 	stw	r5,-8(fp)
   926c0:	e1bfff15 	stw	r6,-4(fp)
   926c4:	e0bfff17 	ldw	r2,-4(fp)
   926c8:	e037883a 	mov	sp,fp
   926cc:	df000017 	ldw	fp,0(sp)
   926d0:	dec00104 	addi	sp,sp,4
   926d4:	f800283a 	ret

000926d8 <fstat>:
   926d8:	defff904 	addi	sp,sp,-28
   926dc:	dfc00615 	stw	ra,24(sp)
   926e0:	df000515 	stw	fp,20(sp)
   926e4:	df000504 	addi	fp,sp,20
   926e8:	e13ffc15 	stw	r4,-16(fp)
   926ec:	e17ffd15 	stw	r5,-12(fp)
   926f0:	e0bffc17 	ldw	r2,-16(fp)
   926f4:	1004803a 	cmplt	r2,r2,zero
   926f8:	1000091e 	bne	r2,zero,92720 <fstat+0x48>
   926fc:	e13ffc17 	ldw	r4,-16(fp)
   92700:	01400304 	movi	r5,12
   92704:	00886b00 	call	886b0 <__mulsi3>
   92708:	1007883a 	mov	r3,r2
   9270c:	008002b4 	movhi	r2,10
   92710:	10855004 	addi	r2,r2,5440
   92714:	1887883a 	add	r3,r3,r2
   92718:	e0ffff15 	stw	r3,-4(fp)
   9271c:	00000106 	br	92724 <fstat+0x4c>
   92720:	e03fff15 	stw	zero,-4(fp)
   92724:	e0bfff17 	ldw	r2,-4(fp)
   92728:	e0bffb15 	stw	r2,-20(fp)
   9272c:	e0bffb17 	ldw	r2,-20(fp)
   92730:	1005003a 	cmpeq	r2,r2,zero
   92734:	1000121e 	bne	r2,zero,92780 <fstat+0xa8>
   92738:	e0bffb17 	ldw	r2,-20(fp)
   9273c:	10800017 	ldw	r2,0(r2)
   92740:	10800817 	ldw	r2,32(r2)
   92744:	1005003a 	cmpeq	r2,r2,zero
   92748:	1000081e 	bne	r2,zero,9276c <fstat+0x94>
   9274c:	e0bffb17 	ldw	r2,-20(fp)
   92750:	10800017 	ldw	r2,0(r2)
   92754:	10800817 	ldw	r2,32(r2)
   92758:	e13ffb17 	ldw	r4,-20(fp)
   9275c:	e17ffd17 	ldw	r5,-12(fp)
   92760:	103ee83a 	callr	r2
   92764:	e0bffe15 	stw	r2,-8(fp)
   92768:	00000b06 	br	92798 <fstat+0xc0>
   9276c:	e0fffd17 	ldw	r3,-12(fp)
   92770:	00880004 	movi	r2,8192
   92774:	18800115 	stw	r2,4(r3)
   92778:	e03ffe15 	stw	zero,-8(fp)
   9277c:	00000606 	br	92798 <fstat+0xc0>
   92780:	00927b00 	call	927b0 <alt_get_errno>
   92784:	1007883a 	mov	r3,r2
   92788:	00801444 	movi	r2,81
   9278c:	18800015 	stw	r2,0(r3)
   92790:	00bfffc4 	movi	r2,-1
   92794:	e0bffe15 	stw	r2,-8(fp)
   92798:	e0bffe17 	ldw	r2,-8(fp)
   9279c:	e037883a 	mov	sp,fp
   927a0:	dfc00117 	ldw	ra,4(sp)
   927a4:	df000017 	ldw	fp,0(sp)
   927a8:	dec00204 	addi	sp,sp,8
   927ac:	f800283a 	ret

000927b0 <alt_get_errno>:
   927b0:	defffd04 	addi	sp,sp,-12
   927b4:	dfc00215 	stw	ra,8(sp)
   927b8:	df000115 	stw	fp,4(sp)
   927bc:	df000104 	addi	fp,sp,4
   927c0:	008002b4 	movhi	r2,10
   927c4:	1089e204 	addi	r2,r2,10120
   927c8:	10800017 	ldw	r2,0(r2)
   927cc:	1005003a 	cmpeq	r2,r2,zero
   927d0:	1000061e 	bne	r2,zero,927ec <alt_get_errno+0x3c>
   927d4:	008002b4 	movhi	r2,10
   927d8:	1089e204 	addi	r2,r2,10120
   927dc:	10800017 	ldw	r2,0(r2)
   927e0:	103ee83a 	callr	r2
   927e4:	e0bfff15 	stw	r2,-4(fp)
   927e8:	00000306 	br	927f8 <alt_get_errno+0x48>
   927ec:	008002b4 	movhi	r2,10
   927f0:	1090ed04 	addi	r2,r2,17332
   927f4:	e0bfff15 	stw	r2,-4(fp)
   927f8:	e0bfff17 	ldw	r2,-4(fp)
   927fc:	e037883a 	mov	sp,fp
   92800:	dfc00117 	ldw	ra,4(sp)
   92804:	df000017 	ldw	fp,0(sp)
   92808:	dec00204 	addi	sp,sp,8
   9280c:	f800283a 	ret

00092810 <alt_irq_register>:
   92810:	deffef04 	addi	sp,sp,-68
   92814:	df001015 	stw	fp,64(sp)
   92818:	df001004 	addi	fp,sp,64
   9281c:	e13ffc15 	stw	r4,-16(fp)
   92820:	e17ffd15 	stw	r5,-12(fp)
   92824:	e1bffe15 	stw	r6,-8(fp)
   92828:	00bffa84 	movi	r2,-22
   9282c:	e0bffb15 	stw	r2,-20(fp)
   92830:	e0bffc17 	ldw	r2,-16(fp)
   92834:	10800828 	cmpgeui	r2,r2,32
   92838:	1000601e 	bne	r2,zero,929bc <alt_irq_register+0x1ac>
   9283c:	0005303a 	rdctl	r2,status
   92840:	e0bff915 	stw	r2,-28(fp)
   92844:	e0fff917 	ldw	r3,-28(fp)
   92848:	00bfff84 	movi	r2,-2
   9284c:	1884703a 	and	r2,r3,r2
   92850:	1001703a 	wrctl	status,r2
   92854:	e0bff917 	ldw	r2,-28(fp)
   92858:	e0bffa15 	stw	r2,-24(fp)
   9285c:	e0bffc17 	ldw	r2,-16(fp)
   92860:	00c002f4 	movhi	r3,11
   92864:	18dde504 	addi	r3,r3,30612
   92868:	100490fa 	slli	r2,r2,3
   9286c:	10c7883a 	add	r3,r2,r3
   92870:	e0bffe17 	ldw	r2,-8(fp)
   92874:	18800015 	stw	r2,0(r3)
   92878:	e0bffc17 	ldw	r2,-16(fp)
   9287c:	00c002f4 	movhi	r3,11
   92880:	18dde504 	addi	r3,r3,30612
   92884:	100490fa 	slli	r2,r2,3
   92888:	10c5883a 	add	r2,r2,r3
   9288c:	10c00104 	addi	r3,r2,4
   92890:	e0bffd17 	ldw	r2,-12(fp)
   92894:	18800015 	stw	r2,0(r3)
   92898:	e0bffe17 	ldw	r2,-8(fp)
   9289c:	1005003a 	cmpeq	r2,r2,zero
   928a0:	1000201e 	bne	r2,zero,92924 <alt_irq_register+0x114>
   928a4:	e0bffc17 	ldw	r2,-16(fp)
   928a8:	e0bff715 	stw	r2,-36(fp)
   928ac:	0005303a 	rdctl	r2,status
   928b0:	e0bff615 	stw	r2,-40(fp)
   928b4:	e0fff617 	ldw	r3,-40(fp)
   928b8:	00bfff84 	movi	r2,-2
   928bc:	1884703a 	and	r2,r3,r2
   928c0:	1001703a 	wrctl	status,r2
   928c4:	e0bff617 	ldw	r2,-40(fp)
   928c8:	e0bff815 	stw	r2,-32(fp)
   928cc:	e0fff717 	ldw	r3,-36(fp)
   928d0:	00800044 	movi	r2,1
   928d4:	10c4983a 	sll	r2,r2,r3
   928d8:	1007883a 	mov	r3,r2
   928dc:	008002b4 	movhi	r2,10
   928e0:	1090ef04 	addi	r2,r2,17340
   928e4:	10800017 	ldw	r2,0(r2)
   928e8:	1886b03a 	or	r3,r3,r2
   928ec:	008002b4 	movhi	r2,10
   928f0:	1090ef04 	addi	r2,r2,17340
   928f4:	10c00015 	stw	r3,0(r2)
   928f8:	008002b4 	movhi	r2,10
   928fc:	1090ef04 	addi	r2,r2,17340
   92900:	10800017 	ldw	r2,0(r2)
   92904:	100170fa 	wrctl	ienable,r2
   92908:	e0bff817 	ldw	r2,-32(fp)
   9290c:	e0bff515 	stw	r2,-44(fp)
   92910:	e0bff517 	ldw	r2,-44(fp)
   92914:	1001703a 	wrctl	status,r2
   92918:	0005883a 	mov	r2,zero
   9291c:	e0bfff15 	stw	r2,-4(fp)
   92920:	00002006 	br	929a4 <alt_irq_register+0x194>
   92924:	e0bffc17 	ldw	r2,-16(fp)
   92928:	e0bff315 	stw	r2,-52(fp)
   9292c:	0005303a 	rdctl	r2,status
   92930:	e0bff215 	stw	r2,-56(fp)
   92934:	e0fff217 	ldw	r3,-56(fp)
   92938:	00bfff84 	movi	r2,-2
   9293c:	1884703a 	and	r2,r3,r2
   92940:	1001703a 	wrctl	status,r2
   92944:	e0bff217 	ldw	r2,-56(fp)
   92948:	e0bff415 	stw	r2,-48(fp)
   9294c:	e0fff317 	ldw	r3,-52(fp)
   92950:	00800044 	movi	r2,1
   92954:	10c4983a 	sll	r2,r2,r3
   92958:	0084303a 	nor	r2,zero,r2
   9295c:	1007883a 	mov	r3,r2
   92960:	008002b4 	movhi	r2,10
   92964:	1090ef04 	addi	r2,r2,17340
   92968:	10800017 	ldw	r2,0(r2)
   9296c:	1886703a 	and	r3,r3,r2
   92970:	008002b4 	movhi	r2,10
   92974:	1090ef04 	addi	r2,r2,17340
   92978:	10c00015 	stw	r3,0(r2)
   9297c:	008002b4 	movhi	r2,10
   92980:	1090ef04 	addi	r2,r2,17340
   92984:	10800017 	ldw	r2,0(r2)
   92988:	100170fa 	wrctl	ienable,r2
   9298c:	e0bff417 	ldw	r2,-48(fp)
   92990:	e0bff115 	stw	r2,-60(fp)
   92994:	e0bff117 	ldw	r2,-60(fp)
   92998:	1001703a 	wrctl	status,r2
   9299c:	0005883a 	mov	r2,zero
   929a0:	e0bfff15 	stw	r2,-4(fp)
   929a4:	e0bfff17 	ldw	r2,-4(fp)
   929a8:	e0bffb15 	stw	r2,-20(fp)
   929ac:	e0bffa17 	ldw	r2,-24(fp)
   929b0:	e0bff015 	stw	r2,-64(fp)
   929b4:	e0bff017 	ldw	r2,-64(fp)
   929b8:	1001703a 	wrctl	status,r2
   929bc:	e0bffb17 	ldw	r2,-20(fp)
   929c0:	e037883a 	mov	sp,fp
   929c4:	df000017 	ldw	fp,0(sp)
   929c8:	dec00104 	addi	sp,sp,4
   929cc:	f800283a 	ret

000929d0 <isatty>:
   929d0:	deffeb04 	addi	sp,sp,-84
   929d4:	dfc01415 	stw	ra,80(sp)
   929d8:	df001315 	stw	fp,76(sp)
   929dc:	df001304 	addi	fp,sp,76
   929e0:	e13ffd15 	stw	r4,-12(fp)
   929e4:	e0bffd17 	ldw	r2,-12(fp)
   929e8:	1004803a 	cmplt	r2,r2,zero
   929ec:	1000091e 	bne	r2,zero,92a14 <isatty+0x44>
   929f0:	e13ffd17 	ldw	r4,-12(fp)
   929f4:	01400304 	movi	r5,12
   929f8:	00886b00 	call	886b0 <__mulsi3>
   929fc:	1007883a 	mov	r3,r2
   92a00:	008002b4 	movhi	r2,10
   92a04:	10855004 	addi	r2,r2,5440
   92a08:	1887883a 	add	r3,r3,r2
   92a0c:	e0ffff15 	stw	r3,-4(fp)
   92a10:	00000106 	br	92a18 <isatty+0x48>
   92a14:	e03fff15 	stw	zero,-4(fp)
   92a18:	e0bfff17 	ldw	r2,-4(fp)
   92a1c:	e0bfed15 	stw	r2,-76(fp)
   92a20:	e0bfed17 	ldw	r2,-76(fp)
   92a24:	1005003a 	cmpeq	r2,r2,zero
   92a28:	10000f1e 	bne	r2,zero,92a68 <isatty+0x98>
   92a2c:	e0bfed17 	ldw	r2,-76(fp)
   92a30:	10800017 	ldw	r2,0(r2)
   92a34:	10800817 	ldw	r2,32(r2)
   92a38:	1004c03a 	cmpne	r2,r2,zero
   92a3c:	1000031e 	bne	r2,zero,92a4c <isatty+0x7c>
   92a40:	00800044 	movi	r2,1
   92a44:	e0bffe15 	stw	r2,-8(fp)
   92a48:	00000c06 	br	92a7c <isatty+0xac>
   92a4c:	e17fee04 	addi	r5,fp,-72
   92a50:	e13ffd17 	ldw	r4,-12(fp)
   92a54:	00926d80 	call	926d8 <fstat>
   92a58:	e0bfef17 	ldw	r2,-68(fp)
   92a5c:	10880020 	cmpeqi	r2,r2,8192
   92a60:	e0bffe15 	stw	r2,-8(fp)
   92a64:	00000506 	br	92a7c <isatty+0xac>
   92a68:	0092a940 	call	92a94 <alt_get_errno>
   92a6c:	1007883a 	mov	r3,r2
   92a70:	00801444 	movi	r2,81
   92a74:	18800015 	stw	r2,0(r3)
   92a78:	e03ffe15 	stw	zero,-8(fp)
   92a7c:	e0bffe17 	ldw	r2,-8(fp)
   92a80:	e037883a 	mov	sp,fp
   92a84:	dfc00117 	ldw	ra,4(sp)
   92a88:	df000017 	ldw	fp,0(sp)
   92a8c:	dec00204 	addi	sp,sp,8
   92a90:	f800283a 	ret

00092a94 <alt_get_errno>:
   92a94:	defffd04 	addi	sp,sp,-12
   92a98:	dfc00215 	stw	ra,8(sp)
   92a9c:	df000115 	stw	fp,4(sp)
   92aa0:	df000104 	addi	fp,sp,4
   92aa4:	008002b4 	movhi	r2,10
   92aa8:	1089e204 	addi	r2,r2,10120
   92aac:	10800017 	ldw	r2,0(r2)
   92ab0:	1005003a 	cmpeq	r2,r2,zero
   92ab4:	1000061e 	bne	r2,zero,92ad0 <alt_get_errno+0x3c>
   92ab8:	008002b4 	movhi	r2,10
   92abc:	1089e204 	addi	r2,r2,10120
   92ac0:	10800017 	ldw	r2,0(r2)
   92ac4:	103ee83a 	callr	r2
   92ac8:	e0bfff15 	stw	r2,-4(fp)
   92acc:	00000306 	br	92adc <alt_get_errno+0x48>
   92ad0:	008002b4 	movhi	r2,10
   92ad4:	1090ed04 	addi	r2,r2,17332
   92ad8:	e0bfff15 	stw	r2,-4(fp)
   92adc:	e0bfff17 	ldw	r2,-4(fp)
   92ae0:	e037883a 	mov	sp,fp
   92ae4:	dfc00117 	ldw	ra,4(sp)
   92ae8:	df000017 	ldw	fp,0(sp)
   92aec:	dec00204 	addi	sp,sp,8
   92af0:	f800283a 	ret

00092af4 <alt_load>:
   92af4:	defffe04 	addi	sp,sp,-8
   92af8:	dfc00115 	stw	ra,4(sp)
   92afc:	df000015 	stw	fp,0(sp)
   92b00:	d839883a 	mov	fp,sp
   92b04:	010002b4 	movhi	r4,10
   92b08:	210a0604 	addi	r4,r4,10264
   92b0c:	014002b4 	movhi	r5,10
   92b10:	29434104 	addi	r5,r5,3332
   92b14:	018002b4 	movhi	r6,10
   92b18:	318a0604 	addi	r6,r6,10264
   92b1c:	0092b740 	call	92b74 <alt_load_section>
   92b20:	01000234 	movhi	r4,8
   92b24:	21000804 	addi	r4,r4,32
   92b28:	01400234 	movhi	r5,8
   92b2c:	29400804 	addi	r5,r5,32
   92b30:	01800234 	movhi	r6,8
   92b34:	31806f04 	addi	r6,r6,444
   92b38:	0092b740 	call	92b74 <alt_load_section>
   92b3c:	010002b4 	movhi	r4,10
   92b40:	213ff304 	addi	r4,r4,-52
   92b44:	014002b4 	movhi	r5,10
   92b48:	297ff304 	addi	r5,r5,-52
   92b4c:	018002b4 	movhi	r6,10
   92b50:	31834104 	addi	r6,r6,3332
   92b54:	0092b740 	call	92b74 <alt_load_section>
   92b58:	009e8cc0 	call	9e8cc <alt_dcache_flush_all>
   92b5c:	009eac40 	call	9eac4 <alt_icache_flush_all>
   92b60:	e037883a 	mov	sp,fp
   92b64:	dfc00117 	ldw	ra,4(sp)
   92b68:	df000017 	ldw	fp,0(sp)
   92b6c:	dec00204 	addi	sp,sp,8
   92b70:	f800283a 	ret

00092b74 <alt_load_section>:
   92b74:	defffc04 	addi	sp,sp,-16
   92b78:	df000315 	stw	fp,12(sp)
   92b7c:	df000304 	addi	fp,sp,12
   92b80:	e13ffd15 	stw	r4,-12(fp)
   92b84:	e17ffe15 	stw	r5,-8(fp)
   92b88:	e1bfff15 	stw	r6,-4(fp)
   92b8c:	e0fffe17 	ldw	r3,-8(fp)
   92b90:	e0bffd17 	ldw	r2,-12(fp)
   92b94:	18800e26 	beq	r3,r2,92bd0 <alt_load_section+0x5c>
   92b98:	00000a06 	br	92bc4 <alt_load_section+0x50>
   92b9c:	e0bffd17 	ldw	r2,-12(fp)
   92ba0:	10c00017 	ldw	r3,0(r2)
   92ba4:	e0bffe17 	ldw	r2,-8(fp)
   92ba8:	10c00015 	stw	r3,0(r2)
   92bac:	e0bffe17 	ldw	r2,-8(fp)
   92bb0:	10800104 	addi	r2,r2,4
   92bb4:	e0bffe15 	stw	r2,-8(fp)
   92bb8:	e0bffd17 	ldw	r2,-12(fp)
   92bbc:	10800104 	addi	r2,r2,4
   92bc0:	e0bffd15 	stw	r2,-12(fp)
   92bc4:	e0fffe17 	ldw	r3,-8(fp)
   92bc8:	e0bfff17 	ldw	r2,-4(fp)
   92bcc:	18bff31e 	bne	r3,r2,92b9c <alt_load_section+0x28>
   92bd0:	e037883a 	mov	sp,fp
   92bd4:	df000017 	ldw	fp,0(sp)
   92bd8:	dec00104 	addi	sp,sp,4
   92bdc:	f800283a 	ret

00092be0 <lseek>:
   92be0:	defff804 	addi	sp,sp,-32
   92be4:	dfc00715 	stw	ra,28(sp)
   92be8:	df000615 	stw	fp,24(sp)
   92bec:	df000604 	addi	fp,sp,24
   92bf0:	e13ffc15 	stw	r4,-16(fp)
   92bf4:	e17ffd15 	stw	r5,-12(fp)
   92bf8:	e1bffe15 	stw	r6,-8(fp)
   92bfc:	e03ffa15 	stw	zero,-24(fp)
   92c00:	e0bffc17 	ldw	r2,-16(fp)
   92c04:	1004803a 	cmplt	r2,r2,zero
   92c08:	1000091e 	bne	r2,zero,92c30 <lseek+0x50>
   92c0c:	e13ffc17 	ldw	r4,-16(fp)
   92c10:	01400304 	movi	r5,12
   92c14:	00886b00 	call	886b0 <__mulsi3>
   92c18:	1007883a 	mov	r3,r2
   92c1c:	008002b4 	movhi	r2,10
   92c20:	10855004 	addi	r2,r2,5440
   92c24:	1887883a 	add	r3,r3,r2
   92c28:	e0ffff15 	stw	r3,-4(fp)
   92c2c:	00000106 	br	92c34 <lseek+0x54>
   92c30:	e03fff15 	stw	zero,-4(fp)
   92c34:	e0bfff17 	ldw	r2,-4(fp)
   92c38:	e0bffb15 	stw	r2,-20(fp)
   92c3c:	e0bffb17 	ldw	r2,-20(fp)
   92c40:	1005003a 	cmpeq	r2,r2,zero
   92c44:	1000111e 	bne	r2,zero,92c8c <lseek+0xac>
   92c48:	e0bffb17 	ldw	r2,-20(fp)
   92c4c:	10800017 	ldw	r2,0(r2)
   92c50:	10800717 	ldw	r2,28(r2)
   92c54:	1005003a 	cmpeq	r2,r2,zero
   92c58:	1000091e 	bne	r2,zero,92c80 <lseek+0xa0>
   92c5c:	e0bffb17 	ldw	r2,-20(fp)
   92c60:	10800017 	ldw	r2,0(r2)
   92c64:	10800717 	ldw	r2,28(r2)
   92c68:	e13ffb17 	ldw	r4,-20(fp)
   92c6c:	e17ffd17 	ldw	r5,-12(fp)
   92c70:	e1bffe17 	ldw	r6,-8(fp)
   92c74:	103ee83a 	callr	r2
   92c78:	e0bffa15 	stw	r2,-24(fp)
   92c7c:	00000506 	br	92c94 <lseek+0xb4>
   92c80:	00bfde84 	movi	r2,-134
   92c84:	e0bffa15 	stw	r2,-24(fp)
   92c88:	00000206 	br	92c94 <lseek+0xb4>
   92c8c:	00bfebc4 	movi	r2,-81
   92c90:	e0bffa15 	stw	r2,-24(fp)
   92c94:	e0bffa17 	ldw	r2,-24(fp)
   92c98:	1004403a 	cmpge	r2,r2,zero
   92c9c:	1000071e 	bne	r2,zero,92cbc <lseek+0xdc>
   92ca0:	0092cd40 	call	92cd4 <alt_get_errno>
   92ca4:	1007883a 	mov	r3,r2
   92ca8:	e0bffa17 	ldw	r2,-24(fp)
   92cac:	0085c83a 	sub	r2,zero,r2
   92cb0:	18800015 	stw	r2,0(r3)
   92cb4:	00bfffc4 	movi	r2,-1
   92cb8:	e0bffa15 	stw	r2,-24(fp)
   92cbc:	e0bffa17 	ldw	r2,-24(fp)
   92cc0:	e037883a 	mov	sp,fp
   92cc4:	dfc00117 	ldw	ra,4(sp)
   92cc8:	df000017 	ldw	fp,0(sp)
   92ccc:	dec00204 	addi	sp,sp,8
   92cd0:	f800283a 	ret

00092cd4 <alt_get_errno>:
   92cd4:	defffd04 	addi	sp,sp,-12
   92cd8:	dfc00215 	stw	ra,8(sp)
   92cdc:	df000115 	stw	fp,4(sp)
   92ce0:	df000104 	addi	fp,sp,4
   92ce4:	008002b4 	movhi	r2,10
   92ce8:	1089e204 	addi	r2,r2,10120
   92cec:	10800017 	ldw	r2,0(r2)
   92cf0:	1005003a 	cmpeq	r2,r2,zero
   92cf4:	1000061e 	bne	r2,zero,92d10 <alt_get_errno+0x3c>
   92cf8:	008002b4 	movhi	r2,10
   92cfc:	1089e204 	addi	r2,r2,10120
   92d00:	10800017 	ldw	r2,0(r2)
   92d04:	103ee83a 	callr	r2
   92d08:	e0bfff15 	stw	r2,-4(fp)
   92d0c:	00000306 	br	92d1c <alt_get_errno+0x48>
   92d10:	008002b4 	movhi	r2,10
   92d14:	1090ed04 	addi	r2,r2,17332
   92d18:	e0bfff15 	stw	r2,-4(fp)
   92d1c:	e0bfff17 	ldw	r2,-4(fp)
   92d20:	e037883a 	mov	sp,fp
   92d24:	dfc00117 	ldw	ra,4(sp)
   92d28:	df000017 	ldw	fp,0(sp)
   92d2c:	dec00204 	addi	sp,sp,8
   92d30:	f800283a 	ret

00092d34 <alt_main>:
   92d34:	defffb04 	addi	sp,sp,-20
   92d38:	dfc00415 	stw	ra,16(sp)
   92d3c:	df000315 	stw	fp,12(sp)
   92d40:	df000304 	addi	fp,sp,12
   92d44:	0009883a 	mov	r4,zero
   92d48:	009d8380 	call	9d838 <alt_irq_init>
   92d4c:	0093e400 	call	93e40 <OSInit>
   92d50:	01000044 	movi	r4,1
   92d54:	009ad3c0 	call	9ad3c <OSSemCreate>
   92d58:	1007883a 	mov	r3,r2
   92d5c:	008002b4 	movhi	r2,10
   92d60:	1090f404 	addi	r2,r2,17360
   92d64:	10c00015 	stw	r3,0(r2)
   92d68:	01000044 	movi	r4,1
   92d6c:	009ad3c0 	call	9ad3c <OSSemCreate>
   92d70:	1007883a 	mov	r3,r2
   92d74:	008002b4 	movhi	r2,10
   92d78:	1090f604 	addi	r2,r2,17368
   92d7c:	10c00015 	stw	r3,0(r2)
   92d80:	008002b4 	movhi	r2,10
   92d84:	1090ee04 	addi	r2,r2,17336
   92d88:	e0bffd15 	stw	r2,-12(fp)
   92d8c:	00800044 	movi	r2,1
   92d90:	e0bffe0d 	sth	r2,-8(fp)
   92d94:	e13ffe0b 	ldhu	r4,-8(fp)
   92d98:	009ad3c0 	call	9ad3c <OSSemCreate>
   92d9c:	1007883a 	mov	r3,r2
   92da0:	e0bffd17 	ldw	r2,-12(fp)
   92da4:	10c00015 	stw	r3,0(r2)
   92da8:	009d86c0 	call	9d86c <alt_sys_init>
   92dac:	010002b4 	movhi	r4,10
   92db0:	2102ea04 	addi	r4,r4,2984
   92db4:	014002b4 	movhi	r5,10
   92db8:	2942ea04 	addi	r5,r5,2984
   92dbc:	018002b4 	movhi	r6,10
   92dc0:	3182ea04 	addi	r6,r6,2984
   92dc4:	009ee840 	call	9ee84 <alt_io_redirect>
   92dc8:	009e9fc0 	call	9e9fc <_do_ctors>
   92dcc:	010002b4 	movhi	r4,10
   92dd0:	213a9804 	addi	r4,r4,-5536
   92dd4:	009fb480 	call	9fb48 <atexit>
   92dd8:	d1271a17 	ldw	r4,-25496(gp)
   92ddc:	d1671b17 	ldw	r5,-25492(gp)
   92de0:	d1a71c17 	ldw	r6,-25488(gp)
   92de4:	00849a80 	call	849a8 <main>
   92de8:	e0bfff15 	stw	r2,-4(fp)
   92dec:	01000044 	movi	r4,1
   92df0:	009254c0 	call	9254c <close>
   92df4:	e13fff17 	ldw	r4,-4(fp)
   92df8:	009fb5c0 	call	9fb5c <exit>

00092dfc <read>:
   92dfc:	defff704 	addi	sp,sp,-36
   92e00:	dfc00815 	stw	ra,32(sp)
   92e04:	df000715 	stw	fp,28(sp)
   92e08:	df000704 	addi	fp,sp,28
   92e0c:	e13ffb15 	stw	r4,-20(fp)
   92e10:	e17ffc15 	stw	r5,-16(fp)
   92e14:	e1bffd15 	stw	r6,-12(fp)
   92e18:	e0bffb17 	ldw	r2,-20(fp)
   92e1c:	1004803a 	cmplt	r2,r2,zero
   92e20:	1000091e 	bne	r2,zero,92e48 <read+0x4c>
   92e24:	e13ffb17 	ldw	r4,-20(fp)
   92e28:	01400304 	movi	r5,12
   92e2c:	00886b00 	call	886b0 <__mulsi3>
   92e30:	1007883a 	mov	r3,r2
   92e34:	008002b4 	movhi	r2,10
   92e38:	10855004 	addi	r2,r2,5440
   92e3c:	1887883a 	add	r3,r3,r2
   92e40:	e0ffff15 	stw	r3,-4(fp)
   92e44:	00000106 	br	92e4c <read+0x50>
   92e48:	e03fff15 	stw	zero,-4(fp)
   92e4c:	e0bfff17 	ldw	r2,-4(fp)
   92e50:	e0bffa15 	stw	r2,-24(fp)
   92e54:	e0bffa17 	ldw	r2,-24(fp)
   92e58:	1005003a 	cmpeq	r2,r2,zero
   92e5c:	1000241e 	bne	r2,zero,92ef0 <read+0xf4>
   92e60:	e0bffa17 	ldw	r2,-24(fp)
   92e64:	10800217 	ldw	r2,8(r2)
   92e68:	108000cc 	andi	r2,r2,3
   92e6c:	10800060 	cmpeqi	r2,r2,1
   92e70:	10001a1e 	bne	r2,zero,92edc <read+0xe0>
   92e74:	e0bffa17 	ldw	r2,-24(fp)
   92e78:	10800017 	ldw	r2,0(r2)
   92e7c:	10800517 	ldw	r2,20(r2)
   92e80:	1005003a 	cmpeq	r2,r2,zero
   92e84:	1000151e 	bne	r2,zero,92edc <read+0xe0>
   92e88:	e0bffa17 	ldw	r2,-24(fp)
   92e8c:	10800017 	ldw	r2,0(r2)
   92e90:	10800517 	ldw	r2,20(r2)
   92e94:	e17ffc17 	ldw	r5,-16(fp)
   92e98:	e1bffd17 	ldw	r6,-12(fp)
   92e9c:	e13ffa17 	ldw	r4,-24(fp)
   92ea0:	103ee83a 	callr	r2
   92ea4:	e0bff915 	stw	r2,-28(fp)
   92ea8:	e0bff917 	ldw	r2,-28(fp)
   92eac:	1004403a 	cmpge	r2,r2,zero
   92eb0:	1000071e 	bne	r2,zero,92ed0 <read+0xd4>
   92eb4:	0092f200 	call	92f20 <alt_get_errno>
   92eb8:	e0fff917 	ldw	r3,-28(fp)
   92ebc:	00c7c83a 	sub	r3,zero,r3
   92ec0:	10c00015 	stw	r3,0(r2)
   92ec4:	00bfffc4 	movi	r2,-1
   92ec8:	e0bffe15 	stw	r2,-8(fp)
   92ecc:	00000e06 	br	92f08 <read+0x10c>
   92ed0:	e0bff917 	ldw	r2,-28(fp)
   92ed4:	e0bffe15 	stw	r2,-8(fp)
   92ed8:	00000b06 	br	92f08 <read+0x10c>
   92edc:	0092f200 	call	92f20 <alt_get_errno>
   92ee0:	1007883a 	mov	r3,r2
   92ee4:	00800344 	movi	r2,13
   92ee8:	18800015 	stw	r2,0(r3)
   92eec:	00000406 	br	92f00 <read+0x104>
   92ef0:	0092f200 	call	92f20 <alt_get_errno>
   92ef4:	1007883a 	mov	r3,r2
   92ef8:	00801444 	movi	r2,81
   92efc:	18800015 	stw	r2,0(r3)
   92f00:	00bfffc4 	movi	r2,-1
   92f04:	e0bffe15 	stw	r2,-8(fp)
   92f08:	e0bffe17 	ldw	r2,-8(fp)
   92f0c:	e037883a 	mov	sp,fp
   92f10:	dfc00117 	ldw	ra,4(sp)
   92f14:	df000017 	ldw	fp,0(sp)
   92f18:	dec00204 	addi	sp,sp,8
   92f1c:	f800283a 	ret

00092f20 <alt_get_errno>:
   92f20:	defffd04 	addi	sp,sp,-12
   92f24:	dfc00215 	stw	ra,8(sp)
   92f28:	df000115 	stw	fp,4(sp)
   92f2c:	df000104 	addi	fp,sp,4
   92f30:	008002b4 	movhi	r2,10
   92f34:	1089e204 	addi	r2,r2,10120
   92f38:	10800017 	ldw	r2,0(r2)
   92f3c:	1005003a 	cmpeq	r2,r2,zero
   92f40:	1000061e 	bne	r2,zero,92f5c <alt_get_errno+0x3c>
   92f44:	008002b4 	movhi	r2,10
   92f48:	1089e204 	addi	r2,r2,10120
   92f4c:	10800017 	ldw	r2,0(r2)
   92f50:	103ee83a 	callr	r2
   92f54:	e0bfff15 	stw	r2,-4(fp)
   92f58:	00000306 	br	92f68 <alt_get_errno+0x48>
   92f5c:	008002b4 	movhi	r2,10
   92f60:	1090ed04 	addi	r2,r2,17332
   92f64:	e0bfff15 	stw	r2,-4(fp)
   92f68:	e0bfff17 	ldw	r2,-4(fp)
   92f6c:	e037883a 	mov	sp,fp
   92f70:	dfc00117 	ldw	ra,4(sp)
   92f74:	df000017 	ldw	fp,0(sp)
   92f78:	dec00204 	addi	sp,sp,8
   92f7c:	f800283a 	ret

00092f80 <alt_release_fd>:
   92f80:	defffc04 	addi	sp,sp,-16
   92f84:	dfc00315 	stw	ra,12(sp)
   92f88:	df000215 	stw	fp,8(sp)
   92f8c:	dc000115 	stw	r16,4(sp)
   92f90:	df000104 	addi	fp,sp,4
   92f94:	e13fff15 	stw	r4,-4(fp)
   92f98:	e0bfff17 	ldw	r2,-4(fp)
   92f9c:	108000d0 	cmplti	r2,r2,3
   92fa0:	10000f1e 	bne	r2,zero,92fe0 <alt_release_fd+0x60>
   92fa4:	e13fff17 	ldw	r4,-4(fp)
   92fa8:	040002b4 	movhi	r16,10
   92fac:	84055004 	addi	r16,r16,5440
   92fb0:	01400304 	movi	r5,12
   92fb4:	00886b00 	call	886b0 <__mulsi3>
   92fb8:	1405883a 	add	r2,r2,r16
   92fbc:	10800204 	addi	r2,r2,8
   92fc0:	10000015 	stw	zero,0(r2)
   92fc4:	e13fff17 	ldw	r4,-4(fp)
   92fc8:	040002b4 	movhi	r16,10
   92fcc:	84055004 	addi	r16,r16,5440
   92fd0:	01400304 	movi	r5,12
   92fd4:	00886b00 	call	886b0 <__mulsi3>
   92fd8:	1405883a 	add	r2,r2,r16
   92fdc:	10000015 	stw	zero,0(r2)
   92fe0:	e037883a 	mov	sp,fp
   92fe4:	dfc00217 	ldw	ra,8(sp)
   92fe8:	df000117 	ldw	fp,4(sp)
   92fec:	dc000017 	ldw	r16,0(sp)
   92ff0:	dec00304 	addi	sp,sp,12
   92ff4:	f800283a 	ret

00092ff8 <sbrk>:
   92ff8:	defff804 	addi	sp,sp,-32
   92ffc:	df000715 	stw	fp,28(sp)
   93000:	df000704 	addi	fp,sp,28
   93004:	e13ffe15 	stw	r4,-8(fp)
   93008:	0005303a 	rdctl	r2,status
   9300c:	e0bffb15 	stw	r2,-20(fp)
   93010:	e0fffb17 	ldw	r3,-20(fp)
   93014:	00bfff84 	movi	r2,-2
   93018:	1884703a 	and	r2,r3,r2
   9301c:	1001703a 	wrctl	status,r2
   93020:	e0bffb17 	ldw	r2,-20(fp)
   93024:	e0bffd15 	stw	r2,-12(fp)
   93028:	d0a00e17 	ldw	r2,-32712(gp)
   9302c:	10c000c4 	addi	r3,r2,3
   93030:	00bfff04 	movi	r2,-4
   93034:	1884703a 	and	r2,r3,r2
   93038:	d0a00e15 	stw	r2,-32712(gp)
   9303c:	d0e00e17 	ldw	r3,-32712(gp)
   93040:	e0bffe17 	ldw	r2,-8(fp)
   93044:	1887883a 	add	r3,r3,r2
   93048:	00800434 	movhi	r2,16
   9304c:	10800004 	addi	r2,r2,0
   93050:	10c0072e 	bgeu	r2,r3,93070 <sbrk+0x78>
   93054:	e0bffd17 	ldw	r2,-12(fp)
   93058:	e0bffa15 	stw	r2,-24(fp)
   9305c:	e0bffa17 	ldw	r2,-24(fp)
   93060:	1001703a 	wrctl	status,r2
   93064:	00bfffc4 	movi	r2,-1
   93068:	e0bfff15 	stw	r2,-4(fp)
   9306c:	00000c06 	br	930a0 <sbrk+0xa8>
   93070:	d0a00e17 	ldw	r2,-32712(gp)
   93074:	e0bffc15 	stw	r2,-16(fp)
   93078:	d0e00e17 	ldw	r3,-32712(gp)
   9307c:	e0bffe17 	ldw	r2,-8(fp)
   93080:	1885883a 	add	r2,r3,r2
   93084:	d0a00e15 	stw	r2,-32712(gp)
   93088:	e0bffd17 	ldw	r2,-12(fp)
   9308c:	e0bff915 	stw	r2,-28(fp)
   93090:	e0bff917 	ldw	r2,-28(fp)
   93094:	1001703a 	wrctl	status,r2
   93098:	e0bffc17 	ldw	r2,-16(fp)
   9309c:	e0bfff15 	stw	r2,-4(fp)
   930a0:	e0bfff17 	ldw	r2,-4(fp)
   930a4:	e037883a 	mov	sp,fp
   930a8:	df000017 	ldw	fp,0(sp)
   930ac:	dec00104 	addi	sp,sp,4
   930b0:	f800283a 	ret

000930b4 <write>:
   930b4:	defff704 	addi	sp,sp,-36
   930b8:	dfc00815 	stw	ra,32(sp)
   930bc:	df000715 	stw	fp,28(sp)
   930c0:	df000704 	addi	fp,sp,28
   930c4:	e13ffb15 	stw	r4,-20(fp)
   930c8:	e17ffc15 	stw	r5,-16(fp)
   930cc:	e1bffd15 	stw	r6,-12(fp)
   930d0:	e0bffb17 	ldw	r2,-20(fp)
   930d4:	1004803a 	cmplt	r2,r2,zero
   930d8:	1000091e 	bne	r2,zero,93100 <write+0x4c>
   930dc:	e13ffb17 	ldw	r4,-20(fp)
   930e0:	01400304 	movi	r5,12
   930e4:	00886b00 	call	886b0 <__mulsi3>
   930e8:	1007883a 	mov	r3,r2
   930ec:	008002b4 	movhi	r2,10
   930f0:	10855004 	addi	r2,r2,5440
   930f4:	1887883a 	add	r3,r3,r2
   930f8:	e0ffff15 	stw	r3,-4(fp)
   930fc:	00000106 	br	93104 <write+0x50>
   93100:	e03fff15 	stw	zero,-4(fp)
   93104:	e0bfff17 	ldw	r2,-4(fp)
   93108:	e0bffa15 	stw	r2,-24(fp)
   9310c:	e0bffa17 	ldw	r2,-24(fp)
   93110:	1005003a 	cmpeq	r2,r2,zero
   93114:	1000241e 	bne	r2,zero,931a8 <write+0xf4>
   93118:	e0bffa17 	ldw	r2,-24(fp)
   9311c:	10800217 	ldw	r2,8(r2)
   93120:	108000cc 	andi	r2,r2,3
   93124:	1005003a 	cmpeq	r2,r2,zero
   93128:	10001a1e 	bne	r2,zero,93194 <write+0xe0>
   9312c:	e0bffa17 	ldw	r2,-24(fp)
   93130:	10800017 	ldw	r2,0(r2)
   93134:	10800617 	ldw	r2,24(r2)
   93138:	1005003a 	cmpeq	r2,r2,zero
   9313c:	1000151e 	bne	r2,zero,93194 <write+0xe0>
   93140:	e0bffa17 	ldw	r2,-24(fp)
   93144:	10800017 	ldw	r2,0(r2)
   93148:	10800617 	ldw	r2,24(r2)
   9314c:	e17ffc17 	ldw	r5,-16(fp)
   93150:	e1bffd17 	ldw	r6,-12(fp)
   93154:	e13ffa17 	ldw	r4,-24(fp)
   93158:	103ee83a 	callr	r2
   9315c:	e0bff915 	stw	r2,-28(fp)
   93160:	e0bff917 	ldw	r2,-28(fp)
   93164:	1004403a 	cmpge	r2,r2,zero
   93168:	1000071e 	bne	r2,zero,93188 <write+0xd4>
   9316c:	00931d80 	call	931d8 <alt_get_errno>
   93170:	e0fff917 	ldw	r3,-28(fp)
   93174:	00c7c83a 	sub	r3,zero,r3
   93178:	10c00015 	stw	r3,0(r2)
   9317c:	00bfffc4 	movi	r2,-1
   93180:	e0bffe15 	stw	r2,-8(fp)
   93184:	00000e06 	br	931c0 <write+0x10c>
   93188:	e0bff917 	ldw	r2,-28(fp)
   9318c:	e0bffe15 	stw	r2,-8(fp)
   93190:	00000b06 	br	931c0 <write+0x10c>
   93194:	00931d80 	call	931d8 <alt_get_errno>
   93198:	1007883a 	mov	r3,r2
   9319c:	00800344 	movi	r2,13
   931a0:	18800015 	stw	r2,0(r3)
   931a4:	00000406 	br	931b8 <write+0x104>
   931a8:	00931d80 	call	931d8 <alt_get_errno>
   931ac:	1007883a 	mov	r3,r2
   931b0:	00801444 	movi	r2,81
   931b4:	18800015 	stw	r2,0(r3)
   931b8:	00bfffc4 	movi	r2,-1
   931bc:	e0bffe15 	stw	r2,-8(fp)
   931c0:	e0bffe17 	ldw	r2,-8(fp)
   931c4:	e037883a 	mov	sp,fp
   931c8:	dfc00117 	ldw	ra,4(sp)
   931cc:	df000017 	ldw	fp,0(sp)
   931d0:	dec00204 	addi	sp,sp,8
   931d4:	f800283a 	ret

000931d8 <alt_get_errno>:
   931d8:	defffd04 	addi	sp,sp,-12
   931dc:	dfc00215 	stw	ra,8(sp)
   931e0:	df000115 	stw	fp,4(sp)
   931e4:	df000104 	addi	fp,sp,4
   931e8:	008002b4 	movhi	r2,10
   931ec:	1089e204 	addi	r2,r2,10120
   931f0:	10800017 	ldw	r2,0(r2)
   931f4:	1005003a 	cmpeq	r2,r2,zero
   931f8:	1000061e 	bne	r2,zero,93214 <alt_get_errno+0x3c>
   931fc:	008002b4 	movhi	r2,10
   93200:	1089e204 	addi	r2,r2,10120
   93204:	10800017 	ldw	r2,0(r2)
   93208:	103ee83a 	callr	r2
   9320c:	e0bfff15 	stw	r2,-4(fp)
   93210:	00000306 	br	93220 <alt_get_errno+0x48>
   93214:	008002b4 	movhi	r2,10
   93218:	1090ed04 	addi	r2,r2,17332
   9321c:	e0bfff15 	stw	r2,-4(fp)
   93220:	e0bfff17 	ldw	r2,-4(fp)
   93224:	e037883a 	mov	sp,fp
   93228:	dfc00117 	ldw	ra,4(sp)
   9322c:	df000017 	ldw	fp,0(sp)
   93230:	dec00204 	addi	sp,sp,8
   93234:	f800283a 	ret

00093238 <__env_lock>:
   93238:	deffdf04 	addi	sp,sp,-132
   9323c:	dfc02015 	stw	ra,128(sp)
   93240:	df001f15 	stw	fp,124(sp)
   93244:	df001f04 	addi	fp,sp,124
   93248:	e13fff15 	stw	r4,-4(fp)
   9324c:	e17fe204 	addi	r5,fp,-120
   93250:	01003fc4 	movi	r4,255
   93254:	009d0c40 	call	9d0c4 <OSTaskQuery>
   93258:	e0bffe85 	stb	r2,-6(fp)
   9325c:	e0bffe83 	ldbu	r2,-6(fp)
   93260:	10803fcc 	andi	r2,r2,255
   93264:	1004c03a 	cmpne	r2,r2,zero
   93268:	1000191e 	bne	r2,zero,932d0 <__env_lock+0x98>
   9326c:	e0bfee83 	ldbu	r2,-70(fp)
   93270:	10803fcc 	andi	r2,r2,255
   93274:	e0bfe115 	stw	r2,-124(fp)
   93278:	d1271e17 	ldw	r4,-25480(gp)
   9327c:	e17ffd04 	addi	r5,fp,-12
   93280:	009b6100 	call	9b610 <OSSemQuery>
   93284:	e0bffe43 	ldbu	r2,-7(fp)
   93288:	10803fcc 	andi	r2,r2,255
   9328c:	1005003a 	cmpeq	r2,r2,zero
   93290:	1000071e 	bne	r2,zero,932b0 <__env_lock+0x78>
   93294:	d0e00f17 	ldw	r3,-32708(gp)
   93298:	e0bfe117 	ldw	r2,-124(fp)
   9329c:	10c0041e 	bne	r2,r3,932b0 <__env_lock+0x78>
   932a0:	d0a71d17 	ldw	r2,-25484(gp)
   932a4:	10800044 	addi	r2,r2,1
   932a8:	d0a71d15 	stw	r2,-25484(gp)
   932ac:	00000806 	br	932d0 <__env_lock+0x98>
   932b0:	d1271e17 	ldw	r4,-25480(gp)
   932b4:	e1bffe84 	addi	r6,fp,-6
   932b8:	000b883a 	mov	r5,zero
   932bc:	009b0f00 	call	9b0f0 <OSSemPend>
   932c0:	00800044 	movi	r2,1
   932c4:	d0a71d15 	stw	r2,-25484(gp)
   932c8:	e0bfe117 	ldw	r2,-124(fp)
   932cc:	d0a00f15 	stw	r2,-32708(gp)
   932d0:	e037883a 	mov	sp,fp
   932d4:	dfc00117 	ldw	ra,4(sp)
   932d8:	df000017 	ldw	fp,0(sp)
   932dc:	dec00204 	addi	sp,sp,8
   932e0:	f800283a 	ret

000932e4 <__env_unlock>:
   932e4:	defffd04 	addi	sp,sp,-12
   932e8:	dfc00215 	stw	ra,8(sp)
   932ec:	df000115 	stw	fp,4(sp)
   932f0:	df000104 	addi	fp,sp,4
   932f4:	e13fff15 	stw	r4,-4(fp)
   932f8:	d0a71d17 	ldw	r2,-25484(gp)
   932fc:	1005003a 	cmpeq	r2,r2,zero
   93300:	10000a1e 	bne	r2,zero,9332c <__env_unlock+0x48>
   93304:	d0a71d17 	ldw	r2,-25484(gp)
   93308:	10bfffc4 	addi	r2,r2,-1
   9330c:	d0a71d15 	stw	r2,-25484(gp)
   93310:	d0a71d17 	ldw	r2,-25484(gp)
   93314:	1004c03a 	cmpne	r2,r2,zero
   93318:	1000041e 	bne	r2,zero,9332c <__env_unlock+0x48>
   9331c:	00bfffc4 	movi	r2,-1
   93320:	d0a00f15 	stw	r2,-32708(gp)
   93324:	d1271e17 	ldw	r4,-25480(gp)
   93328:	009b4e80 	call	9b4e8 <OSSemPost>
   9332c:	e037883a 	mov	sp,fp
   93330:	dfc00117 	ldw	ra,4(sp)
   93334:	df000017 	ldw	fp,0(sp)
   93338:	dec00204 	addi	sp,sp,8
   9333c:	f800283a 	ret

00093340 <__malloc_lock>:
   93340:	deffdb04 	addi	sp,sp,-148
   93344:	dfc02415 	stw	ra,144(sp)
   93348:	df002315 	stw	fp,140(sp)
   9334c:	df002304 	addi	fp,sp,140
   93350:	e13fff15 	stw	r4,-4(fp)
   93354:	e03fe015 	stw	zero,-128(fp)
   93358:	008002b4 	movhi	r2,10
   9335c:	1090f744 	addi	r2,r2,17373
   93360:	10800003 	ldbu	r2,0(r2)
   93364:	10803fcc 	andi	r2,r2,255
   93368:	10800058 	cmpnei	r2,r2,1
   9336c:	1000311e 	bne	r2,zero,93434 <__malloc_lock+0xf4>
   93370:	e17fe204 	addi	r5,fp,-120
   93374:	01003fc4 	movi	r4,255
   93378:	009d0c40 	call	9d0c4 <OSTaskQuery>
   9337c:	e0bffe85 	stb	r2,-6(fp)
   93380:	e0bffe83 	ldbu	r2,-6(fp)
   93384:	10803fcc 	andi	r2,r2,255
   93388:	1004c03a 	cmpne	r2,r2,zero
   9338c:	1000291e 	bne	r2,zero,93434 <__malloc_lock+0xf4>
   93390:	e0bfee83 	ldbu	r2,-70(fp)
   93394:	10803fcc 	andi	r2,r2,255
   93398:	e0bfe115 	stw	r2,-124(fp)
   9339c:	d1272017 	ldw	r4,-25472(gp)
   933a0:	e17ffd04 	addi	r5,fp,-12
   933a4:	009b6100 	call	9b610 <OSSemQuery>
   933a8:	0005303a 	rdctl	r2,status
   933ac:	e0bfdf15 	stw	r2,-132(fp)
   933b0:	e0ffdf17 	ldw	r3,-132(fp)
   933b4:	00bfff84 	movi	r2,-2
   933b8:	1884703a 	and	r2,r3,r2
   933bc:	1001703a 	wrctl	status,r2
   933c0:	e0bfdf17 	ldw	r2,-132(fp)
   933c4:	e0bfe015 	stw	r2,-128(fp)
   933c8:	e0bffd0b 	ldhu	r2,-12(fp)
   933cc:	10bfffcc 	andi	r2,r2,65535
   933d0:	1004c03a 	cmpne	r2,r2,zero
   933d4:	10000b1e 	bne	r2,zero,93404 <__malloc_lock+0xc4>
   933d8:	d0e01017 	ldw	r3,-32704(gp)
   933dc:	e0bfe117 	ldw	r2,-124(fp)
   933e0:	10c0081e 	bne	r2,r3,93404 <__malloc_lock+0xc4>
   933e4:	d0a71f17 	ldw	r2,-25476(gp)
   933e8:	10800044 	addi	r2,r2,1
   933ec:	d0a71f15 	stw	r2,-25476(gp)
   933f0:	e0bfe017 	ldw	r2,-128(fp)
   933f4:	e0bfde15 	stw	r2,-136(fp)
   933f8:	e0bfde17 	ldw	r2,-136(fp)
   933fc:	1001703a 	wrctl	status,r2
   93400:	00000c06 	br	93434 <__malloc_lock+0xf4>
   93404:	e0bfe017 	ldw	r2,-128(fp)
   93408:	e0bfdd15 	stw	r2,-140(fp)
   9340c:	e0bfdd17 	ldw	r2,-140(fp)
   93410:	1001703a 	wrctl	status,r2
   93414:	d1272017 	ldw	r4,-25472(gp)
   93418:	e1bffe84 	addi	r6,fp,-6
   9341c:	000b883a 	mov	r5,zero
   93420:	009b0f00 	call	9b0f0 <OSSemPend>
   93424:	00800044 	movi	r2,1
   93428:	d0a71f15 	stw	r2,-25476(gp)
   9342c:	e0bfe117 	ldw	r2,-124(fp)
   93430:	d0a01015 	stw	r2,-32704(gp)
   93434:	e037883a 	mov	sp,fp
   93438:	dfc00117 	ldw	ra,4(sp)
   9343c:	df000017 	ldw	fp,0(sp)
   93440:	dec00204 	addi	sp,sp,8
   93444:	f800283a 	ret

00093448 <__malloc_unlock>:
   93448:	defff804 	addi	sp,sp,-32
   9344c:	dfc00715 	stw	ra,28(sp)
   93450:	df000615 	stw	fp,24(sp)
   93454:	df000604 	addi	fp,sp,24
   93458:	e13fff15 	stw	r4,-4(fp)
   9345c:	e03ffe15 	stw	zero,-8(fp)
   93460:	008002b4 	movhi	r2,10
   93464:	1090f744 	addi	r2,r2,17373
   93468:	10800003 	ldbu	r2,0(r2)
   9346c:	10803fcc 	andi	r2,r2,255
   93470:	10800058 	cmpnei	r2,r2,1
   93474:	1000231e 	bne	r2,zero,93504 <__malloc_unlock+0xbc>
   93478:	0005303a 	rdctl	r2,status
   9347c:	e0bffd15 	stw	r2,-12(fp)
   93480:	e0fffd17 	ldw	r3,-12(fp)
   93484:	00bfff84 	movi	r2,-2
   93488:	1884703a 	and	r2,r3,r2
   9348c:	1001703a 	wrctl	status,r2
   93490:	e0bffd17 	ldw	r2,-12(fp)
   93494:	e0bffe15 	stw	r2,-8(fp)
   93498:	d0a71f17 	ldw	r2,-25476(gp)
   9349c:	1004c03a 	cmpne	r2,r2,zero
   934a0:	1000051e 	bne	r2,zero,934b8 <__malloc_unlock+0x70>
   934a4:	e0bffe17 	ldw	r2,-8(fp)
   934a8:	e0bffc15 	stw	r2,-16(fp)
   934ac:	e0bffc17 	ldw	r2,-16(fp)
   934b0:	1001703a 	wrctl	status,r2
   934b4:	00001306 	br	93504 <__malloc_unlock+0xbc>
   934b8:	d0a71f17 	ldw	r2,-25476(gp)
   934bc:	10bfffc4 	addi	r2,r2,-1
   934c0:	d0a71f15 	stw	r2,-25476(gp)
   934c4:	d0a71f17 	ldw	r2,-25476(gp)
   934c8:	1004c03a 	cmpne	r2,r2,zero
   934cc:	1000091e 	bne	r2,zero,934f4 <__malloc_unlock+0xac>
   934d0:	00bfffc4 	movi	r2,-1
   934d4:	d0a01015 	stw	r2,-32704(gp)
   934d8:	e0bffe17 	ldw	r2,-8(fp)
   934dc:	e0bffb15 	stw	r2,-20(fp)
   934e0:	e0bffb17 	ldw	r2,-20(fp)
   934e4:	1001703a 	wrctl	status,r2
   934e8:	d1272017 	ldw	r4,-25472(gp)
   934ec:	009b4e80 	call	9b4e8 <OSSemPost>
   934f0:	00000406 	br	93504 <__malloc_unlock+0xbc>
   934f4:	e0bffe17 	ldw	r2,-8(fp)
   934f8:	e0bffa15 	stw	r2,-24(fp)
   934fc:	e0bffa17 	ldw	r2,-24(fp)
   93500:	1001703a 	wrctl	status,r2
   93504:	e037883a 	mov	sp,fp
   93508:	dfc00117 	ldw	ra,4(sp)
   9350c:	df000017 	ldw	fp,0(sp)
   93510:	dec00204 	addi	sp,sp,8
   93514:	f800283a 	ret

00093518 <OSEventNameGet>:
   93518:	defff604 	addi	sp,sp,-40
   9351c:	dfc00915 	stw	ra,36(sp)
   93520:	df000815 	stw	fp,32(sp)
   93524:	df000804 	addi	fp,sp,32
   93528:	e13ffc15 	stw	r4,-16(fp)
   9352c:	e17ffd15 	stw	r5,-12(fp)
   93530:	e1bffe15 	stw	r6,-8(fp)
   93534:	e03ffa15 	stw	zero,-24(fp)
   93538:	e0bffe17 	ldw	r2,-8(fp)
   9353c:	1004c03a 	cmpne	r2,r2,zero
   93540:	1000021e 	bne	r2,zero,9354c <OSEventNameGet+0x34>
   93544:	e03fff15 	stw	zero,-4(fp)
   93548:	00003906 	br	93630 <OSEventNameGet+0x118>
   9354c:	e0bffc17 	ldw	r2,-16(fp)
   93550:	1004c03a 	cmpne	r2,r2,zero
   93554:	1000051e 	bne	r2,zero,9356c <OSEventNameGet+0x54>
   93558:	e0fffe17 	ldw	r3,-8(fp)
   9355c:	00800104 	movi	r2,4
   93560:	18800005 	stb	r2,0(r3)
   93564:	e03fff15 	stw	zero,-4(fp)
   93568:	00003106 	br	93630 <OSEventNameGet+0x118>
   9356c:	e0bffd17 	ldw	r2,-12(fp)
   93570:	1004c03a 	cmpne	r2,r2,zero
   93574:	1000051e 	bne	r2,zero,9358c <OSEventNameGet+0x74>
   93578:	e0fffe17 	ldw	r3,-8(fp)
   9357c:	00800304 	movi	r2,12
   93580:	18800005 	stb	r2,0(r3)
   93584:	e03fff15 	stw	zero,-4(fp)
   93588:	00002906 	br	93630 <OSEventNameGet+0x118>
   9358c:	d0a72f03 	ldbu	r2,-25412(gp)
   93590:	10803fcc 	andi	r2,r2,255
   93594:	1005003a 	cmpeq	r2,r2,zero
   93598:	1000051e 	bne	r2,zero,935b0 <OSEventNameGet+0x98>
   9359c:	e0fffe17 	ldw	r3,-8(fp)
   935a0:	00800444 	movi	r2,17
   935a4:	18800005 	stb	r2,0(r3)
   935a8:	e03fff15 	stw	zero,-4(fp)
   935ac:	00002006 	br	93630 <OSEventNameGet+0x118>
   935b0:	e0bffc17 	ldw	r2,-16(fp)
   935b4:	10800003 	ldbu	r2,0(r2)
   935b8:	10803fcc 	andi	r2,r2,255
   935bc:	10bfffc4 	addi	r2,r2,-1
   935c0:	10800128 	cmpgeui	r2,r2,4
   935c4:	1000161e 	bne	r2,zero,93620 <OSEventNameGet+0x108>
   935c8:	0005303a 	rdctl	r2,status
   935cc:	e0bff915 	stw	r2,-28(fp)
   935d0:	e0fff917 	ldw	r3,-28(fp)
   935d4:	00bfff84 	movi	r2,-2
   935d8:	1884703a 	and	r2,r3,r2
   935dc:	1001703a 	wrctl	status,r2
   935e0:	e0bff917 	ldw	r2,-28(fp)
   935e4:	e0bffa15 	stw	r2,-24(fp)
   935e8:	e0bffc17 	ldw	r2,-16(fp)
   935ec:	11400384 	addi	r5,r2,14
   935f0:	e13ffd17 	ldw	r4,-12(fp)
   935f4:	009509c0 	call	9509c <OS_StrCopy>
   935f8:	e0bffb05 	stb	r2,-20(fp)
   935fc:	e0bffa17 	ldw	r2,-24(fp)
   93600:	e0bff815 	stw	r2,-32(fp)
   93604:	e0bff817 	ldw	r2,-32(fp)
   93608:	1001703a 	wrctl	status,r2
   9360c:	e0bffe17 	ldw	r2,-8(fp)
   93610:	10000005 	stb	zero,0(r2)
   93614:	e0bffb03 	ldbu	r2,-20(fp)
   93618:	e0bfff15 	stw	r2,-4(fp)
   9361c:	00000406 	br	93630 <OSEventNameGet+0x118>
   93620:	e0fffe17 	ldw	r3,-8(fp)
   93624:	00800044 	movi	r2,1
   93628:	18800005 	stb	r2,0(r3)
   9362c:	e03fff15 	stw	zero,-4(fp)
   93630:	e0bfff17 	ldw	r2,-4(fp)
   93634:	e037883a 	mov	sp,fp
   93638:	dfc00117 	ldw	ra,4(sp)
   9363c:	df000017 	ldw	fp,0(sp)
   93640:	dec00204 	addi	sp,sp,8
   93644:	f800283a 	ret

00093648 <OSEventNameSet>:
   93648:	defff604 	addi	sp,sp,-40
   9364c:	dfc00915 	stw	ra,36(sp)
   93650:	df000815 	stw	fp,32(sp)
   93654:	df000804 	addi	fp,sp,32
   93658:	e13ffd15 	stw	r4,-12(fp)
   9365c:	e17ffe15 	stw	r5,-8(fp)
   93660:	e1bfff15 	stw	r6,-4(fp)
   93664:	e03ffb15 	stw	zero,-20(fp)
   93668:	e0bfff17 	ldw	r2,-4(fp)
   9366c:	1005003a 	cmpeq	r2,r2,zero
   93670:	1000411e 	bne	r2,zero,93778 <OSEventNameSet+0x130>
   93674:	e0bffd17 	ldw	r2,-12(fp)
   93678:	1004c03a 	cmpne	r2,r2,zero
   9367c:	1000041e 	bne	r2,zero,93690 <OSEventNameSet+0x48>
   93680:	e0ffff17 	ldw	r3,-4(fp)
   93684:	00800104 	movi	r2,4
   93688:	18800005 	stb	r2,0(r3)
   9368c:	00003a06 	br	93778 <OSEventNameSet+0x130>
   93690:	e0bffe17 	ldw	r2,-8(fp)
   93694:	1004c03a 	cmpne	r2,r2,zero
   93698:	1000041e 	bne	r2,zero,936ac <OSEventNameSet+0x64>
   9369c:	e0ffff17 	ldw	r3,-4(fp)
   936a0:	00800304 	movi	r2,12
   936a4:	18800005 	stb	r2,0(r3)
   936a8:	00003306 	br	93778 <OSEventNameSet+0x130>
   936ac:	d0a72f03 	ldbu	r2,-25412(gp)
   936b0:	10803fcc 	andi	r2,r2,255
   936b4:	1005003a 	cmpeq	r2,r2,zero
   936b8:	1000041e 	bne	r2,zero,936cc <OSEventNameSet+0x84>
   936bc:	e0ffff17 	ldw	r3,-4(fp)
   936c0:	00800484 	movi	r2,18
   936c4:	18800005 	stb	r2,0(r3)
   936c8:	00002b06 	br	93778 <OSEventNameSet+0x130>
   936cc:	e0bffd17 	ldw	r2,-12(fp)
   936d0:	10800003 	ldbu	r2,0(r2)
   936d4:	10803fcc 	andi	r2,r2,255
   936d8:	10bfffc4 	addi	r2,r2,-1
   936dc:	10800128 	cmpgeui	r2,r2,4
   936e0:	10000f1e 	bne	r2,zero,93720 <OSEventNameSet+0xd8>
   936e4:	0005303a 	rdctl	r2,status
   936e8:	e0bffa15 	stw	r2,-24(fp)
   936ec:	e0fffa17 	ldw	r3,-24(fp)
   936f0:	00bfff84 	movi	r2,-2
   936f4:	1884703a 	and	r2,r3,r2
   936f8:	1001703a 	wrctl	status,r2
   936fc:	e0bffa17 	ldw	r2,-24(fp)
   93700:	e0bffb15 	stw	r2,-20(fp)
   93704:	e13ffe17 	ldw	r4,-8(fp)
   93708:	009511c0 	call	9511c <OS_StrLen>
   9370c:	e0bffc05 	stb	r2,-16(fp)
   93710:	e0bffc03 	ldbu	r2,-16(fp)
   93714:	10800828 	cmpgeui	r2,r2,32
   93718:	1000051e 	bne	r2,zero,93730 <OSEventNameSet+0xe8>
   9371c:	00000c06 	br	93750 <OSEventNameSet+0x108>
   93720:	e0ffff17 	ldw	r3,-4(fp)
   93724:	00800044 	movi	r2,1
   93728:	18800005 	stb	r2,0(r3)
   9372c:	00001206 	br	93778 <OSEventNameSet+0x130>
   93730:	e0bffb17 	ldw	r2,-20(fp)
   93734:	e0bff915 	stw	r2,-28(fp)
   93738:	e0bff917 	ldw	r2,-28(fp)
   9373c:	1001703a 	wrctl	status,r2
   93740:	e0ffff17 	ldw	r3,-4(fp)
   93744:	008002c4 	movi	r2,11
   93748:	18800005 	stb	r2,0(r3)
   9374c:	00000a06 	br	93778 <OSEventNameSet+0x130>
   93750:	e0bffd17 	ldw	r2,-12(fp)
   93754:	11000384 	addi	r4,r2,14
   93758:	e17ffe17 	ldw	r5,-8(fp)
   9375c:	009509c0 	call	9509c <OS_StrCopy>
   93760:	e0bffb17 	ldw	r2,-20(fp)
   93764:	e0bff815 	stw	r2,-32(fp)
   93768:	e0bff817 	ldw	r2,-32(fp)
   9376c:	1001703a 	wrctl	status,r2
   93770:	e0bfff17 	ldw	r2,-4(fp)
   93774:	10000005 	stb	zero,0(r2)
   93778:	e037883a 	mov	sp,fp
   9377c:	dfc00117 	ldw	ra,4(sp)
   93780:	df000017 	ldw	fp,0(sp)
   93784:	dec00204 	addi	sp,sp,8
   93788:	f800283a 	ret

0009378c <OSEventPendMulti>:
   9378c:	deffe704 	addi	sp,sp,-100
   93790:	dfc01815 	stw	ra,96(sp)
   93794:	df001715 	stw	fp,92(sp)
   93798:	df001704 	addi	fp,sp,92
   9379c:	e13ff615 	stw	r4,-40(fp)
   937a0:	e17ff715 	stw	r5,-36(fp)
   937a4:	e1bff815 	stw	r6,-32(fp)
   937a8:	e1fff90d 	sth	r7,-28(fp)
   937ac:	e03ff015 	stw	zero,-64(fp)
   937b0:	e0800217 	ldw	r2,8(fp)
   937b4:	1004c03a 	cmpne	r2,r2,zero
   937b8:	1000021e 	bne	r2,zero,937c4 <OSEventPendMulti+0x38>
   937bc:	e03fff15 	stw	zero,-4(fp)
   937c0:	00019906 	br	93e28 <OSEventPendMulti+0x69c>
   937c4:	e0bff617 	ldw	r2,-40(fp)
   937c8:	1004c03a 	cmpne	r2,r2,zero
   937cc:	1000051e 	bne	r2,zero,937e4 <OSEventPendMulti+0x58>
   937d0:	e0c00217 	ldw	r3,8(fp)
   937d4:	00800104 	movi	r2,4
   937d8:	18800005 	stb	r2,0(r3)
   937dc:	e03fff15 	stw	zero,-4(fp)
   937e0:	00019106 	br	93e28 <OSEventPendMulti+0x69c>
   937e4:	e0bff717 	ldw	r2,-36(fp)
   937e8:	1004c03a 	cmpne	r2,r2,zero
   937ec:	1000051e 	bne	r2,zero,93804 <OSEventPendMulti+0x78>
   937f0:	e0c00217 	ldw	r3,8(fp)
   937f4:	00800104 	movi	r2,4
   937f8:	18800005 	stb	r2,0(r3)
   937fc:	e03fff15 	stw	zero,-4(fp)
   93800:	00018906 	br	93e28 <OSEventPendMulti+0x69c>
   93804:	e0bff817 	ldw	r2,-32(fp)
   93808:	1004c03a 	cmpne	r2,r2,zero
   9380c:	1000051e 	bne	r2,zero,93824 <OSEventPendMulti+0x98>
   93810:	e0c00217 	ldw	r3,8(fp)
   93814:	00800104 	movi	r2,4
   93818:	18800005 	stb	r2,0(r3)
   9381c:	e03fff15 	stw	zero,-4(fp)
   93820:	00018106 	br	93e28 <OSEventPendMulti+0x69c>
   93824:	e0bff717 	ldw	r2,-36(fp)
   93828:	10000015 	stw	zero,0(r2)
   9382c:	e0bff617 	ldw	r2,-40(fp)
   93830:	e0bff515 	stw	r2,-44(fp)
   93834:	e0bff517 	ldw	r2,-44(fp)
   93838:	10800017 	ldw	r2,0(r2)
   9383c:	e0bff415 	stw	r2,-48(fp)
   93840:	00001806 	br	938a4 <OSEventPendMulti+0x118>
   93844:	e0bff417 	ldw	r2,-48(fp)
   93848:	10800003 	ldbu	r2,0(r2)
   9384c:	10803fcc 	andi	r2,r2,255
   93850:	e0bffe15 	stw	r2,-8(fp)
   93854:	e0fffe17 	ldw	r3,-8(fp)
   93858:	188000a0 	cmpeqi	r2,r3,2
   9385c:	10000b1e 	bne	r2,zero,9388c <OSEventPendMulti+0x100>
   93860:	e0fffe17 	ldw	r3,-8(fp)
   93864:	188000e0 	cmpeqi	r2,r3,3
   93868:	1000081e 	bne	r2,zero,9388c <OSEventPendMulti+0x100>
   9386c:	e0fffe17 	ldw	r3,-8(fp)
   93870:	18800060 	cmpeqi	r2,r3,1
   93874:	1000051e 	bne	r2,zero,9388c <OSEventPendMulti+0x100>
   93878:	e0c00217 	ldw	r3,8(fp)
   9387c:	00800044 	movi	r2,1
   93880:	18800005 	stb	r2,0(r3)
   93884:	e03fff15 	stw	zero,-4(fp)
   93888:	00016706 	br	93e28 <OSEventPendMulti+0x69c>
   9388c:	e0bff517 	ldw	r2,-44(fp)
   93890:	10800104 	addi	r2,r2,4
   93894:	e0bff515 	stw	r2,-44(fp)
   93898:	e0bff517 	ldw	r2,-44(fp)
   9389c:	10800017 	ldw	r2,0(r2)
   938a0:	e0bff415 	stw	r2,-48(fp)
   938a4:	e0bff417 	ldw	r2,-48(fp)
   938a8:	1004c03a 	cmpne	r2,r2,zero
   938ac:	103fe51e 	bne	r2,zero,93844 <OSEventPendMulti+0xb8>
   938b0:	d0a72f03 	ldbu	r2,-25412(gp)
   938b4:	10803fcc 	andi	r2,r2,255
   938b8:	1005003a 	cmpeq	r2,r2,zero
   938bc:	1000051e 	bne	r2,zero,938d4 <OSEventPendMulti+0x148>
   938c0:	e0c00217 	ldw	r3,8(fp)
   938c4:	00800084 	movi	r2,2
   938c8:	18800005 	stb	r2,0(r3)
   938cc:	e03fff15 	stw	zero,-4(fp)
   938d0:	00015506 	br	93e28 <OSEventPendMulti+0x69c>
   938d4:	d0a72103 	ldbu	r2,-25468(gp)
   938d8:	10803fcc 	andi	r2,r2,255
   938dc:	1005003a 	cmpeq	r2,r2,zero
   938e0:	1000051e 	bne	r2,zero,938f8 <OSEventPendMulti+0x16c>
   938e4:	e0c00217 	ldw	r3,8(fp)
   938e8:	00800344 	movi	r2,13
   938ec:	18800005 	stb	r2,0(r3)
   938f0:	e03fff15 	stw	zero,-4(fp)
   938f4:	00014c06 	br	93e28 <OSEventPendMulti+0x69c>
   938f8:	0005303a 	rdctl	r2,status
   938fc:	e0bfef15 	stw	r2,-68(fp)
   93900:	e0ffef17 	ldw	r3,-68(fp)
   93904:	00bfff84 	movi	r2,-2
   93908:	1884703a 	and	r2,r3,r2
   9390c:	1001703a 	wrctl	status,r2
   93910:	e0bfef17 	ldw	r2,-68(fp)
   93914:	e0bff015 	stw	r2,-64(fp)
   93918:	e03ff205 	stb	zero,-56(fp)
   9391c:	e03ff18d 	sth	zero,-58(fp)
   93920:	e03ff105 	stb	zero,-60(fp)
   93924:	e0bff617 	ldw	r2,-40(fp)
   93928:	e0bff515 	stw	r2,-44(fp)
   9392c:	e0bff517 	ldw	r2,-44(fp)
   93930:	10800017 	ldw	r2,0(r2)
   93934:	e0bff415 	stw	r2,-48(fp)
   93938:	00008f06 	br	93b78 <OSEventPendMulti+0x3ec>
   9393c:	e0bff417 	ldw	r2,-48(fp)
   93940:	10800003 	ldbu	r2,0(r2)
   93944:	10803fcc 	andi	r2,r2,255
   93948:	e0bffd15 	stw	r2,-12(fp)
   9394c:	e0fffd17 	ldw	r3,-12(fp)
   93950:	188000a0 	cmpeqi	r2,r3,2
   93954:	1000441e 	bne	r2,zero,93a68 <OSEventPendMulti+0x2dc>
   93958:	e0fffd17 	ldw	r3,-12(fp)
   9395c:	188000e0 	cmpeqi	r2,r3,3
   93960:	1000041e 	bne	r2,zero,93974 <OSEventPendMulti+0x1e8>
   93964:	e0fffd17 	ldw	r3,-12(fp)
   93968:	18800060 	cmpeqi	r2,r3,1
   9396c:	1000211e 	bne	r2,zero,939f4 <OSEventPendMulti+0x268>
   93970:	00006f06 	br	93b30 <OSEventPendMulti+0x3a4>
   93974:	e0bff417 	ldw	r2,-48(fp)
   93978:	1080020b 	ldhu	r2,8(r2)
   9397c:	10bfffcc 	andi	r2,r2,65535
   93980:	1005003a 	cmpeq	r2,r2,zero
   93984:	1000171e 	bne	r2,zero,939e4 <OSEventPendMulti+0x258>
   93988:	e0bff417 	ldw	r2,-48(fp)
   9398c:	1080020b 	ldhu	r2,8(r2)
   93990:	10bfffc4 	addi	r2,r2,-1
   93994:	1007883a 	mov	r3,r2
   93998:	e0bff417 	ldw	r2,-48(fp)
   9399c:	10c0020d 	sth	r3,8(r2)
   939a0:	e0fff717 	ldw	r3,-36(fp)
   939a4:	e0bff417 	ldw	r2,-48(fp)
   939a8:	18800015 	stw	r2,0(r3)
   939ac:	e0bff717 	ldw	r2,-36(fp)
   939b0:	10800104 	addi	r2,r2,4
   939b4:	e0bff715 	stw	r2,-36(fp)
   939b8:	00800044 	movi	r2,1
   939bc:	e0bff205 	stb	r2,-56(fp)
   939c0:	e0bff817 	ldw	r2,-32(fp)
   939c4:	10000015 	stw	zero,0(r2)
   939c8:	e0bff817 	ldw	r2,-32(fp)
   939cc:	10800104 	addi	r2,r2,4
   939d0:	e0bff815 	stw	r2,-32(fp)
   939d4:	e0bff18b 	ldhu	r2,-58(fp)
   939d8:	10800044 	addi	r2,r2,1
   939dc:	e0bff18d 	sth	r2,-58(fp)
   939e0:	00005f06 	br	93b60 <OSEventPendMulti+0x3d4>
   939e4:	e0bff103 	ldbu	r2,-60(fp)
   939e8:	10800054 	ori	r2,r2,1
   939ec:	e0bff105 	stb	r2,-60(fp)
   939f0:	00005b06 	br	93b60 <OSEventPendMulti+0x3d4>
   939f4:	e0bff417 	ldw	r2,-48(fp)
   939f8:	10800117 	ldw	r2,4(r2)
   939fc:	1005003a 	cmpeq	r2,r2,zero
   93a00:	1000151e 	bne	r2,zero,93a58 <OSEventPendMulti+0x2cc>
   93a04:	e0bff417 	ldw	r2,-48(fp)
   93a08:	10c00117 	ldw	r3,4(r2)
   93a0c:	e0bff817 	ldw	r2,-32(fp)
   93a10:	10c00015 	stw	r3,0(r2)
   93a14:	e0bff817 	ldw	r2,-32(fp)
   93a18:	10800104 	addi	r2,r2,4
   93a1c:	e0bff815 	stw	r2,-32(fp)
   93a20:	e0bff417 	ldw	r2,-48(fp)
   93a24:	10000115 	stw	zero,4(r2)
   93a28:	e0fff717 	ldw	r3,-36(fp)
   93a2c:	e0bff417 	ldw	r2,-48(fp)
   93a30:	18800015 	stw	r2,0(r3)
   93a34:	e0bff717 	ldw	r2,-36(fp)
   93a38:	10800104 	addi	r2,r2,4
   93a3c:	e0bff715 	stw	r2,-36(fp)
   93a40:	00800044 	movi	r2,1
   93a44:	e0bff205 	stb	r2,-56(fp)
   93a48:	e0bff18b 	ldhu	r2,-58(fp)
   93a4c:	10800044 	addi	r2,r2,1
   93a50:	e0bff18d 	sth	r2,-58(fp)
   93a54:	00004206 	br	93b60 <OSEventPendMulti+0x3d4>
   93a58:	e0bff103 	ldbu	r2,-60(fp)
   93a5c:	10800094 	ori	r2,r2,2
   93a60:	e0bff105 	stb	r2,-60(fp)
   93a64:	00003e06 	br	93b60 <OSEventPendMulti+0x3d4>
   93a68:	e0bff417 	ldw	r2,-48(fp)
   93a6c:	10800117 	ldw	r2,4(r2)
   93a70:	e0bff315 	stw	r2,-52(fp)
   93a74:	e0bff317 	ldw	r2,-52(fp)
   93a78:	1080058b 	ldhu	r2,22(r2)
   93a7c:	10bfffcc 	andi	r2,r2,65535
   93a80:	1005003a 	cmpeq	r2,r2,zero
   93a84:	1000261e 	bne	r2,zero,93b20 <OSEventPendMulti+0x394>
   93a88:	e0bff317 	ldw	r2,-52(fp)
   93a8c:	11000417 	ldw	r4,16(r2)
   93a90:	20c00017 	ldw	r3,0(r4)
   93a94:	e0bff817 	ldw	r2,-32(fp)
   93a98:	10c00015 	stw	r3,0(r2)
   93a9c:	e0bff817 	ldw	r2,-32(fp)
   93aa0:	10800104 	addi	r2,r2,4
   93aa4:	e0bff815 	stw	r2,-32(fp)
   93aa8:	20c00104 	addi	r3,r4,4
   93aac:	e0bff317 	ldw	r2,-52(fp)
   93ab0:	10c00415 	stw	r3,16(r2)
   93ab4:	e0bff317 	ldw	r2,-52(fp)
   93ab8:	10c00417 	ldw	r3,16(r2)
   93abc:	e0bff317 	ldw	r2,-52(fp)
   93ac0:	10800217 	ldw	r2,8(r2)
   93ac4:	1880041e 	bne	r3,r2,93ad8 <OSEventPendMulti+0x34c>
   93ac8:	e0bff317 	ldw	r2,-52(fp)
   93acc:	10c00117 	ldw	r3,4(r2)
   93ad0:	e0bff317 	ldw	r2,-52(fp)
   93ad4:	10c00415 	stw	r3,16(r2)
   93ad8:	e0bff317 	ldw	r2,-52(fp)
   93adc:	1080058b 	ldhu	r2,22(r2)
   93ae0:	10bfffc4 	addi	r2,r2,-1
   93ae4:	1007883a 	mov	r3,r2
   93ae8:	e0bff317 	ldw	r2,-52(fp)
   93aec:	10c0058d 	sth	r3,22(r2)
   93af0:	e0fff717 	ldw	r3,-36(fp)
   93af4:	e0bff417 	ldw	r2,-48(fp)
   93af8:	18800015 	stw	r2,0(r3)
   93afc:	e0bff717 	ldw	r2,-36(fp)
   93b00:	10800104 	addi	r2,r2,4
   93b04:	e0bff715 	stw	r2,-36(fp)
   93b08:	00800044 	movi	r2,1
   93b0c:	e0bff205 	stb	r2,-56(fp)
   93b10:	e0bff18b 	ldhu	r2,-58(fp)
   93b14:	10800044 	addi	r2,r2,1
   93b18:	e0bff18d 	sth	r2,-58(fp)
   93b1c:	00001006 	br	93b60 <OSEventPendMulti+0x3d4>
   93b20:	e0bff103 	ldbu	r2,-60(fp)
   93b24:	10800114 	ori	r2,r2,4
   93b28:	e0bff105 	stb	r2,-60(fp)
   93b2c:	00000c06 	br	93b60 <OSEventPendMulti+0x3d4>
   93b30:	e0bff017 	ldw	r2,-64(fp)
   93b34:	e0bfee15 	stw	r2,-72(fp)
   93b38:	e0bfee17 	ldw	r2,-72(fp)
   93b3c:	1001703a 	wrctl	status,r2
   93b40:	e0bff717 	ldw	r2,-36(fp)
   93b44:	10000015 	stw	zero,0(r2)
   93b48:	e0c00217 	ldw	r3,8(fp)
   93b4c:	00800044 	movi	r2,1
   93b50:	18800005 	stb	r2,0(r3)
   93b54:	e0bff18b 	ldhu	r2,-58(fp)
   93b58:	e0bfff15 	stw	r2,-4(fp)
   93b5c:	0000b206 	br	93e28 <OSEventPendMulti+0x69c>
   93b60:	e0bff517 	ldw	r2,-44(fp)
   93b64:	10800104 	addi	r2,r2,4
   93b68:	e0bff515 	stw	r2,-44(fp)
   93b6c:	e0bff517 	ldw	r2,-44(fp)
   93b70:	10800017 	ldw	r2,0(r2)
   93b74:	e0bff415 	stw	r2,-48(fp)
   93b78:	e0bff417 	ldw	r2,-48(fp)
   93b7c:	1004c03a 	cmpne	r2,r2,zero
   93b80:	103f6e1e 	bne	r2,zero,9393c <OSEventPendMulti+0x1b0>
   93b84:	e0bff203 	ldbu	r2,-56(fp)
   93b88:	10800058 	cmpnei	r2,r2,1
   93b8c:	10000b1e 	bne	r2,zero,93bbc <OSEventPendMulti+0x430>
   93b90:	e0bff717 	ldw	r2,-36(fp)
   93b94:	10000015 	stw	zero,0(r2)
   93b98:	e0bff017 	ldw	r2,-64(fp)
   93b9c:	e0bfed15 	stw	r2,-76(fp)
   93ba0:	e0bfed17 	ldw	r2,-76(fp)
   93ba4:	1001703a 	wrctl	status,r2
   93ba8:	e0800217 	ldw	r2,8(fp)
   93bac:	10000005 	stb	zero,0(r2)
   93bb0:	e0fff18b 	ldhu	r3,-58(fp)
   93bb4:	e0ffff15 	stw	r3,-4(fp)
   93bb8:	00009b06 	br	93e28 <OSEventPendMulti+0x69c>
   93bbc:	d1273017 	ldw	r4,-25408(gp)
   93bc0:	d0a73017 	ldw	r2,-25408(gp)
   93bc4:	10c00c03 	ldbu	r3,48(r2)
   93bc8:	e0bff103 	ldbu	r2,-60(fp)
   93bcc:	1884b03a 	or	r2,r3,r2
   93bd0:	1007883a 	mov	r3,r2
   93bd4:	00bfe004 	movi	r2,-128
   93bd8:	1884b03a 	or	r2,r3,r2
   93bdc:	20800c05 	stb	r2,48(r4)
   93be0:	d0a73017 	ldw	r2,-25408(gp)
   93be4:	10000c45 	stb	zero,49(r2)
   93be8:	d0e73017 	ldw	r3,-25408(gp)
   93bec:	e0bff90b 	ldhu	r2,-28(fp)
   93bf0:	18800b8d 	sth	r2,46(r3)
   93bf4:	e13ff617 	ldw	r4,-40(fp)
   93bf8:	00947bc0 	call	947bc <OS_EventTaskWaitMulti>
   93bfc:	e0bff017 	ldw	r2,-64(fp)
   93c00:	e0bfec15 	stw	r2,-80(fp)
   93c04:	e0bfec17 	ldw	r2,-80(fp)
   93c08:	1001703a 	wrctl	status,r2
   93c0c:	0094f580 	call	94f58 <OS_Sched>
   93c10:	0005303a 	rdctl	r2,status
   93c14:	e0bfeb15 	stw	r2,-84(fp)
   93c18:	e0ffeb17 	ldw	r3,-84(fp)
   93c1c:	00bfff84 	movi	r2,-2
   93c20:	1884703a 	and	r2,r3,r2
   93c24:	1001703a 	wrctl	status,r2
   93c28:	e0bfeb17 	ldw	r2,-84(fp)
   93c2c:	e0bff015 	stw	r2,-64(fp)
   93c30:	d0a73017 	ldw	r2,-25408(gp)
   93c34:	10800c43 	ldbu	r2,49(r2)
   93c38:	10803fcc 	andi	r2,r2,255
   93c3c:	e0bffc15 	stw	r2,-16(fp)
   93c40:	e0fffc17 	ldw	r3,-16(fp)
   93c44:	1805003a 	cmpeq	r2,r3,zero
   93c48:	1000041e 	bne	r2,zero,93c5c <OSEventPendMulti+0x4d0>
   93c4c:	e0fffc17 	ldw	r3,-16(fp)
   93c50:	188000a0 	cmpeqi	r2,r3,2
   93c54:	1000011e 	bne	r2,zero,93c5c <OSEventPendMulti+0x4d0>
   93c58:	00001906 	br	93cc0 <OSEventPendMulti+0x534>
   93c5c:	d0a73017 	ldw	r2,-25408(gp)
   93c60:	10800717 	ldw	r2,28(r2)
   93c64:	e0bff415 	stw	r2,-48(fp)
   93c68:	e0bff417 	ldw	r2,-48(fp)
   93c6c:	1005003a 	cmpeq	r2,r2,zero
   93c70:	10000c1e 	bne	r2,zero,93ca4 <OSEventPendMulti+0x518>
   93c74:	e0fff717 	ldw	r3,-36(fp)
   93c78:	e0bff417 	ldw	r2,-48(fp)
   93c7c:	18800015 	stw	r2,0(r3)
   93c80:	e0bff717 	ldw	r2,-36(fp)
   93c84:	10800104 	addi	r2,r2,4
   93c88:	e0bff715 	stw	r2,-36(fp)
   93c8c:	e0bff717 	ldw	r2,-36(fp)
   93c90:	10000015 	stw	zero,0(r2)
   93c94:	e0bff18b 	ldhu	r2,-58(fp)
   93c98:	10800044 	addi	r2,r2,1
   93c9c:	e0bff18d 	sth	r2,-58(fp)
   93ca0:	00000a06 	br	93ccc <OSEventPendMulti+0x540>
   93ca4:	d0a73017 	ldw	r2,-25408(gp)
   93ca8:	00c00044 	movi	r3,1
   93cac:	10c00c45 	stb	r3,49(r2)
   93cb0:	d1273017 	ldw	r4,-25408(gp)
   93cb4:	e17ff617 	ldw	r5,-40(fp)
   93cb8:	00949c80 	call	949c8 <OS_EventTaskRemoveMulti>
   93cbc:	00000306 	br	93ccc <OSEventPendMulti+0x540>
   93cc0:	d1273017 	ldw	r4,-25408(gp)
   93cc4:	e17ff617 	ldw	r5,-40(fp)
   93cc8:	00949c80 	call	949c8 <OS_EventTaskRemoveMulti>
   93ccc:	d0a73017 	ldw	r2,-25408(gp)
   93cd0:	10800c43 	ldbu	r2,49(r2)
   93cd4:	10803fcc 	andi	r2,r2,255
   93cd8:	e0bffb15 	stw	r2,-20(fp)
   93cdc:	e0fffb17 	ldw	r3,-20(fp)
   93ce0:	1805003a 	cmpeq	r2,r3,zero
   93ce4:	1000041e 	bne	r2,zero,93cf8 <OSEventPendMulti+0x56c>
   93ce8:	e0fffb17 	ldw	r3,-20(fp)
   93cec:	188000a0 	cmpeqi	r2,r3,2
   93cf0:	10002c1e 	bne	r2,zero,93da4 <OSEventPendMulti+0x618>
   93cf4:	00003406 	br	93dc8 <OSEventPendMulti+0x63c>
   93cf8:	e0bff417 	ldw	r2,-48(fp)
   93cfc:	10800003 	ldbu	r2,0(r2)
   93d00:	10803fcc 	andi	r2,r2,255
   93d04:	e0bffa15 	stw	r2,-24(fp)
   93d08:	e0fffa17 	ldw	r3,-24(fp)
   93d0c:	18800050 	cmplti	r2,r3,1
   93d10:	1000151e 	bne	r2,zero,93d68 <OSEventPendMulti+0x5dc>
   93d14:	e0fffa17 	ldw	r3,-24(fp)
   93d18:	188000d0 	cmplti	r2,r3,3
   93d1c:	10000a1e 	bne	r2,zero,93d48 <OSEventPendMulti+0x5bc>
   93d20:	e0fffa17 	ldw	r3,-24(fp)
   93d24:	188000e0 	cmpeqi	r2,r3,3
   93d28:	1000011e 	bne	r2,zero,93d30 <OSEventPendMulti+0x5a4>
   93d2c:	00000e06 	br	93d68 <OSEventPendMulti+0x5dc>
   93d30:	e0bff817 	ldw	r2,-32(fp)
   93d34:	10000015 	stw	zero,0(r2)
   93d38:	e0bff817 	ldw	r2,-32(fp)
   93d3c:	10800104 	addi	r2,r2,4
   93d40:	e0bff815 	stw	r2,-32(fp)
   93d44:	00001406 	br	93d98 <OSEventPendMulti+0x60c>
   93d48:	d0a73017 	ldw	r2,-25408(gp)
   93d4c:	10c00917 	ldw	r3,36(r2)
   93d50:	e0bff817 	ldw	r2,-32(fp)
   93d54:	10c00015 	stw	r3,0(r2)
   93d58:	e0bff817 	ldw	r2,-32(fp)
   93d5c:	10800104 	addi	r2,r2,4
   93d60:	e0bff815 	stw	r2,-32(fp)
   93d64:	00000c06 	br	93d98 <OSEventPendMulti+0x60c>
   93d68:	e0bff017 	ldw	r2,-64(fp)
   93d6c:	e0bfea15 	stw	r2,-88(fp)
   93d70:	e0bfea17 	ldw	r2,-88(fp)
   93d74:	1001703a 	wrctl	status,r2
   93d78:	e0bff717 	ldw	r2,-36(fp)
   93d7c:	10000015 	stw	zero,0(r2)
   93d80:	e0c00217 	ldw	r3,8(fp)
   93d84:	00800044 	movi	r2,1
   93d88:	18800005 	stb	r2,0(r3)
   93d8c:	e0bff18b 	ldhu	r2,-58(fp)
   93d90:	e0bfff15 	stw	r2,-4(fp)
   93d94:	00002406 	br	93e28 <OSEventPendMulti+0x69c>
   93d98:	e0800217 	ldw	r2,8(fp)
   93d9c:	10000005 	stb	zero,0(r2)
   93da0:	00001106 	br	93de8 <OSEventPendMulti+0x65c>
   93da4:	e0bff817 	ldw	r2,-32(fp)
   93da8:	10000015 	stw	zero,0(r2)
   93dac:	e0bff817 	ldw	r2,-32(fp)
   93db0:	10800104 	addi	r2,r2,4
   93db4:	e0bff815 	stw	r2,-32(fp)
   93db8:	e0c00217 	ldw	r3,8(fp)
   93dbc:	00800384 	movi	r2,14
   93dc0:	18800005 	stb	r2,0(r3)
   93dc4:	00000806 	br	93de8 <OSEventPendMulti+0x65c>
   93dc8:	e0bff817 	ldw	r2,-32(fp)
   93dcc:	10000015 	stw	zero,0(r2)
   93dd0:	e0bff817 	ldw	r2,-32(fp)
   93dd4:	10800104 	addi	r2,r2,4
   93dd8:	e0bff815 	stw	r2,-32(fp)
   93ddc:	e0c00217 	ldw	r3,8(fp)
   93de0:	00800284 	movi	r2,10
   93de4:	18800005 	stb	r2,0(r3)
   93de8:	d0a73017 	ldw	r2,-25408(gp)
   93dec:	10000c05 	stb	zero,48(r2)
   93df0:	d0a73017 	ldw	r2,-25408(gp)
   93df4:	10000c45 	stb	zero,49(r2)
   93df8:	d0a73017 	ldw	r2,-25408(gp)
   93dfc:	10000715 	stw	zero,28(r2)
   93e00:	d0a73017 	ldw	r2,-25408(gp)
   93e04:	10000815 	stw	zero,32(r2)
   93e08:	d0a73017 	ldw	r2,-25408(gp)
   93e0c:	10000915 	stw	zero,36(r2)
   93e10:	e0bff017 	ldw	r2,-64(fp)
   93e14:	e0bfe915 	stw	r2,-92(fp)
   93e18:	e0bfe917 	ldw	r2,-92(fp)
   93e1c:	1001703a 	wrctl	status,r2
   93e20:	e0fff18b 	ldhu	r3,-58(fp)
   93e24:	e0ffff15 	stw	r3,-4(fp)
   93e28:	e0bfff17 	ldw	r2,-4(fp)
   93e2c:	e037883a 	mov	sp,fp
   93e30:	dfc00117 	ldw	ra,4(sp)
   93e34:	df000017 	ldw	fp,0(sp)
   93e38:	dec00204 	addi	sp,sp,8
   93e3c:	f800283a 	ret

00093e40 <OSInit>:
   93e40:	defffe04 	addi	sp,sp,-8
   93e44:	dfc00115 	stw	ra,4(sp)
   93e48:	df000015 	stw	fp,0(sp)
   93e4c:	d839883a 	mov	fp,sp
   93e50:	009f81c0 	call	9f81c <OSInitHookBegin>
   93e54:	0094c100 	call	94c10 <OS_InitMisc>
   93e58:	0094c540 	call	94c54 <OS_InitRdyList>
   93e5c:	0094db80 	call	94db8 <OS_InitTCBList>
   93e60:	0094b340 	call	94b34 <OS_InitEventList>
   93e64:	0096e680 	call	96e68 <OS_FlagInit>
   93e68:	00984cc0 	call	984cc <OS_MemInit>
   93e6c:	009abd00 	call	9abd0 <OS_QInit>
   93e70:	0094cc00 	call	94cc0 <OS_InitTaskIdle>
   93e74:	0094d3c0 	call	94d3c <OS_InitTaskStat>
   93e78:	009f8380 	call	9f838 <OSInitHookEnd>
   93e7c:	00956400 	call	95640 <OSDebugInit>
   93e80:	e037883a 	mov	sp,fp
   93e84:	dfc00117 	ldw	ra,4(sp)
   93e88:	df000017 	ldw	fp,0(sp)
   93e8c:	dec00204 	addi	sp,sp,8
   93e90:	f800283a 	ret

00093e94 <OSIntEnter>:
   93e94:	defffc04 	addi	sp,sp,-16
   93e98:	df000315 	stw	fp,12(sp)
   93e9c:	df000304 	addi	fp,sp,12
   93ea0:	e03fff15 	stw	zero,-4(fp)
   93ea4:	d0a72143 	ldbu	r2,-25467(gp)
   93ea8:	10803fcc 	andi	r2,r2,255
   93eac:	10800058 	cmpnei	r2,r2,1
   93eb0:	1000131e 	bne	r2,zero,93f00 <OSIntEnter+0x6c>
   93eb4:	0005303a 	rdctl	r2,status
   93eb8:	e0bffe15 	stw	r2,-8(fp)
   93ebc:	e0fffe17 	ldw	r3,-8(fp)
   93ec0:	00bfff84 	movi	r2,-2
   93ec4:	1884703a 	and	r2,r3,r2
   93ec8:	1001703a 	wrctl	status,r2
   93ecc:	e0bffe17 	ldw	r2,-8(fp)
   93ed0:	e0bfff15 	stw	r2,-4(fp)
   93ed4:	d0a72f03 	ldbu	r2,-25412(gp)
   93ed8:	10803fcc 	andi	r2,r2,255
   93edc:	10803fe0 	cmpeqi	r2,r2,255
   93ee0:	1000031e 	bne	r2,zero,93ef0 <OSIntEnter+0x5c>
   93ee4:	d0a72f03 	ldbu	r2,-25412(gp)
   93ee8:	10800044 	addi	r2,r2,1
   93eec:	d0a72f05 	stb	r2,-25412(gp)
   93ef0:	e0bfff17 	ldw	r2,-4(fp)
   93ef4:	e0bffd15 	stw	r2,-12(fp)
   93ef8:	e0bffd17 	ldw	r2,-12(fp)
   93efc:	1001703a 	wrctl	status,r2
   93f00:	e037883a 	mov	sp,fp
   93f04:	df000017 	ldw	fp,0(sp)
   93f08:	dec00104 	addi	sp,sp,4
   93f0c:	f800283a 	ret

00093f10 <OSIntExit>:
   93f10:	defffb04 	addi	sp,sp,-20
   93f14:	dfc00415 	stw	ra,16(sp)
   93f18:	df000315 	stw	fp,12(sp)
   93f1c:	df000304 	addi	fp,sp,12
   93f20:	e03fff15 	stw	zero,-4(fp)
   93f24:	d0a72143 	ldbu	r2,-25467(gp)
   93f28:	10803fcc 	andi	r2,r2,255
   93f2c:	10800058 	cmpnei	r2,r2,1
   93f30:	1000321e 	bne	r2,zero,93ffc <OSIntExit+0xec>
   93f34:	0005303a 	rdctl	r2,status
   93f38:	e0bffe15 	stw	r2,-8(fp)
   93f3c:	e0fffe17 	ldw	r3,-8(fp)
   93f40:	00bfff84 	movi	r2,-2
   93f44:	1884703a 	and	r2,r3,r2
   93f48:	1001703a 	wrctl	status,r2
   93f4c:	e0bffe17 	ldw	r2,-8(fp)
   93f50:	e0bfff15 	stw	r2,-4(fp)
   93f54:	d0a72f03 	ldbu	r2,-25412(gp)
   93f58:	10803fcc 	andi	r2,r2,255
   93f5c:	1005003a 	cmpeq	r2,r2,zero
   93f60:	1000031e 	bne	r2,zero,93f70 <OSIntExit+0x60>
   93f64:	d0a72f03 	ldbu	r2,-25412(gp)
   93f68:	10bfffc4 	addi	r2,r2,-1
   93f6c:	d0a72f05 	stb	r2,-25412(gp)
   93f70:	d0a72f03 	ldbu	r2,-25412(gp)
   93f74:	10803fcc 	andi	r2,r2,255
   93f78:	1004c03a 	cmpne	r2,r2,zero
   93f7c:	10001b1e 	bne	r2,zero,93fec <OSIntExit+0xdc>
   93f80:	d0a72103 	ldbu	r2,-25468(gp)
   93f84:	10803fcc 	andi	r2,r2,255
   93f88:	1004c03a 	cmpne	r2,r2,zero
   93f8c:	1000171e 	bne	r2,zero,93fec <OSIntExit+0xdc>
   93f90:	009502c0 	call	9502c <OS_SchedNew>
   93f94:	d0a72303 	ldbu	r2,-25460(gp)
   93f98:	d0e72343 	ldbu	r3,-25459(gp)
   93f9c:	11003fcc 	andi	r4,r2,255
   93fa0:	18803fcc 	andi	r2,r3,255
   93fa4:	20801126 	beq	r4,r2,93fec <OSIntExit+0xdc>
   93fa8:	d0a72303 	ldbu	r2,-25460(gp)
   93fac:	10803fcc 	andi	r2,r2,255
   93fb0:	00c002f4 	movhi	r3,11
   93fb4:	18ddd004 	addi	r3,r3,30528
   93fb8:	1085883a 	add	r2,r2,r2
   93fbc:	1085883a 	add	r2,r2,r2
   93fc0:	10c5883a 	add	r2,r2,r3
   93fc4:	10800017 	ldw	r2,0(r2)
   93fc8:	d0a72b15 	stw	r2,-25428(gp)
   93fcc:	d0e72b17 	ldw	r3,-25428(gp)
   93fd0:	18800e17 	ldw	r2,56(r3)
   93fd4:	10800044 	addi	r2,r2,1
   93fd8:	18800e15 	stw	r2,56(r3)
   93fdc:	d0a72617 	ldw	r2,-25448(gp)
   93fe0:	10800044 	addi	r2,r2,1
   93fe4:	d0a72615 	stw	r2,-25448(gp)
   93fe8:	009f3a80 	call	9f3a8 <OSCtxSw>
   93fec:	e0bfff17 	ldw	r2,-4(fp)
   93ff0:	e0bffd15 	stw	r2,-12(fp)
   93ff4:	e0bffd17 	ldw	r2,-12(fp)
   93ff8:	1001703a 	wrctl	status,r2
   93ffc:	e037883a 	mov	sp,fp
   94000:	dfc00117 	ldw	ra,4(sp)
   94004:	df000017 	ldw	fp,0(sp)
   94008:	dec00204 	addi	sp,sp,8
   9400c:	f800283a 	ret

00094010 <OSSchedLock>:
   94010:	defffc04 	addi	sp,sp,-16
   94014:	df000315 	stw	fp,12(sp)
   94018:	df000304 	addi	fp,sp,12
   9401c:	e03fff15 	stw	zero,-4(fp)
   94020:	d0a72143 	ldbu	r2,-25467(gp)
   94024:	10803fcc 	andi	r2,r2,255
   94028:	10800058 	cmpnei	r2,r2,1
   9402c:	1000171e 	bne	r2,zero,9408c <OSSchedLock+0x7c>
   94030:	0005303a 	rdctl	r2,status
   94034:	e0bffe15 	stw	r2,-8(fp)
   94038:	e0fffe17 	ldw	r3,-8(fp)
   9403c:	00bfff84 	movi	r2,-2
   94040:	1884703a 	and	r2,r3,r2
   94044:	1001703a 	wrctl	status,r2
   94048:	e0bffe17 	ldw	r2,-8(fp)
   9404c:	e0bfff15 	stw	r2,-4(fp)
   94050:	d0a72f03 	ldbu	r2,-25412(gp)
   94054:	10803fcc 	andi	r2,r2,255
   94058:	1004c03a 	cmpne	r2,r2,zero
   9405c:	1000071e 	bne	r2,zero,9407c <OSSchedLock+0x6c>
   94060:	d0a72103 	ldbu	r2,-25468(gp)
   94064:	10803fcc 	andi	r2,r2,255
   94068:	10803fe0 	cmpeqi	r2,r2,255
   9406c:	1000031e 	bne	r2,zero,9407c <OSSchedLock+0x6c>
   94070:	d0a72103 	ldbu	r2,-25468(gp)
   94074:	10800044 	addi	r2,r2,1
   94078:	d0a72105 	stb	r2,-25468(gp)
   9407c:	e0bfff17 	ldw	r2,-4(fp)
   94080:	e0bffd15 	stw	r2,-12(fp)
   94084:	e0bffd17 	ldw	r2,-12(fp)
   94088:	1001703a 	wrctl	status,r2
   9408c:	e037883a 	mov	sp,fp
   94090:	df000017 	ldw	fp,0(sp)
   94094:	dec00104 	addi	sp,sp,4
   94098:	f800283a 	ret

0009409c <OSSchedUnlock>:
   9409c:	defff804 	addi	sp,sp,-32
   940a0:	dfc00715 	stw	ra,28(sp)
   940a4:	df000615 	stw	fp,24(sp)
   940a8:	df000604 	addi	fp,sp,24
   940ac:	e03fff15 	stw	zero,-4(fp)
   940b0:	d0a72143 	ldbu	r2,-25467(gp)
   940b4:	10803fcc 	andi	r2,r2,255
   940b8:	10800058 	cmpnei	r2,r2,1
   940bc:	10002b1e 	bne	r2,zero,9416c <OSSchedUnlock+0xd0>
   940c0:	0005303a 	rdctl	r2,status
   940c4:	e0bffe15 	stw	r2,-8(fp)
   940c8:	e0fffe17 	ldw	r3,-8(fp)
   940cc:	00bfff84 	movi	r2,-2
   940d0:	1884703a 	and	r2,r3,r2
   940d4:	1001703a 	wrctl	status,r2
   940d8:	e0bffe17 	ldw	r2,-8(fp)
   940dc:	e0bfff15 	stw	r2,-4(fp)
   940e0:	d0a72103 	ldbu	r2,-25468(gp)
   940e4:	10803fcc 	andi	r2,r2,255
   940e8:	1005003a 	cmpeq	r2,r2,zero
   940ec:	10001b1e 	bne	r2,zero,9415c <OSSchedUnlock+0xc0>
   940f0:	d0a72103 	ldbu	r2,-25468(gp)
   940f4:	10bfffc4 	addi	r2,r2,-1
   940f8:	d0a72105 	stb	r2,-25468(gp)
   940fc:	d0a72103 	ldbu	r2,-25468(gp)
   94100:	10803fcc 	andi	r2,r2,255
   94104:	1004c03a 	cmpne	r2,r2,zero
   94108:	10000f1e 	bne	r2,zero,94148 <OSSchedUnlock+0xac>
   9410c:	d0a72f03 	ldbu	r2,-25412(gp)
   94110:	10803fcc 	andi	r2,r2,255
   94114:	1004c03a 	cmpne	r2,r2,zero
   94118:	1000061e 	bne	r2,zero,94134 <OSSchedUnlock+0x98>
   9411c:	e0bfff17 	ldw	r2,-4(fp)
   94120:	e0bffd15 	stw	r2,-12(fp)
   94124:	e0bffd17 	ldw	r2,-12(fp)
   94128:	1001703a 	wrctl	status,r2
   9412c:	0094f580 	call	94f58 <OS_Sched>
   94130:	00000e06 	br	9416c <OSSchedUnlock+0xd0>
   94134:	e0bfff17 	ldw	r2,-4(fp)
   94138:	e0bffc15 	stw	r2,-16(fp)
   9413c:	e0bffc17 	ldw	r2,-16(fp)
   94140:	1001703a 	wrctl	status,r2
   94144:	00000906 	br	9416c <OSSchedUnlock+0xd0>
   94148:	e0bfff17 	ldw	r2,-4(fp)
   9414c:	e0bffb15 	stw	r2,-20(fp)
   94150:	e0bffb17 	ldw	r2,-20(fp)
   94154:	1001703a 	wrctl	status,r2
   94158:	00000406 	br	9416c <OSSchedUnlock+0xd0>
   9415c:	e0bfff17 	ldw	r2,-4(fp)
   94160:	e0bffa15 	stw	r2,-24(fp)
   94164:	e0bffa17 	ldw	r2,-24(fp)
   94168:	1001703a 	wrctl	status,r2
   9416c:	e037883a 	mov	sp,fp
   94170:	dfc00117 	ldw	ra,4(sp)
   94174:	df000017 	ldw	fp,0(sp)
   94178:	dec00204 	addi	sp,sp,8
   9417c:	f800283a 	ret

00094180 <OSStart>:
   94180:	defffe04 	addi	sp,sp,-8
   94184:	dfc00115 	stw	ra,4(sp)
   94188:	df000015 	stw	fp,0(sp)
   9418c:	d839883a 	mov	fp,sp
   94190:	d0a72143 	ldbu	r2,-25467(gp)
   94194:	10803fcc 	andi	r2,r2,255
   94198:	1004c03a 	cmpne	r2,r2,zero
   9419c:	10000f1e 	bne	r2,zero,941dc <OSStart+0x5c>
   941a0:	009502c0 	call	9502c <OS_SchedNew>
   941a4:	d0a72303 	ldbu	r2,-25460(gp)
   941a8:	d0a72345 	stb	r2,-25459(gp)
   941ac:	d0a72303 	ldbu	r2,-25460(gp)
   941b0:	10803fcc 	andi	r2,r2,255
   941b4:	00c002f4 	movhi	r3,11
   941b8:	18ddd004 	addi	r3,r3,30528
   941bc:	1085883a 	add	r2,r2,r2
   941c0:	1085883a 	add	r2,r2,r2
   941c4:	10c5883a 	add	r2,r2,r3
   941c8:	10800017 	ldw	r2,0(r2)
   941cc:	d0a72b15 	stw	r2,-25428(gp)
   941d0:	d0a72b17 	ldw	r2,-25428(gp)
   941d4:	d0a73015 	stw	r2,-25408(gp)
   941d8:	009f4340 	call	9f434 <OSStartHighRdy>
   941dc:	e037883a 	mov	sp,fp
   941e0:	dfc00117 	ldw	ra,4(sp)
   941e4:	df000017 	ldw	fp,0(sp)
   941e8:	dec00204 	addi	sp,sp,8
   941ec:	f800283a 	ret

000941f0 <OSStatInit>:
   941f0:	defff904 	addi	sp,sp,-28
   941f4:	dfc00615 	stw	ra,24(sp)
   941f8:	df000515 	stw	fp,20(sp)
   941fc:	df000504 	addi	fp,sp,20
   94200:	e03fff15 	stw	zero,-4(fp)
   94204:	01000084 	movi	r4,2
   94208:	009d2840 	call	9d284 <OSTimeDly>
   9420c:	0005303a 	rdctl	r2,status
   94210:	e0bffe15 	stw	r2,-8(fp)
   94214:	e0fffe17 	ldw	r3,-8(fp)
   94218:	00bfff84 	movi	r2,-2
   9421c:	1884703a 	and	r2,r3,r2
   94220:	1001703a 	wrctl	status,r2
   94224:	e0bffe17 	ldw	r2,-8(fp)
   94228:	e0bfff15 	stw	r2,-4(fp)
   9422c:	d0272215 	stw	zero,-25464(gp)
   94230:	e0bfff17 	ldw	r2,-4(fp)
   94234:	e0bffd15 	stw	r2,-12(fp)
   94238:	e0bffd17 	ldw	r2,-12(fp)
   9423c:	1001703a 	wrctl	status,r2
   94240:	01001904 	movi	r4,100
   94244:	009d2840 	call	9d284 <OSTimeDly>
   94248:	0005303a 	rdctl	r2,status
   9424c:	e0bffc15 	stw	r2,-16(fp)
   94250:	e0fffc17 	ldw	r3,-16(fp)
   94254:	00bfff84 	movi	r2,-2
   94258:	1884703a 	and	r2,r3,r2
   9425c:	1001703a 	wrctl	status,r2
   94260:	e0bffc17 	ldw	r2,-16(fp)
   94264:	e0bfff15 	stw	r2,-4(fp)
   94268:	d0a72217 	ldw	r2,-25464(gp)
   9426c:	d0a72715 	stw	r2,-25444(gp)
   94270:	00800044 	movi	r2,1
   94274:	d0a73305 	stb	r2,-25396(gp)
   94278:	e0bfff17 	ldw	r2,-4(fp)
   9427c:	e0bffb15 	stw	r2,-20(fp)
   94280:	e0bffb17 	ldw	r2,-20(fp)
   94284:	1001703a 	wrctl	status,r2
   94288:	e037883a 	mov	sp,fp
   9428c:	dfc00117 	ldw	ra,4(sp)
   94290:	df000017 	ldw	fp,0(sp)
   94294:	dec00204 	addi	sp,sp,8
   94298:	f800283a 	ret

0009429c <OSTimeTick>:
   9429c:	defff604 	addi	sp,sp,-40
   942a0:	dfc00915 	stw	ra,36(sp)
   942a4:	df000815 	stw	fp,32(sp)
   942a8:	df000804 	addi	fp,sp,32
   942ac:	e03ffc15 	stw	zero,-16(fp)
   942b0:	009f8000 	call	9f800 <OSTimeTickHook>
   942b4:	0005303a 	rdctl	r2,status
   942b8:	e0bffb15 	stw	r2,-20(fp)
   942bc:	e0fffb17 	ldw	r3,-20(fp)
   942c0:	00bfff84 	movi	r2,-2
   942c4:	1884703a 	and	r2,r3,r2
   942c8:	1001703a 	wrctl	status,r2
   942cc:	e0bffb17 	ldw	r2,-20(fp)
   942d0:	e0bffc15 	stw	r2,-16(fp)
   942d4:	d0a73117 	ldw	r2,-25404(gp)
   942d8:	10800044 	addi	r2,r2,1
   942dc:	d0a73115 	stw	r2,-25404(gp)
   942e0:	e0bffc17 	ldw	r2,-16(fp)
   942e4:	e0bffa15 	stw	r2,-24(fp)
   942e8:	e0bffa17 	ldw	r2,-24(fp)
   942ec:	1001703a 	wrctl	status,r2
   942f0:	d0a72143 	ldbu	r2,-25467(gp)
   942f4:	10803fcc 	andi	r2,r2,255
   942f8:	10800058 	cmpnei	r2,r2,1
   942fc:	1000721e 	bne	r2,zero,944c8 <OSTimeTick+0x22c>
   94300:	d0a72503 	ldbu	r2,-25452(gp)
   94304:	10803fcc 	andi	r2,r2,255
   94308:	e0bfff15 	stw	r2,-4(fp)
   9430c:	e0ffff17 	ldw	r3,-4(fp)
   94310:	18800060 	cmpeqi	r2,r3,1
   94314:	10000a1e 	bne	r2,zero,94340 <OSTimeTick+0xa4>
   94318:	e0ffff17 	ldw	r3,-4(fp)
   9431c:	188000a0 	cmpeqi	r2,r3,2
   94320:	1000091e 	bne	r2,zero,94348 <OSTimeTick+0xac>
   94324:	e0ffff17 	ldw	r3,-4(fp)
   94328:	1805003a 	cmpeq	r2,r3,zero
   9432c:	1000011e 	bne	r2,zero,94334 <OSTimeTick+0x98>
   94330:	00000a06 	br	9435c <OSTimeTick+0xc0>
   94334:	00800044 	movi	r2,1
   94338:	e0bffd05 	stb	r2,-12(fp)
   9433c:	00000a06 	br	94368 <OSTimeTick+0xcc>
   94340:	e03ffd05 	stb	zero,-12(fp)
   94344:	00000806 	br	94368 <OSTimeTick+0xcc>
   94348:	00800044 	movi	r2,1
   9434c:	e0bffd05 	stb	r2,-12(fp)
   94350:	00800044 	movi	r2,1
   94354:	d0a72505 	stb	r2,-25452(gp)
   94358:	00000306 	br	94368 <OSTimeTick+0xcc>
   9435c:	00800044 	movi	r2,1
   94360:	e0bffd05 	stb	r2,-12(fp)
   94364:	d0272505 	stb	zero,-25452(gp)
   94368:	e0bffd03 	ldbu	r2,-12(fp)
   9436c:	1005003a 	cmpeq	r2,r2,zero
   94370:	1000551e 	bne	r2,zero,944c8 <OSTimeTick+0x22c>
   94374:	d0a72417 	ldw	r2,-25456(gp)
   94378:	e0bffe15 	stw	r2,-8(fp)
   9437c:	00004d06 	br	944b4 <OSTimeTick+0x218>
   94380:	0005303a 	rdctl	r2,status
   94384:	e0bff915 	stw	r2,-28(fp)
   94388:	e0fff917 	ldw	r3,-28(fp)
   9438c:	00bfff84 	movi	r2,-2
   94390:	1884703a 	and	r2,r3,r2
   94394:	1001703a 	wrctl	status,r2
   94398:	e0bff917 	ldw	r2,-28(fp)
   9439c:	e0bffc15 	stw	r2,-16(fp)
   943a0:	e0bffe17 	ldw	r2,-8(fp)
   943a4:	10800b8b 	ldhu	r2,46(r2)
   943a8:	10bfffcc 	andi	r2,r2,65535
   943ac:	1005003a 	cmpeq	r2,r2,zero
   943b0:	1000391e 	bne	r2,zero,94498 <OSTimeTick+0x1fc>
   943b4:	e0bffe17 	ldw	r2,-8(fp)
   943b8:	10800b8b 	ldhu	r2,46(r2)
   943bc:	10bfffc4 	addi	r2,r2,-1
   943c0:	1007883a 	mov	r3,r2
   943c4:	e0bffe17 	ldw	r2,-8(fp)
   943c8:	10c00b8d 	sth	r3,46(r2)
   943cc:	e0bffe17 	ldw	r2,-8(fp)
   943d0:	10800b8b 	ldhu	r2,46(r2)
   943d4:	10bfffcc 	andi	r2,r2,65535
   943d8:	1004c03a 	cmpne	r2,r2,zero
   943dc:	10002e1e 	bne	r2,zero,94498 <OSTimeTick+0x1fc>
   943e0:	e0bffe17 	ldw	r2,-8(fp)
   943e4:	10800c03 	ldbu	r2,48(r2)
   943e8:	10803fcc 	andi	r2,r2,255
   943ec:	10800dcc 	andi	r2,r2,55
   943f0:	1005003a 	cmpeq	r2,r2,zero
   943f4:	10000b1e 	bne	r2,zero,94424 <OSTimeTick+0x188>
   943f8:	e0bffe17 	ldw	r2,-8(fp)
   943fc:	10c00c03 	ldbu	r3,48(r2)
   94400:	00bff204 	movi	r2,-56
   94404:	1884703a 	and	r2,r3,r2
   94408:	1007883a 	mov	r3,r2
   9440c:	e0bffe17 	ldw	r2,-8(fp)
   94410:	10c00c05 	stb	r3,48(r2)
   94414:	e0fffe17 	ldw	r3,-8(fp)
   94418:	00800044 	movi	r2,1
   9441c:	18800c45 	stb	r2,49(r3)
   94420:	00000206 	br	9442c <OSTimeTick+0x190>
   94424:	e0bffe17 	ldw	r2,-8(fp)
   94428:	10000c45 	stb	zero,49(r2)
   9442c:	e0bffe17 	ldw	r2,-8(fp)
   94430:	10800c03 	ldbu	r2,48(r2)
   94434:	10803fcc 	andi	r2,r2,255
   94438:	1080020c 	andi	r2,r2,8
   9443c:	1004c03a 	cmpne	r2,r2,zero
   94440:	1000151e 	bne	r2,zero,94498 <OSTimeTick+0x1fc>
   94444:	e0bffe17 	ldw	r2,-8(fp)
   94448:	10c00d83 	ldbu	r3,54(r2)
   9444c:	d0a72d03 	ldbu	r2,-25420(gp)
   94450:	1884b03a 	or	r2,r3,r2
   94454:	d0a72d05 	stb	r2,-25420(gp)
   94458:	e0bffe17 	ldw	r2,-8(fp)
   9445c:	10800d03 	ldbu	r2,52(r2)
   94460:	11003fcc 	andi	r4,r2,255
   94464:	e0bffe17 	ldw	r2,-8(fp)
   94468:	10800d03 	ldbu	r2,52(r2)
   9446c:	10c03fcc 	andi	r3,r2,255
   94470:	d0a72d44 	addi	r2,gp,-25419
   94474:	1885883a 	add	r2,r3,r2
   94478:	10c00003 	ldbu	r3,0(r2)
   9447c:	e0bffe17 	ldw	r2,-8(fp)
   94480:	10800d43 	ldbu	r2,53(r2)
   94484:	1884b03a 	or	r2,r3,r2
   94488:	1007883a 	mov	r3,r2
   9448c:	d0a72d44 	addi	r2,gp,-25419
   94490:	2085883a 	add	r2,r4,r2
   94494:	10c00005 	stb	r3,0(r2)
   94498:	e0bffe17 	ldw	r2,-8(fp)
   9449c:	10800517 	ldw	r2,20(r2)
   944a0:	e0bffe15 	stw	r2,-8(fp)
   944a4:	e0bffc17 	ldw	r2,-16(fp)
   944a8:	e0bff815 	stw	r2,-32(fp)
   944ac:	e0bff817 	ldw	r2,-32(fp)
   944b0:	1001703a 	wrctl	status,r2
   944b4:	e0bffe17 	ldw	r2,-8(fp)
   944b8:	10800c83 	ldbu	r2,50(r2)
   944bc:	10803fcc 	andi	r2,r2,255
   944c0:	10800518 	cmpnei	r2,r2,20
   944c4:	103fae1e 	bne	r2,zero,94380 <OSTimeTick+0xe4>
   944c8:	e037883a 	mov	sp,fp
   944cc:	dfc00117 	ldw	ra,4(sp)
   944d0:	df000017 	ldw	fp,0(sp)
   944d4:	dec00204 	addi	sp,sp,8
   944d8:	f800283a 	ret

000944dc <OSVersion>:
   944dc:	deffff04 	addi	sp,sp,-4
   944e0:	df000015 	stw	fp,0(sp)
   944e4:	d839883a 	mov	fp,sp
   944e8:	00804784 	movi	r2,286
   944ec:	e037883a 	mov	sp,fp
   944f0:	df000017 	ldw	fp,0(sp)
   944f4:	dec00104 	addi	sp,sp,4
   944f8:	f800283a 	ret

000944fc <OS_Dummy>:
   944fc:	deffff04 	addi	sp,sp,-4
   94500:	df000015 	stw	fp,0(sp)
   94504:	d839883a 	mov	fp,sp
   94508:	e037883a 	mov	sp,fp
   9450c:	df000017 	ldw	fp,0(sp)
   94510:	dec00104 	addi	sp,sp,4
   94514:	f800283a 	ret

00094518 <OS_EventTaskRdy>:
   94518:	defff804 	addi	sp,sp,-32
   9451c:	dfc00715 	stw	ra,28(sp)
   94520:	df000615 	stw	fp,24(sp)
   94524:	df000604 	addi	fp,sp,24
   94528:	e13ffc15 	stw	r4,-16(fp)
   9452c:	e17ffd15 	stw	r5,-12(fp)
   94530:	e1bffe05 	stb	r6,-8(fp)
   94534:	e1ffff05 	stb	r7,-4(fp)
   94538:	e0bffc17 	ldw	r2,-16(fp)
   9453c:	10800283 	ldbu	r2,10(r2)
   94540:	10c03fcc 	andi	r3,r2,255
   94544:	008002b4 	movhi	r2,10
   94548:	1082ef04 	addi	r2,r2,3004
   9454c:	10c5883a 	add	r2,r2,r3
   94550:	10800003 	ldbu	r2,0(r2)
   94554:	e0bffa85 	stb	r2,-22(fp)
   94558:	e0fffa83 	ldbu	r3,-22(fp)
   9455c:	e0bffc17 	ldw	r2,-16(fp)
   94560:	1885883a 	add	r2,r3,r2
   94564:	10800204 	addi	r2,r2,8
   94568:	108000c3 	ldbu	r2,3(r2)
   9456c:	10c03fcc 	andi	r3,r2,255
   94570:	008002b4 	movhi	r2,10
   94574:	1082ef04 	addi	r2,r2,3004
   94578:	10c5883a 	add	r2,r2,r3
   9457c:	10800003 	ldbu	r2,0(r2)
   94580:	e0bffa45 	stb	r2,-23(fp)
   94584:	e0bffa83 	ldbu	r2,-22(fp)
   94588:	100490fa 	slli	r2,r2,3
   9458c:	1007883a 	mov	r3,r2
   94590:	e0bffa43 	ldbu	r2,-23(fp)
   94594:	1885883a 	add	r2,r3,r2
   94598:	e0bffa05 	stb	r2,-24(fp)
   9459c:	e0bffa03 	ldbu	r2,-24(fp)
   945a0:	00c002f4 	movhi	r3,11
   945a4:	18ddd004 	addi	r3,r3,30528
   945a8:	1085883a 	add	r2,r2,r2
   945ac:	1085883a 	add	r2,r2,r2
   945b0:	10c5883a 	add	r2,r2,r3
   945b4:	10800017 	ldw	r2,0(r2)
   945b8:	e0bffb15 	stw	r2,-20(fp)
   945bc:	e0bffb17 	ldw	r2,-20(fp)
   945c0:	10000b8d 	sth	zero,46(r2)
   945c4:	e0fffb17 	ldw	r3,-20(fp)
   945c8:	e0bffd17 	ldw	r2,-12(fp)
   945cc:	18800915 	stw	r2,36(r3)
   945d0:	e0bffb17 	ldw	r2,-20(fp)
   945d4:	10800c03 	ldbu	r2,48(r2)
   945d8:	1007883a 	mov	r3,r2
   945dc:	e0bffe03 	ldbu	r2,-8(fp)
   945e0:	0084303a 	nor	r2,zero,r2
   945e4:	1884703a 	and	r2,r3,r2
   945e8:	1007883a 	mov	r3,r2
   945ec:	e0bffb17 	ldw	r2,-20(fp)
   945f0:	10c00c05 	stb	r3,48(r2)
   945f4:	e0fffb17 	ldw	r3,-20(fp)
   945f8:	e0bfff03 	ldbu	r2,-4(fp)
   945fc:	18800c45 	stb	r2,49(r3)
   94600:	e0bffb17 	ldw	r2,-20(fp)
   94604:	10800c03 	ldbu	r2,48(r2)
   94608:	10803fcc 	andi	r2,r2,255
   9460c:	1080020c 	andi	r2,r2,8
   94610:	1004c03a 	cmpne	r2,r2,zero
   94614:	1000111e 	bne	r2,zero,9465c <OS_EventTaskRdy+0x144>
   94618:	e0bffb17 	ldw	r2,-20(fp)
   9461c:	10c00d83 	ldbu	r3,54(r2)
   94620:	d0a72d03 	ldbu	r2,-25420(gp)
   94624:	1884b03a 	or	r2,r3,r2
   94628:	d0a72d05 	stb	r2,-25420(gp)
   9462c:	e13ffa83 	ldbu	r4,-22(fp)
   94630:	e0fffa83 	ldbu	r3,-22(fp)
   94634:	d0a72d44 	addi	r2,gp,-25419
   94638:	1885883a 	add	r2,r3,r2
   9463c:	10c00003 	ldbu	r3,0(r2)
   94640:	e0bffb17 	ldw	r2,-20(fp)
   94644:	10800d43 	ldbu	r2,53(r2)
   94648:	1884b03a 	or	r2,r3,r2
   9464c:	1007883a 	mov	r3,r2
   94650:	d0a72d44 	addi	r2,gp,-25419
   94654:	2085883a 	add	r2,r4,r2
   94658:	10c00005 	stb	r3,0(r2)
   9465c:	e13ffb17 	ldw	r4,-20(fp)
   94660:	e17ffc17 	ldw	r5,-16(fp)
   94664:	00949100 	call	94910 <OS_EventTaskRemove>
   94668:	e0bffb17 	ldw	r2,-20(fp)
   9466c:	10800817 	ldw	r2,32(r2)
   94670:	1005003a 	cmpeq	r2,r2,zero
   94674:	1000071e 	bne	r2,zero,94694 <OS_EventTaskRdy+0x17c>
   94678:	e0bffb17 	ldw	r2,-20(fp)
   9467c:	11400817 	ldw	r5,32(r2)
   94680:	e13ffb17 	ldw	r4,-20(fp)
   94684:	00949c80 	call	949c8 <OS_EventTaskRemoveMulti>
   94688:	e0fffb17 	ldw	r3,-20(fp)
   9468c:	e0bffc17 	ldw	r2,-16(fp)
   94690:	18800715 	stw	r2,28(r3)
   94694:	e0bffa03 	ldbu	r2,-24(fp)
   94698:	e037883a 	mov	sp,fp
   9469c:	dfc00117 	ldw	ra,4(sp)
   946a0:	df000017 	ldw	fp,0(sp)
   946a4:	dec00204 	addi	sp,sp,8
   946a8:	f800283a 	ret

000946ac <OS_EventTaskWait>:
   946ac:	defffd04 	addi	sp,sp,-12
   946b0:	df000215 	stw	fp,8(sp)
   946b4:	df000204 	addi	fp,sp,8
   946b8:	e13fff15 	stw	r4,-4(fp)
   946bc:	d0e73017 	ldw	r3,-25408(gp)
   946c0:	e0bfff17 	ldw	r2,-4(fp)
   946c4:	18800715 	stw	r2,28(r3)
   946c8:	d0a73017 	ldw	r2,-25408(gp)
   946cc:	10800d03 	ldbu	r2,52(r2)
   946d0:	11003fcc 	andi	r4,r2,255
   946d4:	d0a73017 	ldw	r2,-25408(gp)
   946d8:	10800d03 	ldbu	r2,52(r2)
   946dc:	10c03fcc 	andi	r3,r2,255
   946e0:	e0bfff17 	ldw	r2,-4(fp)
   946e4:	1885883a 	add	r2,r3,r2
   946e8:	10800204 	addi	r2,r2,8
   946ec:	10c000c3 	ldbu	r3,3(r2)
   946f0:	d0a73017 	ldw	r2,-25408(gp)
   946f4:	10800d43 	ldbu	r2,53(r2)
   946f8:	1884b03a 	or	r2,r3,r2
   946fc:	1007883a 	mov	r3,r2
   94700:	e0bfff17 	ldw	r2,-4(fp)
   94704:	2085883a 	add	r2,r4,r2
   94708:	10800204 	addi	r2,r2,8
   9470c:	10c000c5 	stb	r3,3(r2)
   94710:	e0bfff17 	ldw	r2,-4(fp)
   94714:	10c00283 	ldbu	r3,10(r2)
   94718:	d0a73017 	ldw	r2,-25408(gp)
   9471c:	10800d83 	ldbu	r2,54(r2)
   94720:	1884b03a 	or	r2,r3,r2
   94724:	1007883a 	mov	r3,r2
   94728:	e0bfff17 	ldw	r2,-4(fp)
   9472c:	10c00285 	stb	r3,10(r2)
   94730:	d0a73017 	ldw	r2,-25408(gp)
   94734:	10800d03 	ldbu	r2,52(r2)
   94738:	e0bffe05 	stb	r2,-8(fp)
   9473c:	e13ffe03 	ldbu	r4,-8(fp)
   94740:	e0fffe03 	ldbu	r3,-8(fp)
   94744:	d0a72d44 	addi	r2,gp,-25419
   94748:	1885883a 	add	r2,r3,r2
   9474c:	10800003 	ldbu	r2,0(r2)
   94750:	1007883a 	mov	r3,r2
   94754:	d0a73017 	ldw	r2,-25408(gp)
   94758:	10800d43 	ldbu	r2,53(r2)
   9475c:	0084303a 	nor	r2,zero,r2
   94760:	1884703a 	and	r2,r3,r2
   94764:	1007883a 	mov	r3,r2
   94768:	d0a72d44 	addi	r2,gp,-25419
   9476c:	2085883a 	add	r2,r4,r2
   94770:	10c00005 	stb	r3,0(r2)
   94774:	e0fffe03 	ldbu	r3,-8(fp)
   94778:	d0a72d44 	addi	r2,gp,-25419
   9477c:	1885883a 	add	r2,r3,r2
   94780:	10800003 	ldbu	r2,0(r2)
   94784:	10803fcc 	andi	r2,r2,255
   94788:	1004c03a 	cmpne	r2,r2,zero
   9478c:	1000071e 	bne	r2,zero,947ac <OS_EventTaskWait+0x100>
   94790:	d0a73017 	ldw	r2,-25408(gp)
   94794:	10800d83 	ldbu	r2,54(r2)
   94798:	0084303a 	nor	r2,zero,r2
   9479c:	1007883a 	mov	r3,r2
   947a0:	d0a72d03 	ldbu	r2,-25420(gp)
   947a4:	1884703a 	and	r2,r3,r2
   947a8:	d0a72d05 	stb	r2,-25420(gp)
   947ac:	e037883a 	mov	sp,fp
   947b0:	df000017 	ldw	fp,0(sp)
   947b4:	dec00104 	addi	sp,sp,4
   947b8:	f800283a 	ret

000947bc <OS_EventTaskWaitMulti>:
   947bc:	defffb04 	addi	sp,sp,-20
   947c0:	df000415 	stw	fp,16(sp)
   947c4:	df000404 	addi	fp,sp,16
   947c8:	e13fff15 	stw	r4,-4(fp)
   947cc:	d0a73017 	ldw	r2,-25408(gp)
   947d0:	10000715 	stw	zero,28(r2)
   947d4:	d0e73017 	ldw	r3,-25408(gp)
   947d8:	e0bfff17 	ldw	r2,-4(fp)
   947dc:	18800815 	stw	r2,32(r3)
   947e0:	e0bfff17 	ldw	r2,-4(fp)
   947e4:	e0bffe15 	stw	r2,-8(fp)
   947e8:	e0bffe17 	ldw	r2,-8(fp)
   947ec:	10800017 	ldw	r2,0(r2)
   947f0:	e0bffd15 	stw	r2,-12(fp)
   947f4:	00002006 	br	94878 <OS_EventTaskWaitMulti+0xbc>
   947f8:	d0a73017 	ldw	r2,-25408(gp)
   947fc:	10800d03 	ldbu	r2,52(r2)
   94800:	11003fcc 	andi	r4,r2,255
   94804:	d0a73017 	ldw	r2,-25408(gp)
   94808:	10800d03 	ldbu	r2,52(r2)
   9480c:	10c03fcc 	andi	r3,r2,255
   94810:	e0bffd17 	ldw	r2,-12(fp)
   94814:	1885883a 	add	r2,r3,r2
   94818:	10800204 	addi	r2,r2,8
   9481c:	10c000c3 	ldbu	r3,3(r2)
   94820:	d0a73017 	ldw	r2,-25408(gp)
   94824:	10800d43 	ldbu	r2,53(r2)
   94828:	1884b03a 	or	r2,r3,r2
   9482c:	1007883a 	mov	r3,r2
   94830:	e0bffd17 	ldw	r2,-12(fp)
   94834:	2085883a 	add	r2,r4,r2
   94838:	10800204 	addi	r2,r2,8
   9483c:	10c000c5 	stb	r3,3(r2)
   94840:	e0bffd17 	ldw	r2,-12(fp)
   94844:	10c00283 	ldbu	r3,10(r2)
   94848:	d0a73017 	ldw	r2,-25408(gp)
   9484c:	10800d83 	ldbu	r2,54(r2)
   94850:	1884b03a 	or	r2,r3,r2
   94854:	1007883a 	mov	r3,r2
   94858:	e0bffd17 	ldw	r2,-12(fp)
   9485c:	10c00285 	stb	r3,10(r2)
   94860:	e0bffe17 	ldw	r2,-8(fp)
   94864:	10800104 	addi	r2,r2,4
   94868:	e0bffe15 	stw	r2,-8(fp)
   9486c:	e0bffe17 	ldw	r2,-8(fp)
   94870:	10800017 	ldw	r2,0(r2)
   94874:	e0bffd15 	stw	r2,-12(fp)
   94878:	e0bffd17 	ldw	r2,-12(fp)
   9487c:	1004c03a 	cmpne	r2,r2,zero
   94880:	103fdd1e 	bne	r2,zero,947f8 <OS_EventTaskWaitMulti+0x3c>
   94884:	d0a73017 	ldw	r2,-25408(gp)
   94888:	10800d03 	ldbu	r2,52(r2)
   9488c:	e0bffc05 	stb	r2,-16(fp)
   94890:	e13ffc03 	ldbu	r4,-16(fp)
   94894:	e0fffc03 	ldbu	r3,-16(fp)
   94898:	d0a72d44 	addi	r2,gp,-25419
   9489c:	1885883a 	add	r2,r3,r2
   948a0:	10800003 	ldbu	r2,0(r2)
   948a4:	1007883a 	mov	r3,r2
   948a8:	d0a73017 	ldw	r2,-25408(gp)
   948ac:	10800d43 	ldbu	r2,53(r2)
   948b0:	0084303a 	nor	r2,zero,r2
   948b4:	1884703a 	and	r2,r3,r2
   948b8:	1007883a 	mov	r3,r2
   948bc:	d0a72d44 	addi	r2,gp,-25419
   948c0:	2085883a 	add	r2,r4,r2
   948c4:	10c00005 	stb	r3,0(r2)
   948c8:	e0fffc03 	ldbu	r3,-16(fp)
   948cc:	d0a72d44 	addi	r2,gp,-25419
   948d0:	1885883a 	add	r2,r3,r2
   948d4:	10800003 	ldbu	r2,0(r2)
   948d8:	10803fcc 	andi	r2,r2,255
   948dc:	1004c03a 	cmpne	r2,r2,zero
   948e0:	1000071e 	bne	r2,zero,94900 <OS_EventTaskWaitMulti+0x144>
   948e4:	d0a73017 	ldw	r2,-25408(gp)
   948e8:	10800d83 	ldbu	r2,54(r2)
   948ec:	0084303a 	nor	r2,zero,r2
   948f0:	1007883a 	mov	r3,r2
   948f4:	d0a72d03 	ldbu	r2,-25420(gp)
   948f8:	1884703a 	and	r2,r3,r2
   948fc:	d0a72d05 	stb	r2,-25420(gp)
   94900:	e037883a 	mov	sp,fp
   94904:	df000017 	ldw	fp,0(sp)
   94908:	dec00104 	addi	sp,sp,4
   9490c:	f800283a 	ret

00094910 <OS_EventTaskRemove>:
   94910:	defffc04 	addi	sp,sp,-16
   94914:	df000315 	stw	fp,12(sp)
   94918:	df000304 	addi	fp,sp,12
   9491c:	e13ffe15 	stw	r4,-8(fp)
   94920:	e17fff15 	stw	r5,-4(fp)
   94924:	e0bffe17 	ldw	r2,-8(fp)
   94928:	10800d03 	ldbu	r2,52(r2)
   9492c:	e0bffd05 	stb	r2,-12(fp)
   94930:	e13ffd03 	ldbu	r4,-12(fp)
   94934:	e0fffd03 	ldbu	r3,-12(fp)
   94938:	e0bfff17 	ldw	r2,-4(fp)
   9493c:	1885883a 	add	r2,r3,r2
   94940:	10800204 	addi	r2,r2,8
   94944:	108000c3 	ldbu	r2,3(r2)
   94948:	1007883a 	mov	r3,r2
   9494c:	e0bffe17 	ldw	r2,-8(fp)
   94950:	10800d43 	ldbu	r2,53(r2)
   94954:	0084303a 	nor	r2,zero,r2
   94958:	1884703a 	and	r2,r3,r2
   9495c:	1007883a 	mov	r3,r2
   94960:	e0bfff17 	ldw	r2,-4(fp)
   94964:	2085883a 	add	r2,r4,r2
   94968:	10800204 	addi	r2,r2,8
   9496c:	10c000c5 	stb	r3,3(r2)
   94970:	e0fffd03 	ldbu	r3,-12(fp)
   94974:	e0bfff17 	ldw	r2,-4(fp)
   94978:	1885883a 	add	r2,r3,r2
   9497c:	10800204 	addi	r2,r2,8
   94980:	108000c3 	ldbu	r2,3(r2)
   94984:	10803fcc 	andi	r2,r2,255
   94988:	1004c03a 	cmpne	r2,r2,zero
   9498c:	10000a1e 	bne	r2,zero,949b8 <OS_EventTaskRemove+0xa8>
   94990:	e0bfff17 	ldw	r2,-4(fp)
   94994:	10800283 	ldbu	r2,10(r2)
   94998:	1007883a 	mov	r3,r2
   9499c:	e0bffe17 	ldw	r2,-8(fp)
   949a0:	10800d83 	ldbu	r2,54(r2)
   949a4:	0084303a 	nor	r2,zero,r2
   949a8:	1884703a 	and	r2,r3,r2
   949ac:	1007883a 	mov	r3,r2
   949b0:	e0bfff17 	ldw	r2,-4(fp)
   949b4:	10c00285 	stb	r3,10(r2)
   949b8:	e037883a 	mov	sp,fp
   949bc:	df000017 	ldw	fp,0(sp)
   949c0:	dec00104 	addi	sp,sp,4
   949c4:	f800283a 	ret

000949c8 <OS_EventTaskRemoveMulti>:
   949c8:	defffa04 	addi	sp,sp,-24
   949cc:	df000515 	stw	fp,20(sp)
   949d0:	df000504 	addi	fp,sp,20
   949d4:	e13ffe15 	stw	r4,-8(fp)
   949d8:	e17fff15 	stw	r5,-4(fp)
   949dc:	e0bffe17 	ldw	r2,-8(fp)
   949e0:	10800d03 	ldbu	r2,52(r2)
   949e4:	e0bffb85 	stb	r2,-18(fp)
   949e8:	e0bffe17 	ldw	r2,-8(fp)
   949ec:	10800d83 	ldbu	r2,54(r2)
   949f0:	e0bffb45 	stb	r2,-19(fp)
   949f4:	e0bffe17 	ldw	r2,-8(fp)
   949f8:	10800d43 	ldbu	r2,53(r2)
   949fc:	e0bffb05 	stb	r2,-20(fp)
   94a00:	e0bfff17 	ldw	r2,-4(fp)
   94a04:	e0bffd15 	stw	r2,-12(fp)
   94a08:	e0bffd17 	ldw	r2,-12(fp)
   94a0c:	10800017 	ldw	r2,0(r2)
   94a10:	e0bffc15 	stw	r2,-16(fp)
   94a14:	00002606 	br	94ab0 <OS_EventTaskRemoveMulti+0xe8>
   94a18:	e13ffb83 	ldbu	r4,-18(fp)
   94a1c:	e0fffb83 	ldbu	r3,-18(fp)
   94a20:	e0bffc17 	ldw	r2,-16(fp)
   94a24:	1885883a 	add	r2,r3,r2
   94a28:	10800204 	addi	r2,r2,8
   94a2c:	108000c3 	ldbu	r2,3(r2)
   94a30:	1007883a 	mov	r3,r2
   94a34:	e0bffb03 	ldbu	r2,-20(fp)
   94a38:	0084303a 	nor	r2,zero,r2
   94a3c:	1884703a 	and	r2,r3,r2
   94a40:	1007883a 	mov	r3,r2
   94a44:	e0bffc17 	ldw	r2,-16(fp)
   94a48:	2085883a 	add	r2,r4,r2
   94a4c:	10800204 	addi	r2,r2,8
   94a50:	10c000c5 	stb	r3,3(r2)
   94a54:	e0fffb83 	ldbu	r3,-18(fp)
   94a58:	e0bffc17 	ldw	r2,-16(fp)
   94a5c:	1885883a 	add	r2,r3,r2
   94a60:	10800204 	addi	r2,r2,8
   94a64:	108000c3 	ldbu	r2,3(r2)
   94a68:	10803fcc 	andi	r2,r2,255
   94a6c:	1004c03a 	cmpne	r2,r2,zero
   94a70:	1000091e 	bne	r2,zero,94a98 <OS_EventTaskRemoveMulti+0xd0>
   94a74:	e0bffc17 	ldw	r2,-16(fp)
   94a78:	10800283 	ldbu	r2,10(r2)
   94a7c:	1007883a 	mov	r3,r2
   94a80:	e0bffb43 	ldbu	r2,-19(fp)
   94a84:	0084303a 	nor	r2,zero,r2
   94a88:	1884703a 	and	r2,r3,r2
   94a8c:	1007883a 	mov	r3,r2
   94a90:	e0bffc17 	ldw	r2,-16(fp)
   94a94:	10c00285 	stb	r3,10(r2)
   94a98:	e0bffd17 	ldw	r2,-12(fp)
   94a9c:	10800104 	addi	r2,r2,4
   94aa0:	e0bffd15 	stw	r2,-12(fp)
   94aa4:	e0bffd17 	ldw	r2,-12(fp)
   94aa8:	10800017 	ldw	r2,0(r2)
   94aac:	e0bffc15 	stw	r2,-16(fp)
   94ab0:	e0bffc17 	ldw	r2,-16(fp)
   94ab4:	1004c03a 	cmpne	r2,r2,zero
   94ab8:	103fd71e 	bne	r2,zero,94a18 <OS_EventTaskRemoveMulti+0x50>
   94abc:	e037883a 	mov	sp,fp
   94ac0:	df000017 	ldw	fp,0(sp)
   94ac4:	dec00104 	addi	sp,sp,4
   94ac8:	f800283a 	ret

00094acc <OS_EventWaitListInit>:
   94acc:	defffc04 	addi	sp,sp,-16
   94ad0:	df000315 	stw	fp,12(sp)
   94ad4:	df000304 	addi	fp,sp,12
   94ad8:	e13fff15 	stw	r4,-4(fp)
   94adc:	e0bfff17 	ldw	r2,-4(fp)
   94ae0:	10000285 	stb	zero,10(r2)
   94ae4:	e0bfff17 	ldw	r2,-4(fp)
   94ae8:	108002c4 	addi	r2,r2,11
   94aec:	e0bffe15 	stw	r2,-8(fp)
   94af0:	e03ffd05 	stb	zero,-12(fp)
   94af4:	00000806 	br	94b18 <OS_EventWaitListInit+0x4c>
   94af8:	e0bffe17 	ldw	r2,-8(fp)
   94afc:	10000005 	stb	zero,0(r2)
   94b00:	e0bffe17 	ldw	r2,-8(fp)
   94b04:	10800044 	addi	r2,r2,1
   94b08:	e0bffe15 	stw	r2,-8(fp)
   94b0c:	e0bffd03 	ldbu	r2,-12(fp)
   94b10:	10800044 	addi	r2,r2,1
   94b14:	e0bffd05 	stb	r2,-12(fp)
   94b18:	e0bffd03 	ldbu	r2,-12(fp)
   94b1c:	108000f0 	cmpltui	r2,r2,3
   94b20:	103ff51e 	bne	r2,zero,94af8 <OS_EventWaitListInit+0x2c>
   94b24:	e037883a 	mov	sp,fp
   94b28:	df000017 	ldw	fp,0(sp)
   94b2c:	dec00104 	addi	sp,sp,4
   94b30:	f800283a 	ret

00094b34 <OS_InitEventList>:
   94b34:	defffb04 	addi	sp,sp,-20
   94b38:	dfc00415 	stw	ra,16(sp)
   94b3c:	df000315 	stw	fp,12(sp)
   94b40:	df000304 	addi	fp,sp,12
   94b44:	010002f4 	movhi	r4,11
   94b48:	2119bc04 	addi	r4,r4,26352
   94b4c:	0142d004 	movi	r5,2880
   94b50:	0094e980 	call	94e98 <OS_MemClr>
   94b54:	008002f4 	movhi	r2,11
   94b58:	1099bc04 	addi	r2,r2,26352
   94b5c:	e0bffe15 	stw	r2,-8(fp)
   94b60:	008002f4 	movhi	r2,11
   94b64:	1099c804 	addi	r2,r2,26400
   94b68:	e0bffd15 	stw	r2,-12(fp)
   94b6c:	e03fff0d 	sth	zero,-4(fp)
   94b70:	00001306 	br	94bc0 <OS_InitEventList+0x8c>
   94b74:	e0bffe17 	ldw	r2,-8(fp)
   94b78:	10000005 	stb	zero,0(r2)
   94b7c:	e0fffe17 	ldw	r3,-8(fp)
   94b80:	e0bffd17 	ldw	r2,-12(fp)
   94b84:	18800115 	stw	r2,4(r3)
   94b88:	e0fffe17 	ldw	r3,-8(fp)
   94b8c:	00800fc4 	movi	r2,63
   94b90:	18800385 	stb	r2,14(r3)
   94b94:	e0bffe17 	ldw	r2,-8(fp)
   94b98:	100003c5 	stb	zero,15(r2)
   94b9c:	e0bffe17 	ldw	r2,-8(fp)
   94ba0:	10800c04 	addi	r2,r2,48
   94ba4:	e0bffe15 	stw	r2,-8(fp)
   94ba8:	e0bffd17 	ldw	r2,-12(fp)
   94bac:	10800c04 	addi	r2,r2,48
   94bb0:	e0bffd15 	stw	r2,-12(fp)
   94bb4:	e0bfff0b 	ldhu	r2,-4(fp)
   94bb8:	10800044 	addi	r2,r2,1
   94bbc:	e0bfff0d 	sth	r2,-4(fp)
   94bc0:	e0bfff0b 	ldhu	r2,-4(fp)
   94bc4:	10800ef0 	cmpltui	r2,r2,59
   94bc8:	103fea1e 	bne	r2,zero,94b74 <OS_InitEventList+0x40>
   94bcc:	e0bffe17 	ldw	r2,-8(fp)
   94bd0:	10000005 	stb	zero,0(r2)
   94bd4:	e0bffe17 	ldw	r2,-8(fp)
   94bd8:	10000115 	stw	zero,4(r2)
   94bdc:	e0fffe17 	ldw	r3,-8(fp)
   94be0:	00800fc4 	movi	r2,63
   94be4:	18800385 	stb	r2,14(r3)
   94be8:	e0bffe17 	ldw	r2,-8(fp)
   94bec:	100003c5 	stb	zero,15(r2)
   94bf0:	008002f4 	movhi	r2,11
   94bf4:	1099bc04 	addi	r2,r2,26352
   94bf8:	d0a72e15 	stw	r2,-25416(gp)
   94bfc:	e037883a 	mov	sp,fp
   94c00:	dfc00117 	ldw	ra,4(sp)
   94c04:	df000017 	ldw	fp,0(sp)
   94c08:	dec00204 	addi	sp,sp,8
   94c0c:	f800283a 	ret

00094c10 <OS_InitMisc>:
   94c10:	deffff04 	addi	sp,sp,-4
   94c14:	df000015 	stw	fp,0(sp)
   94c18:	d839883a 	mov	fp,sp
   94c1c:	d0273115 	stw	zero,-25404(gp)
   94c20:	d0272f05 	stb	zero,-25412(gp)
   94c24:	d0272105 	stb	zero,-25468(gp)
   94c28:	d0272945 	stb	zero,-25435(gp)
   94c2c:	d0272145 	stb	zero,-25467(gp)
   94c30:	d0272615 	stw	zero,-25448(gp)
   94c34:	d0272215 	stw	zero,-25464(gp)
   94c38:	d0273415 	stw	zero,-25392(gp)
   94c3c:	d0272715 	stw	zero,-25444(gp)
   94c40:	d0273305 	stb	zero,-25396(gp)
   94c44:	e037883a 	mov	sp,fp
   94c48:	df000017 	ldw	fp,0(sp)
   94c4c:	dec00104 	addi	sp,sp,4
   94c50:	f800283a 	ret

00094c54 <OS_InitRdyList>:
   94c54:	defffd04 	addi	sp,sp,-12
   94c58:	df000215 	stw	fp,8(sp)
   94c5c:	df000204 	addi	fp,sp,8
   94c60:	d0272d05 	stb	zero,-25420(gp)
   94c64:	d0a72d44 	addi	r2,gp,-25419
   94c68:	e0bffe15 	stw	r2,-8(fp)
   94c6c:	e03fff05 	stb	zero,-4(fp)
   94c70:	00000806 	br	94c94 <OS_InitRdyList+0x40>
   94c74:	e0bffe17 	ldw	r2,-8(fp)
   94c78:	10000005 	stb	zero,0(r2)
   94c7c:	e0bffe17 	ldw	r2,-8(fp)
   94c80:	10800044 	addi	r2,r2,1
   94c84:	e0bffe15 	stw	r2,-8(fp)
   94c88:	e0bfff03 	ldbu	r2,-4(fp)
   94c8c:	10800044 	addi	r2,r2,1
   94c90:	e0bfff05 	stb	r2,-4(fp)
   94c94:	e0bfff03 	ldbu	r2,-4(fp)
   94c98:	108000f0 	cmpltui	r2,r2,3
   94c9c:	103ff51e 	bne	r2,zero,94c74 <OS_InitRdyList+0x20>
   94ca0:	d0272345 	stb	zero,-25459(gp)
   94ca4:	d0272305 	stb	zero,-25460(gp)
   94ca8:	d0272b15 	stw	zero,-25428(gp)
   94cac:	d0273015 	stw	zero,-25408(gp)
   94cb0:	e037883a 	mov	sp,fp
   94cb4:	df000017 	ldw	fp,0(sp)
   94cb8:	dec00104 	addi	sp,sp,4
   94cbc:	f800283a 	ret

00094cc0 <OS_InitTaskIdle>:
   94cc0:	defff804 	addi	sp,sp,-32
   94cc4:	dfc00715 	stw	ra,28(sp)
   94cc8:	df000615 	stw	fp,24(sp)
   94ccc:	df000604 	addi	fp,sp,24
   94cd0:	018002f4 	movhi	r6,11
   94cd4:	3199bb04 	addi	r6,r6,26348
   94cd8:	00bfffd4 	movui	r2,65535
   94cdc:	d8800015 	stw	r2,0(sp)
   94ce0:	008002f4 	movhi	r2,11
   94ce4:	1097bc04 	addi	r2,r2,24304
   94ce8:	d8800115 	stw	r2,4(sp)
   94cec:	00808004 	movi	r2,512
   94cf0:	d8800215 	stw	r2,8(sp)
   94cf4:	d8000315 	stw	zero,12(sp)
   94cf8:	008000c4 	movi	r2,3
   94cfc:	d8800415 	stw	r2,16(sp)
   94d00:	01000274 	movhi	r4,9
   94d04:	21145d04 	addi	r4,r4,20852
   94d08:	000b883a 	mov	r5,zero
   94d0c:	01c00504 	movi	r7,20
   94d10:	009bf8c0 	call	9bf8c <OSTaskCreateExt>
   94d14:	014002b4 	movhi	r5,10
   94d18:	29432f04 	addi	r5,r5,3260
   94d1c:	01000504 	movi	r4,20
   94d20:	e1bfff04 	addi	r6,fp,-4
   94d24:	009c8c00 	call	9c8c0 <OSTaskNameSet>
   94d28:	e037883a 	mov	sp,fp
   94d2c:	dfc00117 	ldw	ra,4(sp)
   94d30:	df000017 	ldw	fp,0(sp)
   94d34:	dec00204 	addi	sp,sp,8
   94d38:	f800283a 	ret

00094d3c <OS_InitTaskStat>:
   94d3c:	defff804 	addi	sp,sp,-32
   94d40:	dfc00715 	stw	ra,28(sp)
   94d44:	df000615 	stw	fp,24(sp)
   94d48:	df000604 	addi	fp,sp,24
   94d4c:	018002f4 	movhi	r6,11
   94d50:	31974304 	addi	r6,r6,23820
   94d54:	00bfff94 	movui	r2,65534
   94d58:	d8800015 	stw	r2,0(sp)
   94d5c:	008002f4 	movhi	r2,11
   94d60:	10954404 	addi	r2,r2,21776
   94d64:	d8800115 	stw	r2,4(sp)
   94d68:	00808004 	movi	r2,512
   94d6c:	d8800215 	stw	r2,8(sp)
   94d70:	d8000315 	stw	zero,12(sp)
   94d74:	008000c4 	movi	r2,3
   94d78:	d8800415 	stw	r2,16(sp)
   94d7c:	01000274 	movhi	r4,9
   94d80:	21147404 	addi	r4,r4,20944
   94d84:	000b883a 	mov	r5,zero
   94d88:	01c004c4 	movi	r7,19
   94d8c:	009bf8c0 	call	9bf8c <OSTaskCreateExt>
   94d90:	014002b4 	movhi	r5,10
   94d94:	29433304 	addi	r5,r5,3276
   94d98:	010004c4 	movi	r4,19
   94d9c:	e1bfff04 	addi	r6,fp,-4
   94da0:	009c8c00 	call	9c8c0 <OSTaskNameSet>
   94da4:	e037883a 	mov	sp,fp
   94da8:	dfc00117 	ldw	ra,4(sp)
   94dac:	df000017 	ldw	fp,0(sp)
   94db0:	dec00204 	addi	sp,sp,8
   94db4:	f800283a 	ret

00094db8 <OS_InitTCBList>:
   94db8:	defffb04 	addi	sp,sp,-20
   94dbc:	dfc00415 	stw	ra,16(sp)
   94dc0:	df000315 	stw	fp,12(sp)
   94dc4:	df000304 	addi	fp,sp,12
   94dc8:	010002f4 	movhi	r4,11
   94dcc:	211c8c04 	addi	r4,r4,29232
   94dd0:	01414404 	movi	r5,1296
   94dd4:	0094e980 	call	94e98 <OS_MemClr>
   94dd8:	010002f4 	movhi	r4,11
   94ddc:	211dd004 	addi	r4,r4,30528
   94de0:	01401504 	movi	r5,84
   94de4:	0094e980 	call	94e98 <OS_MemClr>
   94de8:	008002f4 	movhi	r2,11
   94dec:	109c8c04 	addi	r2,r2,29232
   94df0:	e0bffe15 	stw	r2,-8(fp)
   94df4:	008002f4 	movhi	r2,11
   94df8:	109ca704 	addi	r2,r2,29340
   94dfc:	e0bffd15 	stw	r2,-12(fp)
   94e00:	e03fff05 	stb	zero,-4(fp)
   94e04:	00001106 	br	94e4c <OS_InitTCBList+0x94>
   94e08:	e0fffe17 	ldw	r3,-8(fp)
   94e0c:	e0bffd17 	ldw	r2,-12(fp)
   94e10:	18800515 	stw	r2,20(r3)
   94e14:	e0fffe17 	ldw	r3,-8(fp)
   94e18:	00800fc4 	movi	r2,63
   94e1c:	18801305 	stb	r2,76(r3)
   94e20:	e0bffe17 	ldw	r2,-8(fp)
   94e24:	10001345 	stb	zero,77(r2)
   94e28:	e0bffe17 	ldw	r2,-8(fp)
   94e2c:	10801b04 	addi	r2,r2,108
   94e30:	e0bffe15 	stw	r2,-8(fp)
   94e34:	e0bffd17 	ldw	r2,-12(fp)
   94e38:	10801b04 	addi	r2,r2,108
   94e3c:	e0bffd15 	stw	r2,-12(fp)
   94e40:	e0bfff03 	ldbu	r2,-4(fp)
   94e44:	10800044 	addi	r2,r2,1
   94e48:	e0bfff05 	stb	r2,-4(fp)
   94e4c:	e0bfff03 	ldbu	r2,-4(fp)
   94e50:	108002f0 	cmpltui	r2,r2,11
   94e54:	103fec1e 	bne	r2,zero,94e08 <OS_InitTCBList+0x50>
   94e58:	e0bffe17 	ldw	r2,-8(fp)
   94e5c:	10000515 	stw	zero,20(r2)
   94e60:	e0fffe17 	ldw	r3,-8(fp)
   94e64:	00800fc4 	movi	r2,63
   94e68:	18801305 	stb	r2,76(r3)
   94e6c:	e0bffe17 	ldw	r2,-8(fp)
   94e70:	10001345 	stb	zero,77(r2)
   94e74:	d0272415 	stw	zero,-25456(gp)
   94e78:	008002f4 	movhi	r2,11
   94e7c:	109c8c04 	addi	r2,r2,29232
   94e80:	d0a72815 	stw	r2,-25440(gp)
   94e84:	e037883a 	mov	sp,fp
   94e88:	dfc00117 	ldw	ra,4(sp)
   94e8c:	df000017 	ldw	fp,0(sp)
   94e90:	dec00204 	addi	sp,sp,8
   94e94:	f800283a 	ret

00094e98 <OS_MemClr>:
   94e98:	defffd04 	addi	sp,sp,-12
   94e9c:	df000215 	stw	fp,8(sp)
   94ea0:	df000204 	addi	fp,sp,8
   94ea4:	e13ffe15 	stw	r4,-8(fp)
   94ea8:	e17fff0d 	sth	r5,-4(fp)
   94eac:	00000806 	br	94ed0 <OS_MemClr+0x38>
   94eb0:	e0bffe17 	ldw	r2,-8(fp)
   94eb4:	10000005 	stb	zero,0(r2)
   94eb8:	e0bffe17 	ldw	r2,-8(fp)
   94ebc:	10800044 	addi	r2,r2,1
   94ec0:	e0bffe15 	stw	r2,-8(fp)
   94ec4:	e0bfff0b 	ldhu	r2,-4(fp)
   94ec8:	10bfffc4 	addi	r2,r2,-1
   94ecc:	e0bfff0d 	sth	r2,-4(fp)
   94ed0:	e0bfff0b 	ldhu	r2,-4(fp)
   94ed4:	1004c03a 	cmpne	r2,r2,zero
   94ed8:	103ff51e 	bne	r2,zero,94eb0 <OS_MemClr+0x18>
   94edc:	e037883a 	mov	sp,fp
   94ee0:	df000017 	ldw	fp,0(sp)
   94ee4:	dec00104 	addi	sp,sp,4
   94ee8:	f800283a 	ret

00094eec <OS_MemCopy>:
   94eec:	defffc04 	addi	sp,sp,-16
   94ef0:	df000315 	stw	fp,12(sp)
   94ef4:	df000304 	addi	fp,sp,12
   94ef8:	e13ffd15 	stw	r4,-12(fp)
   94efc:	e17ffe15 	stw	r5,-8(fp)
   94f00:	e1bfff0d 	sth	r6,-4(fp)
   94f04:	00000d06 	br	94f3c <OS_MemCopy+0x50>
   94f08:	e0bffe17 	ldw	r2,-8(fp)
   94f0c:	10c00003 	ldbu	r3,0(r2)
   94f10:	e0bffd17 	ldw	r2,-12(fp)
   94f14:	10c00005 	stb	r3,0(r2)
   94f18:	e0bffd17 	ldw	r2,-12(fp)
   94f1c:	10800044 	addi	r2,r2,1
   94f20:	e0bffd15 	stw	r2,-12(fp)
   94f24:	e0bffe17 	ldw	r2,-8(fp)
   94f28:	10800044 	addi	r2,r2,1
   94f2c:	e0bffe15 	stw	r2,-8(fp)
   94f30:	e0bfff0b 	ldhu	r2,-4(fp)
   94f34:	10bfffc4 	addi	r2,r2,-1
   94f38:	e0bfff0d 	sth	r2,-4(fp)
   94f3c:	e0bfff0b 	ldhu	r2,-4(fp)
   94f40:	1004c03a 	cmpne	r2,r2,zero
   94f44:	103ff01e 	bne	r2,zero,94f08 <OS_MemCopy+0x1c>
   94f48:	e037883a 	mov	sp,fp
   94f4c:	df000017 	ldw	fp,0(sp)
   94f50:	dec00104 	addi	sp,sp,4
   94f54:	f800283a 	ret

00094f58 <OS_Sched>:
   94f58:	defffb04 	addi	sp,sp,-20
   94f5c:	dfc00415 	stw	ra,16(sp)
   94f60:	df000315 	stw	fp,12(sp)
   94f64:	df000304 	addi	fp,sp,12
   94f68:	e03fff15 	stw	zero,-4(fp)
   94f6c:	0005303a 	rdctl	r2,status
   94f70:	e0bffe15 	stw	r2,-8(fp)
   94f74:	e0fffe17 	ldw	r3,-8(fp)
   94f78:	00bfff84 	movi	r2,-2
   94f7c:	1884703a 	and	r2,r3,r2
   94f80:	1001703a 	wrctl	status,r2
   94f84:	e0bffe17 	ldw	r2,-8(fp)
   94f88:	e0bfff15 	stw	r2,-4(fp)
   94f8c:	d0a72f03 	ldbu	r2,-25412(gp)
   94f90:	10803fcc 	andi	r2,r2,255
   94f94:	1004c03a 	cmpne	r2,r2,zero
   94f98:	10001b1e 	bne	r2,zero,95008 <OS_Sched+0xb0>
   94f9c:	d0a72103 	ldbu	r2,-25468(gp)
   94fa0:	10803fcc 	andi	r2,r2,255
   94fa4:	1004c03a 	cmpne	r2,r2,zero
   94fa8:	1000171e 	bne	r2,zero,95008 <OS_Sched+0xb0>
   94fac:	009502c0 	call	9502c <OS_SchedNew>
   94fb0:	d0a72303 	ldbu	r2,-25460(gp)
   94fb4:	d0e72343 	ldbu	r3,-25459(gp)
   94fb8:	11003fcc 	andi	r4,r2,255
   94fbc:	18803fcc 	andi	r2,r3,255
   94fc0:	20801126 	beq	r4,r2,95008 <OS_Sched+0xb0>
   94fc4:	d0a72303 	ldbu	r2,-25460(gp)
   94fc8:	10803fcc 	andi	r2,r2,255
   94fcc:	00c002f4 	movhi	r3,11
   94fd0:	18ddd004 	addi	r3,r3,30528
   94fd4:	1085883a 	add	r2,r2,r2
   94fd8:	1085883a 	add	r2,r2,r2
   94fdc:	10c5883a 	add	r2,r2,r3
   94fe0:	10800017 	ldw	r2,0(r2)
   94fe4:	d0a72b15 	stw	r2,-25428(gp)
   94fe8:	d0e72b17 	ldw	r3,-25428(gp)
   94fec:	18800e17 	ldw	r2,56(r3)
   94ff0:	10800044 	addi	r2,r2,1
   94ff4:	18800e15 	stw	r2,56(r3)
   94ff8:	d0a72617 	ldw	r2,-25448(gp)
   94ffc:	10800044 	addi	r2,r2,1
   95000:	d0a72615 	stw	r2,-25448(gp)
   95004:	009f3a80 	call	9f3a8 <OSCtxSw>
   95008:	e0bfff17 	ldw	r2,-4(fp)
   9500c:	e0bffd15 	stw	r2,-12(fp)
   95010:	e0bffd17 	ldw	r2,-12(fp)
   95014:	1001703a 	wrctl	status,r2
   95018:	e037883a 	mov	sp,fp
   9501c:	dfc00117 	ldw	ra,4(sp)
   95020:	df000017 	ldw	fp,0(sp)
   95024:	dec00204 	addi	sp,sp,8
   95028:	f800283a 	ret

0009502c <OS_SchedNew>:
   9502c:	defffe04 	addi	sp,sp,-8
   95030:	df000115 	stw	fp,4(sp)
   95034:	df000104 	addi	fp,sp,4
   95038:	d0a72d03 	ldbu	r2,-25420(gp)
   9503c:	10c03fcc 	andi	r3,r2,255
   95040:	008002b4 	movhi	r2,10
   95044:	1082ef04 	addi	r2,r2,3004
   95048:	10c5883a 	add	r2,r2,r3
   9504c:	10800003 	ldbu	r2,0(r2)
   95050:	e0bfff05 	stb	r2,-4(fp)
   95054:	e0bfff03 	ldbu	r2,-4(fp)
   95058:	100490fa 	slli	r2,r2,3
   9505c:	1009883a 	mov	r4,r2
   95060:	e0ffff03 	ldbu	r3,-4(fp)
   95064:	d0a72d44 	addi	r2,gp,-25419
   95068:	1885883a 	add	r2,r3,r2
   9506c:	10800003 	ldbu	r2,0(r2)
   95070:	10c03fcc 	andi	r3,r2,255
   95074:	008002b4 	movhi	r2,10
   95078:	1082ef04 	addi	r2,r2,3004
   9507c:	10c5883a 	add	r2,r2,r3
   95080:	10800003 	ldbu	r2,0(r2)
   95084:	2085883a 	add	r2,r4,r2
   95088:	d0a72305 	stb	r2,-25460(gp)
   9508c:	e037883a 	mov	sp,fp
   95090:	df000017 	ldw	fp,0(sp)
   95094:	dec00104 	addi	sp,sp,4
   95098:	f800283a 	ret

0009509c <OS_StrCopy>:
   9509c:	defffc04 	addi	sp,sp,-16
   950a0:	df000315 	stw	fp,12(sp)
   950a4:	df000304 	addi	fp,sp,12
   950a8:	e13ffe15 	stw	r4,-8(fp)
   950ac:	e17fff15 	stw	r5,-4(fp)
   950b0:	e03ffd05 	stb	zero,-12(fp)
   950b4:	00000d06 	br	950ec <OS_StrCopy+0x50>
   950b8:	e0bfff17 	ldw	r2,-4(fp)
   950bc:	10c00003 	ldbu	r3,0(r2)
   950c0:	e0bffe17 	ldw	r2,-8(fp)
   950c4:	10c00005 	stb	r3,0(r2)
   950c8:	e0bffe17 	ldw	r2,-8(fp)
   950cc:	10800044 	addi	r2,r2,1
   950d0:	e0bffe15 	stw	r2,-8(fp)
   950d4:	e0bfff17 	ldw	r2,-4(fp)
   950d8:	10800044 	addi	r2,r2,1
   950dc:	e0bfff15 	stw	r2,-4(fp)
   950e0:	e0bffd03 	ldbu	r2,-12(fp)
   950e4:	10800044 	addi	r2,r2,1
   950e8:	e0bffd05 	stb	r2,-12(fp)
   950ec:	e0bfff17 	ldw	r2,-4(fp)
   950f0:	10800003 	ldbu	r2,0(r2)
   950f4:	10803fcc 	andi	r2,r2,255
   950f8:	1004c03a 	cmpne	r2,r2,zero
   950fc:	103fee1e 	bne	r2,zero,950b8 <OS_StrCopy+0x1c>
   95100:	e0bffe17 	ldw	r2,-8(fp)
   95104:	10000005 	stb	zero,0(r2)
   95108:	e0bffd03 	ldbu	r2,-12(fp)
   9510c:	e037883a 	mov	sp,fp
   95110:	df000017 	ldw	fp,0(sp)
   95114:	dec00104 	addi	sp,sp,4
   95118:	f800283a 	ret

0009511c <OS_StrLen>:
   9511c:	defffd04 	addi	sp,sp,-12
   95120:	df000215 	stw	fp,8(sp)
   95124:	df000204 	addi	fp,sp,8
   95128:	e13fff15 	stw	r4,-4(fp)
   9512c:	e03ffe05 	stb	zero,-8(fp)
   95130:	00000606 	br	9514c <OS_StrLen+0x30>
   95134:	e0bfff17 	ldw	r2,-4(fp)
   95138:	10800044 	addi	r2,r2,1
   9513c:	e0bfff15 	stw	r2,-4(fp)
   95140:	e0bffe03 	ldbu	r2,-8(fp)
   95144:	10800044 	addi	r2,r2,1
   95148:	e0bffe05 	stb	r2,-8(fp)
   9514c:	e0bfff17 	ldw	r2,-4(fp)
   95150:	10800003 	ldbu	r2,0(r2)
   95154:	10803fcc 	andi	r2,r2,255
   95158:	1004c03a 	cmpne	r2,r2,zero
   9515c:	103ff51e 	bne	r2,zero,95134 <OS_StrLen+0x18>
   95160:	e0bffe03 	ldbu	r2,-8(fp)
   95164:	e037883a 	mov	sp,fp
   95168:	df000017 	ldw	fp,0(sp)
   9516c:	dec00104 	addi	sp,sp,4
   95170:	f800283a 	ret

00095174 <OS_TaskIdle>:
   95174:	defffa04 	addi	sp,sp,-24
   95178:	dfc00515 	stw	ra,20(sp)
   9517c:	df000415 	stw	fp,16(sp)
   95180:	df000404 	addi	fp,sp,16
   95184:	e13fff15 	stw	r4,-4(fp)
   95188:	e03ffe15 	stw	zero,-8(fp)
   9518c:	0005303a 	rdctl	r2,status
   95190:	e0bffd15 	stw	r2,-12(fp)
   95194:	e0fffd17 	ldw	r3,-12(fp)
   95198:	00bfff84 	movi	r2,-2
   9519c:	1884703a 	and	r2,r3,r2
   951a0:	1001703a 	wrctl	status,r2
   951a4:	e0bffd17 	ldw	r2,-12(fp)
   951a8:	e0bffe15 	stw	r2,-8(fp)
   951ac:	d0a72217 	ldw	r2,-25464(gp)
   951b0:	10800044 	addi	r2,r2,1
   951b4:	d0a72215 	stw	r2,-25464(gp)
   951b8:	e0bffe17 	ldw	r2,-8(fp)
   951bc:	e0bffc15 	stw	r2,-16(fp)
   951c0:	e0bffc17 	ldw	r2,-16(fp)
   951c4:	1001703a 	wrctl	status,r2
   951c8:	009f8540 	call	9f854 <OSTaskIdleHook>
   951cc:	003fef06 	br	9518c <OS_TaskIdle+0x18>

000951d0 <OS_TaskStat>:
   951d0:	defffa04 	addi	sp,sp,-24
   951d4:	dfc00515 	stw	ra,20(sp)
   951d8:	df000415 	stw	fp,16(sp)
   951dc:	df000404 	addi	fp,sp,16
   951e0:	e13fff15 	stw	r4,-4(fp)
   951e4:	e03ffe15 	stw	zero,-8(fp)
   951e8:	00000206 	br	951f4 <OS_TaskStat+0x24>
   951ec:	01003204 	movi	r4,200
   951f0:	009d2840 	call	9d284 <OSTimeDly>
   951f4:	d0a73303 	ldbu	r2,-25396(gp)
   951f8:	10803fcc 	andi	r2,r2,255
   951fc:	1005003a 	cmpeq	r2,r2,zero
   95200:	103ffa1e 	bne	r2,zero,951ec <OS_TaskStat+0x1c>
   95204:	d1272717 	ldw	r4,-25444(gp)
   95208:	01401904 	movi	r5,100
   9520c:	00886a00 	call	886a0 <__udivsi3>
   95210:	d0a72715 	stw	r2,-25444(gp)
   95214:	d0a72717 	ldw	r2,-25444(gp)
   95218:	1004c03a 	cmpne	r2,r2,zero
   9521c:	1000031e 	bne	r2,zero,9522c <OS_TaskStat+0x5c>
   95220:	d0272905 	stb	zero,-25436(gp)
   95224:	01003fc4 	movi	r4,255
   95228:	009ce980 	call	9ce98 <OSTaskSuspend>
   9522c:	0005303a 	rdctl	r2,status
   95230:	e0bffd15 	stw	r2,-12(fp)
   95234:	e0fffd17 	ldw	r3,-12(fp)
   95238:	00bfff84 	movi	r2,-2
   9523c:	1884703a 	and	r2,r3,r2
   95240:	1001703a 	wrctl	status,r2
   95244:	e0bffd17 	ldw	r2,-12(fp)
   95248:	e0bffe15 	stw	r2,-8(fp)
   9524c:	d0a72217 	ldw	r2,-25464(gp)
   95250:	d0a73415 	stw	r2,-25392(gp)
   95254:	d0272215 	stw	zero,-25464(gp)
   95258:	e0bffe17 	ldw	r2,-8(fp)
   9525c:	e0bffc15 	stw	r2,-16(fp)
   95260:	e0bffc17 	ldw	r2,-16(fp)
   95264:	1001703a 	wrctl	status,r2
   95268:	d1273417 	ldw	r4,-25392(gp)
   9526c:	d1672717 	ldw	r5,-25444(gp)
   95270:	00886a00 	call	886a0 <__udivsi3>
   95274:	1007883a 	mov	r3,r2
   95278:	00801904 	movi	r2,100
   9527c:	10c5c83a 	sub	r2,r2,r3
   95280:	d0a72905 	stb	r2,-25436(gp)
   95284:	009f7e40 	call	9f7e4 <OSTaskStatHook>
   95288:	00952980 	call	95298 <OS_TaskStatStkChk>
   9528c:	01001904 	movi	r4,100
   95290:	009d2840 	call	9d284 <OSTimeDly>
   95294:	003fe506 	br	9522c <OS_TaskStat+0x5c>

00095298 <OS_TaskStatStkChk>:
   95298:	defffa04 	addi	sp,sp,-24
   9529c:	dfc00515 	stw	ra,20(sp)
   952a0:	df000415 	stw	fp,16(sp)
   952a4:	df000404 	addi	fp,sp,16
   952a8:	e03ffc05 	stb	zero,-16(fp)
   952ac:	00002406 	br	95340 <OS_TaskStatStkChk+0xa8>
   952b0:	e13ffc03 	ldbu	r4,-16(fp)
   952b4:	e17ffe04 	addi	r5,fp,-8
   952b8:	009cc9c0 	call	9cc9c <OSTaskStkChk>
   952bc:	e0bffc45 	stb	r2,-15(fp)
   952c0:	e0bffc43 	ldbu	r2,-15(fp)
   952c4:	1004c03a 	cmpne	r2,r2,zero
   952c8:	10001a1e 	bne	r2,zero,95334 <OS_TaskStatStkChk+0x9c>
   952cc:	e0bffc03 	ldbu	r2,-16(fp)
   952d0:	00c002f4 	movhi	r3,11
   952d4:	18ddd004 	addi	r3,r3,30528
   952d8:	1085883a 	add	r2,r2,r2
   952dc:	1085883a 	add	r2,r2,r2
   952e0:	10c5883a 	add	r2,r2,r3
   952e4:	10800017 	ldw	r2,0(r2)
   952e8:	e0bffd15 	stw	r2,-12(fp)
   952ec:	e0bffd17 	ldw	r2,-12(fp)
   952f0:	1005003a 	cmpeq	r2,r2,zero
   952f4:	10000f1e 	bne	r2,zero,95334 <OS_TaskStatStkChk+0x9c>
   952f8:	e0bffd17 	ldw	r2,-12(fp)
   952fc:	10800060 	cmpeqi	r2,r2,1
   95300:	10000c1e 	bne	r2,zero,95334 <OS_TaskStatStkChk+0x9c>
   95304:	e0bffd17 	ldw	r2,-12(fp)
   95308:	10c00217 	ldw	r3,8(r2)
   9530c:	e0bffd17 	ldw	r2,-12(fp)
   95310:	10800317 	ldw	r2,12(r2)
   95314:	1085883a 	add	r2,r2,r2
   95318:	1085883a 	add	r2,r2,r2
   9531c:	1887883a 	add	r3,r3,r2
   95320:	e0bffd17 	ldw	r2,-12(fp)
   95324:	10c01115 	stw	r3,68(r2)
   95328:	e0ffff17 	ldw	r3,-4(fp)
   9532c:	e0bffd17 	ldw	r2,-12(fp)
   95330:	10c01215 	stw	r3,72(r2)
   95334:	e0bffc03 	ldbu	r2,-16(fp)
   95338:	10800044 	addi	r2,r2,1
   9533c:	e0bffc05 	stb	r2,-16(fp)
   95340:	e0bffc03 	ldbu	r2,-16(fp)
   95344:	10800570 	cmpltui	r2,r2,21
   95348:	103fd91e 	bne	r2,zero,952b0 <OS_TaskStatStkChk+0x18>
   9534c:	e037883a 	mov	sp,fp
   95350:	dfc00117 	ldw	ra,4(sp)
   95354:	df000017 	ldw	fp,0(sp)
   95358:	dec00204 	addi	sp,sp,8
   9535c:	f800283a 	ret

00095360 <OS_TCBInit>:
   95360:	defff104 	addi	sp,sp,-60
   95364:	dfc00e15 	stw	ra,56(sp)
   95368:	df000d15 	stw	fp,52(sp)
   9536c:	df000d04 	addi	fp,sp,52
   95370:	e17ffb15 	stw	r5,-20(fp)
   95374:	e1bffc15 	stw	r6,-16(fp)
   95378:	e0800417 	ldw	r2,16(fp)
   9537c:	e13ffa05 	stb	r4,-24(fp)
   95380:	e1fffd0d 	sth	r7,-12(fp)
   95384:	e0bffe0d 	sth	r2,-8(fp)
   95388:	e03ff815 	stw	zero,-32(fp)
   9538c:	0005303a 	rdctl	r2,status
   95390:	e0bff715 	stw	r2,-36(fp)
   95394:	e0fff717 	ldw	r3,-36(fp)
   95398:	00bfff84 	movi	r2,-2
   9539c:	1884703a 	and	r2,r3,r2
   953a0:	1001703a 	wrctl	status,r2
   953a4:	e0bff717 	ldw	r2,-36(fp)
   953a8:	e0bff815 	stw	r2,-32(fp)
   953ac:	d0a72817 	ldw	r2,-25440(gp)
   953b0:	e0bff915 	stw	r2,-28(fp)
   953b4:	e0bff917 	ldw	r2,-28(fp)
   953b8:	1005003a 	cmpeq	r2,r2,zero
   953bc:	1000941e 	bne	r2,zero,95610 <OS_TCBInit+0x2b0>
   953c0:	e0bff917 	ldw	r2,-28(fp)
   953c4:	10800517 	ldw	r2,20(r2)
   953c8:	d0a72815 	stw	r2,-25440(gp)
   953cc:	e0bff817 	ldw	r2,-32(fp)
   953d0:	e0bff615 	stw	r2,-40(fp)
   953d4:	e0bff617 	ldw	r2,-40(fp)
   953d8:	1001703a 	wrctl	status,r2
   953dc:	e0fff917 	ldw	r3,-28(fp)
   953e0:	e0bffb17 	ldw	r2,-20(fp)
   953e4:	18800015 	stw	r2,0(r3)
   953e8:	e0fff917 	ldw	r3,-28(fp)
   953ec:	e0bffa03 	ldbu	r2,-24(fp)
   953f0:	18800c85 	stb	r2,50(r3)
   953f4:	e0bff917 	ldw	r2,-28(fp)
   953f8:	10000c05 	stb	zero,48(r2)
   953fc:	e0bff917 	ldw	r2,-28(fp)
   95400:	10000c45 	stb	zero,49(r2)
   95404:	e0bff917 	ldw	r2,-28(fp)
   95408:	10000b8d 	sth	zero,46(r2)
   9540c:	e0fff917 	ldw	r3,-28(fp)
   95410:	e0800317 	ldw	r2,12(fp)
   95414:	18800115 	stw	r2,4(r3)
   95418:	e0fff917 	ldw	r3,-28(fp)
   9541c:	e0800217 	ldw	r2,8(fp)
   95420:	18800315 	stw	r2,12(r3)
   95424:	e0fff917 	ldw	r3,-28(fp)
   95428:	e0bffc17 	ldw	r2,-16(fp)
   9542c:	18800215 	stw	r2,8(r3)
   95430:	e0fff917 	ldw	r3,-28(fp)
   95434:	e0bffe0b 	ldhu	r2,-8(fp)
   95438:	1880040d 	sth	r2,16(r3)
   9543c:	e0fff917 	ldw	r3,-28(fp)
   95440:	e0bffd0b 	ldhu	r2,-12(fp)
   95444:	1880048d 	sth	r2,18(r3)
   95448:	e0bff917 	ldw	r2,-28(fp)
   9544c:	10000dc5 	stb	zero,55(r2)
   95450:	e0bffa03 	ldbu	r2,-24(fp)
   95454:	1004d0fa 	srli	r2,r2,3
   95458:	1007883a 	mov	r3,r2
   9545c:	e0bff917 	ldw	r2,-28(fp)
   95460:	10c00d05 	stb	r3,52(r2)
   95464:	e0bffa03 	ldbu	r2,-24(fp)
   95468:	108001cc 	andi	r2,r2,7
   9546c:	1007883a 	mov	r3,r2
   95470:	e0bff917 	ldw	r2,-28(fp)
   95474:	10c00cc5 	stb	r3,51(r2)
   95478:	e0bff917 	ldw	r2,-28(fp)
   9547c:	10800d03 	ldbu	r2,52(r2)
   95480:	10c03fcc 	andi	r3,r2,255
   95484:	00800044 	movi	r2,1
   95488:	10c4983a 	sll	r2,r2,r3
   9548c:	1007883a 	mov	r3,r2
   95490:	e0bff917 	ldw	r2,-28(fp)
   95494:	10c00d85 	stb	r3,54(r2)
   95498:	e0bff917 	ldw	r2,-28(fp)
   9549c:	10800cc3 	ldbu	r2,51(r2)
   954a0:	10c03fcc 	andi	r3,r2,255
   954a4:	00800044 	movi	r2,1
   954a8:	10c4983a 	sll	r2,r2,r3
   954ac:	1007883a 	mov	r3,r2
   954b0:	e0bff917 	ldw	r2,-28(fp)
   954b4:	10c00d45 	stb	r3,53(r2)
   954b8:	e0bff917 	ldw	r2,-28(fp)
   954bc:	10000715 	stw	zero,28(r2)
   954c0:	e0bff917 	ldw	r2,-28(fp)
   954c4:	10000815 	stw	zero,32(r2)
   954c8:	e0bff917 	ldw	r2,-28(fp)
   954cc:	10000a15 	stw	zero,40(r2)
   954d0:	e0bff917 	ldw	r2,-28(fp)
   954d4:	10000915 	stw	zero,36(r2)
   954d8:	e0bff917 	ldw	r2,-28(fp)
   954dc:	10000e15 	stw	zero,56(r2)
   954e0:	e0bff917 	ldw	r2,-28(fp)
   954e4:	10001015 	stw	zero,64(r2)
   954e8:	e0bff917 	ldw	r2,-28(fp)
   954ec:	10000f15 	stw	zero,60(r2)
   954f0:	e0bff917 	ldw	r2,-28(fp)
   954f4:	10001115 	stw	zero,68(r2)
   954f8:	e0bff917 	ldw	r2,-28(fp)
   954fc:	10001215 	stw	zero,72(r2)
   95500:	e0fff917 	ldw	r3,-28(fp)
   95504:	00800fc4 	movi	r2,63
   95508:	18801305 	stb	r2,76(r3)
   9550c:	e0bff917 	ldw	r2,-28(fp)
   95510:	10001345 	stb	zero,77(r2)
   95514:	e13ff917 	ldw	r4,-28(fp)
   95518:	009f8700 	call	9f870 <OSTCBInitHook>
   9551c:	e13ff917 	ldw	r4,-28(fp)
   95520:	009f7880 	call	9f788 <OSTaskCreateHook>
   95524:	0005303a 	rdctl	r2,status
   95528:	e0bff515 	stw	r2,-44(fp)
   9552c:	e0fff517 	ldw	r3,-44(fp)
   95530:	00bfff84 	movi	r2,-2
   95534:	1884703a 	and	r2,r3,r2
   95538:	1001703a 	wrctl	status,r2
   9553c:	e0bff517 	ldw	r2,-44(fp)
   95540:	e0bff815 	stw	r2,-32(fp)
   95544:	e0bffa03 	ldbu	r2,-24(fp)
   95548:	00c002f4 	movhi	r3,11
   9554c:	18ddd004 	addi	r3,r3,30528
   95550:	1085883a 	add	r2,r2,r2
   95554:	1085883a 	add	r2,r2,r2
   95558:	10c7883a 	add	r3,r2,r3
   9555c:	e0bff917 	ldw	r2,-28(fp)
   95560:	18800015 	stw	r2,0(r3)
   95564:	d0e72417 	ldw	r3,-25456(gp)
   95568:	e0bff917 	ldw	r2,-28(fp)
   9556c:	10c00515 	stw	r3,20(r2)
   95570:	e0bff917 	ldw	r2,-28(fp)
   95574:	10000615 	stw	zero,24(r2)
   95578:	d0a72417 	ldw	r2,-25456(gp)
   9557c:	1005003a 	cmpeq	r2,r2,zero
   95580:	1000031e 	bne	r2,zero,95590 <OS_TCBInit+0x230>
   95584:	d0e72417 	ldw	r3,-25456(gp)
   95588:	e0bff917 	ldw	r2,-28(fp)
   9558c:	18800615 	stw	r2,24(r3)
   95590:	e0bff917 	ldw	r2,-28(fp)
   95594:	d0a72415 	stw	r2,-25456(gp)
   95598:	e0bff917 	ldw	r2,-28(fp)
   9559c:	10c00d83 	ldbu	r3,54(r2)
   955a0:	d0a72d03 	ldbu	r2,-25420(gp)
   955a4:	1884b03a 	or	r2,r3,r2
   955a8:	d0a72d05 	stb	r2,-25420(gp)
   955ac:	e0bff917 	ldw	r2,-28(fp)
   955b0:	10800d03 	ldbu	r2,52(r2)
   955b4:	11003fcc 	andi	r4,r2,255
   955b8:	e0bff917 	ldw	r2,-28(fp)
   955bc:	10800d03 	ldbu	r2,52(r2)
   955c0:	10c03fcc 	andi	r3,r2,255
   955c4:	d0a72d44 	addi	r2,gp,-25419
   955c8:	1885883a 	add	r2,r3,r2
   955cc:	10c00003 	ldbu	r3,0(r2)
   955d0:	e0bff917 	ldw	r2,-28(fp)
   955d4:	10800d43 	ldbu	r2,53(r2)
   955d8:	1884b03a 	or	r2,r3,r2
   955dc:	1007883a 	mov	r3,r2
   955e0:	d0a72d44 	addi	r2,gp,-25419
   955e4:	2085883a 	add	r2,r4,r2
   955e8:	10c00005 	stb	r3,0(r2)
   955ec:	d0a72943 	ldbu	r2,-25435(gp)
   955f0:	10800044 	addi	r2,r2,1
   955f4:	d0a72945 	stb	r2,-25435(gp)
   955f8:	e0bff817 	ldw	r2,-32(fp)
   955fc:	e0bff415 	stw	r2,-48(fp)
   95600:	e0bff417 	ldw	r2,-48(fp)
   95604:	1001703a 	wrctl	status,r2
   95608:	e03fff15 	stw	zero,-4(fp)
   9560c:	00000606 	br	95628 <OS_TCBInit+0x2c8>
   95610:	e0bff817 	ldw	r2,-32(fp)
   95614:	e0bff315 	stw	r2,-52(fp)
   95618:	e0bff317 	ldw	r2,-52(fp)
   9561c:	1001703a 	wrctl	status,r2
   95620:	00801084 	movi	r2,66
   95624:	e0bfff15 	stw	r2,-4(fp)
   95628:	e0bfff17 	ldw	r2,-4(fp)
   9562c:	e037883a 	mov	sp,fp
   95630:	dfc00117 	ldw	ra,4(sp)
   95634:	df000017 	ldw	fp,0(sp)
   95638:	dec00204 	addi	sp,sp,8
   9563c:	f800283a 	ret

00095640 <OSDebugInit>:
   95640:	defffe04 	addi	sp,sp,-8
   95644:	df000115 	stw	fp,4(sp)
   95648:	df000104 	addi	fp,sp,4
   9564c:	d0a01104 	addi	r2,gp,-32700
   95650:	e0bfff15 	stw	r2,-4(fp)
   95654:	d0a01204 	addi	r2,gp,-32696
   95658:	e0bfff15 	stw	r2,-4(fp)
   9565c:	d0a01384 	addi	r2,gp,-32690
   95660:	e0bfff15 	stw	r2,-4(fp)
   95664:	d0a01404 	addi	r2,gp,-32688
   95668:	e0bfff15 	stw	r2,-4(fp)
   9566c:	d0a01304 	addi	r2,gp,-32692
   95670:	e0bfff15 	stw	r2,-4(fp)
   95674:	d0a01484 	addi	r2,gp,-32686
   95678:	e0bfff15 	stw	r2,-4(fp)
   9567c:	d0a01504 	addi	r2,gp,-32684
   95680:	e0bfff15 	stw	r2,-4(fp)
   95684:	d0a01584 	addi	r2,gp,-32682
   95688:	e0bfff15 	stw	r2,-4(fp)
   9568c:	d0a01604 	addi	r2,gp,-32680
   95690:	e0bfff15 	stw	r2,-4(fp)
   95694:	d0a01684 	addi	r2,gp,-32678
   95698:	e0bfff15 	stw	r2,-4(fp)
   9569c:	d0a01704 	addi	r2,gp,-32676
   956a0:	e0bfff15 	stw	r2,-4(fp)
   956a4:	d0a01784 	addi	r2,gp,-32674
   956a8:	e0bfff15 	stw	r2,-4(fp)
   956ac:	d0a01804 	addi	r2,gp,-32672
   956b0:	e0bfff15 	stw	r2,-4(fp)
   956b4:	d0a01884 	addi	r2,gp,-32670
   956b8:	e0bfff15 	stw	r2,-4(fp)
   956bc:	d0a01904 	addi	r2,gp,-32668
   956c0:	e0bfff15 	stw	r2,-4(fp)
   956c4:	d0a01984 	addi	r2,gp,-32666
   956c8:	e0bfff15 	stw	r2,-4(fp)
   956cc:	d0a01a04 	addi	r2,gp,-32664
   956d0:	e0bfff15 	stw	r2,-4(fp)
   956d4:	d0a01a84 	addi	r2,gp,-32662
   956d8:	e0bfff15 	stw	r2,-4(fp)
   956dc:	d0a01b04 	addi	r2,gp,-32660
   956e0:	e0bfff15 	stw	r2,-4(fp)
   956e4:	d0a01b84 	addi	r2,gp,-32658
   956e8:	e0bfff15 	stw	r2,-4(fp)
   956ec:	d0a01c04 	addi	r2,gp,-32656
   956f0:	e0bfff15 	stw	r2,-4(fp)
   956f4:	d0a01c84 	addi	r2,gp,-32654
   956f8:	e0bfff15 	stw	r2,-4(fp)
   956fc:	d0a01d04 	addi	r2,gp,-32652
   95700:	e0bfff15 	stw	r2,-4(fp)
   95704:	d0a01d84 	addi	r2,gp,-32650
   95708:	e0bfff15 	stw	r2,-4(fp)
   9570c:	d0a01e04 	addi	r2,gp,-32648
   95710:	e0bfff15 	stw	r2,-4(fp)
   95714:	d0a01e84 	addi	r2,gp,-32646
   95718:	e0bfff15 	stw	r2,-4(fp)
   9571c:	d0a01f04 	addi	r2,gp,-32644
   95720:	e0bfff15 	stw	r2,-4(fp)
   95724:	d0a01f84 	addi	r2,gp,-32642
   95728:	e0bfff15 	stw	r2,-4(fp)
   9572c:	d0a02004 	addi	r2,gp,-32640
   95730:	e0bfff15 	stw	r2,-4(fp)
   95734:	d0a02084 	addi	r2,gp,-32638
   95738:	e0bfff15 	stw	r2,-4(fp)
   9573c:	d0a02104 	addi	r2,gp,-32636
   95740:	e0bfff15 	stw	r2,-4(fp)
   95744:	d0a02184 	addi	r2,gp,-32634
   95748:	e0bfff15 	stw	r2,-4(fp)
   9574c:	d0a02204 	addi	r2,gp,-32632
   95750:	e0bfff15 	stw	r2,-4(fp)
   95754:	d0a02284 	addi	r2,gp,-32630
   95758:	e0bfff15 	stw	r2,-4(fp)
   9575c:	d0a02304 	addi	r2,gp,-32628
   95760:	e0bfff15 	stw	r2,-4(fp)
   95764:	d0a02384 	addi	r2,gp,-32626
   95768:	e0bfff15 	stw	r2,-4(fp)
   9576c:	d0a02404 	addi	r2,gp,-32624
   95770:	e0bfff15 	stw	r2,-4(fp)
   95774:	d0a02484 	addi	r2,gp,-32622
   95778:	e0bfff15 	stw	r2,-4(fp)
   9577c:	d0a02504 	addi	r2,gp,-32620
   95780:	e0bfff15 	stw	r2,-4(fp)
   95784:	d0a02584 	addi	r2,gp,-32618
   95788:	e0bfff15 	stw	r2,-4(fp)
   9578c:	d0a02604 	addi	r2,gp,-32616
   95790:	e0bfff15 	stw	r2,-4(fp)
   95794:	d0a02684 	addi	r2,gp,-32614
   95798:	e0bfff15 	stw	r2,-4(fp)
   9579c:	d0a02704 	addi	r2,gp,-32612
   957a0:	e0bfff15 	stw	r2,-4(fp)
   957a4:	d0a02784 	addi	r2,gp,-32610
   957a8:	e0bfff15 	stw	r2,-4(fp)
   957ac:	d0a02804 	addi	r2,gp,-32608
   957b0:	e0bfff15 	stw	r2,-4(fp)
   957b4:	d0a02d04 	addi	r2,gp,-32588
   957b8:	e0bfff15 	stw	r2,-4(fp)
   957bc:	e037883a 	mov	sp,fp
   957c0:	df000017 	ldw	fp,0(sp)
   957c4:	dec00104 	addi	sp,sp,4
   957c8:	f800283a 	ret

000957cc <OSFlagAccept>:
   957cc:	defff104 	addi	sp,sp,-60
   957d0:	df000e15 	stw	fp,56(sp)
   957d4:	df000e04 	addi	fp,sp,56
   957d8:	e13ffa15 	stw	r4,-24(fp)
   957dc:	e1fffd15 	stw	r7,-12(fp)
   957e0:	e17ffb0d 	sth	r5,-20(fp)
   957e4:	e1bffc05 	stb	r6,-16(fp)
   957e8:	e03ff815 	stw	zero,-32(fp)
   957ec:	e0bffd17 	ldw	r2,-12(fp)
   957f0:	1004c03a 	cmpne	r2,r2,zero
   957f4:	1000021e 	bne	r2,zero,95800 <OSFlagAccept+0x34>
   957f8:	e03fff15 	stw	zero,-4(fp)
   957fc:	0000bb06 	br	95aec <OSFlagAccept+0x320>
   95800:	e0bffa17 	ldw	r2,-24(fp)
   95804:	1004c03a 	cmpne	r2,r2,zero
   95808:	1000051e 	bne	r2,zero,95820 <OSFlagAccept+0x54>
   9580c:	e0fffd17 	ldw	r3,-12(fp)
   95810:	00801b84 	movi	r2,110
   95814:	18800005 	stb	r2,0(r3)
   95818:	e03fff15 	stw	zero,-4(fp)
   9581c:	0000b306 	br	95aec <OSFlagAccept+0x320>
   95820:	e0bffa17 	ldw	r2,-24(fp)
   95824:	10800003 	ldbu	r2,0(r2)
   95828:	10803fcc 	andi	r2,r2,255
   9582c:	10800160 	cmpeqi	r2,r2,5
   95830:	1000051e 	bne	r2,zero,95848 <OSFlagAccept+0x7c>
   95834:	e0fffd17 	ldw	r3,-12(fp)
   95838:	00800044 	movi	r2,1
   9583c:	18800005 	stb	r2,0(r3)
   95840:	e03fff15 	stw	zero,-4(fp)
   95844:	0000a906 	br	95aec <OSFlagAccept+0x320>
   95848:	e0fffc03 	ldbu	r3,-16(fp)
   9584c:	00bfe004 	movi	r2,-128
   95850:	1884703a 	and	r2,r3,r2
   95854:	e0bff945 	stb	r2,-27(fp)
   95858:	e0bff943 	ldbu	r2,-27(fp)
   9585c:	1005003a 	cmpeq	r2,r2,zero
   95860:	1000061e 	bne	r2,zero,9587c <OSFlagAccept+0xb0>
   95864:	e0bffc03 	ldbu	r2,-16(fp)
   95868:	10801fcc 	andi	r2,r2,127
   9586c:	e0bffc05 	stb	r2,-16(fp)
   95870:	00800044 	movi	r2,1
   95874:	e0bff905 	stb	r2,-28(fp)
   95878:	00000106 	br	95880 <OSFlagAccept+0xb4>
   9587c:	e03ff905 	stb	zero,-28(fp)
   95880:	e0bffd17 	ldw	r2,-12(fp)
   95884:	10000005 	stb	zero,0(r2)
   95888:	0005303a 	rdctl	r2,status
   9588c:	e0bff715 	stw	r2,-36(fp)
   95890:	e0fff717 	ldw	r3,-36(fp)
   95894:	00bfff84 	movi	r2,-2
   95898:	1884703a 	and	r2,r3,r2
   9589c:	1001703a 	wrctl	status,r2
   958a0:	e0bff717 	ldw	r2,-36(fp)
   958a4:	e0bff815 	stw	r2,-32(fp)
   958a8:	e0bffc03 	ldbu	r2,-16(fp)
   958ac:	e0bffe15 	stw	r2,-8(fp)
   958b0:	e0fffe17 	ldw	r3,-8(fp)
   958b4:	18800060 	cmpeqi	r2,r3,1
   958b8:	1000651e 	bne	r2,zero,95a50 <OSFlagAccept+0x284>
   958bc:	e0fffe17 	ldw	r3,-8(fp)
   958c0:	18800088 	cmpgei	r2,r3,2
   958c4:	1000041e 	bne	r2,zero,958d8 <OSFlagAccept+0x10c>
   958c8:	e0fffe17 	ldw	r3,-8(fp)
   958cc:	1805003a 	cmpeq	r2,r3,zero
   958d0:	1000421e 	bne	r2,zero,959dc <OSFlagAccept+0x210>
   958d4:	00007b06 	br	95ac4 <OSFlagAccept+0x2f8>
   958d8:	e0fffe17 	ldw	r3,-8(fp)
   958dc:	188000a0 	cmpeqi	r2,r3,2
   958e0:	1000041e 	bne	r2,zero,958f4 <OSFlagAccept+0x128>
   958e4:	e0fffe17 	ldw	r3,-8(fp)
   958e8:	188000e0 	cmpeqi	r2,r3,3
   958ec:	10001e1e 	bne	r2,zero,95968 <OSFlagAccept+0x19c>
   958f0:	00007406 	br	95ac4 <OSFlagAccept+0x2f8>
   958f4:	e0bffa17 	ldw	r2,-24(fp)
   958f8:	10c0020b 	ldhu	r3,8(r2)
   958fc:	e0bffb0b 	ldhu	r2,-20(fp)
   95900:	1884703a 	and	r2,r3,r2
   95904:	e0bff98d 	sth	r2,-26(fp)
   95908:	e0fff98b 	ldhu	r3,-26(fp)
   9590c:	e0bffb0b 	ldhu	r2,-20(fp)
   95910:	18800d1e 	bne	r3,r2,95948 <OSFlagAccept+0x17c>
   95914:	e0bff903 	ldbu	r2,-28(fp)
   95918:	10800058 	cmpnei	r2,r2,1
   9591c:	10000d1e 	bne	r2,zero,95954 <OSFlagAccept+0x188>
   95920:	e0bffa17 	ldw	r2,-24(fp)
   95924:	1080020b 	ldhu	r2,8(r2)
   95928:	1007883a 	mov	r3,r2
   9592c:	e0bff98b 	ldhu	r2,-26(fp)
   95930:	0084303a 	nor	r2,zero,r2
   95934:	1884703a 	and	r2,r3,r2
   95938:	1007883a 	mov	r3,r2
   9593c:	e0bffa17 	ldw	r2,-24(fp)
   95940:	10c0020d 	sth	r3,8(r2)
   95944:	00000306 	br	95954 <OSFlagAccept+0x188>
   95948:	e0fffd17 	ldw	r3,-12(fp)
   9594c:	00801c04 	movi	r2,112
   95950:	18800005 	stb	r2,0(r3)
   95954:	e0bff817 	ldw	r2,-32(fp)
   95958:	e0bff615 	stw	r2,-40(fp)
   9595c:	e0bff617 	ldw	r2,-40(fp)
   95960:	1001703a 	wrctl	status,r2
   95964:	00005f06 	br	95ae4 <OSFlagAccept+0x318>
   95968:	e0bffa17 	ldw	r2,-24(fp)
   9596c:	10c0020b 	ldhu	r3,8(r2)
   95970:	e0bffb0b 	ldhu	r2,-20(fp)
   95974:	1884703a 	and	r2,r3,r2
   95978:	e0bff98d 	sth	r2,-26(fp)
   9597c:	e0bff98b 	ldhu	r2,-26(fp)
   95980:	1005003a 	cmpeq	r2,r2,zero
   95984:	10000d1e 	bne	r2,zero,959bc <OSFlagAccept+0x1f0>
   95988:	e0bff903 	ldbu	r2,-28(fp)
   9598c:	10800058 	cmpnei	r2,r2,1
   95990:	10000d1e 	bne	r2,zero,959c8 <OSFlagAccept+0x1fc>
   95994:	e0bffa17 	ldw	r2,-24(fp)
   95998:	1080020b 	ldhu	r2,8(r2)
   9599c:	1007883a 	mov	r3,r2
   959a0:	e0bff98b 	ldhu	r2,-26(fp)
   959a4:	0084303a 	nor	r2,zero,r2
   959a8:	1884703a 	and	r2,r3,r2
   959ac:	1007883a 	mov	r3,r2
   959b0:	e0bffa17 	ldw	r2,-24(fp)
   959b4:	10c0020d 	sth	r3,8(r2)
   959b8:	00000306 	br	959c8 <OSFlagAccept+0x1fc>
   959bc:	e0fffd17 	ldw	r3,-12(fp)
   959c0:	00801c04 	movi	r2,112
   959c4:	18800005 	stb	r2,0(r3)
   959c8:	e0bff817 	ldw	r2,-32(fp)
   959cc:	e0bff515 	stw	r2,-44(fp)
   959d0:	e0bff517 	ldw	r2,-44(fp)
   959d4:	1001703a 	wrctl	status,r2
   959d8:	00004206 	br	95ae4 <OSFlagAccept+0x318>
   959dc:	e0bffa17 	ldw	r2,-24(fp)
   959e0:	1080020b 	ldhu	r2,8(r2)
   959e4:	0084303a 	nor	r2,zero,r2
   959e8:	1007883a 	mov	r3,r2
   959ec:	e0bffb0b 	ldhu	r2,-20(fp)
   959f0:	1884703a 	and	r2,r3,r2
   959f4:	e0bff98d 	sth	r2,-26(fp)
   959f8:	e0fff98b 	ldhu	r3,-26(fp)
   959fc:	e0bffb0b 	ldhu	r2,-20(fp)
   95a00:	18800b1e 	bne	r3,r2,95a30 <OSFlagAccept+0x264>
   95a04:	e0bff903 	ldbu	r2,-28(fp)
   95a08:	10800058 	cmpnei	r2,r2,1
   95a0c:	10000b1e 	bne	r2,zero,95a3c <OSFlagAccept+0x270>
   95a10:	e0bffa17 	ldw	r2,-24(fp)
   95a14:	10c0020b 	ldhu	r3,8(r2)
   95a18:	e0bff98b 	ldhu	r2,-26(fp)
   95a1c:	1884b03a 	or	r2,r3,r2
   95a20:	1007883a 	mov	r3,r2
   95a24:	e0bffa17 	ldw	r2,-24(fp)
   95a28:	10c0020d 	sth	r3,8(r2)
   95a2c:	00000306 	br	95a3c <OSFlagAccept+0x270>
   95a30:	e0fffd17 	ldw	r3,-12(fp)
   95a34:	00801c04 	movi	r2,112
   95a38:	18800005 	stb	r2,0(r3)
   95a3c:	e0bff817 	ldw	r2,-32(fp)
   95a40:	e0bff415 	stw	r2,-48(fp)
   95a44:	e0bff417 	ldw	r2,-48(fp)
   95a48:	1001703a 	wrctl	status,r2
   95a4c:	00002506 	br	95ae4 <OSFlagAccept+0x318>
   95a50:	e0bffa17 	ldw	r2,-24(fp)
   95a54:	1080020b 	ldhu	r2,8(r2)
   95a58:	0084303a 	nor	r2,zero,r2
   95a5c:	1007883a 	mov	r3,r2
   95a60:	e0bffb0b 	ldhu	r2,-20(fp)
   95a64:	1884703a 	and	r2,r3,r2
   95a68:	e0bff98d 	sth	r2,-26(fp)
   95a6c:	e0bff98b 	ldhu	r2,-26(fp)
   95a70:	1005003a 	cmpeq	r2,r2,zero
   95a74:	10000b1e 	bne	r2,zero,95aa4 <OSFlagAccept+0x2d8>
   95a78:	e0bff903 	ldbu	r2,-28(fp)
   95a7c:	10800058 	cmpnei	r2,r2,1
   95a80:	10000b1e 	bne	r2,zero,95ab0 <OSFlagAccept+0x2e4>
   95a84:	e0bffa17 	ldw	r2,-24(fp)
   95a88:	10c0020b 	ldhu	r3,8(r2)
   95a8c:	e0bff98b 	ldhu	r2,-26(fp)
   95a90:	1884b03a 	or	r2,r3,r2
   95a94:	1007883a 	mov	r3,r2
   95a98:	e0bffa17 	ldw	r2,-24(fp)
   95a9c:	10c0020d 	sth	r3,8(r2)
   95aa0:	00000306 	br	95ab0 <OSFlagAccept+0x2e4>
   95aa4:	e0fffd17 	ldw	r3,-12(fp)
   95aa8:	00801c04 	movi	r2,112
   95aac:	18800005 	stb	r2,0(r3)
   95ab0:	e0bff817 	ldw	r2,-32(fp)
   95ab4:	e0bff315 	stw	r2,-52(fp)
   95ab8:	e0bff317 	ldw	r2,-52(fp)
   95abc:	1001703a 	wrctl	status,r2
   95ac0:	00000806 	br	95ae4 <OSFlagAccept+0x318>
   95ac4:	e0bff817 	ldw	r2,-32(fp)
   95ac8:	e0bff215 	stw	r2,-56(fp)
   95acc:	e0bff217 	ldw	r2,-56(fp)
   95ad0:	1001703a 	wrctl	status,r2
   95ad4:	e03ff98d 	sth	zero,-26(fp)
   95ad8:	e0fffd17 	ldw	r3,-12(fp)
   95adc:	00801bc4 	movi	r2,111
   95ae0:	18800005 	stb	r2,0(r3)
   95ae4:	e0bff98b 	ldhu	r2,-26(fp)
   95ae8:	e0bfff15 	stw	r2,-4(fp)
   95aec:	e0bfff17 	ldw	r2,-4(fp)
   95af0:	e037883a 	mov	sp,fp
   95af4:	df000017 	ldw	fp,0(sp)
   95af8:	dec00104 	addi	sp,sp,4
   95afc:	f800283a 	ret

00095b00 <OSFlagCreate>:
   95b00:	defff704 	addi	sp,sp,-36
   95b04:	df000815 	stw	fp,32(sp)
   95b08:	df000804 	addi	fp,sp,32
   95b0c:	e17ffe15 	stw	r5,-8(fp)
   95b10:	e13ffd0d 	sth	r4,-12(fp)
   95b14:	e03ffb15 	stw	zero,-20(fp)
   95b18:	e0bffe17 	ldw	r2,-8(fp)
   95b1c:	1004c03a 	cmpne	r2,r2,zero
   95b20:	1000021e 	bne	r2,zero,95b2c <OSFlagCreate+0x2c>
   95b24:	e03fff15 	stw	zero,-4(fp)
   95b28:	00003f06 	br	95c28 <OSFlagCreate+0x128>
   95b2c:	008002b4 	movhi	r2,10
   95b30:	10910504 	addi	r2,r2,17428
   95b34:	10800003 	ldbu	r2,0(r2)
   95b38:	10803fcc 	andi	r2,r2,255
   95b3c:	1005003a 	cmpeq	r2,r2,zero
   95b40:	1000051e 	bne	r2,zero,95b58 <OSFlagCreate+0x58>
   95b44:	e0fffe17 	ldw	r3,-8(fp)
   95b48:	00800404 	movi	r2,16
   95b4c:	18800005 	stb	r2,0(r3)
   95b50:	e03fff15 	stw	zero,-4(fp)
   95b54:	00003406 	br	95c28 <OSFlagCreate+0x128>
   95b58:	0005303a 	rdctl	r2,status
   95b5c:	e0bffa15 	stw	r2,-24(fp)
   95b60:	e0fffa17 	ldw	r3,-24(fp)
   95b64:	00bfff84 	movi	r2,-2
   95b68:	1884703a 	and	r2,r3,r2
   95b6c:	1001703a 	wrctl	status,r2
   95b70:	e0bffa17 	ldw	r2,-24(fp)
   95b74:	e0bffb15 	stw	r2,-20(fp)
   95b78:	008002b4 	movhi	r2,10
   95b7c:	10910804 	addi	r2,r2,17440
   95b80:	10800017 	ldw	r2,0(r2)
   95b84:	e0bffc15 	stw	r2,-16(fp)
   95b88:	e0bffc17 	ldw	r2,-16(fp)
   95b8c:	1005003a 	cmpeq	r2,r2,zero
   95b90:	10001c1e 	bne	r2,zero,95c04 <OSFlagCreate+0x104>
   95b94:	008002b4 	movhi	r2,10
   95b98:	10910804 	addi	r2,r2,17440
   95b9c:	10800017 	ldw	r2,0(r2)
   95ba0:	10800117 	ldw	r2,4(r2)
   95ba4:	1007883a 	mov	r3,r2
   95ba8:	008002b4 	movhi	r2,10
   95bac:	10910804 	addi	r2,r2,17440
   95bb0:	10c00015 	stw	r3,0(r2)
   95bb4:	e0fffc17 	ldw	r3,-16(fp)
   95bb8:	00800144 	movi	r2,5
   95bbc:	18800005 	stb	r2,0(r3)
   95bc0:	e0fffc17 	ldw	r3,-16(fp)
   95bc4:	e0bffd0b 	ldhu	r2,-12(fp)
   95bc8:	1880020d 	sth	r2,8(r3)
   95bcc:	e0bffc17 	ldw	r2,-16(fp)
   95bd0:	10000115 	stw	zero,4(r2)
   95bd4:	e0fffc17 	ldw	r3,-16(fp)
   95bd8:	00800fc4 	movi	r2,63
   95bdc:	18800285 	stb	r2,10(r3)
   95be0:	e0bffc17 	ldw	r2,-16(fp)
   95be4:	100002c5 	stb	zero,11(r2)
   95be8:	e0bffb17 	ldw	r2,-20(fp)
   95bec:	e0bff915 	stw	r2,-28(fp)
   95bf0:	e0bff917 	ldw	r2,-28(fp)
   95bf4:	1001703a 	wrctl	status,r2
   95bf8:	e0bffe17 	ldw	r2,-8(fp)
   95bfc:	10000005 	stb	zero,0(r2)
   95c00:	00000706 	br	95c20 <OSFlagCreate+0x120>
   95c04:	e0bffb17 	ldw	r2,-20(fp)
   95c08:	e0bff815 	stw	r2,-32(fp)
   95c0c:	e0bff817 	ldw	r2,-32(fp)
   95c10:	1001703a 	wrctl	status,r2
   95c14:	e0fffe17 	ldw	r3,-8(fp)
   95c18:	00801c84 	movi	r2,114
   95c1c:	18800005 	stb	r2,0(r3)
   95c20:	e0bffc17 	ldw	r2,-16(fp)
   95c24:	e0bfff15 	stw	r2,-4(fp)
   95c28:	e0bfff17 	ldw	r2,-4(fp)
   95c2c:	e037883a 	mov	sp,fp
   95c30:	df000017 	ldw	fp,0(sp)
   95c34:	dec00104 	addi	sp,sp,4
   95c38:	f800283a 	ret

00095c3c <OSFlagDel>:
   95c3c:	defff004 	addi	sp,sp,-64
   95c40:	dfc00f15 	stw	ra,60(sp)
   95c44:	df000e15 	stw	fp,56(sp)
   95c48:	df000e04 	addi	fp,sp,56
   95c4c:	e13ffb15 	stw	r4,-20(fp)
   95c50:	e1bffd15 	stw	r6,-12(fp)
   95c54:	e17ffc05 	stb	r5,-16(fp)
   95c58:	e03ff715 	stw	zero,-36(fp)
   95c5c:	e0bffd17 	ldw	r2,-12(fp)
   95c60:	1004c03a 	cmpne	r2,r2,zero
   95c64:	1000031e 	bne	r2,zero,95c74 <OSFlagDel+0x38>
   95c68:	e0bffb17 	ldw	r2,-20(fp)
   95c6c:	e0bfff15 	stw	r2,-4(fp)
   95c70:	00009606 	br	95ecc <OSFlagDel+0x290>
   95c74:	e0bffb17 	ldw	r2,-20(fp)
   95c78:	1004c03a 	cmpne	r2,r2,zero
   95c7c:	1000061e 	bne	r2,zero,95c98 <OSFlagDel+0x5c>
   95c80:	e0fffd17 	ldw	r3,-12(fp)
   95c84:	00801b84 	movi	r2,110
   95c88:	18800005 	stb	r2,0(r3)
   95c8c:	e0fffb17 	ldw	r3,-20(fp)
   95c90:	e0ffff15 	stw	r3,-4(fp)
   95c94:	00008d06 	br	95ecc <OSFlagDel+0x290>
   95c98:	008002b4 	movhi	r2,10
   95c9c:	10910504 	addi	r2,r2,17428
   95ca0:	10800003 	ldbu	r2,0(r2)
   95ca4:	10803fcc 	andi	r2,r2,255
   95ca8:	1005003a 	cmpeq	r2,r2,zero
   95cac:	1000061e 	bne	r2,zero,95cc8 <OSFlagDel+0x8c>
   95cb0:	e0fffd17 	ldw	r3,-12(fp)
   95cb4:	008003c4 	movi	r2,15
   95cb8:	18800005 	stb	r2,0(r3)
   95cbc:	e0bffb17 	ldw	r2,-20(fp)
   95cc0:	e0bfff15 	stw	r2,-4(fp)
   95cc4:	00008106 	br	95ecc <OSFlagDel+0x290>
   95cc8:	e0bffb17 	ldw	r2,-20(fp)
   95ccc:	10800003 	ldbu	r2,0(r2)
   95cd0:	10803fcc 	andi	r2,r2,255
   95cd4:	10800160 	cmpeqi	r2,r2,5
   95cd8:	1000061e 	bne	r2,zero,95cf4 <OSFlagDel+0xb8>
   95cdc:	e0fffd17 	ldw	r3,-12(fp)
   95ce0:	00800044 	movi	r2,1
   95ce4:	18800005 	stb	r2,0(r3)
   95ce8:	e0fffb17 	ldw	r3,-20(fp)
   95cec:	e0ffff15 	stw	r3,-4(fp)
   95cf0:	00007606 	br	95ecc <OSFlagDel+0x290>
   95cf4:	0005303a 	rdctl	r2,status
   95cf8:	e0bff615 	stw	r2,-40(fp)
   95cfc:	e0fff617 	ldw	r3,-40(fp)
   95d00:	00bfff84 	movi	r2,-2
   95d04:	1884703a 	and	r2,r3,r2
   95d08:	1001703a 	wrctl	status,r2
   95d0c:	e0bff617 	ldw	r2,-40(fp)
   95d10:	e0bff715 	stw	r2,-36(fp)
   95d14:	e0bffb17 	ldw	r2,-20(fp)
   95d18:	10800117 	ldw	r2,4(r2)
   95d1c:	1005003a 	cmpeq	r2,r2,zero
   95d20:	1000031e 	bne	r2,zero,95d30 <OSFlagDel+0xf4>
   95d24:	00800044 	movi	r2,1
   95d28:	e0bffa05 	stb	r2,-24(fp)
   95d2c:	00000106 	br	95d34 <OSFlagDel+0xf8>
   95d30:	e03ffa05 	stb	zero,-24(fp)
   95d34:	e0bffc03 	ldbu	r2,-16(fp)
   95d38:	e0bffe15 	stw	r2,-8(fp)
   95d3c:	e0fffe17 	ldw	r3,-8(fp)
   95d40:	1805003a 	cmpeq	r2,r3,zero
   95d44:	1000041e 	bne	r2,zero,95d58 <OSFlagDel+0x11c>
   95d48:	e0fffe17 	ldw	r3,-8(fp)
   95d4c:	18800060 	cmpeqi	r2,r3,1
   95d50:	1000281e 	bne	r2,zero,95df4 <OSFlagDel+0x1b8>
   95d54:	00005206 	br	95ea0 <OSFlagDel+0x264>
   95d58:	e0bffa03 	ldbu	r2,-24(fp)
   95d5c:	1004c03a 	cmpne	r2,r2,zero
   95d60:	10001a1e 	bne	r2,zero,95dcc <OSFlagDel+0x190>
   95d64:	e0fffb17 	ldw	r3,-20(fp)
   95d68:	00800fc4 	movi	r2,63
   95d6c:	18800285 	stb	r2,10(r3)
   95d70:	e0bffb17 	ldw	r2,-20(fp)
   95d74:	100002c5 	stb	zero,11(r2)
   95d78:	e0bffb17 	ldw	r2,-20(fp)
   95d7c:	10000005 	stb	zero,0(r2)
   95d80:	008002b4 	movhi	r2,10
   95d84:	10910804 	addi	r2,r2,17440
   95d88:	10c00017 	ldw	r3,0(r2)
   95d8c:	e0bffb17 	ldw	r2,-20(fp)
   95d90:	10c00115 	stw	r3,4(r2)
   95d94:	e0bffb17 	ldw	r2,-20(fp)
   95d98:	1000020d 	sth	zero,8(r2)
   95d9c:	00c002b4 	movhi	r3,10
   95da0:	18d10804 	addi	r3,r3,17440
   95da4:	e0bffb17 	ldw	r2,-20(fp)
   95da8:	18800015 	stw	r2,0(r3)
   95dac:	e0bff717 	ldw	r2,-36(fp)
   95db0:	e0bff515 	stw	r2,-44(fp)
   95db4:	e0bff517 	ldw	r2,-44(fp)
   95db8:	1001703a 	wrctl	status,r2
   95dbc:	e0bffd17 	ldw	r2,-12(fp)
   95dc0:	10000005 	stb	zero,0(r2)
   95dc4:	e03ff815 	stw	zero,-32(fp)
   95dc8:	00003e06 	br	95ec4 <OSFlagDel+0x288>
   95dcc:	e0bff717 	ldw	r2,-36(fp)
   95dd0:	e0bff415 	stw	r2,-48(fp)
   95dd4:	e0bff417 	ldw	r2,-48(fp)
   95dd8:	1001703a 	wrctl	status,r2
   95ddc:	e0fffd17 	ldw	r3,-12(fp)
   95de0:	00801244 	movi	r2,73
   95de4:	18800005 	stb	r2,0(r3)
   95de8:	e0bffb17 	ldw	r2,-20(fp)
   95dec:	e0bff815 	stw	r2,-32(fp)
   95df0:	00003406 	br	95ec4 <OSFlagDel+0x288>
   95df4:	e0bffb17 	ldw	r2,-20(fp)
   95df8:	10800117 	ldw	r2,4(r2)
   95dfc:	e0bff915 	stw	r2,-28(fp)
   95e00:	00000606 	br	95e1c <OSFlagDel+0x1e0>
   95e04:	e13ff917 	ldw	r4,-28(fp)
   95e08:	000b883a 	mov	r5,zero
   95e0c:	0096f4c0 	call	96f4c <OS_FlagTaskRdy>
   95e10:	e0bff917 	ldw	r2,-28(fp)
   95e14:	10800017 	ldw	r2,0(r2)
   95e18:	e0bff915 	stw	r2,-28(fp)
   95e1c:	e0bff917 	ldw	r2,-28(fp)
   95e20:	1004c03a 	cmpne	r2,r2,zero
   95e24:	103ff71e 	bne	r2,zero,95e04 <OSFlagDel+0x1c8>
   95e28:	e0fffb17 	ldw	r3,-20(fp)
   95e2c:	00800fc4 	movi	r2,63
   95e30:	18800285 	stb	r2,10(r3)
   95e34:	e0bffb17 	ldw	r2,-20(fp)
   95e38:	100002c5 	stb	zero,11(r2)
   95e3c:	e0bffb17 	ldw	r2,-20(fp)
   95e40:	10000005 	stb	zero,0(r2)
   95e44:	008002b4 	movhi	r2,10
   95e48:	10910804 	addi	r2,r2,17440
   95e4c:	10c00017 	ldw	r3,0(r2)
   95e50:	e0bffb17 	ldw	r2,-20(fp)
   95e54:	10c00115 	stw	r3,4(r2)
   95e58:	e0bffb17 	ldw	r2,-20(fp)
   95e5c:	1000020d 	sth	zero,8(r2)
   95e60:	00c002b4 	movhi	r3,10
   95e64:	18d10804 	addi	r3,r3,17440
   95e68:	e0bffb17 	ldw	r2,-20(fp)
   95e6c:	18800015 	stw	r2,0(r3)
   95e70:	e0bff717 	ldw	r2,-36(fp)
   95e74:	e0bff315 	stw	r2,-52(fp)
   95e78:	e0bff317 	ldw	r2,-52(fp)
   95e7c:	1001703a 	wrctl	status,r2
   95e80:	e0bffa03 	ldbu	r2,-24(fp)
   95e84:	10800058 	cmpnei	r2,r2,1
   95e88:	1000011e 	bne	r2,zero,95e90 <OSFlagDel+0x254>
   95e8c:	0094f580 	call	94f58 <OS_Sched>
   95e90:	e0bffd17 	ldw	r2,-12(fp)
   95e94:	10000005 	stb	zero,0(r2)
   95e98:	e03ff815 	stw	zero,-32(fp)
   95e9c:	00000906 	br	95ec4 <OSFlagDel+0x288>
   95ea0:	e0bff717 	ldw	r2,-36(fp)
   95ea4:	e0bff215 	stw	r2,-56(fp)
   95ea8:	e0bff217 	ldw	r2,-56(fp)
   95eac:	1001703a 	wrctl	status,r2
   95eb0:	e0fffd17 	ldw	r3,-12(fp)
   95eb4:	008001c4 	movi	r2,7
   95eb8:	18800005 	stb	r2,0(r3)
   95ebc:	e0bffb17 	ldw	r2,-20(fp)
   95ec0:	e0bff815 	stw	r2,-32(fp)
   95ec4:	e0bff817 	ldw	r2,-32(fp)
   95ec8:	e0bfff15 	stw	r2,-4(fp)
   95ecc:	e0bfff17 	ldw	r2,-4(fp)
   95ed0:	e037883a 	mov	sp,fp
   95ed4:	dfc00117 	ldw	ra,4(sp)
   95ed8:	df000017 	ldw	fp,0(sp)
   95edc:	dec00204 	addi	sp,sp,8
   95ee0:	f800283a 	ret

00095ee4 <OSFlagNameGet>:
   95ee4:	defff504 	addi	sp,sp,-44
   95ee8:	dfc00a15 	stw	ra,40(sp)
   95eec:	df000915 	stw	fp,36(sp)
   95ef0:	df000904 	addi	fp,sp,36
   95ef4:	e13ffc15 	stw	r4,-16(fp)
   95ef8:	e17ffd15 	stw	r5,-12(fp)
   95efc:	e1bffe15 	stw	r6,-8(fp)
   95f00:	e03ffa15 	stw	zero,-24(fp)
   95f04:	e0bffe17 	ldw	r2,-8(fp)
   95f08:	1004c03a 	cmpne	r2,r2,zero
   95f0c:	1000021e 	bne	r2,zero,95f18 <OSFlagNameGet+0x34>
   95f10:	e03fff15 	stw	zero,-4(fp)
   95f14:	00003e06 	br	96010 <OSFlagNameGet+0x12c>
   95f18:	e0bffc17 	ldw	r2,-16(fp)
   95f1c:	1004c03a 	cmpne	r2,r2,zero
   95f20:	1000051e 	bne	r2,zero,95f38 <OSFlagNameGet+0x54>
   95f24:	e0fffe17 	ldw	r3,-8(fp)
   95f28:	00801b84 	movi	r2,110
   95f2c:	18800005 	stb	r2,0(r3)
   95f30:	e03fff15 	stw	zero,-4(fp)
   95f34:	00003606 	br	96010 <OSFlagNameGet+0x12c>
   95f38:	e0bffd17 	ldw	r2,-12(fp)
   95f3c:	1004c03a 	cmpne	r2,r2,zero
   95f40:	1000051e 	bne	r2,zero,95f58 <OSFlagNameGet+0x74>
   95f44:	e0fffe17 	ldw	r3,-8(fp)
   95f48:	00800304 	movi	r2,12
   95f4c:	18800005 	stb	r2,0(r3)
   95f50:	e03fff15 	stw	zero,-4(fp)
   95f54:	00002e06 	br	96010 <OSFlagNameGet+0x12c>
   95f58:	008002b4 	movhi	r2,10
   95f5c:	10910504 	addi	r2,r2,17428
   95f60:	10800003 	ldbu	r2,0(r2)
   95f64:	10803fcc 	andi	r2,r2,255
   95f68:	1005003a 	cmpeq	r2,r2,zero
   95f6c:	1000051e 	bne	r2,zero,95f84 <OSFlagNameGet+0xa0>
   95f70:	e0fffe17 	ldw	r3,-8(fp)
   95f74:	00800444 	movi	r2,17
   95f78:	18800005 	stb	r2,0(r3)
   95f7c:	e03fff15 	stw	zero,-4(fp)
   95f80:	00002306 	br	96010 <OSFlagNameGet+0x12c>
   95f84:	0005303a 	rdctl	r2,status
   95f88:	e0bff915 	stw	r2,-28(fp)
   95f8c:	e0fff917 	ldw	r3,-28(fp)
   95f90:	00bfff84 	movi	r2,-2
   95f94:	1884703a 	and	r2,r3,r2
   95f98:	1001703a 	wrctl	status,r2
   95f9c:	e0bff917 	ldw	r2,-28(fp)
   95fa0:	e0bffa15 	stw	r2,-24(fp)
   95fa4:	e0bffc17 	ldw	r2,-16(fp)
   95fa8:	10800003 	ldbu	r2,0(r2)
   95fac:	10803fcc 	andi	r2,r2,255
   95fb0:	10800160 	cmpeqi	r2,r2,5
   95fb4:	1000091e 	bne	r2,zero,95fdc <OSFlagNameGet+0xf8>
   95fb8:	e0bffa17 	ldw	r2,-24(fp)
   95fbc:	e0bff815 	stw	r2,-32(fp)
   95fc0:	e0bff817 	ldw	r2,-32(fp)
   95fc4:	1001703a 	wrctl	status,r2
   95fc8:	e0fffe17 	ldw	r3,-8(fp)
   95fcc:	00800044 	movi	r2,1
   95fd0:	18800005 	stb	r2,0(r3)
   95fd4:	e03fff15 	stw	zero,-4(fp)
   95fd8:	00000d06 	br	96010 <OSFlagNameGet+0x12c>
   95fdc:	e0bffc17 	ldw	r2,-16(fp)
   95fe0:	11400284 	addi	r5,r2,10
   95fe4:	e13ffd17 	ldw	r4,-12(fp)
   95fe8:	009509c0 	call	9509c <OS_StrCopy>
   95fec:	e0bffb05 	stb	r2,-20(fp)
   95ff0:	e0bffa17 	ldw	r2,-24(fp)
   95ff4:	e0bff715 	stw	r2,-36(fp)
   95ff8:	e0bff717 	ldw	r2,-36(fp)
   95ffc:	1001703a 	wrctl	status,r2
   96000:	e0bffe17 	ldw	r2,-8(fp)
   96004:	10000005 	stb	zero,0(r2)
   96008:	e0bffb03 	ldbu	r2,-20(fp)
   9600c:	e0bfff15 	stw	r2,-4(fp)
   96010:	e0bfff17 	ldw	r2,-4(fp)
   96014:	e037883a 	mov	sp,fp
   96018:	dfc00117 	ldw	ra,4(sp)
   9601c:	df000017 	ldw	fp,0(sp)
   96020:	dec00204 	addi	sp,sp,8
   96024:	f800283a 	ret

00096028 <OSFlagNameSet>:
   96028:	defff504 	addi	sp,sp,-44
   9602c:	dfc00a15 	stw	ra,40(sp)
   96030:	df000915 	stw	fp,36(sp)
   96034:	df000904 	addi	fp,sp,36
   96038:	e13ffd15 	stw	r4,-12(fp)
   9603c:	e17ffe15 	stw	r5,-8(fp)
   96040:	e1bfff15 	stw	r6,-4(fp)
   96044:	e03ffb15 	stw	zero,-20(fp)
   96048:	e0bfff17 	ldw	r2,-4(fp)
   9604c:	1005003a 	cmpeq	r2,r2,zero
   96050:	1000451e 	bne	r2,zero,96168 <OSFlagNameSet+0x140>
   96054:	e0bffd17 	ldw	r2,-12(fp)
   96058:	1004c03a 	cmpne	r2,r2,zero
   9605c:	1000041e 	bne	r2,zero,96070 <OSFlagNameSet+0x48>
   96060:	e0ffff17 	ldw	r3,-4(fp)
   96064:	00801b84 	movi	r2,110
   96068:	18800005 	stb	r2,0(r3)
   9606c:	00003e06 	br	96168 <OSFlagNameSet+0x140>
   96070:	e0bffe17 	ldw	r2,-8(fp)
   96074:	1004c03a 	cmpne	r2,r2,zero
   96078:	1000041e 	bne	r2,zero,9608c <OSFlagNameSet+0x64>
   9607c:	e0ffff17 	ldw	r3,-4(fp)
   96080:	00800304 	movi	r2,12
   96084:	18800005 	stb	r2,0(r3)
   96088:	00003706 	br	96168 <OSFlagNameSet+0x140>
   9608c:	008002b4 	movhi	r2,10
   96090:	10910504 	addi	r2,r2,17428
   96094:	10800003 	ldbu	r2,0(r2)
   96098:	10803fcc 	andi	r2,r2,255
   9609c:	1005003a 	cmpeq	r2,r2,zero
   960a0:	1000041e 	bne	r2,zero,960b4 <OSFlagNameSet+0x8c>
   960a4:	e0ffff17 	ldw	r3,-4(fp)
   960a8:	00800484 	movi	r2,18
   960ac:	18800005 	stb	r2,0(r3)
   960b0:	00002d06 	br	96168 <OSFlagNameSet+0x140>
   960b4:	0005303a 	rdctl	r2,status
   960b8:	e0bffa15 	stw	r2,-24(fp)
   960bc:	e0fffa17 	ldw	r3,-24(fp)
   960c0:	00bfff84 	movi	r2,-2
   960c4:	1884703a 	and	r2,r3,r2
   960c8:	1001703a 	wrctl	status,r2
   960cc:	e0bffa17 	ldw	r2,-24(fp)
   960d0:	e0bffb15 	stw	r2,-20(fp)
   960d4:	e0bffd17 	ldw	r2,-12(fp)
   960d8:	10800003 	ldbu	r2,0(r2)
   960dc:	10803fcc 	andi	r2,r2,255
   960e0:	10800160 	cmpeqi	r2,r2,5
   960e4:	1000081e 	bne	r2,zero,96108 <OSFlagNameSet+0xe0>
   960e8:	e0bffb17 	ldw	r2,-20(fp)
   960ec:	e0bff915 	stw	r2,-28(fp)
   960f0:	e0bff917 	ldw	r2,-28(fp)
   960f4:	1001703a 	wrctl	status,r2
   960f8:	e0ffff17 	ldw	r3,-4(fp)
   960fc:	00800044 	movi	r2,1
   96100:	18800005 	stb	r2,0(r3)
   96104:	00001806 	br	96168 <OSFlagNameSet+0x140>
   96108:	e13ffe17 	ldw	r4,-8(fp)
   9610c:	009511c0 	call	9511c <OS_StrLen>
   96110:	e0bffc05 	stb	r2,-16(fp)
   96114:	e0bffc03 	ldbu	r2,-16(fp)
   96118:	10800830 	cmpltui	r2,r2,32
   9611c:	1000081e 	bne	r2,zero,96140 <OSFlagNameSet+0x118>
   96120:	e0bffb17 	ldw	r2,-20(fp)
   96124:	e0bff815 	stw	r2,-32(fp)
   96128:	e0bff817 	ldw	r2,-32(fp)
   9612c:	1001703a 	wrctl	status,r2
   96130:	e0ffff17 	ldw	r3,-4(fp)
   96134:	00801cc4 	movi	r2,115
   96138:	18800005 	stb	r2,0(r3)
   9613c:	00000a06 	br	96168 <OSFlagNameSet+0x140>
   96140:	e0bffd17 	ldw	r2,-12(fp)
   96144:	11000284 	addi	r4,r2,10
   96148:	e17ffe17 	ldw	r5,-8(fp)
   9614c:	009509c0 	call	9509c <OS_StrCopy>
   96150:	e0bffb17 	ldw	r2,-20(fp)
   96154:	e0bff715 	stw	r2,-36(fp)
   96158:	e0bff717 	ldw	r2,-36(fp)
   9615c:	1001703a 	wrctl	status,r2
   96160:	e0bfff17 	ldw	r2,-4(fp)
   96164:	10000005 	stb	zero,0(r2)
   96168:	e037883a 	mov	sp,fp
   9616c:	dfc00117 	ldw	ra,4(sp)
   96170:	df000017 	ldw	fp,0(sp)
   96174:	dec00204 	addi	sp,sp,8
   96178:	f800283a 	ret

0009617c <OSFlagPend>:
   9617c:	deffe004 	addi	sp,sp,-128
   96180:	dfc01f15 	stw	ra,124(sp)
   96184:	df001e15 	stw	fp,120(sp)
   96188:	df001e04 	addi	fp,sp,120
   9618c:	e13ff915 	stw	r4,-28(fp)
   96190:	e17ffa0d 	sth	r5,-24(fp)
   96194:	e1bffb05 	stb	r6,-20(fp)
   96198:	e1fffc0d 	sth	r7,-16(fp)
   9619c:	e03ff115 	stw	zero,-60(fp)
   961a0:	e0800217 	ldw	r2,8(fp)
   961a4:	1004c03a 	cmpne	r2,r2,zero
   961a8:	1000021e 	bne	r2,zero,961b4 <OSFlagPend+0x38>
   961ac:	e03fff15 	stw	zero,-4(fp)
   961b0:	00017d06 	br	967a8 <OSFlagPend+0x62c>
   961b4:	e0bff917 	ldw	r2,-28(fp)
   961b8:	1004c03a 	cmpne	r2,r2,zero
   961bc:	1000051e 	bne	r2,zero,961d4 <OSFlagPend+0x58>
   961c0:	e0c00217 	ldw	r3,8(fp)
   961c4:	00801b84 	movi	r2,110
   961c8:	18800005 	stb	r2,0(r3)
   961cc:	e03fff15 	stw	zero,-4(fp)
   961d0:	00017506 	br	967a8 <OSFlagPend+0x62c>
   961d4:	008002b4 	movhi	r2,10
   961d8:	10910504 	addi	r2,r2,17428
   961dc:	10800003 	ldbu	r2,0(r2)
   961e0:	10803fcc 	andi	r2,r2,255
   961e4:	1005003a 	cmpeq	r2,r2,zero
   961e8:	1000051e 	bne	r2,zero,96200 <OSFlagPend+0x84>
   961ec:	e0c00217 	ldw	r3,8(fp)
   961f0:	00800084 	movi	r2,2
   961f4:	18800005 	stb	r2,0(r3)
   961f8:	e03fff15 	stw	zero,-4(fp)
   961fc:	00016a06 	br	967a8 <OSFlagPend+0x62c>
   96200:	008002b4 	movhi	r2,10
   96204:	1090f704 	addi	r2,r2,17372
   96208:	10800003 	ldbu	r2,0(r2)
   9620c:	10803fcc 	andi	r2,r2,255
   96210:	1005003a 	cmpeq	r2,r2,zero
   96214:	1000051e 	bne	r2,zero,9622c <OSFlagPend+0xb0>
   96218:	e0c00217 	ldw	r3,8(fp)
   9621c:	00800344 	movi	r2,13
   96220:	18800005 	stb	r2,0(r3)
   96224:	e03fff15 	stw	zero,-4(fp)
   96228:	00015f06 	br	967a8 <OSFlagPend+0x62c>
   9622c:	e0bff917 	ldw	r2,-28(fp)
   96230:	10800003 	ldbu	r2,0(r2)
   96234:	10803fcc 	andi	r2,r2,255
   96238:	10800160 	cmpeqi	r2,r2,5
   9623c:	1000051e 	bne	r2,zero,96254 <OSFlagPend+0xd8>
   96240:	e0c00217 	ldw	r3,8(fp)
   96244:	00800044 	movi	r2,1
   96248:	18800005 	stb	r2,0(r3)
   9624c:	e03fff15 	stw	zero,-4(fp)
   96250:	00015506 	br	967a8 <OSFlagPend+0x62c>
   96254:	e0fffb03 	ldbu	r3,-20(fp)
   96258:	00bfe004 	movi	r2,-128
   9625c:	1884703a 	and	r2,r3,r2
   96260:	e0bff285 	stb	r2,-54(fp)
   96264:	e0bff283 	ldbu	r2,-54(fp)
   96268:	1005003a 	cmpeq	r2,r2,zero
   9626c:	1000071e 	bne	r2,zero,9628c <OSFlagPend+0x110>
   96270:	00c01fc4 	movi	r3,127
   96274:	e0bffb03 	ldbu	r2,-20(fp)
   96278:	10c4703a 	and	r2,r2,r3
   9627c:	e0bffb05 	stb	r2,-20(fp)
   96280:	00800044 	movi	r2,1
   96284:	e0bff205 	stb	r2,-56(fp)
   96288:	00000106 	br	96290 <OSFlagPend+0x114>
   9628c:	e03ff205 	stb	zero,-56(fp)
   96290:	0005303a 	rdctl	r2,status
   96294:	e0bff015 	stw	r2,-64(fp)
   96298:	e0fff017 	ldw	r3,-64(fp)
   9629c:	00bfff84 	movi	r2,-2
   962a0:	1884703a 	and	r2,r3,r2
   962a4:	1001703a 	wrctl	status,r2
   962a8:	e0bff017 	ldw	r2,-64(fp)
   962ac:	e0bff115 	stw	r2,-60(fp)
   962b0:	e0bffb03 	ldbu	r2,-20(fp)
   962b4:	e0bffe15 	stw	r2,-8(fp)
   962b8:	e0fffe17 	ldw	r3,-8(fp)
   962bc:	18800060 	cmpeqi	r2,r3,1
   962c0:	1000981e 	bne	r2,zero,96524 <OSFlagPend+0x3a8>
   962c4:	e0fffe17 	ldw	r3,-8(fp)
   962c8:	18800088 	cmpgei	r2,r3,2
   962cc:	1000041e 	bne	r2,zero,962e0 <OSFlagPend+0x164>
   962d0:	e0fffe17 	ldw	r3,-8(fp)
   962d4:	1805003a 	cmpeq	r2,r3,zero
   962d8:	1000641e 	bne	r2,zero,9646c <OSFlagPend+0x2f0>
   962dc:	0000bf06 	br	965dc <OSFlagPend+0x460>
   962e0:	e0fffe17 	ldw	r3,-8(fp)
   962e4:	188000a0 	cmpeqi	r2,r3,2
   962e8:	1000041e 	bne	r2,zero,962fc <OSFlagPend+0x180>
   962ec:	e0fffe17 	ldw	r3,-8(fp)
   962f0:	188000e0 	cmpeqi	r2,r3,3
   962f4:	10002f1e 	bne	r2,zero,963b4 <OSFlagPend+0x238>
   962f8:	0000b806 	br	965dc <OSFlagPend+0x460>
   962fc:	e0bff917 	ldw	r2,-28(fp)
   96300:	10c0020b 	ldhu	r3,8(r2)
   96304:	e0bffa0b 	ldhu	r2,-24(fp)
   96308:	1884703a 	and	r2,r3,r2
   9630c:	e0bff30d 	sth	r2,-52(fp)
   96310:	e0fff30b 	ldhu	r3,-52(fp)
   96314:	e0bffa0b 	ldhu	r2,-24(fp)
   96318:	18801a1e 	bne	r3,r2,96384 <OSFlagPend+0x208>
   9631c:	e0bff203 	ldbu	r2,-56(fp)
   96320:	10800058 	cmpnei	r2,r2,1
   96324:	1000091e 	bne	r2,zero,9634c <OSFlagPend+0x1d0>
   96328:	e0bff917 	ldw	r2,-28(fp)
   9632c:	1080020b 	ldhu	r2,8(r2)
   96330:	1007883a 	mov	r3,r2
   96334:	e0bff30b 	ldhu	r2,-52(fp)
   96338:	0084303a 	nor	r2,zero,r2
   9633c:	1884703a 	and	r2,r3,r2
   96340:	1007883a 	mov	r3,r2
   96344:	e0bff917 	ldw	r2,-28(fp)
   96348:	10c0020d 	sth	r3,8(r2)
   9634c:	008002b4 	movhi	r2,10
   96350:	10910604 	addi	r2,r2,17432
   96354:	10c00017 	ldw	r3,0(r2)
   96358:	e0bff30b 	ldhu	r2,-52(fp)
   9635c:	18800b0d 	sth	r2,44(r3)
   96360:	e0bff117 	ldw	r2,-60(fp)
   96364:	e0bfef15 	stw	r2,-68(fp)
   96368:	e0bfef17 	ldw	r2,-68(fp)
   9636c:	1001703a 	wrctl	status,r2
   96370:	e0800217 	ldw	r2,8(fp)
   96374:	10000005 	stb	zero,0(r2)
   96378:	e0bff30b 	ldhu	r2,-52(fp)
   9637c:	e0bfff15 	stw	r2,-4(fp)
   96380:	00010906 	br	967a8 <OSFlagPend+0x62c>
   96384:	e1bffa0b 	ldhu	r6,-24(fp)
   96388:	e1fffb03 	ldbu	r7,-20(fp)
   9638c:	e0bffc0b 	ldhu	r2,-16(fp)
   96390:	e17ff404 	addi	r5,fp,-48
   96394:	d8800015 	stw	r2,0(sp)
   96398:	e13ff917 	ldw	r4,-28(fp)
   9639c:	0096ca40 	call	96ca4 <OS_FlagBlock>
   963a0:	e0bff117 	ldw	r2,-60(fp)
   963a4:	e0bfee15 	stw	r2,-72(fp)
   963a8:	e0bfee17 	ldw	r2,-72(fp)
   963ac:	1001703a 	wrctl	status,r2
   963b0:	00009506 	br	96608 <OSFlagPend+0x48c>
   963b4:	e0bff917 	ldw	r2,-28(fp)
   963b8:	10c0020b 	ldhu	r3,8(r2)
   963bc:	e0bffa0b 	ldhu	r2,-24(fp)
   963c0:	1884703a 	and	r2,r3,r2
   963c4:	e0bff30d 	sth	r2,-52(fp)
   963c8:	e0bff30b 	ldhu	r2,-52(fp)
   963cc:	1005003a 	cmpeq	r2,r2,zero
   963d0:	10001a1e 	bne	r2,zero,9643c <OSFlagPend+0x2c0>
   963d4:	e0bff203 	ldbu	r2,-56(fp)
   963d8:	10800058 	cmpnei	r2,r2,1
   963dc:	1000091e 	bne	r2,zero,96404 <OSFlagPend+0x288>
   963e0:	e0bff917 	ldw	r2,-28(fp)
   963e4:	1080020b 	ldhu	r2,8(r2)
   963e8:	1007883a 	mov	r3,r2
   963ec:	e0bff30b 	ldhu	r2,-52(fp)
   963f0:	0084303a 	nor	r2,zero,r2
   963f4:	1884703a 	and	r2,r3,r2
   963f8:	1007883a 	mov	r3,r2
   963fc:	e0bff917 	ldw	r2,-28(fp)
   96400:	10c0020d 	sth	r3,8(r2)
   96404:	008002b4 	movhi	r2,10
   96408:	10910604 	addi	r2,r2,17432
   9640c:	10c00017 	ldw	r3,0(r2)
   96410:	e0bff30b 	ldhu	r2,-52(fp)
   96414:	18800b0d 	sth	r2,44(r3)
   96418:	e0bff117 	ldw	r2,-60(fp)
   9641c:	e0bfed15 	stw	r2,-76(fp)
   96420:	e0bfed17 	ldw	r2,-76(fp)
   96424:	1001703a 	wrctl	status,r2
   96428:	e0800217 	ldw	r2,8(fp)
   9642c:	10000005 	stb	zero,0(r2)
   96430:	e0fff30b 	ldhu	r3,-52(fp)
   96434:	e0ffff15 	stw	r3,-4(fp)
   96438:	0000db06 	br	967a8 <OSFlagPend+0x62c>
   9643c:	e1bffa0b 	ldhu	r6,-24(fp)
   96440:	e1fffb03 	ldbu	r7,-20(fp)
   96444:	e0bffc0b 	ldhu	r2,-16(fp)
   96448:	e17ff404 	addi	r5,fp,-48
   9644c:	d8800015 	stw	r2,0(sp)
   96450:	e13ff917 	ldw	r4,-28(fp)
   96454:	0096ca40 	call	96ca4 <OS_FlagBlock>
   96458:	e0bff117 	ldw	r2,-60(fp)
   9645c:	e0bfec15 	stw	r2,-80(fp)
   96460:	e0bfec17 	ldw	r2,-80(fp)
   96464:	1001703a 	wrctl	status,r2
   96468:	00006706 	br	96608 <OSFlagPend+0x48c>
   9646c:	e0bff917 	ldw	r2,-28(fp)
   96470:	1080020b 	ldhu	r2,8(r2)
   96474:	0084303a 	nor	r2,zero,r2
   96478:	1007883a 	mov	r3,r2
   9647c:	e0bffa0b 	ldhu	r2,-24(fp)
   96480:	1884703a 	and	r2,r3,r2
   96484:	e0bff30d 	sth	r2,-52(fp)
   96488:	e0fff30b 	ldhu	r3,-52(fp)
   9648c:	e0bffa0b 	ldhu	r2,-24(fp)
   96490:	1880181e 	bne	r3,r2,964f4 <OSFlagPend+0x378>
   96494:	e0bff203 	ldbu	r2,-56(fp)
   96498:	10800058 	cmpnei	r2,r2,1
   9649c:	1000071e 	bne	r2,zero,964bc <OSFlagPend+0x340>
   964a0:	e0bff917 	ldw	r2,-28(fp)
   964a4:	10c0020b 	ldhu	r3,8(r2)
   964a8:	e0bff30b 	ldhu	r2,-52(fp)
   964ac:	1884b03a 	or	r2,r3,r2
   964b0:	1007883a 	mov	r3,r2
   964b4:	e0bff917 	ldw	r2,-28(fp)
   964b8:	10c0020d 	sth	r3,8(r2)
   964bc:	008002b4 	movhi	r2,10
   964c0:	10910604 	addi	r2,r2,17432
   964c4:	10c00017 	ldw	r3,0(r2)
   964c8:	e0bff30b 	ldhu	r2,-52(fp)
   964cc:	18800b0d 	sth	r2,44(r3)
   964d0:	e0bff117 	ldw	r2,-60(fp)
   964d4:	e0bfeb15 	stw	r2,-84(fp)
   964d8:	e0bfeb17 	ldw	r2,-84(fp)
   964dc:	1001703a 	wrctl	status,r2
   964e0:	e0800217 	ldw	r2,8(fp)
   964e4:	10000005 	stb	zero,0(r2)
   964e8:	e0bff30b 	ldhu	r2,-52(fp)
   964ec:	e0bfff15 	stw	r2,-4(fp)
   964f0:	0000ad06 	br	967a8 <OSFlagPend+0x62c>
   964f4:	e1bffa0b 	ldhu	r6,-24(fp)
   964f8:	e1fffb03 	ldbu	r7,-20(fp)
   964fc:	e0bffc0b 	ldhu	r2,-16(fp)
   96500:	e17ff404 	addi	r5,fp,-48
   96504:	d8800015 	stw	r2,0(sp)
   96508:	e13ff917 	ldw	r4,-28(fp)
   9650c:	0096ca40 	call	96ca4 <OS_FlagBlock>
   96510:	e0bff117 	ldw	r2,-60(fp)
   96514:	e0bfea15 	stw	r2,-88(fp)
   96518:	e0bfea17 	ldw	r2,-88(fp)
   9651c:	1001703a 	wrctl	status,r2
   96520:	00003906 	br	96608 <OSFlagPend+0x48c>
   96524:	e0bff917 	ldw	r2,-28(fp)
   96528:	1080020b 	ldhu	r2,8(r2)
   9652c:	0084303a 	nor	r2,zero,r2
   96530:	1007883a 	mov	r3,r2
   96534:	e0bffa0b 	ldhu	r2,-24(fp)
   96538:	1884703a 	and	r2,r3,r2
   9653c:	e0bff30d 	sth	r2,-52(fp)
   96540:	e0bff30b 	ldhu	r2,-52(fp)
   96544:	1005003a 	cmpeq	r2,r2,zero
   96548:	1000181e 	bne	r2,zero,965ac <OSFlagPend+0x430>
   9654c:	e0bff203 	ldbu	r2,-56(fp)
   96550:	10800058 	cmpnei	r2,r2,1
   96554:	1000071e 	bne	r2,zero,96574 <OSFlagPend+0x3f8>
   96558:	e0bff917 	ldw	r2,-28(fp)
   9655c:	10c0020b 	ldhu	r3,8(r2)
   96560:	e0bff30b 	ldhu	r2,-52(fp)
   96564:	1884b03a 	or	r2,r3,r2
   96568:	1007883a 	mov	r3,r2
   9656c:	e0bff917 	ldw	r2,-28(fp)
   96570:	10c0020d 	sth	r3,8(r2)
   96574:	008002b4 	movhi	r2,10
   96578:	10910604 	addi	r2,r2,17432
   9657c:	10c00017 	ldw	r3,0(r2)
   96580:	e0bff30b 	ldhu	r2,-52(fp)
   96584:	18800b0d 	sth	r2,44(r3)
   96588:	e0bff117 	ldw	r2,-60(fp)
   9658c:	e0bfe915 	stw	r2,-92(fp)
   96590:	e0bfe917 	ldw	r2,-92(fp)
   96594:	1001703a 	wrctl	status,r2
   96598:	e0800217 	ldw	r2,8(fp)
   9659c:	10000005 	stb	zero,0(r2)
   965a0:	e0fff30b 	ldhu	r3,-52(fp)
   965a4:	e0ffff15 	stw	r3,-4(fp)
   965a8:	00007f06 	br	967a8 <OSFlagPend+0x62c>
   965ac:	e1bffa0b 	ldhu	r6,-24(fp)
   965b0:	e1fffb03 	ldbu	r7,-20(fp)
   965b4:	e0bffc0b 	ldhu	r2,-16(fp)
   965b8:	e17ff404 	addi	r5,fp,-48
   965bc:	d8800015 	stw	r2,0(sp)
   965c0:	e13ff917 	ldw	r4,-28(fp)
   965c4:	0096ca40 	call	96ca4 <OS_FlagBlock>
   965c8:	e0bff117 	ldw	r2,-60(fp)
   965cc:	e0bfe815 	stw	r2,-96(fp)
   965d0:	e0bfe817 	ldw	r2,-96(fp)
   965d4:	1001703a 	wrctl	status,r2
   965d8:	00000b06 	br	96608 <OSFlagPend+0x48c>
   965dc:	e0bff117 	ldw	r2,-60(fp)
   965e0:	e0bfe715 	stw	r2,-100(fp)
   965e4:	e0bfe717 	ldw	r2,-100(fp)
   965e8:	1001703a 	wrctl	status,r2
   965ec:	e03ff30d 	sth	zero,-52(fp)
   965f0:	e0c00217 	ldw	r3,8(fp)
   965f4:	00801bc4 	movi	r2,111
   965f8:	18800005 	stb	r2,0(r3)
   965fc:	e0bff30b 	ldhu	r2,-52(fp)
   96600:	e0bfff15 	stw	r2,-4(fp)
   96604:	00006806 	br	967a8 <OSFlagPend+0x62c>
   96608:	0094f580 	call	94f58 <OS_Sched>
   9660c:	0005303a 	rdctl	r2,status
   96610:	e0bfe615 	stw	r2,-104(fp)
   96614:	e0ffe617 	ldw	r3,-104(fp)
   96618:	00bfff84 	movi	r2,-2
   9661c:	1884703a 	and	r2,r3,r2
   96620:	1001703a 	wrctl	status,r2
   96624:	e0bfe617 	ldw	r2,-104(fp)
   96628:	e0bff115 	stw	r2,-60(fp)
   9662c:	008002b4 	movhi	r2,10
   96630:	10910604 	addi	r2,r2,17432
   96634:	10800017 	ldw	r2,0(r2)
   96638:	10800c43 	ldbu	r2,49(r2)
   9663c:	10803fcc 	andi	r2,r2,255
   96640:	1005003a 	cmpeq	r2,r2,zero
   96644:	1000221e 	bne	r2,zero,966d0 <OSFlagPend+0x554>
   96648:	008002b4 	movhi	r2,10
   9664c:	10910604 	addi	r2,r2,17432
   96650:	10800017 	ldw	r2,0(r2)
   96654:	10800c43 	ldbu	r2,49(r2)
   96658:	e0bff245 	stb	r2,-55(fp)
   9665c:	008002b4 	movhi	r2,10
   96660:	10910604 	addi	r2,r2,17432
   96664:	10800017 	ldw	r2,0(r2)
   96668:	10000c45 	stb	zero,49(r2)
   9666c:	e13ff404 	addi	r4,fp,-48
   96670:	009705c0 	call	9705c <OS_FlagUnlink>
   96674:	008002b4 	movhi	r2,10
   96678:	10910604 	addi	r2,r2,17432
   9667c:	10800017 	ldw	r2,0(r2)
   96680:	10000c05 	stb	zero,48(r2)
   96684:	e0bff117 	ldw	r2,-60(fp)
   96688:	e0bfe515 	stw	r2,-108(fp)
   9668c:	e0bfe517 	ldw	r2,-108(fp)
   96690:	1001703a 	wrctl	status,r2
   96694:	e03ff30d 	sth	zero,-52(fp)
   96698:	e0bff243 	ldbu	r2,-55(fp)
   9669c:	108000a0 	cmpeqi	r2,r2,2
   966a0:	1000011e 	bne	r2,zero,966a8 <OSFlagPend+0x52c>
   966a4:	00000406 	br	966b8 <OSFlagPend+0x53c>
   966a8:	e0c00217 	ldw	r3,8(fp)
   966ac:	00800384 	movi	r2,14
   966b0:	18800005 	stb	r2,0(r3)
   966b4:	00000306 	br	966c4 <OSFlagPend+0x548>
   966b8:	e0c00217 	ldw	r3,8(fp)
   966bc:	00800284 	movi	r2,10
   966c0:	18800005 	stb	r2,0(r3)
   966c4:	e0fff30b 	ldhu	r3,-52(fp)
   966c8:	e0ffff15 	stw	r3,-4(fp)
   966cc:	00003606 	br	967a8 <OSFlagPend+0x62c>
   966d0:	008002b4 	movhi	r2,10
   966d4:	10910604 	addi	r2,r2,17432
   966d8:	10800017 	ldw	r2,0(r2)
   966dc:	10800b0b 	ldhu	r2,44(r2)
   966e0:	e0bff30d 	sth	r2,-52(fp)
   966e4:	e0bff203 	ldbu	r2,-56(fp)
   966e8:	10800058 	cmpnei	r2,r2,1
   966ec:	1000261e 	bne	r2,zero,96788 <OSFlagPend+0x60c>
   966f0:	e0bffb03 	ldbu	r2,-20(fp)
   966f4:	e0bffd15 	stw	r2,-12(fp)
   966f8:	e0fffd17 	ldw	r3,-12(fp)
   966fc:	1804803a 	cmplt	r2,r3,zero
   96700:	1000181e 	bne	r2,zero,96764 <OSFlagPend+0x5e8>
   96704:	e0fffd17 	ldw	r3,-12(fp)
   96708:	18800090 	cmplti	r2,r3,2
   9670c:	10000d1e 	bne	r2,zero,96744 <OSFlagPend+0x5c8>
   96710:	e0fffd17 	ldw	r3,-12(fp)
   96714:	18800108 	cmpgei	r2,r3,4
   96718:	1000121e 	bne	r2,zero,96764 <OSFlagPend+0x5e8>
   9671c:	e0bff917 	ldw	r2,-28(fp)
   96720:	1080020b 	ldhu	r2,8(r2)
   96724:	1007883a 	mov	r3,r2
   96728:	e0bff30b 	ldhu	r2,-52(fp)
   9672c:	0084303a 	nor	r2,zero,r2
   96730:	1884703a 	and	r2,r3,r2
   96734:	1007883a 	mov	r3,r2
   96738:	e0bff917 	ldw	r2,-28(fp)
   9673c:	10c0020d 	sth	r3,8(r2)
   96740:	00001106 	br	96788 <OSFlagPend+0x60c>
   96744:	e0bff917 	ldw	r2,-28(fp)
   96748:	10c0020b 	ldhu	r3,8(r2)
   9674c:	e0bff30b 	ldhu	r2,-52(fp)
   96750:	1884b03a 	or	r2,r3,r2
   96754:	1007883a 	mov	r3,r2
   96758:	e0bff917 	ldw	r2,-28(fp)
   9675c:	10c0020d 	sth	r3,8(r2)
   96760:	00000906 	br	96788 <OSFlagPend+0x60c>
   96764:	e0bff117 	ldw	r2,-60(fp)
   96768:	e0bfe415 	stw	r2,-112(fp)
   9676c:	e0bfe417 	ldw	r2,-112(fp)
   96770:	1001703a 	wrctl	status,r2
   96774:	e0c00217 	ldw	r3,8(fp)
   96778:	00801bc4 	movi	r2,111
   9677c:	18800005 	stb	r2,0(r3)
   96780:	e03fff15 	stw	zero,-4(fp)
   96784:	00000806 	br	967a8 <OSFlagPend+0x62c>
   96788:	e0bff117 	ldw	r2,-60(fp)
   9678c:	e0bfe315 	stw	r2,-116(fp)
   96790:	e0bfe317 	ldw	r2,-116(fp)
   96794:	1001703a 	wrctl	status,r2
   96798:	e0800217 	ldw	r2,8(fp)
   9679c:	10000005 	stb	zero,0(r2)
   967a0:	e0bff30b 	ldhu	r2,-52(fp)
   967a4:	e0bfff15 	stw	r2,-4(fp)
   967a8:	e0bfff17 	ldw	r2,-4(fp)
   967ac:	e037883a 	mov	sp,fp
   967b0:	dfc00117 	ldw	ra,4(sp)
   967b4:	df000017 	ldw	fp,0(sp)
   967b8:	dec00204 	addi	sp,sp,8
   967bc:	f800283a 	ret

000967c0 <OSFlagPendGetFlagsRdy>:
   967c0:	defffb04 	addi	sp,sp,-20
   967c4:	df000415 	stw	fp,16(sp)
   967c8:	df000404 	addi	fp,sp,16
   967cc:	e03ffe15 	stw	zero,-8(fp)
   967d0:	0005303a 	rdctl	r2,status
   967d4:	e0bffd15 	stw	r2,-12(fp)
   967d8:	e0fffd17 	ldw	r3,-12(fp)
   967dc:	00bfff84 	movi	r2,-2
   967e0:	1884703a 	and	r2,r3,r2
   967e4:	1001703a 	wrctl	status,r2
   967e8:	e0bffd17 	ldw	r2,-12(fp)
   967ec:	e0bffe15 	stw	r2,-8(fp)
   967f0:	008002b4 	movhi	r2,10
   967f4:	10910604 	addi	r2,r2,17432
   967f8:	10800017 	ldw	r2,0(r2)
   967fc:	10800b0b 	ldhu	r2,44(r2)
   96800:	e0bfff0d 	sth	r2,-4(fp)
   96804:	e0bffe17 	ldw	r2,-8(fp)
   96808:	e0bffc15 	stw	r2,-16(fp)
   9680c:	e0bffc17 	ldw	r2,-16(fp)
   96810:	1001703a 	wrctl	status,r2
   96814:	e0bfff0b 	ldhu	r2,-4(fp)
   96818:	e037883a 	mov	sp,fp
   9681c:	df000017 	ldw	fp,0(sp)
   96820:	dec00104 	addi	sp,sp,4
   96824:	f800283a 	ret

00096828 <OSFlagPost>:
   96828:	deffed04 	addi	sp,sp,-76
   9682c:	dfc01215 	stw	ra,72(sp)
   96830:	df001115 	stw	fp,68(sp)
   96834:	df001104 	addi	fp,sp,68
   96838:	e13ff915 	stw	r4,-28(fp)
   9683c:	e1fffc15 	stw	r7,-16(fp)
   96840:	e17ffa0d 	sth	r5,-24(fp)
   96844:	e1bffb05 	stb	r6,-20(fp)
   96848:	e03ff515 	stw	zero,-44(fp)
   9684c:	e0bffc17 	ldw	r2,-16(fp)
   96850:	1004c03a 	cmpne	r2,r2,zero
   96854:	1000021e 	bne	r2,zero,96860 <OSFlagPost+0x38>
   96858:	e03fff15 	stw	zero,-4(fp)
   9685c:	0000d606 	br	96bb8 <OSFlagPost+0x390>
   96860:	e0bff917 	ldw	r2,-28(fp)
   96864:	1004c03a 	cmpne	r2,r2,zero
   96868:	1000051e 	bne	r2,zero,96880 <OSFlagPost+0x58>
   9686c:	e0fffc17 	ldw	r3,-16(fp)
   96870:	00801b84 	movi	r2,110
   96874:	18800005 	stb	r2,0(r3)
   96878:	e03fff15 	stw	zero,-4(fp)
   9687c:	0000ce06 	br	96bb8 <OSFlagPost+0x390>
   96880:	e0bff917 	ldw	r2,-28(fp)
   96884:	10800003 	ldbu	r2,0(r2)
   96888:	10803fcc 	andi	r2,r2,255
   9688c:	10800160 	cmpeqi	r2,r2,5
   96890:	1000051e 	bne	r2,zero,968a8 <OSFlagPost+0x80>
   96894:	e0fffc17 	ldw	r3,-16(fp)
   96898:	00800044 	movi	r2,1
   9689c:	18800005 	stb	r2,0(r3)
   968a0:	e03fff15 	stw	zero,-4(fp)
   968a4:	0000c406 	br	96bb8 <OSFlagPost+0x390>
   968a8:	0005303a 	rdctl	r2,status
   968ac:	e0bff415 	stw	r2,-48(fp)
   968b0:	e0fff417 	ldw	r3,-48(fp)
   968b4:	00bfff84 	movi	r2,-2
   968b8:	1884703a 	and	r2,r3,r2
   968bc:	1001703a 	wrctl	status,r2
   968c0:	e0bff417 	ldw	r2,-48(fp)
   968c4:	e0bff515 	stw	r2,-44(fp)
   968c8:	e0bffb03 	ldbu	r2,-20(fp)
   968cc:	e0bffe15 	stw	r2,-8(fp)
   968d0:	e0fffe17 	ldw	r3,-8(fp)
   968d4:	1805003a 	cmpeq	r2,r3,zero
   968d8:	1000041e 	bne	r2,zero,968ec <OSFlagPost+0xc4>
   968dc:	e0fffe17 	ldw	r3,-8(fp)
   968e0:	18800060 	cmpeqi	r2,r3,1
   968e4:	10000b1e 	bne	r2,zero,96914 <OSFlagPost+0xec>
   968e8:	00001206 	br	96934 <OSFlagPost+0x10c>
   968ec:	e0bff917 	ldw	r2,-28(fp)
   968f0:	1080020b 	ldhu	r2,8(r2)
   968f4:	1007883a 	mov	r3,r2
   968f8:	e0bffa0b 	ldhu	r2,-24(fp)
   968fc:	0084303a 	nor	r2,zero,r2
   96900:	1884703a 	and	r2,r3,r2
   96904:	1007883a 	mov	r3,r2
   96908:	e0bff917 	ldw	r2,-28(fp)
   9690c:	10c0020d 	sth	r3,8(r2)
   96910:	00001106 	br	96958 <OSFlagPost+0x130>
   96914:	e0bff917 	ldw	r2,-28(fp)
   96918:	10c0020b 	ldhu	r3,8(r2)
   9691c:	e0bffa0b 	ldhu	r2,-24(fp)
   96920:	1884b03a 	or	r2,r3,r2
   96924:	1007883a 	mov	r3,r2
   96928:	e0bff917 	ldw	r2,-28(fp)
   9692c:	10c0020d 	sth	r3,8(r2)
   96930:	00000906 	br	96958 <OSFlagPost+0x130>
   96934:	e0bff517 	ldw	r2,-44(fp)
   96938:	e0bff315 	stw	r2,-52(fp)
   9693c:	e0bff317 	ldw	r2,-52(fp)
   96940:	1001703a 	wrctl	status,r2
   96944:	e0fffc17 	ldw	r3,-16(fp)
   96948:	00801c44 	movi	r2,113
   9694c:	18800005 	stb	r2,0(r3)
   96950:	e03fff15 	stw	zero,-4(fp)
   96954:	00009806 	br	96bb8 <OSFlagPost+0x390>
   96958:	e03ff785 	stb	zero,-34(fp)
   9695c:	e0bff917 	ldw	r2,-28(fp)
   96960:	10800117 	ldw	r2,4(r2)
   96964:	e0bff815 	stw	r2,-32(fp)
   96968:	00007506 	br	96b40 <OSFlagPost+0x318>
   9696c:	e0bff817 	ldw	r2,-32(fp)
   96970:	10800483 	ldbu	r2,18(r2)
   96974:	10803fcc 	andi	r2,r2,255
   96978:	e0bffd15 	stw	r2,-12(fp)
   9697c:	e0fffd17 	ldw	r3,-12(fp)
   96980:	18800060 	cmpeqi	r2,r3,1
   96984:	10004d1e 	bne	r2,zero,96abc <OSFlagPost+0x294>
   96988:	e0fffd17 	ldw	r3,-12(fp)
   9698c:	18800088 	cmpgei	r2,r3,2
   96990:	1000041e 	bne	r2,zero,969a4 <OSFlagPost+0x17c>
   96994:	e0fffd17 	ldw	r3,-12(fp)
   96998:	1805003a 	cmpeq	r2,r3,zero
   9699c:	1000301e 	bne	r2,zero,96a60 <OSFlagPost+0x238>
   969a0:	00005b06 	br	96b10 <OSFlagPost+0x2e8>
   969a4:	e0fffd17 	ldw	r3,-12(fp)
   969a8:	188000a0 	cmpeqi	r2,r3,2
   969ac:	1000041e 	bne	r2,zero,969c0 <OSFlagPost+0x198>
   969b0:	e0fffd17 	ldw	r3,-12(fp)
   969b4:	188000e0 	cmpeqi	r2,r3,3
   969b8:	1000161e 	bne	r2,zero,96a14 <OSFlagPost+0x1ec>
   969bc:	00005406 	br	96b10 <OSFlagPost+0x2e8>
   969c0:	e0bff917 	ldw	r2,-28(fp)
   969c4:	10c0020b 	ldhu	r3,8(r2)
   969c8:	e0bff817 	ldw	r2,-32(fp)
   969cc:	1080040b 	ldhu	r2,16(r2)
   969d0:	1884703a 	and	r2,r3,r2
   969d4:	e0bff68d 	sth	r2,-38(fp)
   969d8:	e0bff817 	ldw	r2,-32(fp)
   969dc:	1080040b 	ldhu	r2,16(r2)
   969e0:	10ffffcc 	andi	r3,r2,65535
   969e4:	e0bff68b 	ldhu	r2,-38(fp)
   969e8:	1880521e 	bne	r3,r2,96b34 <OSFlagPost+0x30c>
   969ec:	e17ff68b 	ldhu	r5,-38(fp)
   969f0:	e13ff817 	ldw	r4,-32(fp)
   969f4:	0096f4c0 	call	96f4c <OS_FlagTaskRdy>
   969f8:	e0bff605 	stb	r2,-40(fp)
   969fc:	e0bff603 	ldbu	r2,-40(fp)
   96a00:	10800058 	cmpnei	r2,r2,1
   96a04:	10004b1e 	bne	r2,zero,96b34 <OSFlagPost+0x30c>
   96a08:	00800044 	movi	r2,1
   96a0c:	e0bff785 	stb	r2,-34(fp)
   96a10:	00004806 	br	96b34 <OSFlagPost+0x30c>
   96a14:	e0bff917 	ldw	r2,-28(fp)
   96a18:	10c0020b 	ldhu	r3,8(r2)
   96a1c:	e0bff817 	ldw	r2,-32(fp)
   96a20:	1080040b 	ldhu	r2,16(r2)
   96a24:	1884703a 	and	r2,r3,r2
   96a28:	e0bff68d 	sth	r2,-38(fp)
   96a2c:	e0bff68b 	ldhu	r2,-38(fp)
   96a30:	1005003a 	cmpeq	r2,r2,zero
   96a34:	10003f1e 	bne	r2,zero,96b34 <OSFlagPost+0x30c>
   96a38:	e17ff68b 	ldhu	r5,-38(fp)
   96a3c:	e13ff817 	ldw	r4,-32(fp)
   96a40:	0096f4c0 	call	96f4c <OS_FlagTaskRdy>
   96a44:	e0bff605 	stb	r2,-40(fp)
   96a48:	e0bff603 	ldbu	r2,-40(fp)
   96a4c:	10800058 	cmpnei	r2,r2,1
   96a50:	1000381e 	bne	r2,zero,96b34 <OSFlagPost+0x30c>
   96a54:	00800044 	movi	r2,1
   96a58:	e0bff785 	stb	r2,-34(fp)
   96a5c:	00003506 	br	96b34 <OSFlagPost+0x30c>
   96a60:	e0bff917 	ldw	r2,-28(fp)
   96a64:	1080020b 	ldhu	r2,8(r2)
   96a68:	0084303a 	nor	r2,zero,r2
   96a6c:	1007883a 	mov	r3,r2
   96a70:	e0bff817 	ldw	r2,-32(fp)
   96a74:	1080040b 	ldhu	r2,16(r2)
   96a78:	1884703a 	and	r2,r3,r2
   96a7c:	e0bff68d 	sth	r2,-38(fp)
   96a80:	e0bff817 	ldw	r2,-32(fp)
   96a84:	1080040b 	ldhu	r2,16(r2)
   96a88:	10ffffcc 	andi	r3,r2,65535
   96a8c:	e0bff68b 	ldhu	r2,-38(fp)
   96a90:	1880281e 	bne	r3,r2,96b34 <OSFlagPost+0x30c>
   96a94:	e17ff68b 	ldhu	r5,-38(fp)
   96a98:	e13ff817 	ldw	r4,-32(fp)
   96a9c:	0096f4c0 	call	96f4c <OS_FlagTaskRdy>
   96aa0:	e0bff605 	stb	r2,-40(fp)
   96aa4:	e0bff603 	ldbu	r2,-40(fp)
   96aa8:	10800058 	cmpnei	r2,r2,1
   96aac:	1000211e 	bne	r2,zero,96b34 <OSFlagPost+0x30c>
   96ab0:	00800044 	movi	r2,1
   96ab4:	e0bff785 	stb	r2,-34(fp)
   96ab8:	00001e06 	br	96b34 <OSFlagPost+0x30c>
   96abc:	e0bff917 	ldw	r2,-28(fp)
   96ac0:	1080020b 	ldhu	r2,8(r2)
   96ac4:	0084303a 	nor	r2,zero,r2
   96ac8:	1007883a 	mov	r3,r2
   96acc:	e0bff817 	ldw	r2,-32(fp)
   96ad0:	1080040b 	ldhu	r2,16(r2)
   96ad4:	1884703a 	and	r2,r3,r2
   96ad8:	e0bff68d 	sth	r2,-38(fp)
   96adc:	e0bff68b 	ldhu	r2,-38(fp)
   96ae0:	1005003a 	cmpeq	r2,r2,zero
   96ae4:	1000131e 	bne	r2,zero,96b34 <OSFlagPost+0x30c>
   96ae8:	e17ff68b 	ldhu	r5,-38(fp)
   96aec:	e13ff817 	ldw	r4,-32(fp)
   96af0:	0096f4c0 	call	96f4c <OS_FlagTaskRdy>
   96af4:	e0bff605 	stb	r2,-40(fp)
   96af8:	e0bff603 	ldbu	r2,-40(fp)
   96afc:	10800058 	cmpnei	r2,r2,1
   96b00:	10000c1e 	bne	r2,zero,96b34 <OSFlagPost+0x30c>
   96b04:	00800044 	movi	r2,1
   96b08:	e0bff785 	stb	r2,-34(fp)
   96b0c:	00000906 	br	96b34 <OSFlagPost+0x30c>
   96b10:	e0bff517 	ldw	r2,-44(fp)
   96b14:	e0bff215 	stw	r2,-56(fp)
   96b18:	e0bff217 	ldw	r2,-56(fp)
   96b1c:	1001703a 	wrctl	status,r2
   96b20:	e0fffc17 	ldw	r3,-16(fp)
   96b24:	00801bc4 	movi	r2,111
   96b28:	18800005 	stb	r2,0(r3)
   96b2c:	e03fff15 	stw	zero,-4(fp)
   96b30:	00002106 	br	96bb8 <OSFlagPost+0x390>
   96b34:	e0bff817 	ldw	r2,-32(fp)
   96b38:	10800017 	ldw	r2,0(r2)
   96b3c:	e0bff815 	stw	r2,-32(fp)
   96b40:	e0bff817 	ldw	r2,-32(fp)
   96b44:	1004c03a 	cmpne	r2,r2,zero
   96b48:	103f881e 	bne	r2,zero,9696c <OSFlagPost+0x144>
   96b4c:	e0bff517 	ldw	r2,-44(fp)
   96b50:	e0bff115 	stw	r2,-60(fp)
   96b54:	e0bff117 	ldw	r2,-60(fp)
   96b58:	1001703a 	wrctl	status,r2
   96b5c:	e0bff783 	ldbu	r2,-34(fp)
   96b60:	10800058 	cmpnei	r2,r2,1
   96b64:	1000011e 	bne	r2,zero,96b6c <OSFlagPost+0x344>
   96b68:	0094f580 	call	94f58 <OS_Sched>
   96b6c:	0005303a 	rdctl	r2,status
   96b70:	e0bff015 	stw	r2,-64(fp)
   96b74:	e0fff017 	ldw	r3,-64(fp)
   96b78:	00bfff84 	movi	r2,-2
   96b7c:	1884703a 	and	r2,r3,r2
   96b80:	1001703a 	wrctl	status,r2
   96b84:	e0bff017 	ldw	r2,-64(fp)
   96b88:	e0bff515 	stw	r2,-44(fp)
   96b8c:	e0bff917 	ldw	r2,-28(fp)
   96b90:	1080020b 	ldhu	r2,8(r2)
   96b94:	e0bff70d 	sth	r2,-36(fp)
   96b98:	e0bff517 	ldw	r2,-44(fp)
   96b9c:	e0bfef15 	stw	r2,-68(fp)
   96ba0:	e0bfef17 	ldw	r2,-68(fp)
   96ba4:	1001703a 	wrctl	status,r2
   96ba8:	e0bffc17 	ldw	r2,-16(fp)
   96bac:	10000005 	stb	zero,0(r2)
   96bb0:	e0bff70b 	ldhu	r2,-36(fp)
   96bb4:	e0bfff15 	stw	r2,-4(fp)
   96bb8:	e0bfff17 	ldw	r2,-4(fp)
   96bbc:	e037883a 	mov	sp,fp
   96bc0:	dfc00117 	ldw	ra,4(sp)
   96bc4:	df000017 	ldw	fp,0(sp)
   96bc8:	dec00204 	addi	sp,sp,8
   96bcc:	f800283a 	ret

00096bd0 <OSFlagQuery>:
   96bd0:	defff804 	addi	sp,sp,-32
   96bd4:	df000715 	stw	fp,28(sp)
   96bd8:	df000704 	addi	fp,sp,28
   96bdc:	e13ffd15 	stw	r4,-12(fp)
   96be0:	e17ffe15 	stw	r5,-8(fp)
   96be4:	e03ffb15 	stw	zero,-20(fp)
   96be8:	e0bffe17 	ldw	r2,-8(fp)
   96bec:	1004c03a 	cmpne	r2,r2,zero
   96bf0:	1000021e 	bne	r2,zero,96bfc <OSFlagQuery+0x2c>
   96bf4:	e03fff15 	stw	zero,-4(fp)
   96bf8:	00002506 	br	96c90 <OSFlagQuery+0xc0>
   96bfc:	e0bffd17 	ldw	r2,-12(fp)
   96c00:	1004c03a 	cmpne	r2,r2,zero
   96c04:	1000051e 	bne	r2,zero,96c1c <OSFlagQuery+0x4c>
   96c08:	e0fffe17 	ldw	r3,-8(fp)
   96c0c:	00801b84 	movi	r2,110
   96c10:	18800005 	stb	r2,0(r3)
   96c14:	e03fff15 	stw	zero,-4(fp)
   96c18:	00001d06 	br	96c90 <OSFlagQuery+0xc0>
   96c1c:	e0bffd17 	ldw	r2,-12(fp)
   96c20:	10800003 	ldbu	r2,0(r2)
   96c24:	10803fcc 	andi	r2,r2,255
   96c28:	10800160 	cmpeqi	r2,r2,5
   96c2c:	1000051e 	bne	r2,zero,96c44 <OSFlagQuery+0x74>
   96c30:	e0fffe17 	ldw	r3,-8(fp)
   96c34:	00800044 	movi	r2,1
   96c38:	18800005 	stb	r2,0(r3)
   96c3c:	e03fff15 	stw	zero,-4(fp)
   96c40:	00001306 	br	96c90 <OSFlagQuery+0xc0>
   96c44:	0005303a 	rdctl	r2,status
   96c48:	e0bffa15 	stw	r2,-24(fp)
   96c4c:	e0fffa17 	ldw	r3,-24(fp)
   96c50:	00bfff84 	movi	r2,-2
   96c54:	1884703a 	and	r2,r3,r2
   96c58:	1001703a 	wrctl	status,r2
   96c5c:	e0bffa17 	ldw	r2,-24(fp)
   96c60:	e0bffb15 	stw	r2,-20(fp)
   96c64:	e0bffd17 	ldw	r2,-12(fp)
   96c68:	1080020b 	ldhu	r2,8(r2)
   96c6c:	e0bffc0d 	sth	r2,-16(fp)
   96c70:	e0bffb17 	ldw	r2,-20(fp)
   96c74:	e0bff915 	stw	r2,-28(fp)
   96c78:	e0bff917 	ldw	r2,-28(fp)
   96c7c:	1001703a 	wrctl	status,r2
   96c80:	e0bffe17 	ldw	r2,-8(fp)
   96c84:	10000005 	stb	zero,0(r2)
   96c88:	e0bffc0b 	ldhu	r2,-16(fp)
   96c8c:	e0bfff15 	stw	r2,-4(fp)
   96c90:	e0bfff17 	ldw	r2,-4(fp)
   96c94:	e037883a 	mov	sp,fp
   96c98:	df000017 	ldw	fp,0(sp)
   96c9c:	dec00104 	addi	sp,sp,4
   96ca0:	f800283a 	ret

00096ca4 <OS_FlagBlock>:
   96ca4:	defff804 	addi	sp,sp,-32
   96ca8:	df000715 	stw	fp,28(sp)
   96cac:	df000704 	addi	fp,sp,28
   96cb0:	e13ffb15 	stw	r4,-20(fp)
   96cb4:	e17ffc15 	stw	r5,-16(fp)
   96cb8:	e0800117 	ldw	r2,4(fp)
   96cbc:	e1bffd0d 	sth	r6,-12(fp)
   96cc0:	e1fffe05 	stb	r7,-8(fp)
   96cc4:	e0bfff0d 	sth	r2,-4(fp)
   96cc8:	008002b4 	movhi	r2,10
   96ccc:	10910604 	addi	r2,r2,17432
   96cd0:	10c00017 	ldw	r3,0(r2)
   96cd4:	008002b4 	movhi	r2,10
   96cd8:	10910604 	addi	r2,r2,17432
   96cdc:	10800017 	ldw	r2,0(r2)
   96ce0:	10800c03 	ldbu	r2,48(r2)
   96ce4:	10800814 	ori	r2,r2,32
   96ce8:	18800c05 	stb	r2,48(r3)
   96cec:	008002b4 	movhi	r2,10
   96cf0:	10910604 	addi	r2,r2,17432
   96cf4:	10800017 	ldw	r2,0(r2)
   96cf8:	10000c45 	stb	zero,49(r2)
   96cfc:	008002b4 	movhi	r2,10
   96d00:	10910604 	addi	r2,r2,17432
   96d04:	10c00017 	ldw	r3,0(r2)
   96d08:	e0bfff0b 	ldhu	r2,-4(fp)
   96d0c:	18800b8d 	sth	r2,46(r3)
   96d10:	008002b4 	movhi	r2,10
   96d14:	10910604 	addi	r2,r2,17432
   96d18:	10c00017 	ldw	r3,0(r2)
   96d1c:	e0bffc17 	ldw	r2,-16(fp)
   96d20:	18800a15 	stw	r2,40(r3)
   96d24:	e0fffc17 	ldw	r3,-16(fp)
   96d28:	e0bffd0b 	ldhu	r2,-12(fp)
   96d2c:	1880040d 	sth	r2,16(r3)
   96d30:	e0fffc17 	ldw	r3,-16(fp)
   96d34:	e0bffe03 	ldbu	r2,-8(fp)
   96d38:	18800485 	stb	r2,18(r3)
   96d3c:	008002b4 	movhi	r2,10
   96d40:	10910604 	addi	r2,r2,17432
   96d44:	10c00017 	ldw	r3,0(r2)
   96d48:	e0bffc17 	ldw	r2,-16(fp)
   96d4c:	10c00215 	stw	r3,8(r2)
   96d50:	e0bffb17 	ldw	r2,-20(fp)
   96d54:	10c00117 	ldw	r3,4(r2)
   96d58:	e0bffc17 	ldw	r2,-16(fp)
   96d5c:	10c00015 	stw	r3,0(r2)
   96d60:	e0bffc17 	ldw	r2,-16(fp)
   96d64:	10000115 	stw	zero,4(r2)
   96d68:	e0fffc17 	ldw	r3,-16(fp)
   96d6c:	e0bffb17 	ldw	r2,-20(fp)
   96d70:	18800315 	stw	r2,12(r3)
   96d74:	e0bffb17 	ldw	r2,-20(fp)
   96d78:	10800117 	ldw	r2,4(r2)
   96d7c:	e0bffa15 	stw	r2,-24(fp)
   96d80:	e0bffa17 	ldw	r2,-24(fp)
   96d84:	1005003a 	cmpeq	r2,r2,zero
   96d88:	1000031e 	bne	r2,zero,96d98 <OS_FlagBlock+0xf4>
   96d8c:	e0fffa17 	ldw	r3,-24(fp)
   96d90:	e0bffc17 	ldw	r2,-16(fp)
   96d94:	18800115 	stw	r2,4(r3)
   96d98:	e0fffb17 	ldw	r3,-20(fp)
   96d9c:	e0bffc17 	ldw	r2,-16(fp)
   96da0:	18800115 	stw	r2,4(r3)
   96da4:	008002b4 	movhi	r2,10
   96da8:	10910604 	addi	r2,r2,17432
   96dac:	10800017 	ldw	r2,0(r2)
   96db0:	10800d03 	ldbu	r2,52(r2)
   96db4:	e0bff905 	stb	r2,-28(fp)
   96db8:	e13ff903 	ldbu	r4,-28(fp)
   96dbc:	e0fff903 	ldbu	r3,-28(fp)
   96dc0:	008002b4 	movhi	r2,10
   96dc4:	10910344 	addi	r2,r2,17421
   96dc8:	10c5883a 	add	r2,r2,r3
   96dcc:	10800003 	ldbu	r2,0(r2)
   96dd0:	1007883a 	mov	r3,r2
   96dd4:	008002b4 	movhi	r2,10
   96dd8:	10910604 	addi	r2,r2,17432
   96ddc:	10800017 	ldw	r2,0(r2)
   96de0:	10800d43 	ldbu	r2,53(r2)
   96de4:	0084303a 	nor	r2,zero,r2
   96de8:	1884703a 	and	r2,r3,r2
   96dec:	1007883a 	mov	r3,r2
   96df0:	008002b4 	movhi	r2,10
   96df4:	10910344 	addi	r2,r2,17421
   96df8:	1105883a 	add	r2,r2,r4
   96dfc:	10c00005 	stb	r3,0(r2)
   96e00:	e0fff903 	ldbu	r3,-28(fp)
   96e04:	008002b4 	movhi	r2,10
   96e08:	10910344 	addi	r2,r2,17421
   96e0c:	10c5883a 	add	r2,r2,r3
   96e10:	10800003 	ldbu	r2,0(r2)
   96e14:	10803fcc 	andi	r2,r2,255
   96e18:	1004c03a 	cmpne	r2,r2,zero
   96e1c:	10000e1e 	bne	r2,zero,96e58 <OS_FlagBlock+0x1b4>
   96e20:	008002b4 	movhi	r2,10
   96e24:	10910604 	addi	r2,r2,17432
   96e28:	10800017 	ldw	r2,0(r2)
   96e2c:	10800d83 	ldbu	r2,54(r2)
   96e30:	0084303a 	nor	r2,zero,r2
   96e34:	1007883a 	mov	r3,r2
   96e38:	008002b4 	movhi	r2,10
   96e3c:	10910304 	addi	r2,r2,17420
   96e40:	10800003 	ldbu	r2,0(r2)
   96e44:	1884703a 	and	r2,r3,r2
   96e48:	1007883a 	mov	r3,r2
   96e4c:	008002b4 	movhi	r2,10
   96e50:	10910304 	addi	r2,r2,17420
   96e54:	10c00005 	stb	r3,0(r2)
   96e58:	e037883a 	mov	sp,fp
   96e5c:	df000017 	ldw	fp,0(sp)
   96e60:	dec00104 	addi	sp,sp,4
   96e64:	f800283a 	ret

00096e68 <OS_FlagInit>:
   96e68:	defffb04 	addi	sp,sp,-20
   96e6c:	dfc00415 	stw	ra,16(sp)
   96e70:	df000315 	stw	fp,12(sp)
   96e74:	df000304 	addi	fp,sp,12
   96e78:	010002f4 	movhi	r4,11
   96e7c:	21115c04 	addi	r4,r4,17776
   96e80:	0140dc04 	movi	r5,880
   96e84:	0094e980 	call	94e98 <OS_MemClr>
   96e88:	008002f4 	movhi	r2,11
   96e8c:	10915c04 	addi	r2,r2,17776
   96e90:	e0bffe15 	stw	r2,-8(fp)
   96e94:	008002f4 	movhi	r2,11
   96e98:	10916704 	addi	r2,r2,17820
   96e9c:	e0bffd15 	stw	r2,-12(fp)
   96ea0:	e03fff0d 	sth	zero,-4(fp)
   96ea4:	00001306 	br	96ef4 <OS_FlagInit+0x8c>
   96ea8:	e0bffe17 	ldw	r2,-8(fp)
   96eac:	10000005 	stb	zero,0(r2)
   96eb0:	e0fffe17 	ldw	r3,-8(fp)
   96eb4:	e0bffd17 	ldw	r2,-12(fp)
   96eb8:	18800115 	stw	r2,4(r3)
   96ebc:	e0fffe17 	ldw	r3,-8(fp)
   96ec0:	00800fc4 	movi	r2,63
   96ec4:	18800285 	stb	r2,10(r3)
   96ec8:	e0bffe17 	ldw	r2,-8(fp)
   96ecc:	100002c5 	stb	zero,11(r2)
   96ed0:	e0bffe17 	ldw	r2,-8(fp)
   96ed4:	10800b04 	addi	r2,r2,44
   96ed8:	e0bffe15 	stw	r2,-8(fp)
   96edc:	e0bffd17 	ldw	r2,-12(fp)
   96ee0:	10800b04 	addi	r2,r2,44
   96ee4:	e0bffd15 	stw	r2,-12(fp)
   96ee8:	e0bfff0b 	ldhu	r2,-4(fp)
   96eec:	10800044 	addi	r2,r2,1
   96ef0:	e0bfff0d 	sth	r2,-4(fp)
   96ef4:	e0bfff0b 	ldhu	r2,-4(fp)
   96ef8:	108004f0 	cmpltui	r2,r2,19
   96efc:	103fea1e 	bne	r2,zero,96ea8 <OS_FlagInit+0x40>
   96f00:	e0bffe17 	ldw	r2,-8(fp)
   96f04:	10000005 	stb	zero,0(r2)
   96f08:	e0bffe17 	ldw	r2,-8(fp)
   96f0c:	10000115 	stw	zero,4(r2)
   96f10:	e0fffe17 	ldw	r3,-8(fp)
   96f14:	00800fc4 	movi	r2,63
   96f18:	18800285 	stb	r2,10(r3)
   96f1c:	e0bffe17 	ldw	r2,-8(fp)
   96f20:	100002c5 	stb	zero,11(r2)
   96f24:	00c002b4 	movhi	r3,10
   96f28:	18d10804 	addi	r3,r3,17440
   96f2c:	008002f4 	movhi	r2,11
   96f30:	10915c04 	addi	r2,r2,17776
   96f34:	18800015 	stw	r2,0(r3)
   96f38:	e037883a 	mov	sp,fp
   96f3c:	dfc00117 	ldw	ra,4(sp)
   96f40:	df000017 	ldw	fp,0(sp)
   96f44:	dec00204 	addi	sp,sp,8
   96f48:	f800283a 	ret

00096f4c <OS_FlagTaskRdy>:
   96f4c:	defffa04 	addi	sp,sp,-24
   96f50:	dfc00515 	stw	ra,20(sp)
   96f54:	df000415 	stw	fp,16(sp)
   96f58:	df000404 	addi	fp,sp,16
   96f5c:	e13ffe15 	stw	r4,-8(fp)
   96f60:	e17fff0d 	sth	r5,-4(fp)
   96f64:	e0bffe17 	ldw	r2,-8(fp)
   96f68:	10800217 	ldw	r2,8(r2)
   96f6c:	e0bffd15 	stw	r2,-12(fp)
   96f70:	e0bffd17 	ldw	r2,-12(fp)
   96f74:	10000b8d 	sth	zero,46(r2)
   96f78:	e0fffd17 	ldw	r3,-12(fp)
   96f7c:	e0bfff0b 	ldhu	r2,-4(fp)
   96f80:	18800b0d 	sth	r2,44(r3)
   96f84:	e0bffd17 	ldw	r2,-12(fp)
   96f88:	10c00c03 	ldbu	r3,48(r2)
   96f8c:	00bff7c4 	movi	r2,-33
   96f90:	1884703a 	and	r2,r3,r2
   96f94:	1007883a 	mov	r3,r2
   96f98:	e0bffd17 	ldw	r2,-12(fp)
   96f9c:	10c00c05 	stb	r3,48(r2)
   96fa0:	e0bffd17 	ldw	r2,-12(fp)
   96fa4:	10000c45 	stb	zero,49(r2)
   96fa8:	e0bffd17 	ldw	r2,-12(fp)
   96fac:	10800c03 	ldbu	r2,48(r2)
   96fb0:	10803fcc 	andi	r2,r2,255
   96fb4:	1004c03a 	cmpne	r2,r2,zero
   96fb8:	10001f1e 	bne	r2,zero,97038 <OS_FlagTaskRdy+0xec>
   96fbc:	e0bffd17 	ldw	r2,-12(fp)
   96fc0:	10c00d83 	ldbu	r3,54(r2)
   96fc4:	008002b4 	movhi	r2,10
   96fc8:	10910304 	addi	r2,r2,17420
   96fcc:	10800003 	ldbu	r2,0(r2)
   96fd0:	1884b03a 	or	r2,r3,r2
   96fd4:	1007883a 	mov	r3,r2
   96fd8:	008002b4 	movhi	r2,10
   96fdc:	10910304 	addi	r2,r2,17420
   96fe0:	10c00005 	stb	r3,0(r2)
   96fe4:	e0bffd17 	ldw	r2,-12(fp)
   96fe8:	10800d03 	ldbu	r2,52(r2)
   96fec:	11003fcc 	andi	r4,r2,255
   96ff0:	e0bffd17 	ldw	r2,-12(fp)
   96ff4:	10800d03 	ldbu	r2,52(r2)
   96ff8:	10c03fcc 	andi	r3,r2,255
   96ffc:	008002b4 	movhi	r2,10
   97000:	10910344 	addi	r2,r2,17421
   97004:	10c5883a 	add	r2,r2,r3
   97008:	10c00003 	ldbu	r3,0(r2)
   9700c:	e0bffd17 	ldw	r2,-12(fp)
   97010:	10800d43 	ldbu	r2,53(r2)
   97014:	1884b03a 	or	r2,r3,r2
   97018:	1007883a 	mov	r3,r2
   9701c:	008002b4 	movhi	r2,10
   97020:	10910344 	addi	r2,r2,17421
   97024:	1105883a 	add	r2,r2,r4
   97028:	10c00005 	stb	r3,0(r2)
   9702c:	00800044 	movi	r2,1
   97030:	e0bffc05 	stb	r2,-16(fp)
   97034:	00000106 	br	9703c <OS_FlagTaskRdy+0xf0>
   97038:	e03ffc05 	stb	zero,-16(fp)
   9703c:	e13ffe17 	ldw	r4,-8(fp)
   97040:	009705c0 	call	9705c <OS_FlagUnlink>
   97044:	e0bffc03 	ldbu	r2,-16(fp)
   97048:	e037883a 	mov	sp,fp
   9704c:	dfc00117 	ldw	ra,4(sp)
   97050:	df000017 	ldw	fp,0(sp)
   97054:	dec00204 	addi	sp,sp,8
   97058:	f800283a 	ret

0009705c <OS_FlagUnlink>:
   9705c:	defffa04 	addi	sp,sp,-24
   97060:	df000515 	stw	fp,20(sp)
   97064:	df000504 	addi	fp,sp,20
   97068:	e13fff15 	stw	r4,-4(fp)
   9706c:	e0bfff17 	ldw	r2,-4(fp)
   97070:	10800117 	ldw	r2,4(r2)
   97074:	e0bffc15 	stw	r2,-16(fp)
   97078:	e0bfff17 	ldw	r2,-4(fp)
   9707c:	10800017 	ldw	r2,0(r2)
   97080:	e0bffb15 	stw	r2,-20(fp)
   97084:	e0bffc17 	ldw	r2,-16(fp)
   97088:	1004c03a 	cmpne	r2,r2,zero
   9708c:	10000c1e 	bne	r2,zero,970c0 <OS_FlagUnlink+0x64>
   97090:	e0bfff17 	ldw	r2,-4(fp)
   97094:	10800317 	ldw	r2,12(r2)
   97098:	e0bffd15 	stw	r2,-12(fp)
   9709c:	e0fffd17 	ldw	r3,-12(fp)
   970a0:	e0bffb17 	ldw	r2,-20(fp)
   970a4:	18800115 	stw	r2,4(r3)
   970a8:	e0bffb17 	ldw	r2,-20(fp)
   970ac:	1005003a 	cmpeq	r2,r2,zero
   970b0:	10000c1e 	bne	r2,zero,970e4 <OS_FlagUnlink+0x88>
   970b4:	e0bffb17 	ldw	r2,-20(fp)
   970b8:	10000115 	stw	zero,4(r2)
   970bc:	00000906 	br	970e4 <OS_FlagUnlink+0x88>
   970c0:	e0fffc17 	ldw	r3,-16(fp)
   970c4:	e0bffb17 	ldw	r2,-20(fp)
   970c8:	18800015 	stw	r2,0(r3)
   970cc:	e0bffb17 	ldw	r2,-20(fp)
   970d0:	1005003a 	cmpeq	r2,r2,zero
   970d4:	1000031e 	bne	r2,zero,970e4 <OS_FlagUnlink+0x88>
   970d8:	e0fffb17 	ldw	r3,-20(fp)
   970dc:	e0bffc17 	ldw	r2,-16(fp)
   970e0:	18800115 	stw	r2,4(r3)
   970e4:	e0bfff17 	ldw	r2,-4(fp)
   970e8:	10800217 	ldw	r2,8(r2)
   970ec:	e0bffe15 	stw	r2,-8(fp)
   970f0:	e0bffe17 	ldw	r2,-8(fp)
   970f4:	10000a15 	stw	zero,40(r2)
   970f8:	e037883a 	mov	sp,fp
   970fc:	df000017 	ldw	fp,0(sp)
   97100:	dec00104 	addi	sp,sp,4
   97104:	f800283a 	ret

00097108 <OSMboxAccept>:
   97108:	defff904 	addi	sp,sp,-28
   9710c:	df000615 	stw	fp,24(sp)
   97110:	df000604 	addi	fp,sp,24
   97114:	e13ffe15 	stw	r4,-8(fp)
   97118:	e03ffc15 	stw	zero,-16(fp)
   9711c:	e0bffe17 	ldw	r2,-8(fp)
   97120:	1004c03a 	cmpne	r2,r2,zero
   97124:	1000021e 	bne	r2,zero,97130 <OSMboxAccept+0x28>
   97128:	e03fff15 	stw	zero,-4(fp)
   9712c:	00001a06 	br	97198 <OSMboxAccept+0x90>
   97130:	e0bffe17 	ldw	r2,-8(fp)
   97134:	10800003 	ldbu	r2,0(r2)
   97138:	10803fcc 	andi	r2,r2,255
   9713c:	10800060 	cmpeqi	r2,r2,1
   97140:	1000021e 	bne	r2,zero,9714c <OSMboxAccept+0x44>
   97144:	e03fff15 	stw	zero,-4(fp)
   97148:	00001306 	br	97198 <OSMboxAccept+0x90>
   9714c:	0005303a 	rdctl	r2,status
   97150:	e0bffb15 	stw	r2,-20(fp)
   97154:	e0fffb17 	ldw	r3,-20(fp)
   97158:	00bfff84 	movi	r2,-2
   9715c:	1884703a 	and	r2,r3,r2
   97160:	1001703a 	wrctl	status,r2
   97164:	e0bffb17 	ldw	r2,-20(fp)
   97168:	e0bffc15 	stw	r2,-16(fp)
   9716c:	e0bffe17 	ldw	r2,-8(fp)
   97170:	10800117 	ldw	r2,4(r2)
   97174:	e0bffd15 	stw	r2,-12(fp)
   97178:	e0bffe17 	ldw	r2,-8(fp)
   9717c:	10000115 	stw	zero,4(r2)
   97180:	e0bffc17 	ldw	r2,-16(fp)
   97184:	e0bffa15 	stw	r2,-24(fp)
   97188:	e0bffa17 	ldw	r2,-24(fp)
   9718c:	1001703a 	wrctl	status,r2
   97190:	e0bffd17 	ldw	r2,-12(fp)
   97194:	e0bfff15 	stw	r2,-4(fp)
   97198:	e0bfff17 	ldw	r2,-4(fp)
   9719c:	e037883a 	mov	sp,fp
   971a0:	df000017 	ldw	fp,0(sp)
   971a4:	dec00104 	addi	sp,sp,4
   971a8:	f800283a 	ret

000971ac <OSMboxCreate>:
   971ac:	defff804 	addi	sp,sp,-32
   971b0:	dfc00715 	stw	ra,28(sp)
   971b4:	df000615 	stw	fp,24(sp)
   971b8:	df000604 	addi	fp,sp,24
   971bc:	e13ffe15 	stw	r4,-8(fp)
   971c0:	e03ffc15 	stw	zero,-16(fp)
   971c4:	008002b4 	movhi	r2,10
   971c8:	10910504 	addi	r2,r2,17428
   971cc:	10800003 	ldbu	r2,0(r2)
   971d0:	10803fcc 	andi	r2,r2,255
   971d4:	1005003a 	cmpeq	r2,r2,zero
   971d8:	1000021e 	bne	r2,zero,971e4 <OSMboxCreate+0x38>
   971dc:	e03fff15 	stw	zero,-4(fp)
   971e0:	00003106 	br	972a8 <OSMboxCreate+0xfc>
   971e4:	0005303a 	rdctl	r2,status
   971e8:	e0bffb15 	stw	r2,-20(fp)
   971ec:	e0fffb17 	ldw	r3,-20(fp)
   971f0:	00bfff84 	movi	r2,-2
   971f4:	1884703a 	and	r2,r3,r2
   971f8:	1001703a 	wrctl	status,r2
   971fc:	e0bffb17 	ldw	r2,-20(fp)
   97200:	e0bffc15 	stw	r2,-16(fp)
   97204:	008002b4 	movhi	r2,10
   97208:	10910404 	addi	r2,r2,17424
   9720c:	10800017 	ldw	r2,0(r2)
   97210:	e0bffd15 	stw	r2,-12(fp)
   97214:	008002b4 	movhi	r2,10
   97218:	10910404 	addi	r2,r2,17424
   9721c:	10800017 	ldw	r2,0(r2)
   97220:	1005003a 	cmpeq	r2,r2,zero
   97224:	1000081e 	bne	r2,zero,97248 <OSMboxCreate+0x9c>
   97228:	008002b4 	movhi	r2,10
   9722c:	10910404 	addi	r2,r2,17424
   97230:	10800017 	ldw	r2,0(r2)
   97234:	10800117 	ldw	r2,4(r2)
   97238:	1007883a 	mov	r3,r2
   9723c:	008002b4 	movhi	r2,10
   97240:	10910404 	addi	r2,r2,17424
   97244:	10c00015 	stw	r3,0(r2)
   97248:	e0bffc17 	ldw	r2,-16(fp)
   9724c:	e0bffa15 	stw	r2,-24(fp)
   97250:	e0bffa17 	ldw	r2,-24(fp)
   97254:	1001703a 	wrctl	status,r2
   97258:	e0bffd17 	ldw	r2,-12(fp)
   9725c:	1005003a 	cmpeq	r2,r2,zero
   97260:	10000f1e 	bne	r2,zero,972a0 <OSMboxCreate+0xf4>
   97264:	e0fffd17 	ldw	r3,-12(fp)
   97268:	00800044 	movi	r2,1
   9726c:	18800005 	stb	r2,0(r3)
   97270:	e0bffd17 	ldw	r2,-12(fp)
   97274:	1000020d 	sth	zero,8(r2)
   97278:	e0fffd17 	ldw	r3,-12(fp)
   9727c:	e0bffe17 	ldw	r2,-8(fp)
   97280:	18800115 	stw	r2,4(r3)
   97284:	e0fffd17 	ldw	r3,-12(fp)
   97288:	00800fc4 	movi	r2,63
   9728c:	18800385 	stb	r2,14(r3)
   97290:	e0bffd17 	ldw	r2,-12(fp)
   97294:	100003c5 	stb	zero,15(r2)
   97298:	e13ffd17 	ldw	r4,-12(fp)
   9729c:	0094acc0 	call	94acc <OS_EventWaitListInit>
   972a0:	e0bffd17 	ldw	r2,-12(fp)
   972a4:	e0bfff15 	stw	r2,-4(fp)
   972a8:	e0bfff17 	ldw	r2,-4(fp)
   972ac:	e037883a 	mov	sp,fp
   972b0:	dfc00117 	ldw	ra,4(sp)
   972b4:	df000017 	ldw	fp,0(sp)
   972b8:	dec00204 	addi	sp,sp,8
   972bc:	f800283a 	ret

000972c0 <OSMboxDel>:
   972c0:	defff104 	addi	sp,sp,-60
   972c4:	dfc00e15 	stw	ra,56(sp)
   972c8:	df000d15 	stw	fp,52(sp)
   972cc:	df000d04 	addi	fp,sp,52
   972d0:	e13ffb15 	stw	r4,-20(fp)
   972d4:	e1bffd15 	stw	r6,-12(fp)
   972d8:	e17ffc05 	stb	r5,-16(fp)
   972dc:	e03ff815 	stw	zero,-32(fp)
   972e0:	e0bffd17 	ldw	r2,-12(fp)
   972e4:	1004c03a 	cmpne	r2,r2,zero
   972e8:	1000031e 	bne	r2,zero,972f8 <OSMboxDel+0x38>
   972ec:	e0bffb17 	ldw	r2,-20(fp)
   972f0:	e0bfff15 	stw	r2,-4(fp)
   972f4:	00009406 	br	97548 <OSMboxDel+0x288>
   972f8:	e0bffb17 	ldw	r2,-20(fp)
   972fc:	1004c03a 	cmpne	r2,r2,zero
   97300:	1000061e 	bne	r2,zero,9731c <OSMboxDel+0x5c>
   97304:	e0fffd17 	ldw	r3,-12(fp)
   97308:	00800104 	movi	r2,4
   9730c:	18800005 	stb	r2,0(r3)
   97310:	e0fffb17 	ldw	r3,-20(fp)
   97314:	e0ffff15 	stw	r3,-4(fp)
   97318:	00008b06 	br	97548 <OSMboxDel+0x288>
   9731c:	e0bffb17 	ldw	r2,-20(fp)
   97320:	10800003 	ldbu	r2,0(r2)
   97324:	10803fcc 	andi	r2,r2,255
   97328:	10800060 	cmpeqi	r2,r2,1
   9732c:	1000061e 	bne	r2,zero,97348 <OSMboxDel+0x88>
   97330:	e0fffd17 	ldw	r3,-12(fp)
   97334:	00800044 	movi	r2,1
   97338:	18800005 	stb	r2,0(r3)
   9733c:	e0bffb17 	ldw	r2,-20(fp)
   97340:	e0bfff15 	stw	r2,-4(fp)
   97344:	00008006 	br	97548 <OSMboxDel+0x288>
   97348:	008002b4 	movhi	r2,10
   9734c:	10910504 	addi	r2,r2,17428
   97350:	10800003 	ldbu	r2,0(r2)
   97354:	10803fcc 	andi	r2,r2,255
   97358:	1005003a 	cmpeq	r2,r2,zero
   9735c:	1000061e 	bne	r2,zero,97378 <OSMboxDel+0xb8>
   97360:	e0fffd17 	ldw	r3,-12(fp)
   97364:	008003c4 	movi	r2,15
   97368:	18800005 	stb	r2,0(r3)
   9736c:	e0fffb17 	ldw	r3,-20(fp)
   97370:	e0ffff15 	stw	r3,-4(fp)
   97374:	00007406 	br	97548 <OSMboxDel+0x288>
   97378:	0005303a 	rdctl	r2,status
   9737c:	e0bff715 	stw	r2,-36(fp)
   97380:	e0fff717 	ldw	r3,-36(fp)
   97384:	00bfff84 	movi	r2,-2
   97388:	1884703a 	and	r2,r3,r2
   9738c:	1001703a 	wrctl	status,r2
   97390:	e0bff717 	ldw	r2,-36(fp)
   97394:	e0bff815 	stw	r2,-32(fp)
   97398:	e0bffb17 	ldw	r2,-20(fp)
   9739c:	10800283 	ldbu	r2,10(r2)
   973a0:	10803fcc 	andi	r2,r2,255
   973a4:	1005003a 	cmpeq	r2,r2,zero
   973a8:	1000031e 	bne	r2,zero,973b8 <OSMboxDel+0xf8>
   973ac:	00800044 	movi	r2,1
   973b0:	e0bffa05 	stb	r2,-24(fp)
   973b4:	00000106 	br	973bc <OSMboxDel+0xfc>
   973b8:	e03ffa05 	stb	zero,-24(fp)
   973bc:	e0bffc03 	ldbu	r2,-16(fp)
   973c0:	e0bffe15 	stw	r2,-8(fp)
   973c4:	e0fffe17 	ldw	r3,-8(fp)
   973c8:	1805003a 	cmpeq	r2,r3,zero
   973cc:	1000041e 	bne	r2,zero,973e0 <OSMboxDel+0x120>
   973d0:	e0fffe17 	ldw	r3,-8(fp)
   973d4:	18800060 	cmpeqi	r2,r3,1
   973d8:	10002d1e 	bne	r2,zero,97490 <OSMboxDel+0x1d0>
   973dc:	00004f06 	br	9751c <OSMboxDel+0x25c>
   973e0:	e0bffa03 	ldbu	r2,-24(fp)
   973e4:	1004c03a 	cmpne	r2,r2,zero
   973e8:	10001a1e 	bne	r2,zero,97454 <OSMboxDel+0x194>
   973ec:	e0fffb17 	ldw	r3,-20(fp)
   973f0:	00800fc4 	movi	r2,63
   973f4:	18800385 	stb	r2,14(r3)
   973f8:	e0bffb17 	ldw	r2,-20(fp)
   973fc:	100003c5 	stb	zero,15(r2)
   97400:	e0bffb17 	ldw	r2,-20(fp)
   97404:	10000005 	stb	zero,0(r2)
   97408:	008002b4 	movhi	r2,10
   9740c:	10910404 	addi	r2,r2,17424
   97410:	10c00017 	ldw	r3,0(r2)
   97414:	e0bffb17 	ldw	r2,-20(fp)
   97418:	10c00115 	stw	r3,4(r2)
   9741c:	e0bffb17 	ldw	r2,-20(fp)
   97420:	1000020d 	sth	zero,8(r2)
   97424:	00c002b4 	movhi	r3,10
   97428:	18d10404 	addi	r3,r3,17424
   9742c:	e0bffb17 	ldw	r2,-20(fp)
   97430:	18800015 	stw	r2,0(r3)
   97434:	e0bff817 	ldw	r2,-32(fp)
   97438:	e0bff615 	stw	r2,-40(fp)
   9743c:	e0bff617 	ldw	r2,-40(fp)
   97440:	1001703a 	wrctl	status,r2
   97444:	e0bffd17 	ldw	r2,-12(fp)
   97448:	10000005 	stb	zero,0(r2)
   9744c:	e03ff915 	stw	zero,-28(fp)
   97450:	00003b06 	br	97540 <OSMboxDel+0x280>
   97454:	e0bff817 	ldw	r2,-32(fp)
   97458:	e0bff515 	stw	r2,-44(fp)
   9745c:	e0bff517 	ldw	r2,-44(fp)
   97460:	1001703a 	wrctl	status,r2
   97464:	e0fffd17 	ldw	r3,-12(fp)
   97468:	00801244 	movi	r2,73
   9746c:	18800005 	stb	r2,0(r3)
   97470:	e0bffb17 	ldw	r2,-20(fp)
   97474:	e0bff915 	stw	r2,-28(fp)
   97478:	00003106 	br	97540 <OSMboxDel+0x280>
   9747c:	e13ffb17 	ldw	r4,-20(fp)
   97480:	000b883a 	mov	r5,zero
   97484:	01800084 	movi	r6,2
   97488:	000f883a 	mov	r7,zero
   9748c:	00945180 	call	94518 <OS_EventTaskRdy>
   97490:	e0bffb17 	ldw	r2,-20(fp)
   97494:	10800283 	ldbu	r2,10(r2)
   97498:	10803fcc 	andi	r2,r2,255
   9749c:	1004c03a 	cmpne	r2,r2,zero
   974a0:	103ff61e 	bne	r2,zero,9747c <OSMboxDel+0x1bc>
   974a4:	e0fffb17 	ldw	r3,-20(fp)
   974a8:	00800fc4 	movi	r2,63
   974ac:	18800385 	stb	r2,14(r3)
   974b0:	e0bffb17 	ldw	r2,-20(fp)
   974b4:	100003c5 	stb	zero,15(r2)
   974b8:	e0bffb17 	ldw	r2,-20(fp)
   974bc:	10000005 	stb	zero,0(r2)
   974c0:	008002b4 	movhi	r2,10
   974c4:	10910404 	addi	r2,r2,17424
   974c8:	10c00017 	ldw	r3,0(r2)
   974cc:	e0bffb17 	ldw	r2,-20(fp)
   974d0:	10c00115 	stw	r3,4(r2)
   974d4:	e0bffb17 	ldw	r2,-20(fp)
   974d8:	1000020d 	sth	zero,8(r2)
   974dc:	00c002b4 	movhi	r3,10
   974e0:	18d10404 	addi	r3,r3,17424
   974e4:	e0bffb17 	ldw	r2,-20(fp)
   974e8:	18800015 	stw	r2,0(r3)
   974ec:	e0bff817 	ldw	r2,-32(fp)
   974f0:	e0bff415 	stw	r2,-48(fp)
   974f4:	e0bff417 	ldw	r2,-48(fp)
   974f8:	1001703a 	wrctl	status,r2
   974fc:	e0bffa03 	ldbu	r2,-24(fp)
   97500:	10800058 	cmpnei	r2,r2,1
   97504:	1000011e 	bne	r2,zero,9750c <OSMboxDel+0x24c>
   97508:	0094f580 	call	94f58 <OS_Sched>
   9750c:	e0bffd17 	ldw	r2,-12(fp)
   97510:	10000005 	stb	zero,0(r2)
   97514:	e03ff915 	stw	zero,-28(fp)
   97518:	00000906 	br	97540 <OSMboxDel+0x280>
   9751c:	e0bff817 	ldw	r2,-32(fp)
   97520:	e0bff315 	stw	r2,-52(fp)
   97524:	e0bff317 	ldw	r2,-52(fp)
   97528:	1001703a 	wrctl	status,r2
   9752c:	e0fffd17 	ldw	r3,-12(fp)
   97530:	008001c4 	movi	r2,7
   97534:	18800005 	stb	r2,0(r3)
   97538:	e0bffb17 	ldw	r2,-20(fp)
   9753c:	e0bff915 	stw	r2,-28(fp)
   97540:	e0bff917 	ldw	r2,-28(fp)
   97544:	e0bfff15 	stw	r2,-4(fp)
   97548:	e0bfff17 	ldw	r2,-4(fp)
   9754c:	e037883a 	mov	sp,fp
   97550:	dfc00117 	ldw	ra,4(sp)
   97554:	df000017 	ldw	fp,0(sp)
   97558:	dec00204 	addi	sp,sp,8
   9755c:	f800283a 	ret

00097560 <OSMboxPend>:
   97560:	defff204 	addi	sp,sp,-56
   97564:	dfc00d15 	stw	ra,52(sp)
   97568:	df000c15 	stw	fp,48(sp)
   9756c:	df000c04 	addi	fp,sp,48
   97570:	e13ffb15 	stw	r4,-20(fp)
   97574:	e1bffd15 	stw	r6,-12(fp)
   97578:	e17ffc0d 	sth	r5,-16(fp)
   9757c:	e03ff915 	stw	zero,-28(fp)
   97580:	e0bffd17 	ldw	r2,-12(fp)
   97584:	1004c03a 	cmpne	r2,r2,zero
   97588:	1000021e 	bne	r2,zero,97594 <OSMboxPend+0x34>
   9758c:	e03fff15 	stw	zero,-4(fp)
   97590:	00009f06 	br	97810 <OSMboxPend+0x2b0>
   97594:	e0bffb17 	ldw	r2,-20(fp)
   97598:	1004c03a 	cmpne	r2,r2,zero
   9759c:	1000051e 	bne	r2,zero,975b4 <OSMboxPend+0x54>
   975a0:	e0fffd17 	ldw	r3,-12(fp)
   975a4:	00800104 	movi	r2,4
   975a8:	18800005 	stb	r2,0(r3)
   975ac:	e03fff15 	stw	zero,-4(fp)
   975b0:	00009706 	br	97810 <OSMboxPend+0x2b0>
   975b4:	e0bffb17 	ldw	r2,-20(fp)
   975b8:	10800003 	ldbu	r2,0(r2)
   975bc:	10803fcc 	andi	r2,r2,255
   975c0:	10800060 	cmpeqi	r2,r2,1
   975c4:	1000051e 	bne	r2,zero,975dc <OSMboxPend+0x7c>
   975c8:	e0fffd17 	ldw	r3,-12(fp)
   975cc:	00800044 	movi	r2,1
   975d0:	18800005 	stb	r2,0(r3)
   975d4:	e03fff15 	stw	zero,-4(fp)
   975d8:	00008d06 	br	97810 <OSMboxPend+0x2b0>
   975dc:	008002b4 	movhi	r2,10
   975e0:	10910504 	addi	r2,r2,17428
   975e4:	10800003 	ldbu	r2,0(r2)
   975e8:	10803fcc 	andi	r2,r2,255
   975ec:	1005003a 	cmpeq	r2,r2,zero
   975f0:	1000051e 	bne	r2,zero,97608 <OSMboxPend+0xa8>
   975f4:	e0fffd17 	ldw	r3,-12(fp)
   975f8:	00800084 	movi	r2,2
   975fc:	18800005 	stb	r2,0(r3)
   97600:	e03fff15 	stw	zero,-4(fp)
   97604:	00008206 	br	97810 <OSMboxPend+0x2b0>
   97608:	008002b4 	movhi	r2,10
   9760c:	1090f704 	addi	r2,r2,17372
   97610:	10800003 	ldbu	r2,0(r2)
   97614:	10803fcc 	andi	r2,r2,255
   97618:	1005003a 	cmpeq	r2,r2,zero
   9761c:	1000051e 	bne	r2,zero,97634 <OSMboxPend+0xd4>
   97620:	e0fffd17 	ldw	r3,-12(fp)
   97624:	00800344 	movi	r2,13
   97628:	18800005 	stb	r2,0(r3)
   9762c:	e03fff15 	stw	zero,-4(fp)
   97630:	00007706 	br	97810 <OSMboxPend+0x2b0>
   97634:	0005303a 	rdctl	r2,status
   97638:	e0bff815 	stw	r2,-32(fp)
   9763c:	e0fff817 	ldw	r3,-32(fp)
   97640:	00bfff84 	movi	r2,-2
   97644:	1884703a 	and	r2,r3,r2
   97648:	1001703a 	wrctl	status,r2
   9764c:	e0bff817 	ldw	r2,-32(fp)
   97650:	e0bff915 	stw	r2,-28(fp)
   97654:	e0bffb17 	ldw	r2,-20(fp)
   97658:	10800117 	ldw	r2,4(r2)
   9765c:	e0bffa15 	stw	r2,-24(fp)
   97660:	e0bffa17 	ldw	r2,-24(fp)
   97664:	1005003a 	cmpeq	r2,r2,zero
   97668:	10000b1e 	bne	r2,zero,97698 <OSMboxPend+0x138>
   9766c:	e0bffb17 	ldw	r2,-20(fp)
   97670:	10000115 	stw	zero,4(r2)
   97674:	e0bff917 	ldw	r2,-28(fp)
   97678:	e0bff715 	stw	r2,-36(fp)
   9767c:	e0bff717 	ldw	r2,-36(fp)
   97680:	1001703a 	wrctl	status,r2
   97684:	e0bffd17 	ldw	r2,-12(fp)
   97688:	10000005 	stb	zero,0(r2)
   9768c:	e0bffa17 	ldw	r2,-24(fp)
   97690:	e0bfff15 	stw	r2,-4(fp)
   97694:	00005e06 	br	97810 <OSMboxPend+0x2b0>
   97698:	008002b4 	movhi	r2,10
   9769c:	10910604 	addi	r2,r2,17432
   976a0:	10c00017 	ldw	r3,0(r2)
   976a4:	008002b4 	movhi	r2,10
   976a8:	10910604 	addi	r2,r2,17432
   976ac:	10800017 	ldw	r2,0(r2)
   976b0:	10800c03 	ldbu	r2,48(r2)
   976b4:	10800094 	ori	r2,r2,2
   976b8:	18800c05 	stb	r2,48(r3)
   976bc:	008002b4 	movhi	r2,10
   976c0:	10910604 	addi	r2,r2,17432
   976c4:	10800017 	ldw	r2,0(r2)
   976c8:	10000c45 	stb	zero,49(r2)
   976cc:	008002b4 	movhi	r2,10
   976d0:	10910604 	addi	r2,r2,17432
   976d4:	10c00017 	ldw	r3,0(r2)
   976d8:	e0bffc0b 	ldhu	r2,-16(fp)
   976dc:	18800b8d 	sth	r2,46(r3)
   976e0:	e13ffb17 	ldw	r4,-20(fp)
   976e4:	00946ac0 	call	946ac <OS_EventTaskWait>
   976e8:	e0bff917 	ldw	r2,-28(fp)
   976ec:	e0bff615 	stw	r2,-40(fp)
   976f0:	e0bff617 	ldw	r2,-40(fp)
   976f4:	1001703a 	wrctl	status,r2
   976f8:	0094f580 	call	94f58 <OS_Sched>
   976fc:	0005303a 	rdctl	r2,status
   97700:	e0bff515 	stw	r2,-44(fp)
   97704:	e0fff517 	ldw	r3,-44(fp)
   97708:	00bfff84 	movi	r2,-2
   9770c:	1884703a 	and	r2,r3,r2
   97710:	1001703a 	wrctl	status,r2
   97714:	e0bff517 	ldw	r2,-44(fp)
   97718:	e0bff915 	stw	r2,-28(fp)
   9771c:	008002b4 	movhi	r2,10
   97720:	10910604 	addi	r2,r2,17432
   97724:	10800017 	ldw	r2,0(r2)
   97728:	10800c43 	ldbu	r2,49(r2)
   9772c:	10803fcc 	andi	r2,r2,255
   97730:	e0bffe15 	stw	r2,-8(fp)
   97734:	e0fffe17 	ldw	r3,-8(fp)
   97738:	1805003a 	cmpeq	r2,r3,zero
   9773c:	1000041e 	bne	r2,zero,97750 <OSMboxPend+0x1f0>
   97740:	e0fffe17 	ldw	r3,-8(fp)
   97744:	188000a0 	cmpeqi	r2,r3,2
   97748:	1000091e 	bne	r2,zero,97770 <OSMboxPend+0x210>
   9774c:	00000d06 	br	97784 <OSMboxPend+0x224>
   97750:	008002b4 	movhi	r2,10
   97754:	10910604 	addi	r2,r2,17432
   97758:	10800017 	ldw	r2,0(r2)
   9775c:	10800917 	ldw	r2,36(r2)
   97760:	e0bffa15 	stw	r2,-24(fp)
   97764:	e0bffd17 	ldw	r2,-12(fp)
   97768:	10000005 	stb	zero,0(r2)
   9776c:	00000e06 	br	977a8 <OSMboxPend+0x248>
   97770:	e03ffa15 	stw	zero,-24(fp)
   97774:	e0fffd17 	ldw	r3,-12(fp)
   97778:	00800384 	movi	r2,14
   9777c:	18800005 	stb	r2,0(r3)
   97780:	00000906 	br	977a8 <OSMboxPend+0x248>
   97784:	008002b4 	movhi	r2,10
   97788:	10910604 	addi	r2,r2,17432
   9778c:	11000017 	ldw	r4,0(r2)
   97790:	e17ffb17 	ldw	r5,-20(fp)
   97794:	00949100 	call	94910 <OS_EventTaskRemove>
   97798:	e03ffa15 	stw	zero,-24(fp)
   9779c:	e0fffd17 	ldw	r3,-12(fp)
   977a0:	00800284 	movi	r2,10
   977a4:	18800005 	stb	r2,0(r3)
   977a8:	008002b4 	movhi	r2,10
   977ac:	10910604 	addi	r2,r2,17432
   977b0:	10800017 	ldw	r2,0(r2)
   977b4:	10000c05 	stb	zero,48(r2)
   977b8:	008002b4 	movhi	r2,10
   977bc:	10910604 	addi	r2,r2,17432
   977c0:	10800017 	ldw	r2,0(r2)
   977c4:	10000c45 	stb	zero,49(r2)
   977c8:	008002b4 	movhi	r2,10
   977cc:	10910604 	addi	r2,r2,17432
   977d0:	10800017 	ldw	r2,0(r2)
   977d4:	10000715 	stw	zero,28(r2)
   977d8:	008002b4 	movhi	r2,10
   977dc:	10910604 	addi	r2,r2,17432
   977e0:	10800017 	ldw	r2,0(r2)
   977e4:	10000815 	stw	zero,32(r2)
   977e8:	008002b4 	movhi	r2,10
   977ec:	10910604 	addi	r2,r2,17432
   977f0:	10800017 	ldw	r2,0(r2)
   977f4:	10000915 	stw	zero,36(r2)
   977f8:	e0bff917 	ldw	r2,-28(fp)
   977fc:	e0bff415 	stw	r2,-48(fp)
   97800:	e0bff417 	ldw	r2,-48(fp)
   97804:	1001703a 	wrctl	status,r2
   97808:	e0bffa17 	ldw	r2,-24(fp)
   9780c:	e0bfff15 	stw	r2,-4(fp)
   97810:	e0bfff17 	ldw	r2,-4(fp)
   97814:	e037883a 	mov	sp,fp
   97818:	dfc00117 	ldw	ra,4(sp)
   9781c:	df000017 	ldw	fp,0(sp)
   97820:	dec00204 	addi	sp,sp,8
   97824:	f800283a 	ret

00097828 <OSMboxPendAbort>:
   97828:	defff504 	addi	sp,sp,-44
   9782c:	dfc00a15 	stw	ra,40(sp)
   97830:	df000915 	stw	fp,36(sp)
   97834:	df000904 	addi	fp,sp,36
   97838:	e13ffc15 	stw	r4,-16(fp)
   9783c:	e1bffe15 	stw	r6,-8(fp)
   97840:	e17ffd05 	stb	r5,-12(fp)
   97844:	e03ffa15 	stw	zero,-24(fp)
   97848:	e0bffe17 	ldw	r2,-8(fp)
   9784c:	1004c03a 	cmpne	r2,r2,zero
   97850:	1000021e 	bne	r2,zero,9785c <OSMboxPendAbort+0x34>
   97854:	e03fff15 	stw	zero,-4(fp)
   97858:	00004c06 	br	9798c <OSMboxPendAbort+0x164>
   9785c:	e0bffc17 	ldw	r2,-16(fp)
   97860:	1004c03a 	cmpne	r2,r2,zero
   97864:	1000051e 	bne	r2,zero,9787c <OSMboxPendAbort+0x54>
   97868:	e0fffe17 	ldw	r3,-8(fp)
   9786c:	00800104 	movi	r2,4
   97870:	18800005 	stb	r2,0(r3)
   97874:	e03fff15 	stw	zero,-4(fp)
   97878:	00004406 	br	9798c <OSMboxPendAbort+0x164>
   9787c:	e0bffc17 	ldw	r2,-16(fp)
   97880:	10800003 	ldbu	r2,0(r2)
   97884:	10803fcc 	andi	r2,r2,255
   97888:	10800060 	cmpeqi	r2,r2,1
   9788c:	1000051e 	bne	r2,zero,978a4 <OSMboxPendAbort+0x7c>
   97890:	e0fffe17 	ldw	r3,-8(fp)
   97894:	00800044 	movi	r2,1
   97898:	18800005 	stb	r2,0(r3)
   9789c:	e03fff15 	stw	zero,-4(fp)
   978a0:	00003a06 	br	9798c <OSMboxPendAbort+0x164>
   978a4:	0005303a 	rdctl	r2,status
   978a8:	e0bff915 	stw	r2,-28(fp)
   978ac:	e0fff917 	ldw	r3,-28(fp)
   978b0:	00bfff84 	movi	r2,-2
   978b4:	1884703a 	and	r2,r3,r2
   978b8:	1001703a 	wrctl	status,r2
   978bc:	e0bff917 	ldw	r2,-28(fp)
   978c0:	e0bffa15 	stw	r2,-24(fp)
   978c4:	e0bffc17 	ldw	r2,-16(fp)
   978c8:	10800283 	ldbu	r2,10(r2)
   978cc:	10803fcc 	andi	r2,r2,255
   978d0:	1005003a 	cmpeq	r2,r2,zero
   978d4:	1000261e 	bne	r2,zero,97970 <OSMboxPendAbort+0x148>
   978d8:	e03ffb05 	stb	zero,-20(fp)
   978dc:	e0bffd03 	ldbu	r2,-12(fp)
   978e0:	10800060 	cmpeqi	r2,r2,1
   978e4:	1000091e 	bne	r2,zero,9790c <OSMboxPendAbort+0xe4>
   978e8:	00000e06 	br	97924 <OSMboxPendAbort+0xfc>
   978ec:	e13ffc17 	ldw	r4,-16(fp)
   978f0:	000b883a 	mov	r5,zero
   978f4:	01800084 	movi	r6,2
   978f8:	01c00084 	movi	r7,2
   978fc:	00945180 	call	94518 <OS_EventTaskRdy>
   97900:	e0bffb03 	ldbu	r2,-20(fp)
   97904:	10800044 	addi	r2,r2,1
   97908:	e0bffb05 	stb	r2,-20(fp)
   9790c:	e0bffc17 	ldw	r2,-16(fp)
   97910:	10800283 	ldbu	r2,10(r2)
   97914:	10803fcc 	andi	r2,r2,255
   97918:	1004c03a 	cmpne	r2,r2,zero
   9791c:	103ff31e 	bne	r2,zero,978ec <OSMboxPendAbort+0xc4>
   97920:	00000806 	br	97944 <OSMboxPendAbort+0x11c>
   97924:	e13ffc17 	ldw	r4,-16(fp)
   97928:	000b883a 	mov	r5,zero
   9792c:	01800084 	movi	r6,2
   97930:	01c00084 	movi	r7,2
   97934:	00945180 	call	94518 <OS_EventTaskRdy>
   97938:	e0bffb03 	ldbu	r2,-20(fp)
   9793c:	10800044 	addi	r2,r2,1
   97940:	e0bffb05 	stb	r2,-20(fp)
   97944:	e0bffa17 	ldw	r2,-24(fp)
   97948:	e0bff815 	stw	r2,-32(fp)
   9794c:	e0bff817 	ldw	r2,-32(fp)
   97950:	1001703a 	wrctl	status,r2
   97954:	0094f580 	call	94f58 <OS_Sched>
   97958:	e0fffe17 	ldw	r3,-8(fp)
   9795c:	00800384 	movi	r2,14
   97960:	18800005 	stb	r2,0(r3)
   97964:	e0bffb03 	ldbu	r2,-20(fp)
   97968:	e0bfff15 	stw	r2,-4(fp)
   9796c:	00000706 	br	9798c <OSMboxPendAbort+0x164>
   97970:	e0bffa17 	ldw	r2,-24(fp)
   97974:	e0bff715 	stw	r2,-36(fp)
   97978:	e0bff717 	ldw	r2,-36(fp)
   9797c:	1001703a 	wrctl	status,r2
   97980:	e0bffe17 	ldw	r2,-8(fp)
   97984:	10000005 	stb	zero,0(r2)
   97988:	e03fff15 	stw	zero,-4(fp)
   9798c:	e0bfff17 	ldw	r2,-4(fp)
   97990:	e037883a 	mov	sp,fp
   97994:	dfc00117 	ldw	ra,4(sp)
   97998:	df000017 	ldw	fp,0(sp)
   9799c:	dec00204 	addi	sp,sp,8
   979a0:	f800283a 	ret

000979a4 <OSMboxPost>:
   979a4:	defff604 	addi	sp,sp,-40
   979a8:	dfc00915 	stw	ra,36(sp)
   979ac:	df000815 	stw	fp,32(sp)
   979b0:	df000804 	addi	fp,sp,32
   979b4:	e13ffd15 	stw	r4,-12(fp)
   979b8:	e17ffe15 	stw	r5,-8(fp)
   979bc:	e03ffc15 	stw	zero,-16(fp)
   979c0:	e0bffd17 	ldw	r2,-12(fp)
   979c4:	1004c03a 	cmpne	r2,r2,zero
   979c8:	1000031e 	bne	r2,zero,979d8 <OSMboxPost+0x34>
   979cc:	00800104 	movi	r2,4
   979d0:	e0bfff15 	stw	r2,-4(fp)
   979d4:	00003a06 	br	97ac0 <OSMboxPost+0x11c>
   979d8:	e0bffe17 	ldw	r2,-8(fp)
   979dc:	1004c03a 	cmpne	r2,r2,zero
   979e0:	1000031e 	bne	r2,zero,979f0 <OSMboxPost+0x4c>
   979e4:	008000c4 	movi	r2,3
   979e8:	e0bfff15 	stw	r2,-4(fp)
   979ec:	00003406 	br	97ac0 <OSMboxPost+0x11c>
   979f0:	e0bffd17 	ldw	r2,-12(fp)
   979f4:	10800003 	ldbu	r2,0(r2)
   979f8:	10803fcc 	andi	r2,r2,255
   979fc:	10800060 	cmpeqi	r2,r2,1
   97a00:	1000031e 	bne	r2,zero,97a10 <OSMboxPost+0x6c>
   97a04:	00800044 	movi	r2,1
   97a08:	e0bfff15 	stw	r2,-4(fp)
   97a0c:	00002c06 	br	97ac0 <OSMboxPost+0x11c>
   97a10:	0005303a 	rdctl	r2,status
   97a14:	e0bffb15 	stw	r2,-20(fp)
   97a18:	e0fffb17 	ldw	r3,-20(fp)
   97a1c:	00bfff84 	movi	r2,-2
   97a20:	1884703a 	and	r2,r3,r2
   97a24:	1001703a 	wrctl	status,r2
   97a28:	e0bffb17 	ldw	r2,-20(fp)
   97a2c:	e0bffc15 	stw	r2,-16(fp)
   97a30:	e0bffd17 	ldw	r2,-12(fp)
   97a34:	10800283 	ldbu	r2,10(r2)
   97a38:	10803fcc 	andi	r2,r2,255
   97a3c:	1005003a 	cmpeq	r2,r2,zero
   97a40:	10000c1e 	bne	r2,zero,97a74 <OSMboxPost+0xd0>
   97a44:	e13ffd17 	ldw	r4,-12(fp)
   97a48:	e17ffe17 	ldw	r5,-8(fp)
   97a4c:	01800084 	movi	r6,2
   97a50:	000f883a 	mov	r7,zero
   97a54:	00945180 	call	94518 <OS_EventTaskRdy>
   97a58:	e0bffc17 	ldw	r2,-16(fp)
   97a5c:	e0bffa15 	stw	r2,-24(fp)
   97a60:	e0bffa17 	ldw	r2,-24(fp)
   97a64:	1001703a 	wrctl	status,r2
   97a68:	0094f580 	call	94f58 <OS_Sched>
   97a6c:	e03fff15 	stw	zero,-4(fp)
   97a70:	00001306 	br	97ac0 <OSMboxPost+0x11c>
   97a74:	e0bffd17 	ldw	r2,-12(fp)
   97a78:	10800117 	ldw	r2,4(r2)
   97a7c:	1005003a 	cmpeq	r2,r2,zero
   97a80:	1000071e 	bne	r2,zero,97aa0 <OSMboxPost+0xfc>
   97a84:	e0bffc17 	ldw	r2,-16(fp)
   97a88:	e0bff915 	stw	r2,-28(fp)
   97a8c:	e0bff917 	ldw	r2,-28(fp)
   97a90:	1001703a 	wrctl	status,r2
   97a94:	00800504 	movi	r2,20
   97a98:	e0bfff15 	stw	r2,-4(fp)
   97a9c:	00000806 	br	97ac0 <OSMboxPost+0x11c>
   97aa0:	e0fffd17 	ldw	r3,-12(fp)
   97aa4:	e0bffe17 	ldw	r2,-8(fp)
   97aa8:	18800115 	stw	r2,4(r3)
   97aac:	e0bffc17 	ldw	r2,-16(fp)
   97ab0:	e0bff815 	stw	r2,-32(fp)
   97ab4:	e0bff817 	ldw	r2,-32(fp)
   97ab8:	1001703a 	wrctl	status,r2
   97abc:	e03fff15 	stw	zero,-4(fp)
   97ac0:	e0bfff17 	ldw	r2,-4(fp)
   97ac4:	e037883a 	mov	sp,fp
   97ac8:	dfc00117 	ldw	ra,4(sp)
   97acc:	df000017 	ldw	fp,0(sp)
   97ad0:	dec00204 	addi	sp,sp,8
   97ad4:	f800283a 	ret

00097ad8 <OSMboxPostOpt>:
   97ad8:	defff504 	addi	sp,sp,-44
   97adc:	dfc00a15 	stw	ra,40(sp)
   97ae0:	df000915 	stw	fp,36(sp)
   97ae4:	df000904 	addi	fp,sp,36
   97ae8:	e13ffc15 	stw	r4,-16(fp)
   97aec:	e17ffd15 	stw	r5,-12(fp)
   97af0:	e1bffe05 	stb	r6,-8(fp)
   97af4:	e03ffb15 	stw	zero,-20(fp)
   97af8:	e0bffc17 	ldw	r2,-16(fp)
   97afc:	1004c03a 	cmpne	r2,r2,zero
   97b00:	1000031e 	bne	r2,zero,97b10 <OSMboxPostOpt+0x38>
   97b04:	00800104 	movi	r2,4
   97b08:	e0bfff15 	stw	r2,-4(fp)
   97b0c:	00004f06 	br	97c4c <OSMboxPostOpt+0x174>
   97b10:	e0bffd17 	ldw	r2,-12(fp)
   97b14:	1004c03a 	cmpne	r2,r2,zero
   97b18:	1000031e 	bne	r2,zero,97b28 <OSMboxPostOpt+0x50>
   97b1c:	008000c4 	movi	r2,3
   97b20:	e0bfff15 	stw	r2,-4(fp)
   97b24:	00004906 	br	97c4c <OSMboxPostOpt+0x174>
   97b28:	e0bffc17 	ldw	r2,-16(fp)
   97b2c:	10800003 	ldbu	r2,0(r2)
   97b30:	10803fcc 	andi	r2,r2,255
   97b34:	10800060 	cmpeqi	r2,r2,1
   97b38:	1000031e 	bne	r2,zero,97b48 <OSMboxPostOpt+0x70>
   97b3c:	00800044 	movi	r2,1
   97b40:	e0bfff15 	stw	r2,-4(fp)
   97b44:	00004106 	br	97c4c <OSMboxPostOpt+0x174>
   97b48:	0005303a 	rdctl	r2,status
   97b4c:	e0bffa15 	stw	r2,-24(fp)
   97b50:	e0fffa17 	ldw	r3,-24(fp)
   97b54:	00bfff84 	movi	r2,-2
   97b58:	1884703a 	and	r2,r3,r2
   97b5c:	1001703a 	wrctl	status,r2
   97b60:	e0bffa17 	ldw	r2,-24(fp)
   97b64:	e0bffb15 	stw	r2,-20(fp)
   97b68:	e0bffc17 	ldw	r2,-16(fp)
   97b6c:	10800283 	ldbu	r2,10(r2)
   97b70:	10803fcc 	andi	r2,r2,255
   97b74:	1005003a 	cmpeq	r2,r2,zero
   97b78:	1000211e 	bne	r2,zero,97c00 <OSMboxPostOpt+0x128>
   97b7c:	e0bffe03 	ldbu	r2,-8(fp)
   97b80:	1080004c 	andi	r2,r2,1
   97b84:	10803fcc 	andi	r2,r2,255
   97b88:	1005003a 	cmpeq	r2,r2,zero
   97b8c:	10000c1e 	bne	r2,zero,97bc0 <OSMboxPostOpt+0xe8>
   97b90:	00000506 	br	97ba8 <OSMboxPostOpt+0xd0>
   97b94:	e13ffc17 	ldw	r4,-16(fp)
   97b98:	e17ffd17 	ldw	r5,-12(fp)
   97b9c:	01800084 	movi	r6,2
   97ba0:	000f883a 	mov	r7,zero
   97ba4:	00945180 	call	94518 <OS_EventTaskRdy>
   97ba8:	e0bffc17 	ldw	r2,-16(fp)
   97bac:	10800283 	ldbu	r2,10(r2)
   97bb0:	10803fcc 	andi	r2,r2,255
   97bb4:	1004c03a 	cmpne	r2,r2,zero
   97bb8:	103ff61e 	bne	r2,zero,97b94 <OSMboxPostOpt+0xbc>
   97bbc:	00000506 	br	97bd4 <OSMboxPostOpt+0xfc>
   97bc0:	e13ffc17 	ldw	r4,-16(fp)
   97bc4:	e17ffd17 	ldw	r5,-12(fp)
   97bc8:	01800084 	movi	r6,2
   97bcc:	000f883a 	mov	r7,zero
   97bd0:	00945180 	call	94518 <OS_EventTaskRdy>
   97bd4:	e0bffb17 	ldw	r2,-20(fp)
   97bd8:	e0bff915 	stw	r2,-28(fp)
   97bdc:	e0bff917 	ldw	r2,-28(fp)
   97be0:	1001703a 	wrctl	status,r2
   97be4:	e0bffe03 	ldbu	r2,-8(fp)
   97be8:	1080010c 	andi	r2,r2,4
   97bec:	1004c03a 	cmpne	r2,r2,zero
   97bf0:	1000011e 	bne	r2,zero,97bf8 <OSMboxPostOpt+0x120>
   97bf4:	0094f580 	call	94f58 <OS_Sched>
   97bf8:	e03fff15 	stw	zero,-4(fp)
   97bfc:	00001306 	br	97c4c <OSMboxPostOpt+0x174>
   97c00:	e0bffc17 	ldw	r2,-16(fp)
   97c04:	10800117 	ldw	r2,4(r2)
   97c08:	1005003a 	cmpeq	r2,r2,zero
   97c0c:	1000071e 	bne	r2,zero,97c2c <OSMboxPostOpt+0x154>
   97c10:	e0bffb17 	ldw	r2,-20(fp)
   97c14:	e0bff815 	stw	r2,-32(fp)
   97c18:	e0bff817 	ldw	r2,-32(fp)
   97c1c:	1001703a 	wrctl	status,r2
   97c20:	00800504 	movi	r2,20
   97c24:	e0bfff15 	stw	r2,-4(fp)
   97c28:	00000806 	br	97c4c <OSMboxPostOpt+0x174>
   97c2c:	e0fffc17 	ldw	r3,-16(fp)
   97c30:	e0bffd17 	ldw	r2,-12(fp)
   97c34:	18800115 	stw	r2,4(r3)
   97c38:	e0bffb17 	ldw	r2,-20(fp)
   97c3c:	e0bff715 	stw	r2,-36(fp)
   97c40:	e0bff717 	ldw	r2,-36(fp)
   97c44:	1001703a 	wrctl	status,r2
   97c48:	e03fff15 	stw	zero,-4(fp)
   97c4c:	e0bfff17 	ldw	r2,-4(fp)
   97c50:	e037883a 	mov	sp,fp
   97c54:	dfc00117 	ldw	ra,4(sp)
   97c58:	df000017 	ldw	fp,0(sp)
   97c5c:	dec00204 	addi	sp,sp,8
   97c60:	f800283a 	ret

00097c64 <OSMboxQuery>:
   97c64:	defff604 	addi	sp,sp,-40
   97c68:	df000915 	stw	fp,36(sp)
   97c6c:	df000904 	addi	fp,sp,36
   97c70:	e13ffd15 	stw	r4,-12(fp)
   97c74:	e17ffe15 	stw	r5,-8(fp)
   97c78:	e03ff915 	stw	zero,-28(fp)
   97c7c:	e0bffd17 	ldw	r2,-12(fp)
   97c80:	1004c03a 	cmpne	r2,r2,zero
   97c84:	1000031e 	bne	r2,zero,97c94 <OSMboxQuery+0x30>
   97c88:	00800104 	movi	r2,4
   97c8c:	e0bfff15 	stw	r2,-4(fp)
   97c90:	00003b06 	br	97d80 <OSMboxQuery+0x11c>
   97c94:	e0bffe17 	ldw	r2,-8(fp)
   97c98:	1004c03a 	cmpne	r2,r2,zero
   97c9c:	1000031e 	bne	r2,zero,97cac <OSMboxQuery+0x48>
   97ca0:	00800244 	movi	r2,9
   97ca4:	e0bfff15 	stw	r2,-4(fp)
   97ca8:	00003506 	br	97d80 <OSMboxQuery+0x11c>
   97cac:	e0bffd17 	ldw	r2,-12(fp)
   97cb0:	10800003 	ldbu	r2,0(r2)
   97cb4:	10803fcc 	andi	r2,r2,255
   97cb8:	10800060 	cmpeqi	r2,r2,1
   97cbc:	1000031e 	bne	r2,zero,97ccc <OSMboxQuery+0x68>
   97cc0:	00800044 	movi	r2,1
   97cc4:	e0bfff15 	stw	r2,-4(fp)
   97cc8:	00002d06 	br	97d80 <OSMboxQuery+0x11c>
   97ccc:	0005303a 	rdctl	r2,status
   97cd0:	e0bff815 	stw	r2,-32(fp)
   97cd4:	e0fff817 	ldw	r3,-32(fp)
   97cd8:	00bfff84 	movi	r2,-2
   97cdc:	1884703a 	and	r2,r3,r2
   97ce0:	1001703a 	wrctl	status,r2
   97ce4:	e0bff817 	ldw	r2,-32(fp)
   97ce8:	e0bff915 	stw	r2,-28(fp)
   97cec:	e0bffd17 	ldw	r2,-12(fp)
   97cf0:	10c00283 	ldbu	r3,10(r2)
   97cf4:	e0bffe17 	ldw	r2,-8(fp)
   97cf8:	10c001c5 	stb	r3,7(r2)
   97cfc:	e0bffd17 	ldw	r2,-12(fp)
   97d00:	108002c4 	addi	r2,r2,11
   97d04:	e0bffb15 	stw	r2,-20(fp)
   97d08:	e0bffe17 	ldw	r2,-8(fp)
   97d0c:	10800104 	addi	r2,r2,4
   97d10:	e0bffa15 	stw	r2,-24(fp)
   97d14:	e03ffc05 	stb	zero,-16(fp)
   97d18:	00000d06 	br	97d50 <OSMboxQuery+0xec>
   97d1c:	e0bffb17 	ldw	r2,-20(fp)
   97d20:	10c00003 	ldbu	r3,0(r2)
   97d24:	e0bffa17 	ldw	r2,-24(fp)
   97d28:	10c00005 	stb	r3,0(r2)
   97d2c:	e0bffa17 	ldw	r2,-24(fp)
   97d30:	10800044 	addi	r2,r2,1
   97d34:	e0bffa15 	stw	r2,-24(fp)
   97d38:	e0bffb17 	ldw	r2,-20(fp)
   97d3c:	10800044 	addi	r2,r2,1
   97d40:	e0bffb15 	stw	r2,-20(fp)
   97d44:	e0bffc03 	ldbu	r2,-16(fp)
   97d48:	10800044 	addi	r2,r2,1
   97d4c:	e0bffc05 	stb	r2,-16(fp)
   97d50:	e0bffc03 	ldbu	r2,-16(fp)
   97d54:	108000f0 	cmpltui	r2,r2,3
   97d58:	103ff01e 	bne	r2,zero,97d1c <OSMboxQuery+0xb8>
   97d5c:	e0bffd17 	ldw	r2,-12(fp)
   97d60:	10c00117 	ldw	r3,4(r2)
   97d64:	e0bffe17 	ldw	r2,-8(fp)
   97d68:	10c00015 	stw	r3,0(r2)
   97d6c:	e0bff917 	ldw	r2,-28(fp)
   97d70:	e0bff715 	stw	r2,-36(fp)
   97d74:	e0bff717 	ldw	r2,-36(fp)
   97d78:	1001703a 	wrctl	status,r2
   97d7c:	e03fff15 	stw	zero,-4(fp)
   97d80:	e0bfff17 	ldw	r2,-4(fp)
   97d84:	e037883a 	mov	sp,fp
   97d88:	df000017 	ldw	fp,0(sp)
   97d8c:	dec00104 	addi	sp,sp,4
   97d90:	f800283a 	ret

00097d94 <OSMemCreate>:
   97d94:	defff304 	addi	sp,sp,-52
   97d98:	df000c15 	stw	fp,48(sp)
   97d9c:	df000c04 	addi	fp,sp,48
   97da0:	e13ffb15 	stw	r4,-20(fp)
   97da4:	e17ffc15 	stw	r5,-16(fp)
   97da8:	e1bffd15 	stw	r6,-12(fp)
   97dac:	e1fffe15 	stw	r7,-8(fp)
   97db0:	e03ff615 	stw	zero,-40(fp)
   97db4:	e0bffe17 	ldw	r2,-8(fp)
   97db8:	1004c03a 	cmpne	r2,r2,zero
   97dbc:	1000021e 	bne	r2,zero,97dc8 <OSMemCreate+0x34>
   97dc0:	e03fff15 	stw	zero,-4(fp)
   97dc4:	00007506 	br	97f9c <OSMemCreate+0x208>
   97dc8:	e0bffb17 	ldw	r2,-20(fp)
   97dcc:	1004c03a 	cmpne	r2,r2,zero
   97dd0:	1000051e 	bne	r2,zero,97de8 <OSMemCreate+0x54>
   97dd4:	e0fffe17 	ldw	r3,-8(fp)
   97dd8:	00801884 	movi	r2,98
   97ddc:	18800005 	stb	r2,0(r3)
   97de0:	e03fff15 	stw	zero,-4(fp)
   97de4:	00006d06 	br	97f9c <OSMemCreate+0x208>
   97de8:	e0bffb17 	ldw	r2,-20(fp)
   97dec:	108000cc 	andi	r2,r2,3
   97df0:	1005003a 	cmpeq	r2,r2,zero
   97df4:	1000051e 	bne	r2,zero,97e0c <OSMemCreate+0x78>
   97df8:	e0fffe17 	ldw	r3,-8(fp)
   97dfc:	00801884 	movi	r2,98
   97e00:	18800005 	stb	r2,0(r3)
   97e04:	e03fff15 	stw	zero,-4(fp)
   97e08:	00006406 	br	97f9c <OSMemCreate+0x208>
   97e0c:	e0bffc17 	ldw	r2,-16(fp)
   97e10:	108000a8 	cmpgeui	r2,r2,2
   97e14:	1000051e 	bne	r2,zero,97e2c <OSMemCreate+0x98>
   97e18:	e0fffe17 	ldw	r3,-8(fp)
   97e1c:	008016c4 	movi	r2,91
   97e20:	18800005 	stb	r2,0(r3)
   97e24:	e03fff15 	stw	zero,-4(fp)
   97e28:	00005c06 	br	97f9c <OSMemCreate+0x208>
   97e2c:	e0bffd17 	ldw	r2,-12(fp)
   97e30:	10800128 	cmpgeui	r2,r2,4
   97e34:	1000051e 	bne	r2,zero,97e4c <OSMemCreate+0xb8>
   97e38:	e0fffe17 	ldw	r3,-8(fp)
   97e3c:	00801704 	movi	r2,92
   97e40:	18800005 	stb	r2,0(r3)
   97e44:	e03fff15 	stw	zero,-4(fp)
   97e48:	00005406 	br	97f9c <OSMemCreate+0x208>
   97e4c:	0005303a 	rdctl	r2,status
   97e50:	e0bff515 	stw	r2,-44(fp)
   97e54:	e0fff517 	ldw	r3,-44(fp)
   97e58:	00bfff84 	movi	r2,-2
   97e5c:	1884703a 	and	r2,r3,r2
   97e60:	1001703a 	wrctl	status,r2
   97e64:	e0bff517 	ldw	r2,-44(fp)
   97e68:	e0bff615 	stw	r2,-40(fp)
   97e6c:	008002b4 	movhi	r2,10
   97e70:	10910004 	addi	r2,r2,17408
   97e74:	10800017 	ldw	r2,0(r2)
   97e78:	e0bffa15 	stw	r2,-24(fp)
   97e7c:	008002b4 	movhi	r2,10
   97e80:	10910004 	addi	r2,r2,17408
   97e84:	10800017 	ldw	r2,0(r2)
   97e88:	1005003a 	cmpeq	r2,r2,zero
   97e8c:	1000081e 	bne	r2,zero,97eb0 <OSMemCreate+0x11c>
   97e90:	008002b4 	movhi	r2,10
   97e94:	10910004 	addi	r2,r2,17408
   97e98:	10800017 	ldw	r2,0(r2)
   97e9c:	10800117 	ldw	r2,4(r2)
   97ea0:	1007883a 	mov	r3,r2
   97ea4:	008002b4 	movhi	r2,10
   97ea8:	10910004 	addi	r2,r2,17408
   97eac:	10c00015 	stw	r3,0(r2)
   97eb0:	e0bff617 	ldw	r2,-40(fp)
   97eb4:	e0bff415 	stw	r2,-48(fp)
   97eb8:	e0bff417 	ldw	r2,-48(fp)
   97ebc:	1001703a 	wrctl	status,r2
   97ec0:	e0bffa17 	ldw	r2,-24(fp)
   97ec4:	1004c03a 	cmpne	r2,r2,zero
   97ec8:	1000051e 	bne	r2,zero,97ee0 <OSMemCreate+0x14c>
   97ecc:	e0fffe17 	ldw	r3,-8(fp)
   97ed0:	00801684 	movi	r2,90
   97ed4:	18800005 	stb	r2,0(r3)
   97ed8:	e03fff15 	stw	zero,-4(fp)
   97edc:	00002f06 	br	97f9c <OSMemCreate+0x208>
   97ee0:	e0bffb17 	ldw	r2,-20(fp)
   97ee4:	e0bff815 	stw	r2,-32(fp)
   97ee8:	e0bffb17 	ldw	r2,-20(fp)
   97eec:	1007883a 	mov	r3,r2
   97ef0:	e0bffd17 	ldw	r2,-12(fp)
   97ef4:	1885883a 	add	r2,r3,r2
   97ef8:	e0bff915 	stw	r2,-28(fp)
   97efc:	e03ff715 	stw	zero,-36(fp)
   97f00:	00000d06 	br	97f38 <OSMemCreate+0x1a4>
   97f04:	e0fff817 	ldw	r3,-32(fp)
   97f08:	e0bff917 	ldw	r2,-28(fp)
   97f0c:	18800015 	stw	r2,0(r3)
   97f10:	e0bff917 	ldw	r2,-28(fp)
   97f14:	e0bff815 	stw	r2,-32(fp)
   97f18:	e0bff917 	ldw	r2,-28(fp)
   97f1c:	1007883a 	mov	r3,r2
   97f20:	e0bffd17 	ldw	r2,-12(fp)
   97f24:	1885883a 	add	r2,r3,r2
   97f28:	e0bff915 	stw	r2,-28(fp)
   97f2c:	e0bff717 	ldw	r2,-36(fp)
   97f30:	10800044 	addi	r2,r2,1
   97f34:	e0bff715 	stw	r2,-36(fp)
   97f38:	e0bffc17 	ldw	r2,-16(fp)
   97f3c:	10ffffc4 	addi	r3,r2,-1
   97f40:	e0bff717 	ldw	r2,-36(fp)
   97f44:	10ffef36 	bltu	r2,r3,97f04 <OSMemCreate+0x170>
   97f48:	e0bff817 	ldw	r2,-32(fp)
   97f4c:	10000015 	stw	zero,0(r2)
   97f50:	e0fffa17 	ldw	r3,-24(fp)
   97f54:	e0bffb17 	ldw	r2,-20(fp)
   97f58:	18800015 	stw	r2,0(r3)
   97f5c:	e0fffa17 	ldw	r3,-24(fp)
   97f60:	e0bffb17 	ldw	r2,-20(fp)
   97f64:	18800115 	stw	r2,4(r3)
   97f68:	e0fffa17 	ldw	r3,-24(fp)
   97f6c:	e0bffc17 	ldw	r2,-16(fp)
   97f70:	18800415 	stw	r2,16(r3)
   97f74:	e0fffa17 	ldw	r3,-24(fp)
   97f78:	e0bffc17 	ldw	r2,-16(fp)
   97f7c:	18800315 	stw	r2,12(r3)
   97f80:	e0fffa17 	ldw	r3,-24(fp)
   97f84:	e0bffd17 	ldw	r2,-12(fp)
   97f88:	18800215 	stw	r2,8(r3)
   97f8c:	e0bffe17 	ldw	r2,-8(fp)
   97f90:	10000005 	stb	zero,0(r2)
   97f94:	e0bffa17 	ldw	r2,-24(fp)
   97f98:	e0bfff15 	stw	r2,-4(fp)
   97f9c:	e0bfff17 	ldw	r2,-4(fp)
   97fa0:	e037883a 	mov	sp,fp
   97fa4:	df000017 	ldw	fp,0(sp)
   97fa8:	dec00104 	addi	sp,sp,4
   97fac:	f800283a 	ret

00097fb0 <OSMemGet>:
   97fb0:	defff704 	addi	sp,sp,-36
   97fb4:	df000815 	stw	fp,32(sp)
   97fb8:	df000804 	addi	fp,sp,32
   97fbc:	e13ffd15 	stw	r4,-12(fp)
   97fc0:	e17ffe15 	stw	r5,-8(fp)
   97fc4:	e03ffb15 	stw	zero,-20(fp)
   97fc8:	e0bffe17 	ldw	r2,-8(fp)
   97fcc:	1004c03a 	cmpne	r2,r2,zero
   97fd0:	1000021e 	bne	r2,zero,97fdc <OSMemGet+0x2c>
   97fd4:	e03fff15 	stw	zero,-4(fp)
   97fd8:	00003106 	br	980a0 <OSMemGet+0xf0>
   97fdc:	e0bffd17 	ldw	r2,-12(fp)
   97fe0:	1004c03a 	cmpne	r2,r2,zero
   97fe4:	1000051e 	bne	r2,zero,97ffc <OSMemGet+0x4c>
   97fe8:	e0fffe17 	ldw	r3,-8(fp)
   97fec:	00801804 	movi	r2,96
   97ff0:	18800005 	stb	r2,0(r3)
   97ff4:	e03fff15 	stw	zero,-4(fp)
   97ff8:	00002906 	br	980a0 <OSMemGet+0xf0>
   97ffc:	0005303a 	rdctl	r2,status
   98000:	e0bffa15 	stw	r2,-24(fp)
   98004:	e0fffa17 	ldw	r3,-24(fp)
   98008:	00bfff84 	movi	r2,-2
   9800c:	1884703a 	and	r2,r3,r2
   98010:	1001703a 	wrctl	status,r2
   98014:	e0bffa17 	ldw	r2,-24(fp)
   98018:	e0bffb15 	stw	r2,-20(fp)
   9801c:	e0bffd17 	ldw	r2,-12(fp)
   98020:	10800417 	ldw	r2,16(r2)
   98024:	1005003a 	cmpeq	r2,r2,zero
   98028:	1000151e 	bne	r2,zero,98080 <OSMemGet+0xd0>
   9802c:	e0bffd17 	ldw	r2,-12(fp)
   98030:	10800117 	ldw	r2,4(r2)
   98034:	e0bffc15 	stw	r2,-16(fp)
   98038:	e0bffc17 	ldw	r2,-16(fp)
   9803c:	10c00017 	ldw	r3,0(r2)
   98040:	e0bffd17 	ldw	r2,-12(fp)
   98044:	10c00115 	stw	r3,4(r2)
   98048:	e0bffd17 	ldw	r2,-12(fp)
   9804c:	10800417 	ldw	r2,16(r2)
   98050:	10ffffc4 	addi	r3,r2,-1
   98054:	e0bffd17 	ldw	r2,-12(fp)
   98058:	10c00415 	stw	r3,16(r2)
   9805c:	e0bffb17 	ldw	r2,-20(fp)
   98060:	e0bff915 	stw	r2,-28(fp)
   98064:	e0bff917 	ldw	r2,-28(fp)
   98068:	1001703a 	wrctl	status,r2
   9806c:	e0bffe17 	ldw	r2,-8(fp)
   98070:	10000005 	stb	zero,0(r2)
   98074:	e0bffc17 	ldw	r2,-16(fp)
   98078:	e0bfff15 	stw	r2,-4(fp)
   9807c:	00000806 	br	980a0 <OSMemGet+0xf0>
   98080:	e0bffb17 	ldw	r2,-20(fp)
   98084:	e0bff815 	stw	r2,-32(fp)
   98088:	e0bff817 	ldw	r2,-32(fp)
   9808c:	1001703a 	wrctl	status,r2
   98090:	e0fffe17 	ldw	r3,-8(fp)
   98094:	00801744 	movi	r2,93
   98098:	18800005 	stb	r2,0(r3)
   9809c:	e03fff15 	stw	zero,-4(fp)
   980a0:	e0bfff17 	ldw	r2,-4(fp)
   980a4:	e037883a 	mov	sp,fp
   980a8:	df000017 	ldw	fp,0(sp)
   980ac:	dec00104 	addi	sp,sp,4
   980b0:	f800283a 	ret

000980b4 <OSMemNameGet>:
   980b4:	defff604 	addi	sp,sp,-40
   980b8:	dfc00915 	stw	ra,36(sp)
   980bc:	df000815 	stw	fp,32(sp)
   980c0:	df000804 	addi	fp,sp,32
   980c4:	e13ffc15 	stw	r4,-16(fp)
   980c8:	e17ffd15 	stw	r5,-12(fp)
   980cc:	e1bffe15 	stw	r6,-8(fp)
   980d0:	e03ffa15 	stw	zero,-24(fp)
   980d4:	e0bffe17 	ldw	r2,-8(fp)
   980d8:	1004c03a 	cmpne	r2,r2,zero
   980dc:	1000021e 	bne	r2,zero,980e8 <OSMemNameGet+0x34>
   980e0:	e03fff15 	stw	zero,-4(fp)
   980e4:	00003006 	br	981a8 <OSMemNameGet+0xf4>
   980e8:	e0bffc17 	ldw	r2,-16(fp)
   980ec:	1004c03a 	cmpne	r2,r2,zero
   980f0:	1000051e 	bne	r2,zero,98108 <OSMemNameGet+0x54>
   980f4:	e0fffe17 	ldw	r3,-8(fp)
   980f8:	00801804 	movi	r2,96
   980fc:	18800005 	stb	r2,0(r3)
   98100:	e03fff15 	stw	zero,-4(fp)
   98104:	00002806 	br	981a8 <OSMemNameGet+0xf4>
   98108:	e0bffd17 	ldw	r2,-12(fp)
   9810c:	1004c03a 	cmpne	r2,r2,zero
   98110:	1000051e 	bne	r2,zero,98128 <OSMemNameGet+0x74>
   98114:	e0fffe17 	ldw	r3,-8(fp)
   98118:	00800304 	movi	r2,12
   9811c:	18800005 	stb	r2,0(r3)
   98120:	e03fff15 	stw	zero,-4(fp)
   98124:	00002006 	br	981a8 <OSMemNameGet+0xf4>
   98128:	008002b4 	movhi	r2,10
   9812c:	10910504 	addi	r2,r2,17428
   98130:	10800003 	ldbu	r2,0(r2)
   98134:	10803fcc 	andi	r2,r2,255
   98138:	1005003a 	cmpeq	r2,r2,zero
   9813c:	1000051e 	bne	r2,zero,98154 <OSMemNameGet+0xa0>
   98140:	e0fffe17 	ldw	r3,-8(fp)
   98144:	00800444 	movi	r2,17
   98148:	18800005 	stb	r2,0(r3)
   9814c:	e03fff15 	stw	zero,-4(fp)
   98150:	00001506 	br	981a8 <OSMemNameGet+0xf4>
   98154:	0005303a 	rdctl	r2,status
   98158:	e0bff915 	stw	r2,-28(fp)
   9815c:	e0fff917 	ldw	r3,-28(fp)
   98160:	00bfff84 	movi	r2,-2
   98164:	1884703a 	and	r2,r3,r2
   98168:	1001703a 	wrctl	status,r2
   9816c:	e0bff917 	ldw	r2,-28(fp)
   98170:	e0bffa15 	stw	r2,-24(fp)
   98174:	e0bffc17 	ldw	r2,-16(fp)
   98178:	11400504 	addi	r5,r2,20
   9817c:	e13ffd17 	ldw	r4,-12(fp)
   98180:	009509c0 	call	9509c <OS_StrCopy>
   98184:	e0bffb05 	stb	r2,-20(fp)
   98188:	e0bffa17 	ldw	r2,-24(fp)
   9818c:	e0bff815 	stw	r2,-32(fp)
   98190:	e0bff817 	ldw	r2,-32(fp)
   98194:	1001703a 	wrctl	status,r2
   98198:	e0bffe17 	ldw	r2,-8(fp)
   9819c:	10000005 	stb	zero,0(r2)
   981a0:	e0bffb03 	ldbu	r2,-20(fp)
   981a4:	e0bfff15 	stw	r2,-4(fp)
   981a8:	e0bfff17 	ldw	r2,-4(fp)
   981ac:	e037883a 	mov	sp,fp
   981b0:	dfc00117 	ldw	ra,4(sp)
   981b4:	df000017 	ldw	fp,0(sp)
   981b8:	dec00204 	addi	sp,sp,8
   981bc:	f800283a 	ret

000981c0 <OSMemNameSet>:
   981c0:	defff604 	addi	sp,sp,-40
   981c4:	dfc00915 	stw	ra,36(sp)
   981c8:	df000815 	stw	fp,32(sp)
   981cc:	df000804 	addi	fp,sp,32
   981d0:	e13ffd15 	stw	r4,-12(fp)
   981d4:	e17ffe15 	stw	r5,-8(fp)
   981d8:	e1bfff15 	stw	r6,-4(fp)
   981dc:	e03ffb15 	stw	zero,-20(fp)
   981e0:	e0bfff17 	ldw	r2,-4(fp)
   981e4:	1005003a 	cmpeq	r2,r2,zero
   981e8:	1000381e 	bne	r2,zero,982cc <OSMemNameSet+0x10c>
   981ec:	e0bffd17 	ldw	r2,-12(fp)
   981f0:	1004c03a 	cmpne	r2,r2,zero
   981f4:	1000041e 	bne	r2,zero,98208 <OSMemNameSet+0x48>
   981f8:	e0ffff17 	ldw	r3,-4(fp)
   981fc:	00801804 	movi	r2,96
   98200:	18800005 	stb	r2,0(r3)
   98204:	00003106 	br	982cc <OSMemNameSet+0x10c>
   98208:	e0bffe17 	ldw	r2,-8(fp)
   9820c:	1004c03a 	cmpne	r2,r2,zero
   98210:	1000041e 	bne	r2,zero,98224 <OSMemNameSet+0x64>
   98214:	e0ffff17 	ldw	r3,-4(fp)
   98218:	00800304 	movi	r2,12
   9821c:	18800005 	stb	r2,0(r3)
   98220:	00002a06 	br	982cc <OSMemNameSet+0x10c>
   98224:	008002b4 	movhi	r2,10
   98228:	10910504 	addi	r2,r2,17428
   9822c:	10800003 	ldbu	r2,0(r2)
   98230:	10803fcc 	andi	r2,r2,255
   98234:	1005003a 	cmpeq	r2,r2,zero
   98238:	1000041e 	bne	r2,zero,9824c <OSMemNameSet+0x8c>
   9823c:	e0ffff17 	ldw	r3,-4(fp)
   98240:	00800484 	movi	r2,18
   98244:	18800005 	stb	r2,0(r3)
   98248:	00002006 	br	982cc <OSMemNameSet+0x10c>
   9824c:	0005303a 	rdctl	r2,status
   98250:	e0bffa15 	stw	r2,-24(fp)
   98254:	e0fffa17 	ldw	r3,-24(fp)
   98258:	00bfff84 	movi	r2,-2
   9825c:	1884703a 	and	r2,r3,r2
   98260:	1001703a 	wrctl	status,r2
   98264:	e0bffa17 	ldw	r2,-24(fp)
   98268:	e0bffb15 	stw	r2,-20(fp)
   9826c:	e13ffe17 	ldw	r4,-8(fp)
   98270:	009511c0 	call	9511c <OS_StrLen>
   98274:	e0bffc05 	stb	r2,-16(fp)
   98278:	e0bffc03 	ldbu	r2,-16(fp)
   9827c:	10800830 	cmpltui	r2,r2,32
   98280:	1000081e 	bne	r2,zero,982a4 <OSMemNameSet+0xe4>
   98284:	e0bffb17 	ldw	r2,-20(fp)
   98288:	e0bff915 	stw	r2,-28(fp)
   9828c:	e0bff917 	ldw	r2,-28(fp)
   98290:	1001703a 	wrctl	status,r2
   98294:	e0ffff17 	ldw	r3,-4(fp)
   98298:	008018c4 	movi	r2,99
   9829c:	18800005 	stb	r2,0(r3)
   982a0:	00000a06 	br	982cc <OSMemNameSet+0x10c>
   982a4:	e0bffd17 	ldw	r2,-12(fp)
   982a8:	11000504 	addi	r4,r2,20
   982ac:	e17ffe17 	ldw	r5,-8(fp)
   982b0:	009509c0 	call	9509c <OS_StrCopy>
   982b4:	e0bffb17 	ldw	r2,-20(fp)
   982b8:	e0bff815 	stw	r2,-32(fp)
   982bc:	e0bff817 	ldw	r2,-32(fp)
   982c0:	1001703a 	wrctl	status,r2
   982c4:	e0bfff17 	ldw	r2,-4(fp)
   982c8:	10000005 	stb	zero,0(r2)
   982cc:	e037883a 	mov	sp,fp
   982d0:	dfc00117 	ldw	ra,4(sp)
   982d4:	df000017 	ldw	fp,0(sp)
   982d8:	dec00204 	addi	sp,sp,8
   982dc:	f800283a 	ret

000982e0 <OSMemPut>:
   982e0:	defff804 	addi	sp,sp,-32
   982e4:	df000715 	stw	fp,28(sp)
   982e8:	df000704 	addi	fp,sp,28
   982ec:	e13ffd15 	stw	r4,-12(fp)
   982f0:	e17ffe15 	stw	r5,-8(fp)
   982f4:	e03ffc15 	stw	zero,-16(fp)
   982f8:	e0bffd17 	ldw	r2,-12(fp)
   982fc:	1004c03a 	cmpne	r2,r2,zero
   98300:	1000031e 	bne	r2,zero,98310 <OSMemPut+0x30>
   98304:	00801804 	movi	r2,96
   98308:	e0bfff15 	stw	r2,-4(fp)
   9830c:	00002b06 	br	983bc <OSMemPut+0xdc>
   98310:	e0bffe17 	ldw	r2,-8(fp)
   98314:	1004c03a 	cmpne	r2,r2,zero
   98318:	1000031e 	bne	r2,zero,98328 <OSMemPut+0x48>
   9831c:	008017c4 	movi	r2,95
   98320:	e0bfff15 	stw	r2,-4(fp)
   98324:	00002506 	br	983bc <OSMemPut+0xdc>
   98328:	0005303a 	rdctl	r2,status
   9832c:	e0bffb15 	stw	r2,-20(fp)
   98330:	e0fffb17 	ldw	r3,-20(fp)
   98334:	00bfff84 	movi	r2,-2
   98338:	1884703a 	and	r2,r3,r2
   9833c:	1001703a 	wrctl	status,r2
   98340:	e0bffb17 	ldw	r2,-20(fp)
   98344:	e0bffc15 	stw	r2,-16(fp)
   98348:	e0bffd17 	ldw	r2,-12(fp)
   9834c:	10c00417 	ldw	r3,16(r2)
   98350:	e0bffd17 	ldw	r2,-12(fp)
   98354:	10800317 	ldw	r2,12(r2)
   98358:	18800736 	bltu	r3,r2,98378 <OSMemPut+0x98>
   9835c:	e0bffc17 	ldw	r2,-16(fp)
   98360:	e0bffa15 	stw	r2,-24(fp)
   98364:	e0bffa17 	ldw	r2,-24(fp)
   98368:	1001703a 	wrctl	status,r2
   9836c:	00801784 	movi	r2,94
   98370:	e0bfff15 	stw	r2,-4(fp)
   98374:	00001106 	br	983bc <OSMemPut+0xdc>
   98378:	e0fffe17 	ldw	r3,-8(fp)
   9837c:	e0bffd17 	ldw	r2,-12(fp)
   98380:	10800117 	ldw	r2,4(r2)
   98384:	18800015 	stw	r2,0(r3)
   98388:	e0fffd17 	ldw	r3,-12(fp)
   9838c:	e0bffe17 	ldw	r2,-8(fp)
   98390:	18800115 	stw	r2,4(r3)
   98394:	e0bffd17 	ldw	r2,-12(fp)
   98398:	10800417 	ldw	r2,16(r2)
   9839c:	10c00044 	addi	r3,r2,1
   983a0:	e0bffd17 	ldw	r2,-12(fp)
   983a4:	10c00415 	stw	r3,16(r2)
   983a8:	e0bffc17 	ldw	r2,-16(fp)
   983ac:	e0bff915 	stw	r2,-28(fp)
   983b0:	e0bff917 	ldw	r2,-28(fp)
   983b4:	1001703a 	wrctl	status,r2
   983b8:	e03fff15 	stw	zero,-4(fp)
   983bc:	e0bfff17 	ldw	r2,-4(fp)
   983c0:	e037883a 	mov	sp,fp
   983c4:	df000017 	ldw	fp,0(sp)
   983c8:	dec00104 	addi	sp,sp,4
   983cc:	f800283a 	ret

000983d0 <OSMemQuery>:
   983d0:	defff904 	addi	sp,sp,-28
   983d4:	df000615 	stw	fp,24(sp)
   983d8:	df000604 	addi	fp,sp,24
   983dc:	e13ffd15 	stw	r4,-12(fp)
   983e0:	e17ffe15 	stw	r5,-8(fp)
   983e4:	e03ffc15 	stw	zero,-16(fp)
   983e8:	e0bffd17 	ldw	r2,-12(fp)
   983ec:	1004c03a 	cmpne	r2,r2,zero
   983f0:	1000031e 	bne	r2,zero,98400 <OSMemQuery+0x30>
   983f4:	00801804 	movi	r2,96
   983f8:	e0bfff15 	stw	r2,-4(fp)
   983fc:	00002e06 	br	984b8 <OSMemQuery+0xe8>
   98400:	e0bffe17 	ldw	r2,-8(fp)
   98404:	1004c03a 	cmpne	r2,r2,zero
   98408:	1000031e 	bne	r2,zero,98418 <OSMemQuery+0x48>
   9840c:	00801844 	movi	r2,97
   98410:	e0bfff15 	stw	r2,-4(fp)
   98414:	00002806 	br	984b8 <OSMemQuery+0xe8>
   98418:	0005303a 	rdctl	r2,status
   9841c:	e0bffb15 	stw	r2,-20(fp)
   98420:	e0fffb17 	ldw	r3,-20(fp)
   98424:	00bfff84 	movi	r2,-2
   98428:	1884703a 	and	r2,r3,r2
   9842c:	1001703a 	wrctl	status,r2
   98430:	e0bffb17 	ldw	r2,-20(fp)
   98434:	e0bffc15 	stw	r2,-16(fp)
   98438:	e0bffd17 	ldw	r2,-12(fp)
   9843c:	10c00017 	ldw	r3,0(r2)
   98440:	e0bffe17 	ldw	r2,-8(fp)
   98444:	10c00015 	stw	r3,0(r2)
   98448:	e0bffd17 	ldw	r2,-12(fp)
   9844c:	10c00117 	ldw	r3,4(r2)
   98450:	e0bffe17 	ldw	r2,-8(fp)
   98454:	10c00115 	stw	r3,4(r2)
   98458:	e0bffd17 	ldw	r2,-12(fp)
   9845c:	10c00217 	ldw	r3,8(r2)
   98460:	e0bffe17 	ldw	r2,-8(fp)
   98464:	10c00215 	stw	r3,8(r2)
   98468:	e0bffd17 	ldw	r2,-12(fp)
   9846c:	10c00317 	ldw	r3,12(r2)
   98470:	e0bffe17 	ldw	r2,-8(fp)
   98474:	10c00315 	stw	r3,12(r2)
   98478:	e0bffd17 	ldw	r2,-12(fp)
   9847c:	10c00417 	ldw	r3,16(r2)
   98480:	e0bffe17 	ldw	r2,-8(fp)
   98484:	10c00415 	stw	r3,16(r2)
   98488:	e0bffc17 	ldw	r2,-16(fp)
   9848c:	e0bffa15 	stw	r2,-24(fp)
   98490:	e0bffa17 	ldw	r2,-24(fp)
   98494:	1001703a 	wrctl	status,r2
   98498:	e0bffe17 	ldw	r2,-8(fp)
   9849c:	10c00317 	ldw	r3,12(r2)
   984a0:	e0bffe17 	ldw	r2,-8(fp)
   984a4:	10800417 	ldw	r2,16(r2)
   984a8:	1887c83a 	sub	r3,r3,r2
   984ac:	e0bffe17 	ldw	r2,-8(fp)
   984b0:	10c00515 	stw	r3,20(r2)
   984b4:	e03fff15 	stw	zero,-4(fp)
   984b8:	e0bfff17 	ldw	r2,-4(fp)
   984bc:	e037883a 	mov	sp,fp
   984c0:	df000017 	ldw	fp,0(sp)
   984c4:	dec00104 	addi	sp,sp,4
   984c8:	f800283a 	ret

000984cc <OS_MemInit>:
   984cc:	defffc04 	addi	sp,sp,-16
   984d0:	dfc00315 	stw	ra,12(sp)
   984d4:	df000215 	stw	fp,8(sp)
   984d8:	df000204 	addi	fp,sp,8
   984dc:	010002f4 	movhi	r4,11
   984e0:	21123804 	addi	r4,r4,18656
   984e4:	01430c04 	movi	r5,3120
   984e8:	0094e980 	call	94e98 <OS_MemClr>
   984ec:	008002f4 	movhi	r2,11
   984f0:	10923804 	addi	r2,r2,18656
   984f4:	e0bfff15 	stw	r2,-4(fp)
   984f8:	e03ffe0d 	sth	zero,-8(fp)
   984fc:	00001406 	br	98550 <OS_MemInit+0x84>
   98500:	e13ffe0b 	ldhu	r4,-8(fp)
   98504:	01400d04 	movi	r5,52
   98508:	00886b00 	call	886b0 <__mulsi3>
   9850c:	1007883a 	mov	r3,r2
   98510:	008002f4 	movhi	r2,11
   98514:	10924504 	addi	r2,r2,18708
   98518:	1887883a 	add	r3,r3,r2
   9851c:	e0bfff17 	ldw	r2,-4(fp)
   98520:	10c00115 	stw	r3,4(r2)
   98524:	e0ffff17 	ldw	r3,-4(fp)
   98528:	00800fc4 	movi	r2,63
   9852c:	18800505 	stb	r2,20(r3)
   98530:	e0bfff17 	ldw	r2,-4(fp)
   98534:	10000545 	stb	zero,21(r2)
   98538:	e0bfff17 	ldw	r2,-4(fp)
   9853c:	10800d04 	addi	r2,r2,52
   98540:	e0bfff15 	stw	r2,-4(fp)
   98544:	e0bffe0b 	ldhu	r2,-8(fp)
   98548:	10800044 	addi	r2,r2,1
   9854c:	e0bffe0d 	sth	r2,-8(fp)
   98550:	e0bffe0b 	ldhu	r2,-8(fp)
   98554:	10800ef0 	cmpltui	r2,r2,59
   98558:	103fe91e 	bne	r2,zero,98500 <OS_MemInit+0x34>
   9855c:	e0bfff17 	ldw	r2,-4(fp)
   98560:	10000115 	stw	zero,4(r2)
   98564:	e0ffff17 	ldw	r3,-4(fp)
   98568:	00800fc4 	movi	r2,63
   9856c:	18800505 	stb	r2,20(r3)
   98570:	e0bfff17 	ldw	r2,-4(fp)
   98574:	10000545 	stb	zero,21(r2)
   98578:	00c002b4 	movhi	r3,10
   9857c:	18d10004 	addi	r3,r3,17408
   98580:	008002f4 	movhi	r2,11
   98584:	10923804 	addi	r2,r2,18656
   98588:	18800015 	stw	r2,0(r3)
   9858c:	e037883a 	mov	sp,fp
   98590:	dfc00117 	ldw	ra,4(sp)
   98594:	df000017 	ldw	fp,0(sp)
   98598:	dec00204 	addi	sp,sp,8
   9859c:	f800283a 	ret

000985a0 <OSMutexAccept>:
   985a0:	defff604 	addi	sp,sp,-40
   985a4:	df000915 	stw	fp,36(sp)
   985a8:	df000904 	addi	fp,sp,36
   985ac:	e13ffd15 	stw	r4,-12(fp)
   985b0:	e17ffe15 	stw	r5,-8(fp)
   985b4:	e03ffb15 	stw	zero,-20(fp)
   985b8:	e0bffe17 	ldw	r2,-8(fp)
   985bc:	1004c03a 	cmpne	r2,r2,zero
   985c0:	1000021e 	bne	r2,zero,985cc <OSMutexAccept+0x2c>
   985c4:	e03fff15 	stw	zero,-4(fp)
   985c8:	00006606 	br	98764 <OSMutexAccept+0x1c4>
   985cc:	e0bffd17 	ldw	r2,-12(fp)
   985d0:	1004c03a 	cmpne	r2,r2,zero
   985d4:	1000051e 	bne	r2,zero,985ec <OSMutexAccept+0x4c>
   985d8:	e0fffe17 	ldw	r3,-8(fp)
   985dc:	00800104 	movi	r2,4
   985e0:	18800005 	stb	r2,0(r3)
   985e4:	e03fff15 	stw	zero,-4(fp)
   985e8:	00005e06 	br	98764 <OSMutexAccept+0x1c4>
   985ec:	e0bffd17 	ldw	r2,-12(fp)
   985f0:	10800003 	ldbu	r2,0(r2)
   985f4:	10803fcc 	andi	r2,r2,255
   985f8:	10800120 	cmpeqi	r2,r2,4
   985fc:	1000051e 	bne	r2,zero,98614 <OSMutexAccept+0x74>
   98600:	e0fffe17 	ldw	r3,-8(fp)
   98604:	00800044 	movi	r2,1
   98608:	18800005 	stb	r2,0(r3)
   9860c:	e03fff15 	stw	zero,-4(fp)
   98610:	00005406 	br	98764 <OSMutexAccept+0x1c4>
   98614:	008002b4 	movhi	r2,10
   98618:	10910504 	addi	r2,r2,17428
   9861c:	10800003 	ldbu	r2,0(r2)
   98620:	10803fcc 	andi	r2,r2,255
   98624:	1005003a 	cmpeq	r2,r2,zero
   98628:	1000051e 	bne	r2,zero,98640 <OSMutexAccept+0xa0>
   9862c:	e0fffe17 	ldw	r3,-8(fp)
   98630:	00800084 	movi	r2,2
   98634:	18800005 	stb	r2,0(r3)
   98638:	e03fff15 	stw	zero,-4(fp)
   9863c:	00004906 	br	98764 <OSMutexAccept+0x1c4>
   98640:	0005303a 	rdctl	r2,status
   98644:	e0bffa15 	stw	r2,-24(fp)
   98648:	e0fffa17 	ldw	r3,-24(fp)
   9864c:	00bfff84 	movi	r2,-2
   98650:	1884703a 	and	r2,r3,r2
   98654:	1001703a 	wrctl	status,r2
   98658:	e0bffa17 	ldw	r2,-24(fp)
   9865c:	e0bffb15 	stw	r2,-20(fp)
   98660:	e0bffd17 	ldw	r2,-12(fp)
   98664:	1080020b 	ldhu	r2,8(r2)
   98668:	10bfffcc 	andi	r2,r2,65535
   9866c:	1004d23a 	srli	r2,r2,8
   98670:	e0bffc05 	stb	r2,-16(fp)
   98674:	e0bffd17 	ldw	r2,-12(fp)
   98678:	1080020b 	ldhu	r2,8(r2)
   9867c:	10bfffcc 	andi	r2,r2,65535
   98680:	10803fcc 	andi	r2,r2,255
   98684:	10803fd8 	cmpnei	r2,r2,255
   98688:	10002f1e 	bne	r2,zero,98748 <OSMutexAccept+0x1a8>
   9868c:	e0bffd17 	ldw	r2,-12(fp)
   98690:	10c0020b 	ldhu	r3,8(r2)
   98694:	00bfc004 	movi	r2,-256
   98698:	1884703a 	and	r2,r3,r2
   9869c:	1007883a 	mov	r3,r2
   986a0:	e0bffd17 	ldw	r2,-12(fp)
   986a4:	10c0020d 	sth	r3,8(r2)
   986a8:	e0bffd17 	ldw	r2,-12(fp)
   986ac:	10c0020b 	ldhu	r3,8(r2)
   986b0:	008002b4 	movhi	r2,10
   986b4:	10910604 	addi	r2,r2,17432
   986b8:	10800017 	ldw	r2,0(r2)
   986bc:	10800c83 	ldbu	r2,50(r2)
   986c0:	10803fcc 	andi	r2,r2,255
   986c4:	1884b03a 	or	r2,r3,r2
   986c8:	1007883a 	mov	r3,r2
   986cc:	e0bffd17 	ldw	r2,-12(fp)
   986d0:	10c0020d 	sth	r3,8(r2)
   986d4:	008002b4 	movhi	r2,10
   986d8:	10910604 	addi	r2,r2,17432
   986dc:	10c00017 	ldw	r3,0(r2)
   986e0:	e0bffd17 	ldw	r2,-12(fp)
   986e4:	10c00115 	stw	r3,4(r2)
   986e8:	008002b4 	movhi	r2,10
   986ec:	10910604 	addi	r2,r2,17432
   986f0:	10800017 	ldw	r2,0(r2)
   986f4:	10800c83 	ldbu	r2,50(r2)
   986f8:	10c03fcc 	andi	r3,r2,255
   986fc:	e0bffc03 	ldbu	r2,-16(fp)
   98700:	10c00836 	bltu	r2,r3,98724 <OSMutexAccept+0x184>
   98704:	e0bffb17 	ldw	r2,-20(fp)
   98708:	e0bff915 	stw	r2,-28(fp)
   9870c:	e0bff917 	ldw	r2,-28(fp)
   98710:	1001703a 	wrctl	status,r2
   98714:	e0fffe17 	ldw	r3,-8(fp)
   98718:	00801e04 	movi	r2,120
   9871c:	18800005 	stb	r2,0(r3)
   98720:	00000606 	br	9873c <OSMutexAccept+0x19c>
   98724:	e0bffb17 	ldw	r2,-20(fp)
   98728:	e0bff815 	stw	r2,-32(fp)
   9872c:	e0bff817 	ldw	r2,-32(fp)
   98730:	1001703a 	wrctl	status,r2
   98734:	e0bffe17 	ldw	r2,-8(fp)
   98738:	10000005 	stb	zero,0(r2)
   9873c:	00800044 	movi	r2,1
   98740:	e0bfff15 	stw	r2,-4(fp)
   98744:	00000706 	br	98764 <OSMutexAccept+0x1c4>
   98748:	e0bffb17 	ldw	r2,-20(fp)
   9874c:	e0bff715 	stw	r2,-36(fp)
   98750:	e0bff717 	ldw	r2,-36(fp)
   98754:	1001703a 	wrctl	status,r2
   98758:	e0bffe17 	ldw	r2,-8(fp)
   9875c:	10000005 	stb	zero,0(r2)
   98760:	e03fff15 	stw	zero,-4(fp)
   98764:	e0bfff17 	ldw	r2,-4(fp)
   98768:	e037883a 	mov	sp,fp
   9876c:	df000017 	ldw	fp,0(sp)
   98770:	dec00104 	addi	sp,sp,4
   98774:	f800283a 	ret

00098778 <OSMutexCreate>:
   98778:	defff504 	addi	sp,sp,-44
   9877c:	dfc00a15 	stw	ra,40(sp)
   98780:	df000915 	stw	fp,36(sp)
   98784:	df000904 	addi	fp,sp,36
   98788:	e17ffe15 	stw	r5,-8(fp)
   9878c:	e13ffd05 	stb	r4,-12(fp)
   98790:	e03ffb15 	stw	zero,-20(fp)
   98794:	e0bffe17 	ldw	r2,-8(fp)
   98798:	1004c03a 	cmpne	r2,r2,zero
   9879c:	1000021e 	bne	r2,zero,987a8 <OSMutexCreate+0x30>
   987a0:	e03fff15 	stw	zero,-4(fp)
   987a4:	00006f06 	br	98964 <OSMutexCreate+0x1ec>
   987a8:	e0bffd03 	ldbu	r2,-12(fp)
   987ac:	10800530 	cmpltui	r2,r2,20
   987b0:	1000051e 	bne	r2,zero,987c8 <OSMutexCreate+0x50>
   987b4:	e0fffe17 	ldw	r3,-8(fp)
   987b8:	00800a84 	movi	r2,42
   987bc:	18800005 	stb	r2,0(r3)
   987c0:	e03fff15 	stw	zero,-4(fp)
   987c4:	00006706 	br	98964 <OSMutexCreate+0x1ec>
   987c8:	008002b4 	movhi	r2,10
   987cc:	10910504 	addi	r2,r2,17428
   987d0:	10800003 	ldbu	r2,0(r2)
   987d4:	10803fcc 	andi	r2,r2,255
   987d8:	1005003a 	cmpeq	r2,r2,zero
   987dc:	1000051e 	bne	r2,zero,987f4 <OSMutexCreate+0x7c>
   987e0:	e0fffe17 	ldw	r3,-8(fp)
   987e4:	00800404 	movi	r2,16
   987e8:	18800005 	stb	r2,0(r3)
   987ec:	e03fff15 	stw	zero,-4(fp)
   987f0:	00005c06 	br	98964 <OSMutexCreate+0x1ec>
   987f4:	0005303a 	rdctl	r2,status
   987f8:	e0bffa15 	stw	r2,-24(fp)
   987fc:	e0fffa17 	ldw	r3,-24(fp)
   98800:	00bfff84 	movi	r2,-2
   98804:	1884703a 	and	r2,r3,r2
   98808:	1001703a 	wrctl	status,r2
   9880c:	e0bffa17 	ldw	r2,-24(fp)
   98810:	e0bffb15 	stw	r2,-20(fp)
   98814:	e0bffd03 	ldbu	r2,-12(fp)
   98818:	00c002f4 	movhi	r3,11
   9881c:	18ddd004 	addi	r3,r3,30528
   98820:	1085883a 	add	r2,r2,r2
   98824:	1085883a 	add	r2,r2,r2
   98828:	10c5883a 	add	r2,r2,r3
   9882c:	10800017 	ldw	r2,0(r2)
   98830:	1005003a 	cmpeq	r2,r2,zero
   98834:	1000091e 	bne	r2,zero,9885c <OSMutexCreate+0xe4>
   98838:	e0bffb17 	ldw	r2,-20(fp)
   9883c:	e0bff915 	stw	r2,-28(fp)
   98840:	e0bff917 	ldw	r2,-28(fp)
   98844:	1001703a 	wrctl	status,r2
   98848:	e0fffe17 	ldw	r3,-8(fp)
   9884c:	00800a04 	movi	r2,40
   98850:	18800005 	stb	r2,0(r3)
   98854:	e03fff15 	stw	zero,-4(fp)
   98858:	00004206 	br	98964 <OSMutexCreate+0x1ec>
   9885c:	e0bffd03 	ldbu	r2,-12(fp)
   98860:	00c002f4 	movhi	r3,11
   98864:	18ddd004 	addi	r3,r3,30528
   98868:	1085883a 	add	r2,r2,r2
   9886c:	1085883a 	add	r2,r2,r2
   98870:	10c7883a 	add	r3,r2,r3
   98874:	00800044 	movi	r2,1
   98878:	18800015 	stw	r2,0(r3)
   9887c:	008002b4 	movhi	r2,10
   98880:	10910404 	addi	r2,r2,17424
   98884:	10800017 	ldw	r2,0(r2)
   98888:	e0bffc15 	stw	r2,-16(fp)
   9888c:	e0bffc17 	ldw	r2,-16(fp)
   98890:	1004c03a 	cmpne	r2,r2,zero
   98894:	1000111e 	bne	r2,zero,988dc <OSMutexCreate+0x164>
   98898:	e0bffd03 	ldbu	r2,-12(fp)
   9889c:	00c002f4 	movhi	r3,11
   988a0:	18ddd004 	addi	r3,r3,30528
   988a4:	1085883a 	add	r2,r2,r2
   988a8:	1085883a 	add	r2,r2,r2
   988ac:	10c5883a 	add	r2,r2,r3
   988b0:	10000015 	stw	zero,0(r2)
   988b4:	e0bffb17 	ldw	r2,-20(fp)
   988b8:	e0bff815 	stw	r2,-32(fp)
   988bc:	e0bff817 	ldw	r2,-32(fp)
   988c0:	1001703a 	wrctl	status,r2
   988c4:	e0fffe17 	ldw	r3,-8(fp)
   988c8:	00800104 	movi	r2,4
   988cc:	18800005 	stb	r2,0(r3)
   988d0:	e0bffc17 	ldw	r2,-16(fp)
   988d4:	e0bfff15 	stw	r2,-4(fp)
   988d8:	00002206 	br	98964 <OSMutexCreate+0x1ec>
   988dc:	008002b4 	movhi	r2,10
   988e0:	10910404 	addi	r2,r2,17424
   988e4:	10800017 	ldw	r2,0(r2)
   988e8:	10800117 	ldw	r2,4(r2)
   988ec:	1007883a 	mov	r3,r2
   988f0:	008002b4 	movhi	r2,10
   988f4:	10910404 	addi	r2,r2,17424
   988f8:	10c00015 	stw	r3,0(r2)
   988fc:	e0bffb17 	ldw	r2,-20(fp)
   98900:	e0bff715 	stw	r2,-36(fp)
   98904:	e0bff717 	ldw	r2,-36(fp)
   98908:	1001703a 	wrctl	status,r2
   9890c:	e0fffc17 	ldw	r3,-16(fp)
   98910:	00800104 	movi	r2,4
   98914:	18800005 	stb	r2,0(r3)
   98918:	e0bffd03 	ldbu	r2,-12(fp)
   9891c:	1004923a 	slli	r2,r2,8
   98920:	10803fd4 	ori	r2,r2,255
   98924:	1007883a 	mov	r3,r2
   98928:	e0bffc17 	ldw	r2,-16(fp)
   9892c:	10c0020d 	sth	r3,8(r2)
   98930:	e0bffc17 	ldw	r2,-16(fp)
   98934:	10000115 	stw	zero,4(r2)
   98938:	e0fffc17 	ldw	r3,-16(fp)
   9893c:	00800fc4 	movi	r2,63
   98940:	18800385 	stb	r2,14(r3)
   98944:	e0bffc17 	ldw	r2,-16(fp)
   98948:	100003c5 	stb	zero,15(r2)
   9894c:	e13ffc17 	ldw	r4,-16(fp)
   98950:	0094acc0 	call	94acc <OS_EventWaitListInit>
   98954:	e0bffe17 	ldw	r2,-8(fp)
   98958:	10000005 	stb	zero,0(r2)
   9895c:	e0bffc17 	ldw	r2,-16(fp)
   98960:	e0bfff15 	stw	r2,-4(fp)
   98964:	e0bfff17 	ldw	r2,-4(fp)
   98968:	e037883a 	mov	sp,fp
   9896c:	dfc00117 	ldw	ra,4(sp)
   98970:	df000017 	ldw	fp,0(sp)
   98974:	dec00204 	addi	sp,sp,8
   98978:	f800283a 	ret

0009897c <OSMutexDel>:
   9897c:	deffef04 	addi	sp,sp,-68
   98980:	dfc01015 	stw	ra,64(sp)
   98984:	df000f15 	stw	fp,60(sp)
   98988:	df000f04 	addi	fp,sp,60
   9898c:	e13ffb15 	stw	r4,-20(fp)
   98990:	e1bffd15 	stw	r6,-12(fp)
   98994:	e17ffc05 	stb	r5,-16(fp)
   98998:	e03ff615 	stw	zero,-40(fp)
   9899c:	e0bffd17 	ldw	r2,-12(fp)
   989a0:	1004c03a 	cmpne	r2,r2,zero
   989a4:	1000031e 	bne	r2,zero,989b4 <OSMutexDel+0x38>
   989a8:	e0bffb17 	ldw	r2,-20(fp)
   989ac:	e0bfff15 	stw	r2,-4(fp)
   989b0:	0000c606 	br	98ccc <OSMutexDel+0x350>
   989b4:	e0bffb17 	ldw	r2,-20(fp)
   989b8:	1004c03a 	cmpne	r2,r2,zero
   989bc:	1000061e 	bne	r2,zero,989d8 <OSMutexDel+0x5c>
   989c0:	e0fffd17 	ldw	r3,-12(fp)
   989c4:	00800104 	movi	r2,4
   989c8:	18800005 	stb	r2,0(r3)
   989cc:	e0fffb17 	ldw	r3,-20(fp)
   989d0:	e0ffff15 	stw	r3,-4(fp)
   989d4:	0000bd06 	br	98ccc <OSMutexDel+0x350>
   989d8:	e0bffb17 	ldw	r2,-20(fp)
   989dc:	10800003 	ldbu	r2,0(r2)
   989e0:	10803fcc 	andi	r2,r2,255
   989e4:	10800120 	cmpeqi	r2,r2,4
   989e8:	1000061e 	bne	r2,zero,98a04 <OSMutexDel+0x88>
   989ec:	e0fffd17 	ldw	r3,-12(fp)
   989f0:	00800044 	movi	r2,1
   989f4:	18800005 	stb	r2,0(r3)
   989f8:	e0bffb17 	ldw	r2,-20(fp)
   989fc:	e0bfff15 	stw	r2,-4(fp)
   98a00:	0000b206 	br	98ccc <OSMutexDel+0x350>
   98a04:	008002b4 	movhi	r2,10
   98a08:	10910504 	addi	r2,r2,17428
   98a0c:	10800003 	ldbu	r2,0(r2)
   98a10:	10803fcc 	andi	r2,r2,255
   98a14:	1005003a 	cmpeq	r2,r2,zero
   98a18:	1000061e 	bne	r2,zero,98a34 <OSMutexDel+0xb8>
   98a1c:	e0fffd17 	ldw	r3,-12(fp)
   98a20:	008003c4 	movi	r2,15
   98a24:	18800005 	stb	r2,0(r3)
   98a28:	e0fffb17 	ldw	r3,-20(fp)
   98a2c:	e0ffff15 	stw	r3,-4(fp)
   98a30:	0000a606 	br	98ccc <OSMutexDel+0x350>
   98a34:	0005303a 	rdctl	r2,status
   98a38:	e0bff515 	stw	r2,-44(fp)
   98a3c:	e0fff517 	ldw	r3,-44(fp)
   98a40:	00bfff84 	movi	r2,-2
   98a44:	1884703a 	and	r2,r3,r2
   98a48:	1001703a 	wrctl	status,r2
   98a4c:	e0bff517 	ldw	r2,-44(fp)
   98a50:	e0bff615 	stw	r2,-40(fp)
   98a54:	e0bffb17 	ldw	r2,-20(fp)
   98a58:	10800283 	ldbu	r2,10(r2)
   98a5c:	10803fcc 	andi	r2,r2,255
   98a60:	1005003a 	cmpeq	r2,r2,zero
   98a64:	1000031e 	bne	r2,zero,98a74 <OSMutexDel+0xf8>
   98a68:	00800044 	movi	r2,1
   98a6c:	e0bffa05 	stb	r2,-24(fp)
   98a70:	00000106 	br	98a78 <OSMutexDel+0xfc>
   98a74:	e03ffa05 	stb	zero,-24(fp)
   98a78:	e0bffc03 	ldbu	r2,-16(fp)
   98a7c:	e0bffe15 	stw	r2,-8(fp)
   98a80:	e0fffe17 	ldw	r3,-8(fp)
   98a84:	1805003a 	cmpeq	r2,r3,zero
   98a88:	1000041e 	bne	r2,zero,98a9c <OSMutexDel+0x120>
   98a8c:	e0fffe17 	ldw	r3,-8(fp)
   98a90:	18800060 	cmpeqi	r2,r3,1
   98a94:	1000341e 	bne	r2,zero,98b68 <OSMutexDel+0x1ec>
   98a98:	00008106 	br	98ca0 <OSMutexDel+0x324>
   98a9c:	e0bffa03 	ldbu	r2,-24(fp)
   98aa0:	1004c03a 	cmpne	r2,r2,zero
   98aa4:	1000261e 	bne	r2,zero,98b40 <OSMutexDel+0x1c4>
   98aa8:	e0fffb17 	ldw	r3,-20(fp)
   98aac:	00800fc4 	movi	r2,63
   98ab0:	18800385 	stb	r2,14(r3)
   98ab4:	e0bffb17 	ldw	r2,-20(fp)
   98ab8:	100003c5 	stb	zero,15(r2)
   98abc:	e0bffb17 	ldw	r2,-20(fp)
   98ac0:	1080020b 	ldhu	r2,8(r2)
   98ac4:	10bfffcc 	andi	r2,r2,65535
   98ac8:	1004d23a 	srli	r2,r2,8
   98acc:	e0bff845 	stb	r2,-31(fp)
   98ad0:	e0bff843 	ldbu	r2,-31(fp)
   98ad4:	00c002f4 	movhi	r3,11
   98ad8:	18ddd004 	addi	r3,r3,30528
   98adc:	1085883a 	add	r2,r2,r2
   98ae0:	1085883a 	add	r2,r2,r2
   98ae4:	10c5883a 	add	r2,r2,r3
   98ae8:	10000015 	stw	zero,0(r2)
   98aec:	e0bffb17 	ldw	r2,-20(fp)
   98af0:	10000005 	stb	zero,0(r2)
   98af4:	008002b4 	movhi	r2,10
   98af8:	10910404 	addi	r2,r2,17424
   98afc:	10c00017 	ldw	r3,0(r2)
   98b00:	e0bffb17 	ldw	r2,-20(fp)
   98b04:	10c00115 	stw	r3,4(r2)
   98b08:	e0bffb17 	ldw	r2,-20(fp)
   98b0c:	1000020d 	sth	zero,8(r2)
   98b10:	00c002b4 	movhi	r3,10
   98b14:	18d10404 	addi	r3,r3,17424
   98b18:	e0bffb17 	ldw	r2,-20(fp)
   98b1c:	18800015 	stw	r2,0(r3)
   98b20:	e0bff617 	ldw	r2,-40(fp)
   98b24:	e0bff415 	stw	r2,-48(fp)
   98b28:	e0bff417 	ldw	r2,-48(fp)
   98b2c:	1001703a 	wrctl	status,r2
   98b30:	e0bffd17 	ldw	r2,-12(fp)
   98b34:	10000005 	stb	zero,0(r2)
   98b38:	e03ff915 	stw	zero,-28(fp)
   98b3c:	00006106 	br	98cc4 <OSMutexDel+0x348>
   98b40:	e0bff617 	ldw	r2,-40(fp)
   98b44:	e0bff315 	stw	r2,-52(fp)
   98b48:	e0bff317 	ldw	r2,-52(fp)
   98b4c:	1001703a 	wrctl	status,r2
   98b50:	e0fffd17 	ldw	r3,-12(fp)
   98b54:	00801244 	movi	r2,73
   98b58:	18800005 	stb	r2,0(r3)
   98b5c:	e0bffb17 	ldw	r2,-20(fp)
   98b60:	e0bff915 	stw	r2,-28(fp)
   98b64:	00005706 	br	98cc4 <OSMutexDel+0x348>
   98b68:	e0bffb17 	ldw	r2,-20(fp)
   98b6c:	1080020b 	ldhu	r2,8(r2)
   98b70:	10bfffcc 	andi	r2,r2,65535
   98b74:	1004d23a 	srli	r2,r2,8
   98b78:	e0bff845 	stb	r2,-31(fp)
   98b7c:	e0bffb17 	ldw	r2,-20(fp)
   98b80:	1080020b 	ldhu	r2,8(r2)
   98b84:	1007883a 	mov	r3,r2
   98b88:	00bfffc4 	movi	r2,-1
   98b8c:	1884703a 	and	r2,r3,r2
   98b90:	e0bff805 	stb	r2,-32(fp)
   98b94:	e0bffb17 	ldw	r2,-20(fp)
   98b98:	10800117 	ldw	r2,4(r2)
   98b9c:	e0bff715 	stw	r2,-36(fp)
   98ba0:	e0bff717 	ldw	r2,-36(fp)
   98ba4:	1005003a 	cmpeq	r2,r2,zero
   98ba8:	10000e1e 	bne	r2,zero,98be4 <OSMutexDel+0x268>
   98bac:	e0bff717 	ldw	r2,-36(fp)
   98bb0:	10800c83 	ldbu	r2,50(r2)
   98bb4:	10c03fcc 	andi	r3,r2,255
   98bb8:	e0bff843 	ldbu	r2,-31(fp)
   98bbc:	1880091e 	bne	r3,r2,98be4 <OSMutexDel+0x268>
   98bc0:	e17ff803 	ldbu	r5,-32(fp)
   98bc4:	e13ff717 	ldw	r4,-36(fp)
   98bc8:	00997800 	call	99780 <OSMutex_RdyAtPrio>
   98bcc:	00000506 	br	98be4 <OSMutexDel+0x268>
   98bd0:	e13ffb17 	ldw	r4,-20(fp)
   98bd4:	000b883a 	mov	r5,zero
   98bd8:	01800404 	movi	r6,16
   98bdc:	000f883a 	mov	r7,zero
   98be0:	00945180 	call	94518 <OS_EventTaskRdy>
   98be4:	e0bffb17 	ldw	r2,-20(fp)
   98be8:	10800283 	ldbu	r2,10(r2)
   98bec:	10803fcc 	andi	r2,r2,255
   98bf0:	1004c03a 	cmpne	r2,r2,zero
   98bf4:	103ff61e 	bne	r2,zero,98bd0 <OSMutexDel+0x254>
   98bf8:	e0fffb17 	ldw	r3,-20(fp)
   98bfc:	00800fc4 	movi	r2,63
   98c00:	18800385 	stb	r2,14(r3)
   98c04:	e0bffb17 	ldw	r2,-20(fp)
   98c08:	100003c5 	stb	zero,15(r2)
   98c0c:	e0bffb17 	ldw	r2,-20(fp)
   98c10:	1080020b 	ldhu	r2,8(r2)
   98c14:	10bfffcc 	andi	r2,r2,65535
   98c18:	1004d23a 	srli	r2,r2,8
   98c1c:	e0bff845 	stb	r2,-31(fp)
   98c20:	e0bff843 	ldbu	r2,-31(fp)
   98c24:	00c002f4 	movhi	r3,11
   98c28:	18ddd004 	addi	r3,r3,30528
   98c2c:	1085883a 	add	r2,r2,r2
   98c30:	1085883a 	add	r2,r2,r2
   98c34:	10c5883a 	add	r2,r2,r3
   98c38:	10000015 	stw	zero,0(r2)
   98c3c:	e0bffb17 	ldw	r2,-20(fp)
   98c40:	10000005 	stb	zero,0(r2)
   98c44:	008002b4 	movhi	r2,10
   98c48:	10910404 	addi	r2,r2,17424
   98c4c:	10c00017 	ldw	r3,0(r2)
   98c50:	e0bffb17 	ldw	r2,-20(fp)
   98c54:	10c00115 	stw	r3,4(r2)
   98c58:	e0bffb17 	ldw	r2,-20(fp)
   98c5c:	1000020d 	sth	zero,8(r2)
   98c60:	00c002b4 	movhi	r3,10
   98c64:	18d10404 	addi	r3,r3,17424
   98c68:	e0bffb17 	ldw	r2,-20(fp)
   98c6c:	18800015 	stw	r2,0(r3)
   98c70:	e0bff617 	ldw	r2,-40(fp)
   98c74:	e0bff215 	stw	r2,-56(fp)
   98c78:	e0bff217 	ldw	r2,-56(fp)
   98c7c:	1001703a 	wrctl	status,r2
   98c80:	e0bffa03 	ldbu	r2,-24(fp)
   98c84:	10800058 	cmpnei	r2,r2,1
   98c88:	1000011e 	bne	r2,zero,98c90 <OSMutexDel+0x314>
   98c8c:	0094f580 	call	94f58 <OS_Sched>
   98c90:	e0bffd17 	ldw	r2,-12(fp)
   98c94:	10000005 	stb	zero,0(r2)
   98c98:	e03ff915 	stw	zero,-28(fp)
   98c9c:	00000906 	br	98cc4 <OSMutexDel+0x348>
   98ca0:	e0bff617 	ldw	r2,-40(fp)
   98ca4:	e0bff115 	stw	r2,-60(fp)
   98ca8:	e0bff117 	ldw	r2,-60(fp)
   98cac:	1001703a 	wrctl	status,r2
   98cb0:	e0fffd17 	ldw	r3,-12(fp)
   98cb4:	008001c4 	movi	r2,7
   98cb8:	18800005 	stb	r2,0(r3)
   98cbc:	e0bffb17 	ldw	r2,-20(fp)
   98cc0:	e0bff915 	stw	r2,-28(fp)
   98cc4:	e0bff917 	ldw	r2,-28(fp)
   98cc8:	e0bfff15 	stw	r2,-4(fp)
   98ccc:	e0bfff17 	ldw	r2,-4(fp)
   98cd0:	e037883a 	mov	sp,fp
   98cd4:	dfc00117 	ldw	ra,4(sp)
   98cd8:	df000017 	ldw	fp,0(sp)
   98cdc:	dec00204 	addi	sp,sp,8
   98ce0:	f800283a 	ret

00098ce4 <OSMutexPend>:
   98ce4:	deffef04 	addi	sp,sp,-68
   98ce8:	dfc01015 	stw	ra,64(sp)
   98cec:	df000f15 	stw	fp,60(sp)
   98cf0:	df000f04 	addi	fp,sp,60
   98cf4:	e13ffc15 	stw	r4,-16(fp)
   98cf8:	e1bffe15 	stw	r6,-8(fp)
   98cfc:	e17ffd0d 	sth	r5,-12(fp)
   98d00:	e03ff715 	stw	zero,-36(fp)
   98d04:	e0bffe17 	ldw	r2,-8(fp)
   98d08:	1005003a 	cmpeq	r2,r2,zero
   98d0c:	1001941e 	bne	r2,zero,99360 <OSMutexPend+0x67c>
   98d10:	e0bffc17 	ldw	r2,-16(fp)
   98d14:	1004c03a 	cmpne	r2,r2,zero
   98d18:	1000041e 	bne	r2,zero,98d2c <OSMutexPend+0x48>
   98d1c:	e0fffe17 	ldw	r3,-8(fp)
   98d20:	00800104 	movi	r2,4
   98d24:	18800005 	stb	r2,0(r3)
   98d28:	00018d06 	br	99360 <OSMutexPend+0x67c>
   98d2c:	e0bffc17 	ldw	r2,-16(fp)
   98d30:	10800003 	ldbu	r2,0(r2)
   98d34:	10803fcc 	andi	r2,r2,255
   98d38:	10800120 	cmpeqi	r2,r2,4
   98d3c:	1000041e 	bne	r2,zero,98d50 <OSMutexPend+0x6c>
   98d40:	e0fffe17 	ldw	r3,-8(fp)
   98d44:	00800044 	movi	r2,1
   98d48:	18800005 	stb	r2,0(r3)
   98d4c:	00018406 	br	99360 <OSMutexPend+0x67c>
   98d50:	008002b4 	movhi	r2,10
   98d54:	10910504 	addi	r2,r2,17428
   98d58:	10800003 	ldbu	r2,0(r2)
   98d5c:	10803fcc 	andi	r2,r2,255
   98d60:	1005003a 	cmpeq	r2,r2,zero
   98d64:	1000041e 	bne	r2,zero,98d78 <OSMutexPend+0x94>
   98d68:	e0fffe17 	ldw	r3,-8(fp)
   98d6c:	00800084 	movi	r2,2
   98d70:	18800005 	stb	r2,0(r3)
   98d74:	00017a06 	br	99360 <OSMutexPend+0x67c>
   98d78:	008002b4 	movhi	r2,10
   98d7c:	1090f704 	addi	r2,r2,17372
   98d80:	10800003 	ldbu	r2,0(r2)
   98d84:	10803fcc 	andi	r2,r2,255
   98d88:	1005003a 	cmpeq	r2,r2,zero
   98d8c:	1000041e 	bne	r2,zero,98da0 <OSMutexPend+0xbc>
   98d90:	e0fffe17 	ldw	r3,-8(fp)
   98d94:	00800344 	movi	r2,13
   98d98:	18800005 	stb	r2,0(r3)
   98d9c:	00017006 	br	99360 <OSMutexPend+0x67c>
   98da0:	0005303a 	rdctl	r2,status
   98da4:	e0bff615 	stw	r2,-40(fp)
   98da8:	e0fff617 	ldw	r3,-40(fp)
   98dac:	00bfff84 	movi	r2,-2
   98db0:	1884703a 	and	r2,r3,r2
   98db4:	1001703a 	wrctl	status,r2
   98db8:	e0bff617 	ldw	r2,-40(fp)
   98dbc:	e0bff715 	stw	r2,-36(fp)
   98dc0:	e0bffc17 	ldw	r2,-16(fp)
   98dc4:	1080020b 	ldhu	r2,8(r2)
   98dc8:	10bfffcc 	andi	r2,r2,65535
   98dcc:	1004d23a 	srli	r2,r2,8
   98dd0:	e0bffb85 	stb	r2,-18(fp)
   98dd4:	e0bffc17 	ldw	r2,-16(fp)
   98dd8:	1080020b 	ldhu	r2,8(r2)
   98ddc:	10803fcc 	andi	r2,r2,255
   98de0:	1080201c 	xori	r2,r2,128
   98de4:	10bfe004 	addi	r2,r2,-128
   98de8:	10bfffd8 	cmpnei	r2,r2,-1
   98dec:	10002d1e 	bne	r2,zero,98ea4 <OSMutexPend+0x1c0>
   98df0:	e0bffc17 	ldw	r2,-16(fp)
   98df4:	10c0020b 	ldhu	r3,8(r2)
   98df8:	00bfc004 	movi	r2,-256
   98dfc:	1884703a 	and	r2,r3,r2
   98e00:	1007883a 	mov	r3,r2
   98e04:	e0bffc17 	ldw	r2,-16(fp)
   98e08:	10c0020d 	sth	r3,8(r2)
   98e0c:	e0bffc17 	ldw	r2,-16(fp)
   98e10:	10c0020b 	ldhu	r3,8(r2)
   98e14:	008002b4 	movhi	r2,10
   98e18:	10910604 	addi	r2,r2,17432
   98e1c:	10800017 	ldw	r2,0(r2)
   98e20:	10800c83 	ldbu	r2,50(r2)
   98e24:	10803fcc 	andi	r2,r2,255
   98e28:	1884b03a 	or	r2,r3,r2
   98e2c:	1007883a 	mov	r3,r2
   98e30:	e0bffc17 	ldw	r2,-16(fp)
   98e34:	10c0020d 	sth	r3,8(r2)
   98e38:	008002b4 	movhi	r2,10
   98e3c:	10910604 	addi	r2,r2,17432
   98e40:	10c00017 	ldw	r3,0(r2)
   98e44:	e0bffc17 	ldw	r2,-16(fp)
   98e48:	10c00115 	stw	r3,4(r2)
   98e4c:	008002b4 	movhi	r2,10
   98e50:	10910604 	addi	r2,r2,17432
   98e54:	10800017 	ldw	r2,0(r2)
   98e58:	10800c83 	ldbu	r2,50(r2)
   98e5c:	10c03fcc 	andi	r3,r2,255
   98e60:	e0bffb83 	ldbu	r2,-18(fp)
   98e64:	10c00836 	bltu	r2,r3,98e88 <OSMutexPend+0x1a4>
   98e68:	e0bff717 	ldw	r2,-36(fp)
   98e6c:	e0bff515 	stw	r2,-44(fp)
   98e70:	e0bff517 	ldw	r2,-44(fp)
   98e74:	1001703a 	wrctl	status,r2
   98e78:	e0fffe17 	ldw	r3,-8(fp)
   98e7c:	00801e04 	movi	r2,120
   98e80:	18800005 	stb	r2,0(r3)
   98e84:	00013606 	br	99360 <OSMutexPend+0x67c>
   98e88:	e0bff717 	ldw	r2,-36(fp)
   98e8c:	e0bff415 	stw	r2,-48(fp)
   98e90:	e0bff417 	ldw	r2,-48(fp)
   98e94:	1001703a 	wrctl	status,r2
   98e98:	e0bffe17 	ldw	r2,-8(fp)
   98e9c:	10000005 	stb	zero,0(r2)
   98ea0:	00012f06 	br	99360 <OSMutexPend+0x67c>
   98ea4:	e0bffc17 	ldw	r2,-16(fp)
   98ea8:	1080020b 	ldhu	r2,8(r2)
   98eac:	1007883a 	mov	r3,r2
   98eb0:	00bfffc4 	movi	r2,-1
   98eb4:	1884703a 	and	r2,r3,r2
   98eb8:	e0bffb45 	stb	r2,-19(fp)
   98ebc:	e0bffc17 	ldw	r2,-16(fp)
   98ec0:	10800117 	ldw	r2,4(r2)
   98ec4:	e0bffa15 	stw	r2,-24(fp)
   98ec8:	e0bffa17 	ldw	r2,-24(fp)
   98ecc:	10800c83 	ldbu	r2,50(r2)
   98ed0:	10c03fcc 	andi	r3,r2,255
   98ed4:	e0bffb83 	ldbu	r2,-18(fp)
   98ed8:	10c0d02e 	bgeu	r2,r3,9921c <OSMutexPend+0x538>
   98edc:	008002b4 	movhi	r2,10
   98ee0:	10910604 	addi	r2,r2,17432
   98ee4:	10800017 	ldw	r2,0(r2)
   98ee8:	10800c83 	ldbu	r2,50(r2)
   98eec:	10c03fcc 	andi	r3,r2,255
   98ef0:	e0bffb43 	ldbu	r2,-19(fp)
   98ef4:	1880c92e 	bgeu	r3,r2,9921c <OSMutexPend+0x538>
   98ef8:	e0bffa17 	ldw	r2,-24(fp)
   98efc:	10800d03 	ldbu	r2,52(r2)
   98f00:	e0bff805 	stb	r2,-32(fp)
   98f04:	e0fff803 	ldbu	r3,-32(fp)
   98f08:	008002b4 	movhi	r2,10
   98f0c:	10910344 	addi	r2,r2,17421
   98f10:	10c5883a 	add	r2,r2,r3
   98f14:	10c00003 	ldbu	r3,0(r2)
   98f18:	e0bffa17 	ldw	r2,-24(fp)
   98f1c:	10800d43 	ldbu	r2,53(r2)
   98f20:	1884703a 	and	r2,r3,r2
   98f24:	10803fcc 	andi	r2,r2,255
   98f28:	1005003a 	cmpeq	r2,r2,zero
   98f2c:	1000271e 	bne	r2,zero,98fcc <OSMutexPend+0x2e8>
   98f30:	e13ff803 	ldbu	r4,-32(fp)
   98f34:	e0fff803 	ldbu	r3,-32(fp)
   98f38:	008002b4 	movhi	r2,10
   98f3c:	10910344 	addi	r2,r2,17421
   98f40:	10c5883a 	add	r2,r2,r3
   98f44:	10800003 	ldbu	r2,0(r2)
   98f48:	1007883a 	mov	r3,r2
   98f4c:	e0bffa17 	ldw	r2,-24(fp)
   98f50:	10800d43 	ldbu	r2,53(r2)
   98f54:	0084303a 	nor	r2,zero,r2
   98f58:	1884703a 	and	r2,r3,r2
   98f5c:	1007883a 	mov	r3,r2
   98f60:	008002b4 	movhi	r2,10
   98f64:	10910344 	addi	r2,r2,17421
   98f68:	1105883a 	add	r2,r2,r4
   98f6c:	10c00005 	stb	r3,0(r2)
   98f70:	e0fff803 	ldbu	r3,-32(fp)
   98f74:	008002b4 	movhi	r2,10
   98f78:	10910344 	addi	r2,r2,17421
   98f7c:	10c5883a 	add	r2,r2,r3
   98f80:	10800003 	ldbu	r2,0(r2)
   98f84:	10803fcc 	andi	r2,r2,255
   98f88:	1004c03a 	cmpne	r2,r2,zero
   98f8c:	10000c1e 	bne	r2,zero,98fc0 <OSMutexPend+0x2dc>
   98f90:	e0bffa17 	ldw	r2,-24(fp)
   98f94:	10800d83 	ldbu	r2,54(r2)
   98f98:	0084303a 	nor	r2,zero,r2
   98f9c:	1007883a 	mov	r3,r2
   98fa0:	008002b4 	movhi	r2,10
   98fa4:	10910304 	addi	r2,r2,17420
   98fa8:	10800003 	ldbu	r2,0(r2)
   98fac:	1884703a 	and	r2,r3,r2
   98fb0:	1007883a 	mov	r3,r2
   98fb4:	008002b4 	movhi	r2,10
   98fb8:	10910304 	addi	r2,r2,17420
   98fbc:	10c00005 	stb	r3,0(r2)
   98fc0:	00800044 	movi	r2,1
   98fc4:	e0bffb05 	stb	r2,-20(fp)
   98fc8:	00002c06 	br	9907c <OSMutexPend+0x398>
   98fcc:	e0bffa17 	ldw	r2,-24(fp)
   98fd0:	10800717 	ldw	r2,28(r2)
   98fd4:	e0bff915 	stw	r2,-28(fp)
   98fd8:	e0bff917 	ldw	r2,-28(fp)
   98fdc:	1005003a 	cmpeq	r2,r2,zero
   98fe0:	1000251e 	bne	r2,zero,99078 <OSMutexPend+0x394>
   98fe4:	e0bffa17 	ldw	r2,-24(fp)
   98fe8:	10800d03 	ldbu	r2,52(r2)
   98fec:	11003fcc 	andi	r4,r2,255
   98ff0:	e0bffa17 	ldw	r2,-24(fp)
   98ff4:	10800d03 	ldbu	r2,52(r2)
   98ff8:	10c03fcc 	andi	r3,r2,255
   98ffc:	e0bff917 	ldw	r2,-28(fp)
   99000:	1885883a 	add	r2,r3,r2
   99004:	10800204 	addi	r2,r2,8
   99008:	108000c3 	ldbu	r2,3(r2)
   9900c:	1007883a 	mov	r3,r2
   99010:	e0bffa17 	ldw	r2,-24(fp)
   99014:	10800d43 	ldbu	r2,53(r2)
   99018:	0084303a 	nor	r2,zero,r2
   9901c:	1884703a 	and	r2,r3,r2
   99020:	1007883a 	mov	r3,r2
   99024:	e0bff917 	ldw	r2,-28(fp)
   99028:	2085883a 	add	r2,r4,r2
   9902c:	10800204 	addi	r2,r2,8
   99030:	10c000c5 	stb	r3,3(r2)
   99034:	e0bff917 	ldw	r2,-28(fp)
   99038:	2085883a 	add	r2,r4,r2
   9903c:	10800204 	addi	r2,r2,8
   99040:	108000c3 	ldbu	r2,3(r2)
   99044:	10803fcc 	andi	r2,r2,255
   99048:	1004c03a 	cmpne	r2,r2,zero
   9904c:	10000a1e 	bne	r2,zero,99078 <OSMutexPend+0x394>
   99050:	e0bff917 	ldw	r2,-28(fp)
   99054:	10800283 	ldbu	r2,10(r2)
   99058:	1007883a 	mov	r3,r2
   9905c:	e0bffa17 	ldw	r2,-24(fp)
   99060:	10800d83 	ldbu	r2,54(r2)
   99064:	0084303a 	nor	r2,zero,r2
   99068:	1884703a 	and	r2,r3,r2
   9906c:	1007883a 	mov	r3,r2
   99070:	e0bff917 	ldw	r2,-28(fp)
   99074:	10c00285 	stb	r3,10(r2)
   99078:	e03ffb05 	stb	zero,-20(fp)
   9907c:	e0fffa17 	ldw	r3,-24(fp)
   99080:	e0bffb83 	ldbu	r2,-18(fp)
   99084:	18800c85 	stb	r2,50(r3)
   99088:	e0bffa17 	ldw	r2,-24(fp)
   9908c:	10800c83 	ldbu	r2,50(r2)
   99090:	10803fcc 	andi	r2,r2,255
   99094:	1004d0fa 	srli	r2,r2,3
   99098:	1007883a 	mov	r3,r2
   9909c:	e0bffa17 	ldw	r2,-24(fp)
   990a0:	10c00d05 	stb	r3,52(r2)
   990a4:	e0bffa17 	ldw	r2,-24(fp)
   990a8:	10800c83 	ldbu	r2,50(r2)
   990ac:	108001cc 	andi	r2,r2,7
   990b0:	1007883a 	mov	r3,r2
   990b4:	e0bffa17 	ldw	r2,-24(fp)
   990b8:	10c00cc5 	stb	r3,51(r2)
   990bc:	e0bffa17 	ldw	r2,-24(fp)
   990c0:	10800d03 	ldbu	r2,52(r2)
   990c4:	10c03fcc 	andi	r3,r2,255
   990c8:	00800044 	movi	r2,1
   990cc:	10c4983a 	sll	r2,r2,r3
   990d0:	1007883a 	mov	r3,r2
   990d4:	e0bffa17 	ldw	r2,-24(fp)
   990d8:	10c00d85 	stb	r3,54(r2)
   990dc:	e0bffa17 	ldw	r2,-24(fp)
   990e0:	10800cc3 	ldbu	r2,51(r2)
   990e4:	10c03fcc 	andi	r3,r2,255
   990e8:	00800044 	movi	r2,1
   990ec:	10c4983a 	sll	r2,r2,r3
   990f0:	1007883a 	mov	r3,r2
   990f4:	e0bffa17 	ldw	r2,-24(fp)
   990f8:	10c00d45 	stb	r3,53(r2)
   990fc:	e0bffb03 	ldbu	r2,-20(fp)
   99100:	10800058 	cmpnei	r2,r2,1
   99104:	10001d1e 	bne	r2,zero,9917c <OSMutexPend+0x498>
   99108:	e0bffa17 	ldw	r2,-24(fp)
   9910c:	10c00d83 	ldbu	r3,54(r2)
   99110:	008002b4 	movhi	r2,10
   99114:	10910304 	addi	r2,r2,17420
   99118:	10800003 	ldbu	r2,0(r2)
   9911c:	1884b03a 	or	r2,r3,r2
   99120:	1007883a 	mov	r3,r2
   99124:	008002b4 	movhi	r2,10
   99128:	10910304 	addi	r2,r2,17420
   9912c:	10c00005 	stb	r3,0(r2)
   99130:	e0bffa17 	ldw	r2,-24(fp)
   99134:	10800d03 	ldbu	r2,52(r2)
   99138:	11003fcc 	andi	r4,r2,255
   9913c:	e0bffa17 	ldw	r2,-24(fp)
   99140:	10800d03 	ldbu	r2,52(r2)
   99144:	10c03fcc 	andi	r3,r2,255
   99148:	008002b4 	movhi	r2,10
   9914c:	10910344 	addi	r2,r2,17421
   99150:	10c5883a 	add	r2,r2,r3
   99154:	10c00003 	ldbu	r3,0(r2)
   99158:	e0bffa17 	ldw	r2,-24(fp)
   9915c:	10800d43 	ldbu	r2,53(r2)
   99160:	1884b03a 	or	r2,r3,r2
   99164:	1007883a 	mov	r3,r2
   99168:	008002b4 	movhi	r2,10
   9916c:	10910344 	addi	r2,r2,17421
   99170:	1105883a 	add	r2,r2,r4
   99174:	10c00005 	stb	r3,0(r2)
   99178:	00002006 	br	991fc <OSMutexPend+0x518>
   9917c:	e0bffa17 	ldw	r2,-24(fp)
   99180:	10800717 	ldw	r2,28(r2)
   99184:	e0bff915 	stw	r2,-28(fp)
   99188:	e0bff917 	ldw	r2,-28(fp)
   9918c:	1005003a 	cmpeq	r2,r2,zero
   99190:	10001a1e 	bne	r2,zero,991fc <OSMutexPend+0x518>
   99194:	e0bff917 	ldw	r2,-28(fp)
   99198:	10c00283 	ldbu	r3,10(r2)
   9919c:	e0bffa17 	ldw	r2,-24(fp)
   991a0:	10800d83 	ldbu	r2,54(r2)
   991a4:	1884b03a 	or	r2,r3,r2
   991a8:	1007883a 	mov	r3,r2
   991ac:	e0bff917 	ldw	r2,-28(fp)
   991b0:	10c00285 	stb	r3,10(r2)
   991b4:	e0bffa17 	ldw	r2,-24(fp)
   991b8:	10800d03 	ldbu	r2,52(r2)
   991bc:	11003fcc 	andi	r4,r2,255
   991c0:	e0bffa17 	ldw	r2,-24(fp)
   991c4:	10800d03 	ldbu	r2,52(r2)
   991c8:	10c03fcc 	andi	r3,r2,255
   991cc:	e0bff917 	ldw	r2,-28(fp)
   991d0:	1885883a 	add	r2,r3,r2
   991d4:	10800204 	addi	r2,r2,8
   991d8:	10c000c3 	ldbu	r3,3(r2)
   991dc:	e0bffa17 	ldw	r2,-24(fp)
   991e0:	10800d43 	ldbu	r2,53(r2)
   991e4:	1884b03a 	or	r2,r3,r2
   991e8:	1007883a 	mov	r3,r2
   991ec:	e0bff917 	ldw	r2,-28(fp)
   991f0:	2085883a 	add	r2,r4,r2
   991f4:	10800204 	addi	r2,r2,8
   991f8:	10c000c5 	stb	r3,3(r2)
   991fc:	e0bffb83 	ldbu	r2,-18(fp)
   99200:	00c002f4 	movhi	r3,11
   99204:	18ddd004 	addi	r3,r3,30528
   99208:	1085883a 	add	r2,r2,r2
   9920c:	1085883a 	add	r2,r2,r2
   99210:	10c7883a 	add	r3,r2,r3
   99214:	e0bffa17 	ldw	r2,-24(fp)
   99218:	18800015 	stw	r2,0(r3)
   9921c:	008002b4 	movhi	r2,10
   99220:	10910604 	addi	r2,r2,17432
   99224:	10c00017 	ldw	r3,0(r2)
   99228:	008002b4 	movhi	r2,10
   9922c:	10910604 	addi	r2,r2,17432
   99230:	10800017 	ldw	r2,0(r2)
   99234:	10800c03 	ldbu	r2,48(r2)
   99238:	10800414 	ori	r2,r2,16
   9923c:	18800c05 	stb	r2,48(r3)
   99240:	008002b4 	movhi	r2,10
   99244:	10910604 	addi	r2,r2,17432
   99248:	10800017 	ldw	r2,0(r2)
   9924c:	10000c45 	stb	zero,49(r2)
   99250:	008002b4 	movhi	r2,10
   99254:	10910604 	addi	r2,r2,17432
   99258:	10c00017 	ldw	r3,0(r2)
   9925c:	e0bffd0b 	ldhu	r2,-12(fp)
   99260:	18800b8d 	sth	r2,46(r3)
   99264:	e13ffc17 	ldw	r4,-16(fp)
   99268:	00946ac0 	call	946ac <OS_EventTaskWait>
   9926c:	e0bff717 	ldw	r2,-36(fp)
   99270:	e0bff315 	stw	r2,-52(fp)
   99274:	e0bff317 	ldw	r2,-52(fp)
   99278:	1001703a 	wrctl	status,r2
   9927c:	0094f580 	call	94f58 <OS_Sched>
   99280:	0005303a 	rdctl	r2,status
   99284:	e0bff215 	stw	r2,-56(fp)
   99288:	e0fff217 	ldw	r3,-56(fp)
   9928c:	00bfff84 	movi	r2,-2
   99290:	1884703a 	and	r2,r3,r2
   99294:	1001703a 	wrctl	status,r2
   99298:	e0bff217 	ldw	r2,-56(fp)
   9929c:	e0bff715 	stw	r2,-36(fp)
   992a0:	008002b4 	movhi	r2,10
   992a4:	10910604 	addi	r2,r2,17432
   992a8:	10800017 	ldw	r2,0(r2)
   992ac:	10800c43 	ldbu	r2,49(r2)
   992b0:	10803fcc 	andi	r2,r2,255
   992b4:	e0bfff15 	stw	r2,-4(fp)
   992b8:	e0ffff17 	ldw	r3,-4(fp)
   992bc:	1805003a 	cmpeq	r2,r3,zero
   992c0:	1000041e 	bne	r2,zero,992d4 <OSMutexPend+0x5f0>
   992c4:	e0ffff17 	ldw	r3,-4(fp)
   992c8:	188000a0 	cmpeqi	r2,r3,2
   992cc:	1000041e 	bne	r2,zero,992e0 <OSMutexPend+0x5fc>
   992d0:	00000706 	br	992f0 <OSMutexPend+0x60c>
   992d4:	e0bffe17 	ldw	r2,-8(fp)
   992d8:	10000005 	stb	zero,0(r2)
   992dc:	00000c06 	br	99310 <OSMutexPend+0x62c>
   992e0:	e0fffe17 	ldw	r3,-8(fp)
   992e4:	00800384 	movi	r2,14
   992e8:	18800005 	stb	r2,0(r3)
   992ec:	00000806 	br	99310 <OSMutexPend+0x62c>
   992f0:	008002b4 	movhi	r2,10
   992f4:	10910604 	addi	r2,r2,17432
   992f8:	11000017 	ldw	r4,0(r2)
   992fc:	e17ffc17 	ldw	r5,-16(fp)
   99300:	00949100 	call	94910 <OS_EventTaskRemove>
   99304:	e0fffe17 	ldw	r3,-8(fp)
   99308:	00800284 	movi	r2,10
   9930c:	18800005 	stb	r2,0(r3)
   99310:	008002b4 	movhi	r2,10
   99314:	10910604 	addi	r2,r2,17432
   99318:	10800017 	ldw	r2,0(r2)
   9931c:	10000c05 	stb	zero,48(r2)
   99320:	008002b4 	movhi	r2,10
   99324:	10910604 	addi	r2,r2,17432
   99328:	10800017 	ldw	r2,0(r2)
   9932c:	10000c45 	stb	zero,49(r2)
   99330:	008002b4 	movhi	r2,10
   99334:	10910604 	addi	r2,r2,17432
   99338:	10800017 	ldw	r2,0(r2)
   9933c:	10000715 	stw	zero,28(r2)
   99340:	008002b4 	movhi	r2,10
   99344:	10910604 	addi	r2,r2,17432
   99348:	10800017 	ldw	r2,0(r2)
   9934c:	10000815 	stw	zero,32(r2)
   99350:	e0bff717 	ldw	r2,-36(fp)
   99354:	e0bff115 	stw	r2,-60(fp)
   99358:	e0bff117 	ldw	r2,-60(fp)
   9935c:	1001703a 	wrctl	status,r2
   99360:	e037883a 	mov	sp,fp
   99364:	dfc00117 	ldw	ra,4(sp)
   99368:	df000017 	ldw	fp,0(sp)
   9936c:	dec00204 	addi	sp,sp,8
   99370:	f800283a 	ret

00099374 <OSMutexPost>:
   99374:	defff504 	addi	sp,sp,-44
   99378:	dfc00a15 	stw	ra,40(sp)
   9937c:	df000915 	stw	fp,36(sp)
   99380:	df000904 	addi	fp,sp,36
   99384:	e13ffe15 	stw	r4,-8(fp)
   99388:	e03ffc15 	stw	zero,-16(fp)
   9938c:	008002b4 	movhi	r2,10
   99390:	10910504 	addi	r2,r2,17428
   99394:	10800003 	ldbu	r2,0(r2)
   99398:	10803fcc 	andi	r2,r2,255
   9939c:	1005003a 	cmpeq	r2,r2,zero
   993a0:	1000031e 	bne	r2,zero,993b0 <OSMutexPost+0x3c>
   993a4:	00800144 	movi	r2,5
   993a8:	e0bfff15 	stw	r2,-4(fp)
   993ac:	00008406 	br	995c0 <OSMutexPost+0x24c>
   993b0:	e0bffe17 	ldw	r2,-8(fp)
   993b4:	1004c03a 	cmpne	r2,r2,zero
   993b8:	1000031e 	bne	r2,zero,993c8 <OSMutexPost+0x54>
   993bc:	00800104 	movi	r2,4
   993c0:	e0bfff15 	stw	r2,-4(fp)
   993c4:	00007e06 	br	995c0 <OSMutexPost+0x24c>
   993c8:	e0bffe17 	ldw	r2,-8(fp)
   993cc:	10800003 	ldbu	r2,0(r2)
   993d0:	10803fcc 	andi	r2,r2,255
   993d4:	10800120 	cmpeqi	r2,r2,4
   993d8:	1000031e 	bne	r2,zero,993e8 <OSMutexPost+0x74>
   993dc:	00800044 	movi	r2,1
   993e0:	e0bfff15 	stw	r2,-4(fp)
   993e4:	00007606 	br	995c0 <OSMutexPost+0x24c>
   993e8:	0005303a 	rdctl	r2,status
   993ec:	e0bffb15 	stw	r2,-20(fp)
   993f0:	e0fffb17 	ldw	r3,-20(fp)
   993f4:	00bfff84 	movi	r2,-2
   993f8:	1884703a 	and	r2,r3,r2
   993fc:	1001703a 	wrctl	status,r2
   99400:	e0bffb17 	ldw	r2,-20(fp)
   99404:	e0bffc15 	stw	r2,-16(fp)
   99408:	e0bffe17 	ldw	r2,-8(fp)
   9940c:	1080020b 	ldhu	r2,8(r2)
   99410:	10bfffcc 	andi	r2,r2,65535
   99414:	1004d23a 	srli	r2,r2,8
   99418:	e0bffd45 	stb	r2,-11(fp)
   9941c:	e0bffe17 	ldw	r2,-8(fp)
   99420:	1080020b 	ldhu	r2,8(r2)
   99424:	1007883a 	mov	r3,r2
   99428:	00bfffc4 	movi	r2,-1
   9942c:	1884703a 	and	r2,r3,r2
   99430:	e0bffd05 	stb	r2,-12(fp)
   99434:	e0bffe17 	ldw	r2,-8(fp)
   99438:	10800117 	ldw	r2,4(r2)
   9943c:	1007883a 	mov	r3,r2
   99440:	008002b4 	movhi	r2,10
   99444:	10910604 	addi	r2,r2,17432
   99448:	10800017 	ldw	r2,0(r2)
   9944c:	18800726 	beq	r3,r2,9946c <OSMutexPost+0xf8>
   99450:	e0bffc17 	ldw	r2,-16(fp)
   99454:	e0bffa15 	stw	r2,-24(fp)
   99458:	e0bffa17 	ldw	r2,-24(fp)
   9945c:	1001703a 	wrctl	status,r2
   99460:	00801904 	movi	r2,100
   99464:	e0bfff15 	stw	r2,-4(fp)
   99468:	00005506 	br	995c0 <OSMutexPost+0x24c>
   9946c:	008002b4 	movhi	r2,10
   99470:	10910604 	addi	r2,r2,17432
   99474:	10800017 	ldw	r2,0(r2)
   99478:	10800c83 	ldbu	r2,50(r2)
   9947c:	10c03fcc 	andi	r3,r2,255
   99480:	e0bffd43 	ldbu	r2,-11(fp)
   99484:	1880051e 	bne	r3,r2,9949c <OSMutexPost+0x128>
   99488:	008002b4 	movhi	r2,10
   9948c:	10910604 	addi	r2,r2,17432
   99490:	11000017 	ldw	r4,0(r2)
   99494:	e17ffd03 	ldbu	r5,-12(fp)
   99498:	00997800 	call	99780 <OSMutex_RdyAtPrio>
   9949c:	e0bffd43 	ldbu	r2,-11(fp)
   994a0:	00c002f4 	movhi	r3,11
   994a4:	18ddd004 	addi	r3,r3,30528
   994a8:	1085883a 	add	r2,r2,r2
   994ac:	1085883a 	add	r2,r2,r2
   994b0:	10c7883a 	add	r3,r2,r3
   994b4:	00800044 	movi	r2,1
   994b8:	18800015 	stw	r2,0(r3)
   994bc:	e0bffe17 	ldw	r2,-8(fp)
   994c0:	10800283 	ldbu	r2,10(r2)
   994c4:	10803fcc 	andi	r2,r2,255
   994c8:	1005003a 	cmpeq	r2,r2,zero
   994cc:	10002f1e 	bne	r2,zero,9958c <OSMutexPost+0x218>
   994d0:	e13ffe17 	ldw	r4,-8(fp)
   994d4:	000b883a 	mov	r5,zero
   994d8:	01800404 	movi	r6,16
   994dc:	000f883a 	mov	r7,zero
   994e0:	00945180 	call	94518 <OS_EventTaskRdy>
   994e4:	e0bffd05 	stb	r2,-12(fp)
   994e8:	e0bffe17 	ldw	r2,-8(fp)
   994ec:	10c0020b 	ldhu	r3,8(r2)
   994f0:	00bfc004 	movi	r2,-256
   994f4:	1884703a 	and	r2,r3,r2
   994f8:	1007883a 	mov	r3,r2
   994fc:	e0bffe17 	ldw	r2,-8(fp)
   99500:	10c0020d 	sth	r3,8(r2)
   99504:	e0bffe17 	ldw	r2,-8(fp)
   99508:	10c0020b 	ldhu	r3,8(r2)
   9950c:	e0bffd03 	ldbu	r2,-12(fp)
   99510:	1884b03a 	or	r2,r3,r2
   99514:	1007883a 	mov	r3,r2
   99518:	e0bffe17 	ldw	r2,-8(fp)
   9951c:	10c0020d 	sth	r3,8(r2)
   99520:	e0bffd03 	ldbu	r2,-12(fp)
   99524:	00c002f4 	movhi	r3,11
   99528:	18ddd004 	addi	r3,r3,30528
   9952c:	1085883a 	add	r2,r2,r2
   99530:	1085883a 	add	r2,r2,r2
   99534:	10c5883a 	add	r2,r2,r3
   99538:	10c00017 	ldw	r3,0(r2)
   9953c:	e0bffe17 	ldw	r2,-8(fp)
   99540:	10c00115 	stw	r3,4(r2)
   99544:	e0fffd03 	ldbu	r3,-12(fp)
   99548:	e0bffd43 	ldbu	r2,-11(fp)
   9954c:	10c00836 	bltu	r2,r3,99570 <OSMutexPost+0x1fc>
   99550:	e0bffc17 	ldw	r2,-16(fp)
   99554:	e0bff915 	stw	r2,-28(fp)
   99558:	e0bff917 	ldw	r2,-28(fp)
   9955c:	1001703a 	wrctl	status,r2
   99560:	0094f580 	call	94f58 <OS_Sched>
   99564:	00801e04 	movi	r2,120
   99568:	e0bfff15 	stw	r2,-4(fp)
   9956c:	00001406 	br	995c0 <OSMutexPost+0x24c>
   99570:	e0bffc17 	ldw	r2,-16(fp)
   99574:	e0bff815 	stw	r2,-32(fp)
   99578:	e0bff817 	ldw	r2,-32(fp)
   9957c:	1001703a 	wrctl	status,r2
   99580:	0094f580 	call	94f58 <OS_Sched>
   99584:	e03fff15 	stw	zero,-4(fp)
   99588:	00000d06 	br	995c0 <OSMutexPost+0x24c>
   9958c:	e0bffe17 	ldw	r2,-8(fp)
   99590:	1080020b 	ldhu	r2,8(r2)
   99594:	10803fd4 	ori	r2,r2,255
   99598:	1007883a 	mov	r3,r2
   9959c:	e0bffe17 	ldw	r2,-8(fp)
   995a0:	10c0020d 	sth	r3,8(r2)
   995a4:	e0bffe17 	ldw	r2,-8(fp)
   995a8:	10000115 	stw	zero,4(r2)
   995ac:	e0bffc17 	ldw	r2,-16(fp)
   995b0:	e0bff715 	stw	r2,-36(fp)
   995b4:	e0bff717 	ldw	r2,-36(fp)
   995b8:	1001703a 	wrctl	status,r2
   995bc:	e03fff15 	stw	zero,-4(fp)
   995c0:	e0bfff17 	ldw	r2,-4(fp)
   995c4:	e037883a 	mov	sp,fp
   995c8:	dfc00117 	ldw	ra,4(sp)
   995cc:	df000017 	ldw	fp,0(sp)
   995d0:	dec00204 	addi	sp,sp,8
   995d4:	f800283a 	ret

000995d8 <OSMutexQuery>:
   995d8:	defff604 	addi	sp,sp,-40
   995dc:	df000915 	stw	fp,36(sp)
   995e0:	df000904 	addi	fp,sp,36
   995e4:	e13ffd15 	stw	r4,-12(fp)
   995e8:	e17ffe15 	stw	r5,-8(fp)
   995ec:	e03ff915 	stw	zero,-28(fp)
   995f0:	008002b4 	movhi	r2,10
   995f4:	10910504 	addi	r2,r2,17428
   995f8:	10800003 	ldbu	r2,0(r2)
   995fc:	10803fcc 	andi	r2,r2,255
   99600:	1005003a 	cmpeq	r2,r2,zero
   99604:	1000031e 	bne	r2,zero,99614 <OSMutexQuery+0x3c>
   99608:	00800184 	movi	r2,6
   9960c:	e0bfff15 	stw	r2,-4(fp)
   99610:	00005606 	br	9976c <OSMutexQuery+0x194>
   99614:	e0bffd17 	ldw	r2,-12(fp)
   99618:	1004c03a 	cmpne	r2,r2,zero
   9961c:	1000031e 	bne	r2,zero,9962c <OSMutexQuery+0x54>
   99620:	00800104 	movi	r2,4
   99624:	e0bfff15 	stw	r2,-4(fp)
   99628:	00005006 	br	9976c <OSMutexQuery+0x194>
   9962c:	e0bffe17 	ldw	r2,-8(fp)
   99630:	1004c03a 	cmpne	r2,r2,zero
   99634:	1000031e 	bne	r2,zero,99644 <OSMutexQuery+0x6c>
   99638:	00800244 	movi	r2,9
   9963c:	e0bfff15 	stw	r2,-4(fp)
   99640:	00004a06 	br	9976c <OSMutexQuery+0x194>
   99644:	e0bffd17 	ldw	r2,-12(fp)
   99648:	10800003 	ldbu	r2,0(r2)
   9964c:	10803fcc 	andi	r2,r2,255
   99650:	10800120 	cmpeqi	r2,r2,4
   99654:	1000031e 	bne	r2,zero,99664 <OSMutexQuery+0x8c>
   99658:	00800044 	movi	r2,1
   9965c:	e0bfff15 	stw	r2,-4(fp)
   99660:	00004206 	br	9976c <OSMutexQuery+0x194>
   99664:	0005303a 	rdctl	r2,status
   99668:	e0bff815 	stw	r2,-32(fp)
   9966c:	e0fff817 	ldw	r3,-32(fp)
   99670:	00bfff84 	movi	r2,-2
   99674:	1884703a 	and	r2,r3,r2
   99678:	1001703a 	wrctl	status,r2
   9967c:	e0bff817 	ldw	r2,-32(fp)
   99680:	e0bff915 	stw	r2,-28(fp)
   99684:	e0bffd17 	ldw	r2,-12(fp)
   99688:	1080020b 	ldhu	r2,8(r2)
   9968c:	10bfffcc 	andi	r2,r2,65535
   99690:	1004d23a 	srli	r2,r2,8
   99694:	1007883a 	mov	r3,r2
   99698:	e0bffe17 	ldw	r2,-8(fp)
   9969c:	10c00185 	stb	r3,6(r2)
   996a0:	e0bffd17 	ldw	r2,-12(fp)
   996a4:	1080020b 	ldhu	r2,8(r2)
   996a8:	1007883a 	mov	r3,r2
   996ac:	00bfffc4 	movi	r2,-1
   996b0:	1884703a 	and	r2,r3,r2
   996b4:	1007883a 	mov	r3,r2
   996b8:	e0bffe17 	ldw	r2,-8(fp)
   996bc:	10c00145 	stb	r3,5(r2)
   996c0:	e0bffe17 	ldw	r2,-8(fp)
   996c4:	10800143 	ldbu	r2,5(r2)
   996c8:	10803fcc 	andi	r2,r2,255
   996cc:	10803fd8 	cmpnei	r2,r2,255
   996d0:	1000041e 	bne	r2,zero,996e4 <OSMutexQuery+0x10c>
   996d4:	e0fffe17 	ldw	r3,-8(fp)
   996d8:	00800044 	movi	r2,1
   996dc:	18800105 	stb	r2,4(r3)
   996e0:	00000206 	br	996ec <OSMutexQuery+0x114>
   996e4:	e0bffe17 	ldw	r2,-8(fp)
   996e8:	10000105 	stb	zero,4(r2)
   996ec:	e0bffd17 	ldw	r2,-12(fp)
   996f0:	10c00283 	ldbu	r3,10(r2)
   996f4:	e0bffe17 	ldw	r2,-8(fp)
   996f8:	10c000c5 	stb	r3,3(r2)
   996fc:	e0bffd17 	ldw	r2,-12(fp)
   99700:	108002c4 	addi	r2,r2,11
   99704:	e0bffb15 	stw	r2,-20(fp)
   99708:	e0bffe17 	ldw	r2,-8(fp)
   9970c:	e0bffa15 	stw	r2,-24(fp)
   99710:	e03ffc05 	stb	zero,-16(fp)
   99714:	00000d06 	br	9974c <OSMutexQuery+0x174>
   99718:	e0bffb17 	ldw	r2,-20(fp)
   9971c:	10c00003 	ldbu	r3,0(r2)
   99720:	e0bffa17 	ldw	r2,-24(fp)
   99724:	10c00005 	stb	r3,0(r2)
   99728:	e0bffa17 	ldw	r2,-24(fp)
   9972c:	10800044 	addi	r2,r2,1
   99730:	e0bffa15 	stw	r2,-24(fp)
   99734:	e0bffb17 	ldw	r2,-20(fp)
   99738:	10800044 	addi	r2,r2,1
   9973c:	e0bffb15 	stw	r2,-20(fp)
   99740:	e0bffc03 	ldbu	r2,-16(fp)
   99744:	10800044 	addi	r2,r2,1
   99748:	e0bffc05 	stb	r2,-16(fp)
   9974c:	e0bffc03 	ldbu	r2,-16(fp)
   99750:	108000f0 	cmpltui	r2,r2,3
   99754:	103ff01e 	bne	r2,zero,99718 <OSMutexQuery+0x140>
   99758:	e0bff917 	ldw	r2,-28(fp)
   9975c:	e0bff715 	stw	r2,-36(fp)
   99760:	e0bff717 	ldw	r2,-36(fp)
   99764:	1001703a 	wrctl	status,r2
   99768:	e03fff15 	stw	zero,-4(fp)
   9976c:	e0bfff17 	ldw	r2,-4(fp)
   99770:	e037883a 	mov	sp,fp
   99774:	df000017 	ldw	fp,0(sp)
   99778:	dec00104 	addi	sp,sp,4
   9977c:	f800283a 	ret

00099780 <OSMutex_RdyAtPrio>:
   99780:	defffc04 	addi	sp,sp,-16
   99784:	df000315 	stw	fp,12(sp)
   99788:	df000304 	addi	fp,sp,12
   9978c:	e13ffe15 	stw	r4,-8(fp)
   99790:	e17fff05 	stb	r5,-4(fp)
   99794:	e0bffe17 	ldw	r2,-8(fp)
   99798:	10800d03 	ldbu	r2,52(r2)
   9979c:	e0bffd05 	stb	r2,-12(fp)
   997a0:	e13ffd03 	ldbu	r4,-12(fp)
   997a4:	e0fffd03 	ldbu	r3,-12(fp)
   997a8:	008002b4 	movhi	r2,10
   997ac:	10910344 	addi	r2,r2,17421
   997b0:	10c5883a 	add	r2,r2,r3
   997b4:	10800003 	ldbu	r2,0(r2)
   997b8:	1007883a 	mov	r3,r2
   997bc:	e0bffe17 	ldw	r2,-8(fp)
   997c0:	10800d43 	ldbu	r2,53(r2)
   997c4:	0084303a 	nor	r2,zero,r2
   997c8:	1884703a 	and	r2,r3,r2
   997cc:	1007883a 	mov	r3,r2
   997d0:	008002b4 	movhi	r2,10
   997d4:	10910344 	addi	r2,r2,17421
   997d8:	1105883a 	add	r2,r2,r4
   997dc:	10c00005 	stb	r3,0(r2)
   997e0:	e0fffd03 	ldbu	r3,-12(fp)
   997e4:	008002b4 	movhi	r2,10
   997e8:	10910344 	addi	r2,r2,17421
   997ec:	10c5883a 	add	r2,r2,r3
   997f0:	10800003 	ldbu	r2,0(r2)
   997f4:	10803fcc 	andi	r2,r2,255
   997f8:	1004c03a 	cmpne	r2,r2,zero
   997fc:	10000c1e 	bne	r2,zero,99830 <OSMutex_RdyAtPrio+0xb0>
   99800:	e0bffe17 	ldw	r2,-8(fp)
   99804:	10800d83 	ldbu	r2,54(r2)
   99808:	0084303a 	nor	r2,zero,r2
   9980c:	1007883a 	mov	r3,r2
   99810:	008002b4 	movhi	r2,10
   99814:	10910304 	addi	r2,r2,17420
   99818:	10800003 	ldbu	r2,0(r2)
   9981c:	1884703a 	and	r2,r3,r2
   99820:	1007883a 	mov	r3,r2
   99824:	008002b4 	movhi	r2,10
   99828:	10910304 	addi	r2,r2,17420
   9982c:	10c00005 	stb	r3,0(r2)
   99830:	e0fffe17 	ldw	r3,-8(fp)
   99834:	e0bfff03 	ldbu	r2,-4(fp)
   99838:	18800c85 	stb	r2,50(r3)
   9983c:	e0bfff03 	ldbu	r2,-4(fp)
   99840:	1004d0fa 	srli	r2,r2,3
   99844:	108001cc 	andi	r2,r2,7
   99848:	1007883a 	mov	r3,r2
   9984c:	e0bffe17 	ldw	r2,-8(fp)
   99850:	10c00d05 	stb	r3,52(r2)
   99854:	e0bfff03 	ldbu	r2,-4(fp)
   99858:	108001cc 	andi	r2,r2,7
   9985c:	1007883a 	mov	r3,r2
   99860:	e0bffe17 	ldw	r2,-8(fp)
   99864:	10c00cc5 	stb	r3,51(r2)
   99868:	e0bffe17 	ldw	r2,-8(fp)
   9986c:	10800d03 	ldbu	r2,52(r2)
   99870:	10c03fcc 	andi	r3,r2,255
   99874:	00800044 	movi	r2,1
   99878:	10c4983a 	sll	r2,r2,r3
   9987c:	1007883a 	mov	r3,r2
   99880:	e0bffe17 	ldw	r2,-8(fp)
   99884:	10c00d85 	stb	r3,54(r2)
   99888:	e0bffe17 	ldw	r2,-8(fp)
   9988c:	10800cc3 	ldbu	r2,51(r2)
   99890:	10c03fcc 	andi	r3,r2,255
   99894:	00800044 	movi	r2,1
   99898:	10c4983a 	sll	r2,r2,r3
   9989c:	1007883a 	mov	r3,r2
   998a0:	e0bffe17 	ldw	r2,-8(fp)
   998a4:	10c00d45 	stb	r3,53(r2)
   998a8:	e0bffe17 	ldw	r2,-8(fp)
   998ac:	10c00d83 	ldbu	r3,54(r2)
   998b0:	008002b4 	movhi	r2,10
   998b4:	10910304 	addi	r2,r2,17420
   998b8:	10800003 	ldbu	r2,0(r2)
   998bc:	1884b03a 	or	r2,r3,r2
   998c0:	1007883a 	mov	r3,r2
   998c4:	008002b4 	movhi	r2,10
   998c8:	10910304 	addi	r2,r2,17420
   998cc:	10c00005 	stb	r3,0(r2)
   998d0:	e0bffe17 	ldw	r2,-8(fp)
   998d4:	10800d03 	ldbu	r2,52(r2)
   998d8:	11003fcc 	andi	r4,r2,255
   998dc:	e0bffe17 	ldw	r2,-8(fp)
   998e0:	10800d03 	ldbu	r2,52(r2)
   998e4:	10c03fcc 	andi	r3,r2,255
   998e8:	008002b4 	movhi	r2,10
   998ec:	10910344 	addi	r2,r2,17421
   998f0:	10c5883a 	add	r2,r2,r3
   998f4:	10c00003 	ldbu	r3,0(r2)
   998f8:	e0bffe17 	ldw	r2,-8(fp)
   998fc:	10800d43 	ldbu	r2,53(r2)
   99900:	1884b03a 	or	r2,r3,r2
   99904:	1007883a 	mov	r3,r2
   99908:	008002b4 	movhi	r2,10
   9990c:	10910344 	addi	r2,r2,17421
   99910:	1105883a 	add	r2,r2,r4
   99914:	10c00005 	stb	r3,0(r2)
   99918:	e0bfff03 	ldbu	r2,-4(fp)
   9991c:	00c002f4 	movhi	r3,11
   99920:	18ddd004 	addi	r3,r3,30528
   99924:	1085883a 	add	r2,r2,r2
   99928:	1085883a 	add	r2,r2,r2
   9992c:	10c7883a 	add	r3,r2,r3
   99930:	e0bffe17 	ldw	r2,-8(fp)
   99934:	18800015 	stw	r2,0(r3)
   99938:	e037883a 	mov	sp,fp
   9993c:	df000017 	ldw	fp,0(sp)
   99940:	dec00104 	addi	sp,sp,4
   99944:	f800283a 	ret

00099948 <OSQAccept>:
   99948:	defff704 	addi	sp,sp,-36
   9994c:	df000815 	stw	fp,32(sp)
   99950:	df000804 	addi	fp,sp,32
   99954:	e13ffd15 	stw	r4,-12(fp)
   99958:	e17ffe15 	stw	r5,-8(fp)
   9995c:	e03ffa15 	stw	zero,-24(fp)
   99960:	e0bffe17 	ldw	r2,-8(fp)
   99964:	1004c03a 	cmpne	r2,r2,zero
   99968:	1000021e 	bne	r2,zero,99974 <OSQAccept+0x2c>
   9996c:	e03fff15 	stw	zero,-4(fp)
   99970:	00004506 	br	99a88 <OSQAccept+0x140>
   99974:	e0bffd17 	ldw	r2,-12(fp)
   99978:	1004c03a 	cmpne	r2,r2,zero
   9997c:	1000051e 	bne	r2,zero,99994 <OSQAccept+0x4c>
   99980:	e0fffe17 	ldw	r3,-8(fp)
   99984:	00800104 	movi	r2,4
   99988:	18800005 	stb	r2,0(r3)
   9998c:	e03fff15 	stw	zero,-4(fp)
   99990:	00003d06 	br	99a88 <OSQAccept+0x140>
   99994:	e0bffd17 	ldw	r2,-12(fp)
   99998:	10800003 	ldbu	r2,0(r2)
   9999c:	10803fcc 	andi	r2,r2,255
   999a0:	108000a0 	cmpeqi	r2,r2,2
   999a4:	1000051e 	bne	r2,zero,999bc <OSQAccept+0x74>
   999a8:	e0fffe17 	ldw	r3,-8(fp)
   999ac:	00800044 	movi	r2,1
   999b0:	18800005 	stb	r2,0(r3)
   999b4:	e03fff15 	stw	zero,-4(fp)
   999b8:	00003306 	br	99a88 <OSQAccept+0x140>
   999bc:	0005303a 	rdctl	r2,status
   999c0:	e0bff915 	stw	r2,-28(fp)
   999c4:	e0fff917 	ldw	r3,-28(fp)
   999c8:	00bfff84 	movi	r2,-2
   999cc:	1884703a 	and	r2,r3,r2
   999d0:	1001703a 	wrctl	status,r2
   999d4:	e0bff917 	ldw	r2,-28(fp)
   999d8:	e0bffa15 	stw	r2,-24(fp)
   999dc:	e0bffd17 	ldw	r2,-12(fp)
   999e0:	10800117 	ldw	r2,4(r2)
   999e4:	e0bffb15 	stw	r2,-20(fp)
   999e8:	e0bffb17 	ldw	r2,-20(fp)
   999ec:	1080058b 	ldhu	r2,22(r2)
   999f0:	10bfffcc 	andi	r2,r2,65535
   999f4:	1005003a 	cmpeq	r2,r2,zero
   999f8:	1000191e 	bne	r2,zero,99a60 <OSQAccept+0x118>
   999fc:	e0bffb17 	ldw	r2,-20(fp)
   99a00:	10c00417 	ldw	r3,16(r2)
   99a04:	18800017 	ldw	r2,0(r3)
   99a08:	e0bffc15 	stw	r2,-16(fp)
   99a0c:	18c00104 	addi	r3,r3,4
   99a10:	e0bffb17 	ldw	r2,-20(fp)
   99a14:	10c00415 	stw	r3,16(r2)
   99a18:	e0bffb17 	ldw	r2,-20(fp)
   99a1c:	1080058b 	ldhu	r2,22(r2)
   99a20:	10bfffc4 	addi	r2,r2,-1
   99a24:	1007883a 	mov	r3,r2
   99a28:	e0bffb17 	ldw	r2,-20(fp)
   99a2c:	10c0058d 	sth	r3,22(r2)
   99a30:	e0bffb17 	ldw	r2,-20(fp)
   99a34:	10c00417 	ldw	r3,16(r2)
   99a38:	e0bffb17 	ldw	r2,-20(fp)
   99a3c:	10800217 	ldw	r2,8(r2)
   99a40:	1880041e 	bne	r3,r2,99a54 <OSQAccept+0x10c>
   99a44:	e0bffb17 	ldw	r2,-20(fp)
   99a48:	10c00117 	ldw	r3,4(r2)
   99a4c:	e0bffb17 	ldw	r2,-20(fp)
   99a50:	10c00415 	stw	r3,16(r2)
   99a54:	e0bffe17 	ldw	r2,-8(fp)
   99a58:	10000005 	stb	zero,0(r2)
   99a5c:	00000406 	br	99a70 <OSQAccept+0x128>
   99a60:	e0fffe17 	ldw	r3,-8(fp)
   99a64:	008007c4 	movi	r2,31
   99a68:	18800005 	stb	r2,0(r3)
   99a6c:	e03ffc15 	stw	zero,-16(fp)
   99a70:	e0bffa17 	ldw	r2,-24(fp)
   99a74:	e0bff815 	stw	r2,-32(fp)
   99a78:	e0bff817 	ldw	r2,-32(fp)
   99a7c:	1001703a 	wrctl	status,r2
   99a80:	e0bffc17 	ldw	r2,-16(fp)
   99a84:	e0bfff15 	stw	r2,-4(fp)
   99a88:	e0bfff17 	ldw	r2,-4(fp)
   99a8c:	e037883a 	mov	sp,fp
   99a90:	df000017 	ldw	fp,0(sp)
   99a94:	dec00104 	addi	sp,sp,4
   99a98:	f800283a 	ret

00099a9c <OSQCreate>:
   99a9c:	defff304 	addi	sp,sp,-52
   99aa0:	dfc00c15 	stw	ra,48(sp)
   99aa4:	df000b15 	stw	fp,44(sp)
   99aa8:	df000b04 	addi	fp,sp,44
   99aac:	e13ffd15 	stw	r4,-12(fp)
   99ab0:	e17ffe0d 	sth	r5,-8(fp)
   99ab4:	e03ffa15 	stw	zero,-24(fp)
   99ab8:	008002b4 	movhi	r2,10
   99abc:	10910504 	addi	r2,r2,17428
   99ac0:	10800003 	ldbu	r2,0(r2)
   99ac4:	10803fcc 	andi	r2,r2,255
   99ac8:	1005003a 	cmpeq	r2,r2,zero
   99acc:	1000021e 	bne	r2,zero,99ad8 <OSQCreate+0x3c>
   99ad0:	e03fff15 	stw	zero,-4(fp)
   99ad4:	00007006 	br	99c98 <OSQCreate+0x1fc>
   99ad8:	0005303a 	rdctl	r2,status
   99adc:	e0bff915 	stw	r2,-28(fp)
   99ae0:	e0fff917 	ldw	r3,-28(fp)
   99ae4:	00bfff84 	movi	r2,-2
   99ae8:	1884703a 	and	r2,r3,r2
   99aec:	1001703a 	wrctl	status,r2
   99af0:	e0bff917 	ldw	r2,-28(fp)
   99af4:	e0bffa15 	stw	r2,-24(fp)
   99af8:	008002b4 	movhi	r2,10
   99afc:	10910404 	addi	r2,r2,17424
   99b00:	10800017 	ldw	r2,0(r2)
   99b04:	e0bffc15 	stw	r2,-16(fp)
   99b08:	008002b4 	movhi	r2,10
   99b0c:	10910404 	addi	r2,r2,17424
   99b10:	10800017 	ldw	r2,0(r2)
   99b14:	1005003a 	cmpeq	r2,r2,zero
   99b18:	1000081e 	bne	r2,zero,99b3c <OSQCreate+0xa0>
   99b1c:	008002b4 	movhi	r2,10
   99b20:	10910404 	addi	r2,r2,17424
   99b24:	10800017 	ldw	r2,0(r2)
   99b28:	10800117 	ldw	r2,4(r2)
   99b2c:	1007883a 	mov	r3,r2
   99b30:	008002b4 	movhi	r2,10
   99b34:	10910404 	addi	r2,r2,17424
   99b38:	10c00015 	stw	r3,0(r2)
   99b3c:	e0bffa17 	ldw	r2,-24(fp)
   99b40:	e0bff815 	stw	r2,-32(fp)
   99b44:	e0bff817 	ldw	r2,-32(fp)
   99b48:	1001703a 	wrctl	status,r2
   99b4c:	e0bffc17 	ldw	r2,-16(fp)
   99b50:	1005003a 	cmpeq	r2,r2,zero
   99b54:	10004e1e 	bne	r2,zero,99c90 <OSQCreate+0x1f4>
   99b58:	0005303a 	rdctl	r2,status
   99b5c:	e0bff715 	stw	r2,-36(fp)
   99b60:	e0fff717 	ldw	r3,-36(fp)
   99b64:	00bfff84 	movi	r2,-2
   99b68:	1884703a 	and	r2,r3,r2
   99b6c:	1001703a 	wrctl	status,r2
   99b70:	e0bff717 	ldw	r2,-36(fp)
   99b74:	e0bffa15 	stw	r2,-24(fp)
   99b78:	008002b4 	movhi	r2,10
   99b7c:	10910204 	addi	r2,r2,17416
   99b80:	10800017 	ldw	r2,0(r2)
   99b84:	e0bffb15 	stw	r2,-20(fp)
   99b88:	e0bffb17 	ldw	r2,-20(fp)
   99b8c:	1005003a 	cmpeq	r2,r2,zero
   99b90:	1000311e 	bne	r2,zero,99c58 <OSQCreate+0x1bc>
   99b94:	008002b4 	movhi	r2,10
   99b98:	10910204 	addi	r2,r2,17416
   99b9c:	10800017 	ldw	r2,0(r2)
   99ba0:	10c00017 	ldw	r3,0(r2)
   99ba4:	008002b4 	movhi	r2,10
   99ba8:	10910204 	addi	r2,r2,17416
   99bac:	10c00015 	stw	r3,0(r2)
   99bb0:	e0bffa17 	ldw	r2,-24(fp)
   99bb4:	e0bff615 	stw	r2,-40(fp)
   99bb8:	e0bff617 	ldw	r2,-40(fp)
   99bbc:	1001703a 	wrctl	status,r2
   99bc0:	e0fffb17 	ldw	r3,-20(fp)
   99bc4:	e0bffd17 	ldw	r2,-12(fp)
   99bc8:	18800115 	stw	r2,4(r3)
   99bcc:	e0bffe0b 	ldhu	r2,-8(fp)
   99bd0:	1085883a 	add	r2,r2,r2
   99bd4:	1085883a 	add	r2,r2,r2
   99bd8:	1007883a 	mov	r3,r2
   99bdc:	e0bffd17 	ldw	r2,-12(fp)
   99be0:	1887883a 	add	r3,r3,r2
   99be4:	e0bffb17 	ldw	r2,-20(fp)
   99be8:	10c00215 	stw	r3,8(r2)
   99bec:	e0fffb17 	ldw	r3,-20(fp)
   99bf0:	e0bffd17 	ldw	r2,-12(fp)
   99bf4:	18800315 	stw	r2,12(r3)
   99bf8:	e0fffb17 	ldw	r3,-20(fp)
   99bfc:	e0bffd17 	ldw	r2,-12(fp)
   99c00:	18800415 	stw	r2,16(r3)
   99c04:	e0fffb17 	ldw	r3,-20(fp)
   99c08:	e0bffe0b 	ldhu	r2,-8(fp)
   99c0c:	1880050d 	sth	r2,20(r3)
   99c10:	e0bffb17 	ldw	r2,-20(fp)
   99c14:	1000058d 	sth	zero,22(r2)
   99c18:	e0fffc17 	ldw	r3,-16(fp)
   99c1c:	00800084 	movi	r2,2
   99c20:	18800005 	stb	r2,0(r3)
   99c24:	e0bffc17 	ldw	r2,-16(fp)
   99c28:	1000020d 	sth	zero,8(r2)
   99c2c:	e0fffc17 	ldw	r3,-16(fp)
   99c30:	e0bffb17 	ldw	r2,-20(fp)
   99c34:	18800115 	stw	r2,4(r3)
   99c38:	e0fffc17 	ldw	r3,-16(fp)
   99c3c:	00800fc4 	movi	r2,63
   99c40:	18800385 	stb	r2,14(r3)
   99c44:	e0bffc17 	ldw	r2,-16(fp)
   99c48:	100003c5 	stb	zero,15(r2)
   99c4c:	e13ffc17 	ldw	r4,-16(fp)
   99c50:	0094acc0 	call	94acc <OS_EventWaitListInit>
   99c54:	00000e06 	br	99c90 <OSQCreate+0x1f4>
   99c58:	008002b4 	movhi	r2,10
   99c5c:	10910404 	addi	r2,r2,17424
   99c60:	10c00017 	ldw	r3,0(r2)
   99c64:	e0bffc17 	ldw	r2,-16(fp)
   99c68:	10c00115 	stw	r3,4(r2)
   99c6c:	00c002b4 	movhi	r3,10
   99c70:	18d10404 	addi	r3,r3,17424
   99c74:	e0bffc17 	ldw	r2,-16(fp)
   99c78:	18800015 	stw	r2,0(r3)
   99c7c:	e0bffa17 	ldw	r2,-24(fp)
   99c80:	e0bff515 	stw	r2,-44(fp)
   99c84:	e0bff517 	ldw	r2,-44(fp)
   99c88:	1001703a 	wrctl	status,r2
   99c8c:	e03ffc15 	stw	zero,-16(fp)
   99c90:	e0bffc17 	ldw	r2,-16(fp)
   99c94:	e0bfff15 	stw	r2,-4(fp)
   99c98:	e0bfff17 	ldw	r2,-4(fp)
   99c9c:	e037883a 	mov	sp,fp
   99ca0:	dfc00117 	ldw	ra,4(sp)
   99ca4:	df000017 	ldw	fp,0(sp)
   99ca8:	dec00204 	addi	sp,sp,8
   99cac:	f800283a 	ret

00099cb0 <OSQDel>:
   99cb0:	defff004 	addi	sp,sp,-64
   99cb4:	dfc00f15 	stw	ra,60(sp)
   99cb8:	df000e15 	stw	fp,56(sp)
   99cbc:	df000e04 	addi	fp,sp,56
   99cc0:	e13ffb15 	stw	r4,-20(fp)
   99cc4:	e1bffd15 	stw	r6,-12(fp)
   99cc8:	e17ffc05 	stb	r5,-16(fp)
   99ccc:	e03ff715 	stw	zero,-36(fp)
   99cd0:	e0bffd17 	ldw	r2,-12(fp)
   99cd4:	1004c03a 	cmpne	r2,r2,zero
   99cd8:	1000031e 	bne	r2,zero,99ce8 <OSQDel+0x38>
   99cdc:	e0bffb17 	ldw	r2,-20(fp)
   99ce0:	e0bfff15 	stw	r2,-4(fp)
   99ce4:	0000ac06 	br	99f98 <OSQDel+0x2e8>
   99ce8:	e0bffb17 	ldw	r2,-20(fp)
   99cec:	1004c03a 	cmpne	r2,r2,zero
   99cf0:	1000061e 	bne	r2,zero,99d0c <OSQDel+0x5c>
   99cf4:	e0fffd17 	ldw	r3,-12(fp)
   99cf8:	00800104 	movi	r2,4
   99cfc:	18800005 	stb	r2,0(r3)
   99d00:	e0fffb17 	ldw	r3,-20(fp)
   99d04:	e0ffff15 	stw	r3,-4(fp)
   99d08:	0000a306 	br	99f98 <OSQDel+0x2e8>
   99d0c:	e0bffb17 	ldw	r2,-20(fp)
   99d10:	10800003 	ldbu	r2,0(r2)
   99d14:	10803fcc 	andi	r2,r2,255
   99d18:	108000a0 	cmpeqi	r2,r2,2
   99d1c:	1000061e 	bne	r2,zero,99d38 <OSQDel+0x88>
   99d20:	e0fffd17 	ldw	r3,-12(fp)
   99d24:	00800044 	movi	r2,1
   99d28:	18800005 	stb	r2,0(r3)
   99d2c:	e0bffb17 	ldw	r2,-20(fp)
   99d30:	e0bfff15 	stw	r2,-4(fp)
   99d34:	00009806 	br	99f98 <OSQDel+0x2e8>
   99d38:	008002b4 	movhi	r2,10
   99d3c:	10910504 	addi	r2,r2,17428
   99d40:	10800003 	ldbu	r2,0(r2)
   99d44:	10803fcc 	andi	r2,r2,255
   99d48:	1005003a 	cmpeq	r2,r2,zero
   99d4c:	1000061e 	bne	r2,zero,99d68 <OSQDel+0xb8>
   99d50:	e0fffd17 	ldw	r3,-12(fp)
   99d54:	008003c4 	movi	r2,15
   99d58:	18800005 	stb	r2,0(r3)
   99d5c:	e0fffb17 	ldw	r3,-20(fp)
   99d60:	e0ffff15 	stw	r3,-4(fp)
   99d64:	00008c06 	br	99f98 <OSQDel+0x2e8>
   99d68:	0005303a 	rdctl	r2,status
   99d6c:	e0bff615 	stw	r2,-40(fp)
   99d70:	e0fff617 	ldw	r3,-40(fp)
   99d74:	00bfff84 	movi	r2,-2
   99d78:	1884703a 	and	r2,r3,r2
   99d7c:	1001703a 	wrctl	status,r2
   99d80:	e0bff617 	ldw	r2,-40(fp)
   99d84:	e0bff715 	stw	r2,-36(fp)
   99d88:	e0bffb17 	ldw	r2,-20(fp)
   99d8c:	10800283 	ldbu	r2,10(r2)
   99d90:	10803fcc 	andi	r2,r2,255
   99d94:	1005003a 	cmpeq	r2,r2,zero
   99d98:	1000031e 	bne	r2,zero,99da8 <OSQDel+0xf8>
   99d9c:	00800044 	movi	r2,1
   99da0:	e0bffa05 	stb	r2,-24(fp)
   99da4:	00000106 	br	99dac <OSQDel+0xfc>
   99da8:	e03ffa05 	stb	zero,-24(fp)
   99dac:	e0bffc03 	ldbu	r2,-16(fp)
   99db0:	e0bffe15 	stw	r2,-8(fp)
   99db4:	e0fffe17 	ldw	r3,-8(fp)
   99db8:	1805003a 	cmpeq	r2,r3,zero
   99dbc:	1000041e 	bne	r2,zero,99dd0 <OSQDel+0x120>
   99dc0:	e0fffe17 	ldw	r3,-8(fp)
   99dc4:	18800060 	cmpeqi	r2,r3,1
   99dc8:	1000391e 	bne	r2,zero,99eb0 <OSQDel+0x200>
   99dcc:	00006706 	br	99f6c <OSQDel+0x2bc>
   99dd0:	e0bffa03 	ldbu	r2,-24(fp)
   99dd4:	1004c03a 	cmpne	r2,r2,zero
   99dd8:	1000261e 	bne	r2,zero,99e74 <OSQDel+0x1c4>
   99ddc:	e0fffb17 	ldw	r3,-20(fp)
   99de0:	00800fc4 	movi	r2,63
   99de4:	18800385 	stb	r2,14(r3)
   99de8:	e0bffb17 	ldw	r2,-20(fp)
   99dec:	100003c5 	stb	zero,15(r2)
   99df0:	e0bffb17 	ldw	r2,-20(fp)
   99df4:	10800117 	ldw	r2,4(r2)
   99df8:	e0bff815 	stw	r2,-32(fp)
   99dfc:	008002b4 	movhi	r2,10
   99e00:	10910204 	addi	r2,r2,17416
   99e04:	10c00017 	ldw	r3,0(r2)
   99e08:	e0bff817 	ldw	r2,-32(fp)
   99e0c:	10c00015 	stw	r3,0(r2)
   99e10:	00c002b4 	movhi	r3,10
   99e14:	18d10204 	addi	r3,r3,17416
   99e18:	e0bff817 	ldw	r2,-32(fp)
   99e1c:	18800015 	stw	r2,0(r3)
   99e20:	e0bffb17 	ldw	r2,-20(fp)
   99e24:	10000005 	stb	zero,0(r2)
   99e28:	008002b4 	movhi	r2,10
   99e2c:	10910404 	addi	r2,r2,17424
   99e30:	10c00017 	ldw	r3,0(r2)
   99e34:	e0bffb17 	ldw	r2,-20(fp)
   99e38:	10c00115 	stw	r3,4(r2)
   99e3c:	e0bffb17 	ldw	r2,-20(fp)
   99e40:	1000020d 	sth	zero,8(r2)
   99e44:	00c002b4 	movhi	r3,10
   99e48:	18d10404 	addi	r3,r3,17424
   99e4c:	e0bffb17 	ldw	r2,-20(fp)
   99e50:	18800015 	stw	r2,0(r3)
   99e54:	e0bff717 	ldw	r2,-36(fp)
   99e58:	e0bff515 	stw	r2,-44(fp)
   99e5c:	e0bff517 	ldw	r2,-44(fp)
   99e60:	1001703a 	wrctl	status,r2
   99e64:	e0bffd17 	ldw	r2,-12(fp)
   99e68:	10000005 	stb	zero,0(r2)
   99e6c:	e03ff915 	stw	zero,-28(fp)
   99e70:	00004706 	br	99f90 <OSQDel+0x2e0>
   99e74:	e0bff717 	ldw	r2,-36(fp)
   99e78:	e0bff415 	stw	r2,-48(fp)
   99e7c:	e0bff417 	ldw	r2,-48(fp)
   99e80:	1001703a 	wrctl	status,r2
   99e84:	e0fffd17 	ldw	r3,-12(fp)
   99e88:	00801244 	movi	r2,73
   99e8c:	18800005 	stb	r2,0(r3)
   99e90:	e0bffb17 	ldw	r2,-20(fp)
   99e94:	e0bff915 	stw	r2,-28(fp)
   99e98:	00003d06 	br	99f90 <OSQDel+0x2e0>
   99e9c:	e13ffb17 	ldw	r4,-20(fp)
   99ea0:	000b883a 	mov	r5,zero
   99ea4:	01800104 	movi	r6,4
   99ea8:	000f883a 	mov	r7,zero
   99eac:	00945180 	call	94518 <OS_EventTaskRdy>
   99eb0:	e0bffb17 	ldw	r2,-20(fp)
   99eb4:	10800283 	ldbu	r2,10(r2)
   99eb8:	10803fcc 	andi	r2,r2,255
   99ebc:	1004c03a 	cmpne	r2,r2,zero
   99ec0:	103ff61e 	bne	r2,zero,99e9c <OSQDel+0x1ec>
   99ec4:	e0fffb17 	ldw	r3,-20(fp)
   99ec8:	00800fc4 	movi	r2,63
   99ecc:	18800385 	stb	r2,14(r3)
   99ed0:	e0bffb17 	ldw	r2,-20(fp)
   99ed4:	100003c5 	stb	zero,15(r2)
   99ed8:	e0bffb17 	ldw	r2,-20(fp)
   99edc:	10800117 	ldw	r2,4(r2)
   99ee0:	e0bff815 	stw	r2,-32(fp)
   99ee4:	008002b4 	movhi	r2,10
   99ee8:	10910204 	addi	r2,r2,17416
   99eec:	10c00017 	ldw	r3,0(r2)
   99ef0:	e0bff817 	ldw	r2,-32(fp)
   99ef4:	10c00015 	stw	r3,0(r2)
   99ef8:	00c002b4 	movhi	r3,10
   99efc:	18d10204 	addi	r3,r3,17416
   99f00:	e0bff817 	ldw	r2,-32(fp)
   99f04:	18800015 	stw	r2,0(r3)
   99f08:	e0bffb17 	ldw	r2,-20(fp)
   99f0c:	10000005 	stb	zero,0(r2)
   99f10:	008002b4 	movhi	r2,10
   99f14:	10910404 	addi	r2,r2,17424
   99f18:	10c00017 	ldw	r3,0(r2)
   99f1c:	e0bffb17 	ldw	r2,-20(fp)
   99f20:	10c00115 	stw	r3,4(r2)
   99f24:	e0bffb17 	ldw	r2,-20(fp)
   99f28:	1000020d 	sth	zero,8(r2)
   99f2c:	00c002b4 	movhi	r3,10
   99f30:	18d10404 	addi	r3,r3,17424
   99f34:	e0bffb17 	ldw	r2,-20(fp)
   99f38:	18800015 	stw	r2,0(r3)
   99f3c:	e0bff717 	ldw	r2,-36(fp)
   99f40:	e0bff315 	stw	r2,-52(fp)
   99f44:	e0bff317 	ldw	r2,-52(fp)
   99f48:	1001703a 	wrctl	status,r2
   99f4c:	e0bffa03 	ldbu	r2,-24(fp)
   99f50:	10800058 	cmpnei	r2,r2,1
   99f54:	1000011e 	bne	r2,zero,99f5c <OSQDel+0x2ac>
   99f58:	0094f580 	call	94f58 <OS_Sched>
   99f5c:	e0bffd17 	ldw	r2,-12(fp)
   99f60:	10000005 	stb	zero,0(r2)
   99f64:	e03ff915 	stw	zero,-28(fp)
   99f68:	00000906 	br	99f90 <OSQDel+0x2e0>
   99f6c:	e0bff717 	ldw	r2,-36(fp)
   99f70:	e0bff215 	stw	r2,-56(fp)
   99f74:	e0bff217 	ldw	r2,-56(fp)
   99f78:	1001703a 	wrctl	status,r2
   99f7c:	e0fffd17 	ldw	r3,-12(fp)
   99f80:	008001c4 	movi	r2,7
   99f84:	18800005 	stb	r2,0(r3)
   99f88:	e0bffb17 	ldw	r2,-20(fp)
   99f8c:	e0bff915 	stw	r2,-28(fp)
   99f90:	e0bff917 	ldw	r2,-28(fp)
   99f94:	e0bfff15 	stw	r2,-4(fp)
   99f98:	e0bfff17 	ldw	r2,-4(fp)
   99f9c:	e037883a 	mov	sp,fp
   99fa0:	dfc00117 	ldw	ra,4(sp)
   99fa4:	df000017 	ldw	fp,0(sp)
   99fa8:	dec00204 	addi	sp,sp,8
   99fac:	f800283a 	ret

00099fb0 <OSQFlush>:
   99fb0:	defff904 	addi	sp,sp,-28
   99fb4:	df000615 	stw	fp,24(sp)
   99fb8:	df000604 	addi	fp,sp,24
   99fbc:	e13ffe15 	stw	r4,-8(fp)
   99fc0:	e03ffc15 	stw	zero,-16(fp)
   99fc4:	e0bffe17 	ldw	r2,-8(fp)
   99fc8:	1004c03a 	cmpne	r2,r2,zero
   99fcc:	1000031e 	bne	r2,zero,99fdc <OSQFlush+0x2c>
   99fd0:	00800104 	movi	r2,4
   99fd4:	e0bfff15 	stw	r2,-4(fp)
   99fd8:	00002206 	br	9a064 <OSQFlush+0xb4>
   99fdc:	e0bffe17 	ldw	r2,-8(fp)
   99fe0:	10800003 	ldbu	r2,0(r2)
   99fe4:	10803fcc 	andi	r2,r2,255
   99fe8:	108000a0 	cmpeqi	r2,r2,2
   99fec:	1000031e 	bne	r2,zero,99ffc <OSQFlush+0x4c>
   99ff0:	00800044 	movi	r2,1
   99ff4:	e0bfff15 	stw	r2,-4(fp)
   99ff8:	00001a06 	br	9a064 <OSQFlush+0xb4>
   99ffc:	0005303a 	rdctl	r2,status
   9a000:	e0bffb15 	stw	r2,-20(fp)
   9a004:	e0fffb17 	ldw	r3,-20(fp)
   9a008:	00bfff84 	movi	r2,-2
   9a00c:	1884703a 	and	r2,r3,r2
   9a010:	1001703a 	wrctl	status,r2
   9a014:	e0bffb17 	ldw	r2,-20(fp)
   9a018:	e0bffc15 	stw	r2,-16(fp)
   9a01c:	e0bffe17 	ldw	r2,-8(fp)
   9a020:	10800117 	ldw	r2,4(r2)
   9a024:	e0bffd15 	stw	r2,-12(fp)
   9a028:	e0bffd17 	ldw	r2,-12(fp)
   9a02c:	10c00117 	ldw	r3,4(r2)
   9a030:	e0bffd17 	ldw	r2,-12(fp)
   9a034:	10c00315 	stw	r3,12(r2)
   9a038:	e0bffd17 	ldw	r2,-12(fp)
   9a03c:	10c00117 	ldw	r3,4(r2)
   9a040:	e0bffd17 	ldw	r2,-12(fp)
   9a044:	10c00415 	stw	r3,16(r2)
   9a048:	e0bffd17 	ldw	r2,-12(fp)
   9a04c:	1000058d 	sth	zero,22(r2)
   9a050:	e0bffc17 	ldw	r2,-16(fp)
   9a054:	e0bffa15 	stw	r2,-24(fp)
   9a058:	e0bffa17 	ldw	r2,-24(fp)
   9a05c:	1001703a 	wrctl	status,r2
   9a060:	e03fff15 	stw	zero,-4(fp)
   9a064:	e0bfff17 	ldw	r2,-4(fp)
   9a068:	e037883a 	mov	sp,fp
   9a06c:	df000017 	ldw	fp,0(sp)
   9a070:	dec00104 	addi	sp,sp,4
   9a074:	f800283a 	ret

0009a078 <OSQPend>:
   9a078:	defff104 	addi	sp,sp,-60
   9a07c:	dfc00e15 	stw	ra,56(sp)
   9a080:	df000d15 	stw	fp,52(sp)
   9a084:	df000d04 	addi	fp,sp,52
   9a088:	e13ffb15 	stw	r4,-20(fp)
   9a08c:	e1bffd15 	stw	r6,-12(fp)
   9a090:	e17ffc0d 	sth	r5,-16(fp)
   9a094:	e03ff815 	stw	zero,-32(fp)
   9a098:	e0bffd17 	ldw	r2,-12(fp)
   9a09c:	1004c03a 	cmpne	r2,r2,zero
   9a0a0:	1000021e 	bne	r2,zero,9a0ac <OSQPend+0x34>
   9a0a4:	e03fff15 	stw	zero,-4(fp)
   9a0a8:	0000b506 	br	9a380 <OSQPend+0x308>
   9a0ac:	e0bffb17 	ldw	r2,-20(fp)
   9a0b0:	1004c03a 	cmpne	r2,r2,zero
   9a0b4:	1000051e 	bne	r2,zero,9a0cc <OSQPend+0x54>
   9a0b8:	e0fffd17 	ldw	r3,-12(fp)
   9a0bc:	00800104 	movi	r2,4
   9a0c0:	18800005 	stb	r2,0(r3)
   9a0c4:	e03fff15 	stw	zero,-4(fp)
   9a0c8:	0000ad06 	br	9a380 <OSQPend+0x308>
   9a0cc:	e0bffb17 	ldw	r2,-20(fp)
   9a0d0:	10800003 	ldbu	r2,0(r2)
   9a0d4:	10803fcc 	andi	r2,r2,255
   9a0d8:	108000a0 	cmpeqi	r2,r2,2
   9a0dc:	1000051e 	bne	r2,zero,9a0f4 <OSQPend+0x7c>
   9a0e0:	e0fffd17 	ldw	r3,-12(fp)
   9a0e4:	00800044 	movi	r2,1
   9a0e8:	18800005 	stb	r2,0(r3)
   9a0ec:	e03fff15 	stw	zero,-4(fp)
   9a0f0:	0000a306 	br	9a380 <OSQPend+0x308>
   9a0f4:	008002b4 	movhi	r2,10
   9a0f8:	10910504 	addi	r2,r2,17428
   9a0fc:	10800003 	ldbu	r2,0(r2)
   9a100:	10803fcc 	andi	r2,r2,255
   9a104:	1005003a 	cmpeq	r2,r2,zero
   9a108:	1000051e 	bne	r2,zero,9a120 <OSQPend+0xa8>
   9a10c:	e0fffd17 	ldw	r3,-12(fp)
   9a110:	00800084 	movi	r2,2
   9a114:	18800005 	stb	r2,0(r3)
   9a118:	e03fff15 	stw	zero,-4(fp)
   9a11c:	00009806 	br	9a380 <OSQPend+0x308>
   9a120:	008002b4 	movhi	r2,10
   9a124:	1090f704 	addi	r2,r2,17372
   9a128:	10800003 	ldbu	r2,0(r2)
   9a12c:	10803fcc 	andi	r2,r2,255
   9a130:	1005003a 	cmpeq	r2,r2,zero
   9a134:	1000051e 	bne	r2,zero,9a14c <OSQPend+0xd4>
   9a138:	e0fffd17 	ldw	r3,-12(fp)
   9a13c:	00800344 	movi	r2,13
   9a140:	18800005 	stb	r2,0(r3)
   9a144:	e03fff15 	stw	zero,-4(fp)
   9a148:	00008d06 	br	9a380 <OSQPend+0x308>
   9a14c:	0005303a 	rdctl	r2,status
   9a150:	e0bff715 	stw	r2,-36(fp)
   9a154:	e0fff717 	ldw	r3,-36(fp)
   9a158:	00bfff84 	movi	r2,-2
   9a15c:	1884703a 	and	r2,r3,r2
   9a160:	1001703a 	wrctl	status,r2
   9a164:	e0bff717 	ldw	r2,-36(fp)
   9a168:	e0bff815 	stw	r2,-32(fp)
   9a16c:	e0bffb17 	ldw	r2,-20(fp)
   9a170:	10800117 	ldw	r2,4(r2)
   9a174:	e0bff915 	stw	r2,-28(fp)
   9a178:	e0bff917 	ldw	r2,-28(fp)
   9a17c:	1080058b 	ldhu	r2,22(r2)
   9a180:	10bfffcc 	andi	r2,r2,65535
   9a184:	1005003a 	cmpeq	r2,r2,zero
   9a188:	10001f1e 	bne	r2,zero,9a208 <OSQPend+0x190>
   9a18c:	e0bff917 	ldw	r2,-28(fp)
   9a190:	10c00417 	ldw	r3,16(r2)
   9a194:	18800017 	ldw	r2,0(r3)
   9a198:	e0bffa15 	stw	r2,-24(fp)
   9a19c:	18c00104 	addi	r3,r3,4
   9a1a0:	e0bff917 	ldw	r2,-28(fp)
   9a1a4:	10c00415 	stw	r3,16(r2)
   9a1a8:	e0bff917 	ldw	r2,-28(fp)
   9a1ac:	1080058b 	ldhu	r2,22(r2)
   9a1b0:	10bfffc4 	addi	r2,r2,-1
   9a1b4:	1007883a 	mov	r3,r2
   9a1b8:	e0bff917 	ldw	r2,-28(fp)
   9a1bc:	10c0058d 	sth	r3,22(r2)
   9a1c0:	e0bff917 	ldw	r2,-28(fp)
   9a1c4:	10c00417 	ldw	r3,16(r2)
   9a1c8:	e0bff917 	ldw	r2,-28(fp)
   9a1cc:	10800217 	ldw	r2,8(r2)
   9a1d0:	1880041e 	bne	r3,r2,9a1e4 <OSQPend+0x16c>
   9a1d4:	e0bff917 	ldw	r2,-28(fp)
   9a1d8:	10c00117 	ldw	r3,4(r2)
   9a1dc:	e0bff917 	ldw	r2,-28(fp)
   9a1e0:	10c00415 	stw	r3,16(r2)
   9a1e4:	e0bff817 	ldw	r2,-32(fp)
   9a1e8:	e0bff615 	stw	r2,-40(fp)
   9a1ec:	e0bff617 	ldw	r2,-40(fp)
   9a1f0:	1001703a 	wrctl	status,r2
   9a1f4:	e0bffd17 	ldw	r2,-12(fp)
   9a1f8:	10000005 	stb	zero,0(r2)
   9a1fc:	e0bffa17 	ldw	r2,-24(fp)
   9a200:	e0bfff15 	stw	r2,-4(fp)
   9a204:	00005e06 	br	9a380 <OSQPend+0x308>
   9a208:	008002b4 	movhi	r2,10
   9a20c:	10910604 	addi	r2,r2,17432
   9a210:	10c00017 	ldw	r3,0(r2)
   9a214:	008002b4 	movhi	r2,10
   9a218:	10910604 	addi	r2,r2,17432
   9a21c:	10800017 	ldw	r2,0(r2)
   9a220:	10800c03 	ldbu	r2,48(r2)
   9a224:	10800114 	ori	r2,r2,4
   9a228:	18800c05 	stb	r2,48(r3)
   9a22c:	008002b4 	movhi	r2,10
   9a230:	10910604 	addi	r2,r2,17432
   9a234:	10800017 	ldw	r2,0(r2)
   9a238:	10000c45 	stb	zero,49(r2)
   9a23c:	008002b4 	movhi	r2,10
   9a240:	10910604 	addi	r2,r2,17432
   9a244:	10c00017 	ldw	r3,0(r2)
   9a248:	e0bffc0b 	ldhu	r2,-16(fp)
   9a24c:	18800b8d 	sth	r2,46(r3)
   9a250:	e13ffb17 	ldw	r4,-20(fp)
   9a254:	00946ac0 	call	946ac <OS_EventTaskWait>
   9a258:	e0bff817 	ldw	r2,-32(fp)
   9a25c:	e0bff515 	stw	r2,-44(fp)
   9a260:	e0bff517 	ldw	r2,-44(fp)
   9a264:	1001703a 	wrctl	status,r2
   9a268:	0094f580 	call	94f58 <OS_Sched>
   9a26c:	0005303a 	rdctl	r2,status
   9a270:	e0bff415 	stw	r2,-48(fp)
   9a274:	e0fff417 	ldw	r3,-48(fp)
   9a278:	00bfff84 	movi	r2,-2
   9a27c:	1884703a 	and	r2,r3,r2
   9a280:	1001703a 	wrctl	status,r2
   9a284:	e0bff417 	ldw	r2,-48(fp)
   9a288:	e0bff815 	stw	r2,-32(fp)
   9a28c:	008002b4 	movhi	r2,10
   9a290:	10910604 	addi	r2,r2,17432
   9a294:	10800017 	ldw	r2,0(r2)
   9a298:	10800c43 	ldbu	r2,49(r2)
   9a29c:	10803fcc 	andi	r2,r2,255
   9a2a0:	e0bffe15 	stw	r2,-8(fp)
   9a2a4:	e0fffe17 	ldw	r3,-8(fp)
   9a2a8:	1805003a 	cmpeq	r2,r3,zero
   9a2ac:	1000041e 	bne	r2,zero,9a2c0 <OSQPend+0x248>
   9a2b0:	e0fffe17 	ldw	r3,-8(fp)
   9a2b4:	188000a0 	cmpeqi	r2,r3,2
   9a2b8:	1000091e 	bne	r2,zero,9a2e0 <OSQPend+0x268>
   9a2bc:	00000d06 	br	9a2f4 <OSQPend+0x27c>
   9a2c0:	008002b4 	movhi	r2,10
   9a2c4:	10910604 	addi	r2,r2,17432
   9a2c8:	10800017 	ldw	r2,0(r2)
   9a2cc:	10800917 	ldw	r2,36(r2)
   9a2d0:	e0bffa15 	stw	r2,-24(fp)
   9a2d4:	e0bffd17 	ldw	r2,-12(fp)
   9a2d8:	10000005 	stb	zero,0(r2)
   9a2dc:	00000e06 	br	9a318 <OSQPend+0x2a0>
   9a2e0:	e03ffa15 	stw	zero,-24(fp)
   9a2e4:	e0fffd17 	ldw	r3,-12(fp)
   9a2e8:	00800384 	movi	r2,14
   9a2ec:	18800005 	stb	r2,0(r3)
   9a2f0:	00000906 	br	9a318 <OSQPend+0x2a0>
   9a2f4:	008002b4 	movhi	r2,10
   9a2f8:	10910604 	addi	r2,r2,17432
   9a2fc:	11000017 	ldw	r4,0(r2)
   9a300:	e17ffb17 	ldw	r5,-20(fp)
   9a304:	00949100 	call	94910 <OS_EventTaskRemove>
   9a308:	e03ffa15 	stw	zero,-24(fp)
   9a30c:	e0fffd17 	ldw	r3,-12(fp)
   9a310:	00800284 	movi	r2,10
   9a314:	18800005 	stb	r2,0(r3)
   9a318:	008002b4 	movhi	r2,10
   9a31c:	10910604 	addi	r2,r2,17432
   9a320:	10800017 	ldw	r2,0(r2)
   9a324:	10000c05 	stb	zero,48(r2)
   9a328:	008002b4 	movhi	r2,10
   9a32c:	10910604 	addi	r2,r2,17432
   9a330:	10800017 	ldw	r2,0(r2)
   9a334:	10000c45 	stb	zero,49(r2)
   9a338:	008002b4 	movhi	r2,10
   9a33c:	10910604 	addi	r2,r2,17432
   9a340:	10800017 	ldw	r2,0(r2)
   9a344:	10000715 	stw	zero,28(r2)
   9a348:	008002b4 	movhi	r2,10
   9a34c:	10910604 	addi	r2,r2,17432
   9a350:	10800017 	ldw	r2,0(r2)
   9a354:	10000815 	stw	zero,32(r2)
   9a358:	008002b4 	movhi	r2,10
   9a35c:	10910604 	addi	r2,r2,17432
   9a360:	10800017 	ldw	r2,0(r2)
   9a364:	10000915 	stw	zero,36(r2)
   9a368:	e0bff817 	ldw	r2,-32(fp)
   9a36c:	e0bff315 	stw	r2,-52(fp)
   9a370:	e0bff317 	ldw	r2,-52(fp)
   9a374:	1001703a 	wrctl	status,r2
   9a378:	e0bffa17 	ldw	r2,-24(fp)
   9a37c:	e0bfff15 	stw	r2,-4(fp)
   9a380:	e0bfff17 	ldw	r2,-4(fp)
   9a384:	e037883a 	mov	sp,fp
   9a388:	dfc00117 	ldw	ra,4(sp)
   9a38c:	df000017 	ldw	fp,0(sp)
   9a390:	dec00204 	addi	sp,sp,8
   9a394:	f800283a 	ret

0009a398 <OSQPendAbort>:
   9a398:	defff504 	addi	sp,sp,-44
   9a39c:	dfc00a15 	stw	ra,40(sp)
   9a3a0:	df000915 	stw	fp,36(sp)
   9a3a4:	df000904 	addi	fp,sp,36
   9a3a8:	e13ffc15 	stw	r4,-16(fp)
   9a3ac:	e1bffe15 	stw	r6,-8(fp)
   9a3b0:	e17ffd05 	stb	r5,-12(fp)
   9a3b4:	e03ffa15 	stw	zero,-24(fp)
   9a3b8:	e0bffe17 	ldw	r2,-8(fp)
   9a3bc:	1004c03a 	cmpne	r2,r2,zero
   9a3c0:	1000021e 	bne	r2,zero,9a3cc <OSQPendAbort+0x34>
   9a3c4:	e03fff15 	stw	zero,-4(fp)
   9a3c8:	00004c06 	br	9a4fc <OSQPendAbort+0x164>
   9a3cc:	e0bffc17 	ldw	r2,-16(fp)
   9a3d0:	1004c03a 	cmpne	r2,r2,zero
   9a3d4:	1000051e 	bne	r2,zero,9a3ec <OSQPendAbort+0x54>
   9a3d8:	e0fffe17 	ldw	r3,-8(fp)
   9a3dc:	00800104 	movi	r2,4
   9a3e0:	18800005 	stb	r2,0(r3)
   9a3e4:	e03fff15 	stw	zero,-4(fp)
   9a3e8:	00004406 	br	9a4fc <OSQPendAbort+0x164>
   9a3ec:	e0bffc17 	ldw	r2,-16(fp)
   9a3f0:	10800003 	ldbu	r2,0(r2)
   9a3f4:	10803fcc 	andi	r2,r2,255
   9a3f8:	108000a0 	cmpeqi	r2,r2,2
   9a3fc:	1000051e 	bne	r2,zero,9a414 <OSQPendAbort+0x7c>
   9a400:	e0fffe17 	ldw	r3,-8(fp)
   9a404:	00800044 	movi	r2,1
   9a408:	18800005 	stb	r2,0(r3)
   9a40c:	e03fff15 	stw	zero,-4(fp)
   9a410:	00003a06 	br	9a4fc <OSQPendAbort+0x164>
   9a414:	0005303a 	rdctl	r2,status
   9a418:	e0bff915 	stw	r2,-28(fp)
   9a41c:	e0fff917 	ldw	r3,-28(fp)
   9a420:	00bfff84 	movi	r2,-2
   9a424:	1884703a 	and	r2,r3,r2
   9a428:	1001703a 	wrctl	status,r2
   9a42c:	e0bff917 	ldw	r2,-28(fp)
   9a430:	e0bffa15 	stw	r2,-24(fp)
   9a434:	e0bffc17 	ldw	r2,-16(fp)
   9a438:	10800283 	ldbu	r2,10(r2)
   9a43c:	10803fcc 	andi	r2,r2,255
   9a440:	1005003a 	cmpeq	r2,r2,zero
   9a444:	1000261e 	bne	r2,zero,9a4e0 <OSQPendAbort+0x148>
   9a448:	e03ffb05 	stb	zero,-20(fp)
   9a44c:	e0bffd03 	ldbu	r2,-12(fp)
   9a450:	10800060 	cmpeqi	r2,r2,1
   9a454:	1000091e 	bne	r2,zero,9a47c <OSQPendAbort+0xe4>
   9a458:	00000e06 	br	9a494 <OSQPendAbort+0xfc>
   9a45c:	e13ffc17 	ldw	r4,-16(fp)
   9a460:	000b883a 	mov	r5,zero
   9a464:	01800104 	movi	r6,4
   9a468:	01c00084 	movi	r7,2
   9a46c:	00945180 	call	94518 <OS_EventTaskRdy>
   9a470:	e0bffb03 	ldbu	r2,-20(fp)
   9a474:	10800044 	addi	r2,r2,1
   9a478:	e0bffb05 	stb	r2,-20(fp)
   9a47c:	e0bffc17 	ldw	r2,-16(fp)
   9a480:	10800283 	ldbu	r2,10(r2)
   9a484:	10803fcc 	andi	r2,r2,255
   9a488:	1004c03a 	cmpne	r2,r2,zero
   9a48c:	103ff31e 	bne	r2,zero,9a45c <OSQPendAbort+0xc4>
   9a490:	00000806 	br	9a4b4 <OSQPendAbort+0x11c>
   9a494:	e13ffc17 	ldw	r4,-16(fp)
   9a498:	000b883a 	mov	r5,zero
   9a49c:	01800104 	movi	r6,4
   9a4a0:	01c00084 	movi	r7,2
   9a4a4:	00945180 	call	94518 <OS_EventTaskRdy>
   9a4a8:	e0bffb03 	ldbu	r2,-20(fp)
   9a4ac:	10800044 	addi	r2,r2,1
   9a4b0:	e0bffb05 	stb	r2,-20(fp)
   9a4b4:	e0bffa17 	ldw	r2,-24(fp)
   9a4b8:	e0bff815 	stw	r2,-32(fp)
   9a4bc:	e0bff817 	ldw	r2,-32(fp)
   9a4c0:	1001703a 	wrctl	status,r2
   9a4c4:	0094f580 	call	94f58 <OS_Sched>
   9a4c8:	e0fffe17 	ldw	r3,-8(fp)
   9a4cc:	00800384 	movi	r2,14
   9a4d0:	18800005 	stb	r2,0(r3)
   9a4d4:	e0bffb03 	ldbu	r2,-20(fp)
   9a4d8:	e0bfff15 	stw	r2,-4(fp)
   9a4dc:	00000706 	br	9a4fc <OSQPendAbort+0x164>
   9a4e0:	e0bffa17 	ldw	r2,-24(fp)
   9a4e4:	e0bff715 	stw	r2,-36(fp)
   9a4e8:	e0bff717 	ldw	r2,-36(fp)
   9a4ec:	1001703a 	wrctl	status,r2
   9a4f0:	e0bffe17 	ldw	r2,-8(fp)
   9a4f4:	10000005 	stb	zero,0(r2)
   9a4f8:	e03fff15 	stw	zero,-4(fp)
   9a4fc:	e0bfff17 	ldw	r2,-4(fp)
   9a500:	e037883a 	mov	sp,fp
   9a504:	dfc00117 	ldw	ra,4(sp)
   9a508:	df000017 	ldw	fp,0(sp)
   9a50c:	dec00204 	addi	sp,sp,8
   9a510:	f800283a 	ret

0009a514 <OSQPost>:
   9a514:	defff504 	addi	sp,sp,-44
   9a518:	dfc00a15 	stw	ra,40(sp)
   9a51c:	df000915 	stw	fp,36(sp)
   9a520:	df000904 	addi	fp,sp,36
   9a524:	e13ffd15 	stw	r4,-12(fp)
   9a528:	e17ffe15 	stw	r5,-8(fp)
   9a52c:	e03ffb15 	stw	zero,-20(fp)
   9a530:	e0bffd17 	ldw	r2,-12(fp)
   9a534:	1004c03a 	cmpne	r2,r2,zero
   9a538:	1000031e 	bne	r2,zero,9a548 <OSQPost+0x34>
   9a53c:	00800104 	movi	r2,4
   9a540:	e0bfff15 	stw	r2,-4(fp)
   9a544:	00004d06 	br	9a67c <OSQPost+0x168>
   9a548:	e0bffd17 	ldw	r2,-12(fp)
   9a54c:	10800003 	ldbu	r2,0(r2)
   9a550:	10803fcc 	andi	r2,r2,255
   9a554:	108000a0 	cmpeqi	r2,r2,2
   9a558:	1000031e 	bne	r2,zero,9a568 <OSQPost+0x54>
   9a55c:	00800044 	movi	r2,1
   9a560:	e0bfff15 	stw	r2,-4(fp)
   9a564:	00004506 	br	9a67c <OSQPost+0x168>
   9a568:	0005303a 	rdctl	r2,status
   9a56c:	e0bffa15 	stw	r2,-24(fp)
   9a570:	e0fffa17 	ldw	r3,-24(fp)
   9a574:	00bfff84 	movi	r2,-2
   9a578:	1884703a 	and	r2,r3,r2
   9a57c:	1001703a 	wrctl	status,r2
   9a580:	e0bffa17 	ldw	r2,-24(fp)
   9a584:	e0bffb15 	stw	r2,-20(fp)
   9a588:	e0bffd17 	ldw	r2,-12(fp)
   9a58c:	10800283 	ldbu	r2,10(r2)
   9a590:	10803fcc 	andi	r2,r2,255
   9a594:	1005003a 	cmpeq	r2,r2,zero
   9a598:	10000c1e 	bne	r2,zero,9a5cc <OSQPost+0xb8>
   9a59c:	e13ffd17 	ldw	r4,-12(fp)
   9a5a0:	e17ffe17 	ldw	r5,-8(fp)
   9a5a4:	01800104 	movi	r6,4
   9a5a8:	000f883a 	mov	r7,zero
   9a5ac:	00945180 	call	94518 <OS_EventTaskRdy>
   9a5b0:	e0bffb17 	ldw	r2,-20(fp)
   9a5b4:	e0bff915 	stw	r2,-28(fp)
   9a5b8:	e0bff917 	ldw	r2,-28(fp)
   9a5bc:	1001703a 	wrctl	status,r2
   9a5c0:	0094f580 	call	94f58 <OS_Sched>
   9a5c4:	e03fff15 	stw	zero,-4(fp)
   9a5c8:	00002c06 	br	9a67c <OSQPost+0x168>
   9a5cc:	e0bffd17 	ldw	r2,-12(fp)
   9a5d0:	10800117 	ldw	r2,4(r2)
   9a5d4:	e0bffc15 	stw	r2,-16(fp)
   9a5d8:	e0bffc17 	ldw	r2,-16(fp)
   9a5dc:	10c0058b 	ldhu	r3,22(r2)
   9a5e0:	e0bffc17 	ldw	r2,-16(fp)
   9a5e4:	1080050b 	ldhu	r2,20(r2)
   9a5e8:	18ffffcc 	andi	r3,r3,65535
   9a5ec:	10bfffcc 	andi	r2,r2,65535
   9a5f0:	18800736 	bltu	r3,r2,9a610 <OSQPost+0xfc>
   9a5f4:	e0bffb17 	ldw	r2,-20(fp)
   9a5f8:	e0bff815 	stw	r2,-32(fp)
   9a5fc:	e0bff817 	ldw	r2,-32(fp)
   9a600:	1001703a 	wrctl	status,r2
   9a604:	00800784 	movi	r2,30
   9a608:	e0bfff15 	stw	r2,-4(fp)
   9a60c:	00001b06 	br	9a67c <OSQPost+0x168>
   9a610:	e0bffc17 	ldw	r2,-16(fp)
   9a614:	10c00317 	ldw	r3,12(r2)
   9a618:	e0bffe17 	ldw	r2,-8(fp)
   9a61c:	18800015 	stw	r2,0(r3)
   9a620:	18c00104 	addi	r3,r3,4
   9a624:	e0bffc17 	ldw	r2,-16(fp)
   9a628:	10c00315 	stw	r3,12(r2)
   9a62c:	e0bffc17 	ldw	r2,-16(fp)
   9a630:	1080058b 	ldhu	r2,22(r2)
   9a634:	10800044 	addi	r2,r2,1
   9a638:	1007883a 	mov	r3,r2
   9a63c:	e0bffc17 	ldw	r2,-16(fp)
   9a640:	10c0058d 	sth	r3,22(r2)
   9a644:	e0bffc17 	ldw	r2,-16(fp)
   9a648:	10c00317 	ldw	r3,12(r2)
   9a64c:	e0bffc17 	ldw	r2,-16(fp)
   9a650:	10800217 	ldw	r2,8(r2)
   9a654:	1880041e 	bne	r3,r2,9a668 <OSQPost+0x154>
   9a658:	e0bffc17 	ldw	r2,-16(fp)
   9a65c:	10c00117 	ldw	r3,4(r2)
   9a660:	e0bffc17 	ldw	r2,-16(fp)
   9a664:	10c00315 	stw	r3,12(r2)
   9a668:	e0bffb17 	ldw	r2,-20(fp)
   9a66c:	e0bff715 	stw	r2,-36(fp)
   9a670:	e0bff717 	ldw	r2,-36(fp)
   9a674:	1001703a 	wrctl	status,r2
   9a678:	e03fff15 	stw	zero,-4(fp)
   9a67c:	e0bfff17 	ldw	r2,-4(fp)
   9a680:	e037883a 	mov	sp,fp
   9a684:	dfc00117 	ldw	ra,4(sp)
   9a688:	df000017 	ldw	fp,0(sp)
   9a68c:	dec00204 	addi	sp,sp,8
   9a690:	f800283a 	ret

0009a694 <OSQPostFront>:
   9a694:	defff504 	addi	sp,sp,-44
   9a698:	dfc00a15 	stw	ra,40(sp)
   9a69c:	df000915 	stw	fp,36(sp)
   9a6a0:	df000904 	addi	fp,sp,36
   9a6a4:	e13ffd15 	stw	r4,-12(fp)
   9a6a8:	e17ffe15 	stw	r5,-8(fp)
   9a6ac:	e03ffb15 	stw	zero,-20(fp)
   9a6b0:	e0bffd17 	ldw	r2,-12(fp)
   9a6b4:	1004c03a 	cmpne	r2,r2,zero
   9a6b8:	1000031e 	bne	r2,zero,9a6c8 <OSQPostFront+0x34>
   9a6bc:	00800104 	movi	r2,4
   9a6c0:	e0bfff15 	stw	r2,-4(fp)
   9a6c4:	00004f06 	br	9a804 <OSQPostFront+0x170>
   9a6c8:	e0bffd17 	ldw	r2,-12(fp)
   9a6cc:	10800003 	ldbu	r2,0(r2)
   9a6d0:	10803fcc 	andi	r2,r2,255
   9a6d4:	108000a0 	cmpeqi	r2,r2,2
   9a6d8:	1000031e 	bne	r2,zero,9a6e8 <OSQPostFront+0x54>
   9a6dc:	00800044 	movi	r2,1
   9a6e0:	e0bfff15 	stw	r2,-4(fp)
   9a6e4:	00004706 	br	9a804 <OSQPostFront+0x170>
   9a6e8:	0005303a 	rdctl	r2,status
   9a6ec:	e0bffa15 	stw	r2,-24(fp)
   9a6f0:	e0fffa17 	ldw	r3,-24(fp)
   9a6f4:	00bfff84 	movi	r2,-2
   9a6f8:	1884703a 	and	r2,r3,r2
   9a6fc:	1001703a 	wrctl	status,r2
   9a700:	e0bffa17 	ldw	r2,-24(fp)
   9a704:	e0bffb15 	stw	r2,-20(fp)
   9a708:	e0bffd17 	ldw	r2,-12(fp)
   9a70c:	10800283 	ldbu	r2,10(r2)
   9a710:	10803fcc 	andi	r2,r2,255
   9a714:	1005003a 	cmpeq	r2,r2,zero
   9a718:	10000c1e 	bne	r2,zero,9a74c <OSQPostFront+0xb8>
   9a71c:	e13ffd17 	ldw	r4,-12(fp)
   9a720:	e17ffe17 	ldw	r5,-8(fp)
   9a724:	01800104 	movi	r6,4
   9a728:	000f883a 	mov	r7,zero
   9a72c:	00945180 	call	94518 <OS_EventTaskRdy>
   9a730:	e0bffb17 	ldw	r2,-20(fp)
   9a734:	e0bff915 	stw	r2,-28(fp)
   9a738:	e0bff917 	ldw	r2,-28(fp)
   9a73c:	1001703a 	wrctl	status,r2
   9a740:	0094f580 	call	94f58 <OS_Sched>
   9a744:	e03fff15 	stw	zero,-4(fp)
   9a748:	00002e06 	br	9a804 <OSQPostFront+0x170>
   9a74c:	e0bffd17 	ldw	r2,-12(fp)
   9a750:	10800117 	ldw	r2,4(r2)
   9a754:	e0bffc15 	stw	r2,-16(fp)
   9a758:	e0bffc17 	ldw	r2,-16(fp)
   9a75c:	10c0058b 	ldhu	r3,22(r2)
   9a760:	e0bffc17 	ldw	r2,-16(fp)
   9a764:	1080050b 	ldhu	r2,20(r2)
   9a768:	18ffffcc 	andi	r3,r3,65535
   9a76c:	10bfffcc 	andi	r2,r2,65535
   9a770:	18800736 	bltu	r3,r2,9a790 <OSQPostFront+0xfc>
   9a774:	e0bffb17 	ldw	r2,-20(fp)
   9a778:	e0bff815 	stw	r2,-32(fp)
   9a77c:	e0bff817 	ldw	r2,-32(fp)
   9a780:	1001703a 	wrctl	status,r2
   9a784:	00800784 	movi	r2,30
   9a788:	e0bfff15 	stw	r2,-4(fp)
   9a78c:	00001d06 	br	9a804 <OSQPostFront+0x170>
   9a790:	e0bffc17 	ldw	r2,-16(fp)
   9a794:	10c00417 	ldw	r3,16(r2)
   9a798:	e0bffc17 	ldw	r2,-16(fp)
   9a79c:	10800117 	ldw	r2,4(r2)
   9a7a0:	1880041e 	bne	r3,r2,9a7b4 <OSQPostFront+0x120>
   9a7a4:	e0bffc17 	ldw	r2,-16(fp)
   9a7a8:	10c00217 	ldw	r3,8(r2)
   9a7ac:	e0bffc17 	ldw	r2,-16(fp)
   9a7b0:	10c00415 	stw	r3,16(r2)
   9a7b4:	e0bffc17 	ldw	r2,-16(fp)
   9a7b8:	10800417 	ldw	r2,16(r2)
   9a7bc:	10ffff04 	addi	r3,r2,-4
   9a7c0:	e0bffc17 	ldw	r2,-16(fp)
   9a7c4:	10c00415 	stw	r3,16(r2)
   9a7c8:	e0bffc17 	ldw	r2,-16(fp)
   9a7cc:	10c00417 	ldw	r3,16(r2)
   9a7d0:	e0bffe17 	ldw	r2,-8(fp)
   9a7d4:	18800015 	stw	r2,0(r3)
   9a7d8:	e0bffc17 	ldw	r2,-16(fp)
   9a7dc:	1080058b 	ldhu	r2,22(r2)
   9a7e0:	10800044 	addi	r2,r2,1
   9a7e4:	1007883a 	mov	r3,r2
   9a7e8:	e0bffc17 	ldw	r2,-16(fp)
   9a7ec:	10c0058d 	sth	r3,22(r2)
   9a7f0:	e0bffb17 	ldw	r2,-20(fp)
   9a7f4:	e0bff715 	stw	r2,-36(fp)
   9a7f8:	e0bff717 	ldw	r2,-36(fp)
   9a7fc:	1001703a 	wrctl	status,r2
   9a800:	e03fff15 	stw	zero,-4(fp)
   9a804:	e0bfff17 	ldw	r2,-4(fp)
   9a808:	e037883a 	mov	sp,fp
   9a80c:	dfc00117 	ldw	ra,4(sp)
   9a810:	df000017 	ldw	fp,0(sp)
   9a814:	dec00204 	addi	sp,sp,8
   9a818:	f800283a 	ret

0009a81c <OSQPostOpt>:
   9a81c:	defff404 	addi	sp,sp,-48
   9a820:	dfc00b15 	stw	ra,44(sp)
   9a824:	df000a15 	stw	fp,40(sp)
   9a828:	df000a04 	addi	fp,sp,40
   9a82c:	e13ffc15 	stw	r4,-16(fp)
   9a830:	e17ffd15 	stw	r5,-12(fp)
   9a834:	e1bffe05 	stb	r6,-8(fp)
   9a838:	e03ffa15 	stw	zero,-24(fp)
   9a83c:	e0bffc17 	ldw	r2,-16(fp)
   9a840:	1004c03a 	cmpne	r2,r2,zero
   9a844:	1000031e 	bne	r2,zero,9a854 <OSQPostOpt+0x38>
   9a848:	00800104 	movi	r2,4
   9a84c:	e0bfff15 	stw	r2,-4(fp)
   9a850:	00007906 	br	9aa38 <OSQPostOpt+0x21c>
   9a854:	e0bffc17 	ldw	r2,-16(fp)
   9a858:	10800003 	ldbu	r2,0(r2)
   9a85c:	10803fcc 	andi	r2,r2,255
   9a860:	108000a0 	cmpeqi	r2,r2,2
   9a864:	1000031e 	bne	r2,zero,9a874 <OSQPostOpt+0x58>
   9a868:	00800044 	movi	r2,1
   9a86c:	e0bfff15 	stw	r2,-4(fp)
   9a870:	00007106 	br	9aa38 <OSQPostOpt+0x21c>
   9a874:	0005303a 	rdctl	r2,status
   9a878:	e0bff915 	stw	r2,-28(fp)
   9a87c:	e0fff917 	ldw	r3,-28(fp)
   9a880:	00bfff84 	movi	r2,-2
   9a884:	1884703a 	and	r2,r3,r2
   9a888:	1001703a 	wrctl	status,r2
   9a88c:	e0bff917 	ldw	r2,-28(fp)
   9a890:	e0bffa15 	stw	r2,-24(fp)
   9a894:	e0bffc17 	ldw	r2,-16(fp)
   9a898:	10800283 	ldbu	r2,10(r2)
   9a89c:	10803fcc 	andi	r2,r2,255
   9a8a0:	1005003a 	cmpeq	r2,r2,zero
   9a8a4:	1000211e 	bne	r2,zero,9a92c <OSQPostOpt+0x110>
   9a8a8:	e0bffe03 	ldbu	r2,-8(fp)
   9a8ac:	1080004c 	andi	r2,r2,1
   9a8b0:	10803fcc 	andi	r2,r2,255
   9a8b4:	1005003a 	cmpeq	r2,r2,zero
   9a8b8:	10000c1e 	bne	r2,zero,9a8ec <OSQPostOpt+0xd0>
   9a8bc:	00000506 	br	9a8d4 <OSQPostOpt+0xb8>
   9a8c0:	e13ffc17 	ldw	r4,-16(fp)
   9a8c4:	e17ffd17 	ldw	r5,-12(fp)
   9a8c8:	01800104 	movi	r6,4
   9a8cc:	000f883a 	mov	r7,zero
   9a8d0:	00945180 	call	94518 <OS_EventTaskRdy>
   9a8d4:	e0bffc17 	ldw	r2,-16(fp)
   9a8d8:	10800283 	ldbu	r2,10(r2)
   9a8dc:	10803fcc 	andi	r2,r2,255
   9a8e0:	1004c03a 	cmpne	r2,r2,zero
   9a8e4:	103ff61e 	bne	r2,zero,9a8c0 <OSQPostOpt+0xa4>
   9a8e8:	00000506 	br	9a900 <OSQPostOpt+0xe4>
   9a8ec:	e13ffc17 	ldw	r4,-16(fp)
   9a8f0:	e17ffd17 	ldw	r5,-12(fp)
   9a8f4:	01800104 	movi	r6,4
   9a8f8:	000f883a 	mov	r7,zero
   9a8fc:	00945180 	call	94518 <OS_EventTaskRdy>
   9a900:	e0bffa17 	ldw	r2,-24(fp)
   9a904:	e0bff815 	stw	r2,-32(fp)
   9a908:	e0bff817 	ldw	r2,-32(fp)
   9a90c:	1001703a 	wrctl	status,r2
   9a910:	e0bffe03 	ldbu	r2,-8(fp)
   9a914:	1080010c 	andi	r2,r2,4
   9a918:	1004c03a 	cmpne	r2,r2,zero
   9a91c:	1000011e 	bne	r2,zero,9a924 <OSQPostOpt+0x108>
   9a920:	0094f580 	call	94f58 <OS_Sched>
   9a924:	e03fff15 	stw	zero,-4(fp)
   9a928:	00004306 	br	9aa38 <OSQPostOpt+0x21c>
   9a92c:	e0bffc17 	ldw	r2,-16(fp)
   9a930:	10800117 	ldw	r2,4(r2)
   9a934:	e0bffb15 	stw	r2,-20(fp)
   9a938:	e0bffb17 	ldw	r2,-20(fp)
   9a93c:	10c0058b 	ldhu	r3,22(r2)
   9a940:	e0bffb17 	ldw	r2,-20(fp)
   9a944:	1080050b 	ldhu	r2,20(r2)
   9a948:	18ffffcc 	andi	r3,r3,65535
   9a94c:	10bfffcc 	andi	r2,r2,65535
   9a950:	18800736 	bltu	r3,r2,9a970 <OSQPostOpt+0x154>
   9a954:	e0bffa17 	ldw	r2,-24(fp)
   9a958:	e0bff715 	stw	r2,-36(fp)
   9a95c:	e0bff717 	ldw	r2,-36(fp)
   9a960:	1001703a 	wrctl	status,r2
   9a964:	00800784 	movi	r2,30
   9a968:	e0bfff15 	stw	r2,-4(fp)
   9a96c:	00003206 	br	9aa38 <OSQPostOpt+0x21c>
   9a970:	e0bffe03 	ldbu	r2,-8(fp)
   9a974:	1080008c 	andi	r2,r2,2
   9a978:	1005003a 	cmpeq	r2,r2,zero
   9a97c:	1000131e 	bne	r2,zero,9a9cc <OSQPostOpt+0x1b0>
   9a980:	e0bffb17 	ldw	r2,-20(fp)
   9a984:	10c00417 	ldw	r3,16(r2)
   9a988:	e0bffb17 	ldw	r2,-20(fp)
   9a98c:	10800117 	ldw	r2,4(r2)
   9a990:	1880041e 	bne	r3,r2,9a9a4 <OSQPostOpt+0x188>
   9a994:	e0bffb17 	ldw	r2,-20(fp)
   9a998:	10c00217 	ldw	r3,8(r2)
   9a99c:	e0bffb17 	ldw	r2,-20(fp)
   9a9a0:	10c00415 	stw	r3,16(r2)
   9a9a4:	e0bffb17 	ldw	r2,-20(fp)
   9a9a8:	10800417 	ldw	r2,16(r2)
   9a9ac:	10ffff04 	addi	r3,r2,-4
   9a9b0:	e0bffb17 	ldw	r2,-20(fp)
   9a9b4:	10c00415 	stw	r3,16(r2)
   9a9b8:	e0bffb17 	ldw	r2,-20(fp)
   9a9bc:	10c00417 	ldw	r3,16(r2)
   9a9c0:	e0bffd17 	ldw	r2,-12(fp)
   9a9c4:	18800015 	stw	r2,0(r3)
   9a9c8:	00001006 	br	9aa0c <OSQPostOpt+0x1f0>
   9a9cc:	e0bffb17 	ldw	r2,-20(fp)
   9a9d0:	10c00317 	ldw	r3,12(r2)
   9a9d4:	e0bffd17 	ldw	r2,-12(fp)
   9a9d8:	18800015 	stw	r2,0(r3)
   9a9dc:	18c00104 	addi	r3,r3,4
   9a9e0:	e0bffb17 	ldw	r2,-20(fp)
   9a9e4:	10c00315 	stw	r3,12(r2)
   9a9e8:	e0bffb17 	ldw	r2,-20(fp)
   9a9ec:	10c00317 	ldw	r3,12(r2)
   9a9f0:	e0bffb17 	ldw	r2,-20(fp)
   9a9f4:	10800217 	ldw	r2,8(r2)
   9a9f8:	1880041e 	bne	r3,r2,9aa0c <OSQPostOpt+0x1f0>
   9a9fc:	e0bffb17 	ldw	r2,-20(fp)
   9aa00:	10c00117 	ldw	r3,4(r2)
   9aa04:	e0bffb17 	ldw	r2,-20(fp)
   9aa08:	10c00315 	stw	r3,12(r2)
   9aa0c:	e0bffb17 	ldw	r2,-20(fp)
   9aa10:	1080058b 	ldhu	r2,22(r2)
   9aa14:	10800044 	addi	r2,r2,1
   9aa18:	1007883a 	mov	r3,r2
   9aa1c:	e0bffb17 	ldw	r2,-20(fp)
   9aa20:	10c0058d 	sth	r3,22(r2)
   9aa24:	e0bffa17 	ldw	r2,-24(fp)
   9aa28:	e0bff615 	stw	r2,-40(fp)
   9aa2c:	e0bff617 	ldw	r2,-40(fp)
   9aa30:	1001703a 	wrctl	status,r2
   9aa34:	e03fff15 	stw	zero,-4(fp)
   9aa38:	e0bfff17 	ldw	r2,-4(fp)
   9aa3c:	e037883a 	mov	sp,fp
   9aa40:	dfc00117 	ldw	ra,4(sp)
   9aa44:	df000017 	ldw	fp,0(sp)
   9aa48:	dec00204 	addi	sp,sp,8
   9aa4c:	f800283a 	ret

0009aa50 <OSQQuery>:
   9aa50:	defff504 	addi	sp,sp,-44
   9aa54:	df000a15 	stw	fp,40(sp)
   9aa58:	df000a04 	addi	fp,sp,40
   9aa5c:	e13ffd15 	stw	r4,-12(fp)
   9aa60:	e17ffe15 	stw	r5,-8(fp)
   9aa64:	e03ff815 	stw	zero,-32(fp)
   9aa68:	e0bffd17 	ldw	r2,-12(fp)
   9aa6c:	1004c03a 	cmpne	r2,r2,zero
   9aa70:	1000031e 	bne	r2,zero,9aa80 <OSQQuery+0x30>
   9aa74:	00800104 	movi	r2,4
   9aa78:	e0bfff15 	stw	r2,-4(fp)
   9aa7c:	00004f06 	br	9abbc <OSQQuery+0x16c>
   9aa80:	e0bffe17 	ldw	r2,-8(fp)
   9aa84:	1004c03a 	cmpne	r2,r2,zero
   9aa88:	1000031e 	bne	r2,zero,9aa98 <OSQQuery+0x48>
   9aa8c:	00800244 	movi	r2,9
   9aa90:	e0bfff15 	stw	r2,-4(fp)
   9aa94:	00004906 	br	9abbc <OSQQuery+0x16c>
   9aa98:	e0bffd17 	ldw	r2,-12(fp)
   9aa9c:	10800003 	ldbu	r2,0(r2)
   9aaa0:	10803fcc 	andi	r2,r2,255
   9aaa4:	108000a0 	cmpeqi	r2,r2,2
   9aaa8:	1000031e 	bne	r2,zero,9aab8 <OSQQuery+0x68>
   9aaac:	00800044 	movi	r2,1
   9aab0:	e0bfff15 	stw	r2,-4(fp)
   9aab4:	00004106 	br	9abbc <OSQQuery+0x16c>
   9aab8:	0005303a 	rdctl	r2,status
   9aabc:	e0bff715 	stw	r2,-36(fp)
   9aac0:	e0fff717 	ldw	r3,-36(fp)
   9aac4:	00bfff84 	movi	r2,-2
   9aac8:	1884703a 	and	r2,r3,r2
   9aacc:	1001703a 	wrctl	status,r2
   9aad0:	e0bff717 	ldw	r2,-36(fp)
   9aad4:	e0bff815 	stw	r2,-32(fp)
   9aad8:	e0bffd17 	ldw	r2,-12(fp)
   9aadc:	10c00283 	ldbu	r3,10(r2)
   9aae0:	e0bffe17 	ldw	r2,-8(fp)
   9aae4:	10c002c5 	stb	r3,11(r2)
   9aae8:	e0bffd17 	ldw	r2,-12(fp)
   9aaec:	108002c4 	addi	r2,r2,11
   9aaf0:	e0bffa15 	stw	r2,-24(fp)
   9aaf4:	e0bffe17 	ldw	r2,-8(fp)
   9aaf8:	10800204 	addi	r2,r2,8
   9aafc:	e0bff915 	stw	r2,-28(fp)
   9ab00:	e03ffb05 	stb	zero,-20(fp)
   9ab04:	00000d06 	br	9ab3c <OSQQuery+0xec>
   9ab08:	e0bffa17 	ldw	r2,-24(fp)
   9ab0c:	10c00003 	ldbu	r3,0(r2)
   9ab10:	e0bff917 	ldw	r2,-28(fp)
   9ab14:	10c00005 	stb	r3,0(r2)
   9ab18:	e0bff917 	ldw	r2,-28(fp)
   9ab1c:	10800044 	addi	r2,r2,1
   9ab20:	e0bff915 	stw	r2,-28(fp)
   9ab24:	e0bffa17 	ldw	r2,-24(fp)
   9ab28:	10800044 	addi	r2,r2,1
   9ab2c:	e0bffa15 	stw	r2,-24(fp)
   9ab30:	e0bffb03 	ldbu	r2,-20(fp)
   9ab34:	10800044 	addi	r2,r2,1
   9ab38:	e0bffb05 	stb	r2,-20(fp)
   9ab3c:	e0bffb03 	ldbu	r2,-20(fp)
   9ab40:	108000f0 	cmpltui	r2,r2,3
   9ab44:	103ff01e 	bne	r2,zero,9ab08 <OSQQuery+0xb8>
   9ab48:	e0bffd17 	ldw	r2,-12(fp)
   9ab4c:	10800117 	ldw	r2,4(r2)
   9ab50:	e0bffc15 	stw	r2,-16(fp)
   9ab54:	e0bffc17 	ldw	r2,-16(fp)
   9ab58:	1080058b 	ldhu	r2,22(r2)
   9ab5c:	10bfffcc 	andi	r2,r2,65535
   9ab60:	1005003a 	cmpeq	r2,r2,zero
   9ab64:	1000061e 	bne	r2,zero,9ab80 <OSQQuery+0x130>
   9ab68:	e0bffc17 	ldw	r2,-16(fp)
   9ab6c:	10800417 	ldw	r2,16(r2)
   9ab70:	10c00017 	ldw	r3,0(r2)
   9ab74:	e0bffe17 	ldw	r2,-8(fp)
   9ab78:	10c00015 	stw	r3,0(r2)
   9ab7c:	00000206 	br	9ab88 <OSQQuery+0x138>
   9ab80:	e0bffe17 	ldw	r2,-8(fp)
   9ab84:	10000015 	stw	zero,0(r2)
   9ab88:	e0bffc17 	ldw	r2,-16(fp)
   9ab8c:	10c0058b 	ldhu	r3,22(r2)
   9ab90:	e0bffe17 	ldw	r2,-8(fp)
   9ab94:	10c0010d 	sth	r3,4(r2)
   9ab98:	e0bffc17 	ldw	r2,-16(fp)
   9ab9c:	10c0050b 	ldhu	r3,20(r2)
   9aba0:	e0bffe17 	ldw	r2,-8(fp)
   9aba4:	10c0018d 	sth	r3,6(r2)
   9aba8:	e0bff817 	ldw	r2,-32(fp)
   9abac:	e0bff615 	stw	r2,-40(fp)
   9abb0:	e0bff617 	ldw	r2,-40(fp)
   9abb4:	1001703a 	wrctl	status,r2
   9abb8:	e03fff15 	stw	zero,-4(fp)
   9abbc:	e0bfff17 	ldw	r2,-4(fp)
   9abc0:	e037883a 	mov	sp,fp
   9abc4:	df000017 	ldw	fp,0(sp)
   9abc8:	dec00104 	addi	sp,sp,4
   9abcc:	f800283a 	ret

0009abd0 <OS_QInit>:
   9abd0:	defffb04 	addi	sp,sp,-20
   9abd4:	dfc00415 	stw	ra,16(sp)
   9abd8:	df000315 	stw	fp,12(sp)
   9abdc:	df000304 	addi	fp,sp,12
   9abe0:	010002f4 	movhi	r4,11
   9abe4:	21174404 	addi	r4,r4,23824
   9abe8:	01407804 	movi	r5,480
   9abec:	0094e980 	call	94e98 <OS_MemClr>
   9abf0:	008002f4 	movhi	r2,11
   9abf4:	10974404 	addi	r2,r2,23824
   9abf8:	e0bffe15 	stw	r2,-8(fp)
   9abfc:	008002f4 	movhi	r2,11
   9ac00:	10974a04 	addi	r2,r2,23848
   9ac04:	e0bffd15 	stw	r2,-12(fp)
   9ac08:	e03fff0d 	sth	zero,-4(fp)
   9ac0c:	00000c06 	br	9ac40 <OS_QInit+0x70>
   9ac10:	e0fffe17 	ldw	r3,-8(fp)
   9ac14:	e0bffd17 	ldw	r2,-12(fp)
   9ac18:	18800015 	stw	r2,0(r3)
   9ac1c:	e0bffe17 	ldw	r2,-8(fp)
   9ac20:	10800604 	addi	r2,r2,24
   9ac24:	e0bffe15 	stw	r2,-8(fp)
   9ac28:	e0bffd17 	ldw	r2,-12(fp)
   9ac2c:	10800604 	addi	r2,r2,24
   9ac30:	e0bffd15 	stw	r2,-12(fp)
   9ac34:	e0bfff0b 	ldhu	r2,-4(fp)
   9ac38:	10800044 	addi	r2,r2,1
   9ac3c:	e0bfff0d 	sth	r2,-4(fp)
   9ac40:	e0bfff0b 	ldhu	r2,-4(fp)
   9ac44:	108004f0 	cmpltui	r2,r2,19
   9ac48:	103ff11e 	bne	r2,zero,9ac10 <OS_QInit+0x40>
   9ac4c:	e0bffe17 	ldw	r2,-8(fp)
   9ac50:	10000015 	stw	zero,0(r2)
   9ac54:	00c002b4 	movhi	r3,10
   9ac58:	18d10204 	addi	r3,r3,17416
   9ac5c:	008002f4 	movhi	r2,11
   9ac60:	10974404 	addi	r2,r2,23824
   9ac64:	18800015 	stw	r2,0(r3)
   9ac68:	e037883a 	mov	sp,fp
   9ac6c:	dfc00117 	ldw	ra,4(sp)
   9ac70:	df000017 	ldw	fp,0(sp)
   9ac74:	dec00204 	addi	sp,sp,8
   9ac78:	f800283a 	ret

0009ac7c <OSSemAccept>:
   9ac7c:	defff904 	addi	sp,sp,-28
   9ac80:	df000615 	stw	fp,24(sp)
   9ac84:	df000604 	addi	fp,sp,24
   9ac88:	e13ffe15 	stw	r4,-8(fp)
   9ac8c:	e03ffc15 	stw	zero,-16(fp)
   9ac90:	e0bffe17 	ldw	r2,-8(fp)
   9ac94:	1004c03a 	cmpne	r2,r2,zero
   9ac98:	1000021e 	bne	r2,zero,9aca4 <OSSemAccept+0x28>
   9ac9c:	e03fff15 	stw	zero,-4(fp)
   9aca0:	00002106 	br	9ad28 <OSSemAccept+0xac>
   9aca4:	e0bffe17 	ldw	r2,-8(fp)
   9aca8:	10800003 	ldbu	r2,0(r2)
   9acac:	10803fcc 	andi	r2,r2,255
   9acb0:	108000e0 	cmpeqi	r2,r2,3
   9acb4:	1000021e 	bne	r2,zero,9acc0 <OSSemAccept+0x44>
   9acb8:	e03fff15 	stw	zero,-4(fp)
   9acbc:	00001a06 	br	9ad28 <OSSemAccept+0xac>
   9acc0:	0005303a 	rdctl	r2,status
   9acc4:	e0bffb15 	stw	r2,-20(fp)
   9acc8:	e0fffb17 	ldw	r3,-20(fp)
   9accc:	00bfff84 	movi	r2,-2
   9acd0:	1884703a 	and	r2,r3,r2
   9acd4:	1001703a 	wrctl	status,r2
   9acd8:	e0bffb17 	ldw	r2,-20(fp)
   9acdc:	e0bffc15 	stw	r2,-16(fp)
   9ace0:	e0bffe17 	ldw	r2,-8(fp)
   9ace4:	1080020b 	ldhu	r2,8(r2)
   9ace8:	e0bffd0d 	sth	r2,-12(fp)
   9acec:	e0bffd0b 	ldhu	r2,-12(fp)
   9acf0:	1005003a 	cmpeq	r2,r2,zero
   9acf4:	1000061e 	bne	r2,zero,9ad10 <OSSemAccept+0x94>
   9acf8:	e0bffe17 	ldw	r2,-8(fp)
   9acfc:	1080020b 	ldhu	r2,8(r2)
   9ad00:	10bfffc4 	addi	r2,r2,-1
   9ad04:	1007883a 	mov	r3,r2
   9ad08:	e0bffe17 	ldw	r2,-8(fp)
   9ad0c:	10c0020d 	sth	r3,8(r2)
   9ad10:	e0bffc17 	ldw	r2,-16(fp)
   9ad14:	e0bffa15 	stw	r2,-24(fp)
   9ad18:	e0bffa17 	ldw	r2,-24(fp)
   9ad1c:	1001703a 	wrctl	status,r2
   9ad20:	e0bffd0b 	ldhu	r2,-12(fp)
   9ad24:	e0bfff15 	stw	r2,-4(fp)
   9ad28:	e0bfff17 	ldw	r2,-4(fp)
   9ad2c:	e037883a 	mov	sp,fp
   9ad30:	df000017 	ldw	fp,0(sp)
   9ad34:	dec00104 	addi	sp,sp,4
   9ad38:	f800283a 	ret

0009ad3c <OSSemCreate>:
   9ad3c:	defff804 	addi	sp,sp,-32
   9ad40:	dfc00715 	stw	ra,28(sp)
   9ad44:	df000615 	stw	fp,24(sp)
   9ad48:	df000604 	addi	fp,sp,24
   9ad4c:	e13ffe0d 	sth	r4,-8(fp)
   9ad50:	e03ffc15 	stw	zero,-16(fp)
   9ad54:	008002b4 	movhi	r2,10
   9ad58:	10910504 	addi	r2,r2,17428
   9ad5c:	10800003 	ldbu	r2,0(r2)
   9ad60:	10803fcc 	andi	r2,r2,255
   9ad64:	1005003a 	cmpeq	r2,r2,zero
   9ad68:	1000021e 	bne	r2,zero,9ad74 <OSSemCreate+0x38>
   9ad6c:	e03fff15 	stw	zero,-4(fp)
   9ad70:	00003106 	br	9ae38 <OSSemCreate+0xfc>
   9ad74:	0005303a 	rdctl	r2,status
   9ad78:	e0bffb15 	stw	r2,-20(fp)
   9ad7c:	e0fffb17 	ldw	r3,-20(fp)
   9ad80:	00bfff84 	movi	r2,-2
   9ad84:	1884703a 	and	r2,r3,r2
   9ad88:	1001703a 	wrctl	status,r2
   9ad8c:	e0bffb17 	ldw	r2,-20(fp)
   9ad90:	e0bffc15 	stw	r2,-16(fp)
   9ad94:	008002b4 	movhi	r2,10
   9ad98:	10910404 	addi	r2,r2,17424
   9ad9c:	10800017 	ldw	r2,0(r2)
   9ada0:	e0bffd15 	stw	r2,-12(fp)
   9ada4:	008002b4 	movhi	r2,10
   9ada8:	10910404 	addi	r2,r2,17424
   9adac:	10800017 	ldw	r2,0(r2)
   9adb0:	1005003a 	cmpeq	r2,r2,zero
   9adb4:	1000081e 	bne	r2,zero,9add8 <OSSemCreate+0x9c>
   9adb8:	008002b4 	movhi	r2,10
   9adbc:	10910404 	addi	r2,r2,17424
   9adc0:	10800017 	ldw	r2,0(r2)
   9adc4:	10800117 	ldw	r2,4(r2)
   9adc8:	1007883a 	mov	r3,r2
   9adcc:	008002b4 	movhi	r2,10
   9add0:	10910404 	addi	r2,r2,17424
   9add4:	10c00015 	stw	r3,0(r2)
   9add8:	e0bffc17 	ldw	r2,-16(fp)
   9addc:	e0bffa15 	stw	r2,-24(fp)
   9ade0:	e0bffa17 	ldw	r2,-24(fp)
   9ade4:	1001703a 	wrctl	status,r2
   9ade8:	e0bffd17 	ldw	r2,-12(fp)
   9adec:	1005003a 	cmpeq	r2,r2,zero
   9adf0:	10000f1e 	bne	r2,zero,9ae30 <OSSemCreate+0xf4>
   9adf4:	e0fffd17 	ldw	r3,-12(fp)
   9adf8:	008000c4 	movi	r2,3
   9adfc:	18800005 	stb	r2,0(r3)
   9ae00:	e0fffd17 	ldw	r3,-12(fp)
   9ae04:	e0bffe0b 	ldhu	r2,-8(fp)
   9ae08:	1880020d 	sth	r2,8(r3)
   9ae0c:	e0bffd17 	ldw	r2,-12(fp)
   9ae10:	10000115 	stw	zero,4(r2)
   9ae14:	e0fffd17 	ldw	r3,-12(fp)
   9ae18:	00800fc4 	movi	r2,63
   9ae1c:	18800385 	stb	r2,14(r3)
   9ae20:	e0bffd17 	ldw	r2,-12(fp)
   9ae24:	100003c5 	stb	zero,15(r2)
   9ae28:	e13ffd17 	ldw	r4,-12(fp)
   9ae2c:	0094acc0 	call	94acc <OS_EventWaitListInit>
   9ae30:	e0bffd17 	ldw	r2,-12(fp)
   9ae34:	e0bfff15 	stw	r2,-4(fp)
   9ae38:	e0bfff17 	ldw	r2,-4(fp)
   9ae3c:	e037883a 	mov	sp,fp
   9ae40:	dfc00117 	ldw	ra,4(sp)
   9ae44:	df000017 	ldw	fp,0(sp)
   9ae48:	dec00204 	addi	sp,sp,8
   9ae4c:	f800283a 	ret

0009ae50 <OSSemDel>:
   9ae50:	defff104 	addi	sp,sp,-60
   9ae54:	dfc00e15 	stw	ra,56(sp)
   9ae58:	df000d15 	stw	fp,52(sp)
   9ae5c:	df000d04 	addi	fp,sp,52
   9ae60:	e13ffb15 	stw	r4,-20(fp)
   9ae64:	e1bffd15 	stw	r6,-12(fp)
   9ae68:	e17ffc05 	stb	r5,-16(fp)
   9ae6c:	e03ff815 	stw	zero,-32(fp)
   9ae70:	e0bffd17 	ldw	r2,-12(fp)
   9ae74:	1004c03a 	cmpne	r2,r2,zero
   9ae78:	1000031e 	bne	r2,zero,9ae88 <OSSemDel+0x38>
   9ae7c:	e0bffb17 	ldw	r2,-20(fp)
   9ae80:	e0bfff15 	stw	r2,-4(fp)
   9ae84:	00009406 	br	9b0d8 <OSSemDel+0x288>
   9ae88:	e0bffb17 	ldw	r2,-20(fp)
   9ae8c:	1004c03a 	cmpne	r2,r2,zero
   9ae90:	1000061e 	bne	r2,zero,9aeac <OSSemDel+0x5c>
   9ae94:	e0fffd17 	ldw	r3,-12(fp)
   9ae98:	00800104 	movi	r2,4
   9ae9c:	18800005 	stb	r2,0(r3)
   9aea0:	e0fffb17 	ldw	r3,-20(fp)
   9aea4:	e0ffff15 	stw	r3,-4(fp)
   9aea8:	00008b06 	br	9b0d8 <OSSemDel+0x288>
   9aeac:	e0bffb17 	ldw	r2,-20(fp)
   9aeb0:	10800003 	ldbu	r2,0(r2)
   9aeb4:	10803fcc 	andi	r2,r2,255
   9aeb8:	108000e0 	cmpeqi	r2,r2,3
   9aebc:	1000061e 	bne	r2,zero,9aed8 <OSSemDel+0x88>
   9aec0:	e0fffd17 	ldw	r3,-12(fp)
   9aec4:	00800044 	movi	r2,1
   9aec8:	18800005 	stb	r2,0(r3)
   9aecc:	e0bffb17 	ldw	r2,-20(fp)
   9aed0:	e0bfff15 	stw	r2,-4(fp)
   9aed4:	00008006 	br	9b0d8 <OSSemDel+0x288>
   9aed8:	008002b4 	movhi	r2,10
   9aedc:	10910504 	addi	r2,r2,17428
   9aee0:	10800003 	ldbu	r2,0(r2)
   9aee4:	10803fcc 	andi	r2,r2,255
   9aee8:	1005003a 	cmpeq	r2,r2,zero
   9aeec:	1000061e 	bne	r2,zero,9af08 <OSSemDel+0xb8>
   9aef0:	e0fffd17 	ldw	r3,-12(fp)
   9aef4:	008003c4 	movi	r2,15
   9aef8:	18800005 	stb	r2,0(r3)
   9aefc:	e0fffb17 	ldw	r3,-20(fp)
   9af00:	e0ffff15 	stw	r3,-4(fp)
   9af04:	00007406 	br	9b0d8 <OSSemDel+0x288>
   9af08:	0005303a 	rdctl	r2,status
   9af0c:	e0bff715 	stw	r2,-36(fp)
   9af10:	e0fff717 	ldw	r3,-36(fp)
   9af14:	00bfff84 	movi	r2,-2
   9af18:	1884703a 	and	r2,r3,r2
   9af1c:	1001703a 	wrctl	status,r2
   9af20:	e0bff717 	ldw	r2,-36(fp)
   9af24:	e0bff815 	stw	r2,-32(fp)
   9af28:	e0bffb17 	ldw	r2,-20(fp)
   9af2c:	10800283 	ldbu	r2,10(r2)
   9af30:	10803fcc 	andi	r2,r2,255
   9af34:	1005003a 	cmpeq	r2,r2,zero
   9af38:	1000031e 	bne	r2,zero,9af48 <OSSemDel+0xf8>
   9af3c:	00800044 	movi	r2,1
   9af40:	e0bffa05 	stb	r2,-24(fp)
   9af44:	00000106 	br	9af4c <OSSemDel+0xfc>
   9af48:	e03ffa05 	stb	zero,-24(fp)
   9af4c:	e0bffc03 	ldbu	r2,-16(fp)
   9af50:	e0bffe15 	stw	r2,-8(fp)
   9af54:	e0fffe17 	ldw	r3,-8(fp)
   9af58:	1805003a 	cmpeq	r2,r3,zero
   9af5c:	1000041e 	bne	r2,zero,9af70 <OSSemDel+0x120>
   9af60:	e0fffe17 	ldw	r3,-8(fp)
   9af64:	18800060 	cmpeqi	r2,r3,1
   9af68:	10002d1e 	bne	r2,zero,9b020 <OSSemDel+0x1d0>
   9af6c:	00004f06 	br	9b0ac <OSSemDel+0x25c>
   9af70:	e0bffa03 	ldbu	r2,-24(fp)
   9af74:	1004c03a 	cmpne	r2,r2,zero
   9af78:	10001a1e 	bne	r2,zero,9afe4 <OSSemDel+0x194>
   9af7c:	e0fffb17 	ldw	r3,-20(fp)
   9af80:	00800fc4 	movi	r2,63
   9af84:	18800385 	stb	r2,14(r3)
   9af88:	e0bffb17 	ldw	r2,-20(fp)
   9af8c:	100003c5 	stb	zero,15(r2)
   9af90:	e0bffb17 	ldw	r2,-20(fp)
   9af94:	10000005 	stb	zero,0(r2)
   9af98:	008002b4 	movhi	r2,10
   9af9c:	10910404 	addi	r2,r2,17424
   9afa0:	10c00017 	ldw	r3,0(r2)
   9afa4:	e0bffb17 	ldw	r2,-20(fp)
   9afa8:	10c00115 	stw	r3,4(r2)
   9afac:	e0bffb17 	ldw	r2,-20(fp)
   9afb0:	1000020d 	sth	zero,8(r2)
   9afb4:	00c002b4 	movhi	r3,10
   9afb8:	18d10404 	addi	r3,r3,17424
   9afbc:	e0bffb17 	ldw	r2,-20(fp)
   9afc0:	18800015 	stw	r2,0(r3)
   9afc4:	e0bff817 	ldw	r2,-32(fp)
   9afc8:	e0bff615 	stw	r2,-40(fp)
   9afcc:	e0bff617 	ldw	r2,-40(fp)
   9afd0:	1001703a 	wrctl	status,r2
   9afd4:	e0bffd17 	ldw	r2,-12(fp)
   9afd8:	10000005 	stb	zero,0(r2)
   9afdc:	e03ff915 	stw	zero,-28(fp)
   9afe0:	00003b06 	br	9b0d0 <OSSemDel+0x280>
   9afe4:	e0bff817 	ldw	r2,-32(fp)
   9afe8:	e0bff515 	stw	r2,-44(fp)
   9afec:	e0bff517 	ldw	r2,-44(fp)
   9aff0:	1001703a 	wrctl	status,r2
   9aff4:	e0fffd17 	ldw	r3,-12(fp)
   9aff8:	00801244 	movi	r2,73
   9affc:	18800005 	stb	r2,0(r3)
   9b000:	e0bffb17 	ldw	r2,-20(fp)
   9b004:	e0bff915 	stw	r2,-28(fp)
   9b008:	00003106 	br	9b0d0 <OSSemDel+0x280>
   9b00c:	e13ffb17 	ldw	r4,-20(fp)
   9b010:	000b883a 	mov	r5,zero
   9b014:	01800044 	movi	r6,1
   9b018:	000f883a 	mov	r7,zero
   9b01c:	00945180 	call	94518 <OS_EventTaskRdy>
   9b020:	e0bffb17 	ldw	r2,-20(fp)
   9b024:	10800283 	ldbu	r2,10(r2)
   9b028:	10803fcc 	andi	r2,r2,255
   9b02c:	1004c03a 	cmpne	r2,r2,zero
   9b030:	103ff61e 	bne	r2,zero,9b00c <OSSemDel+0x1bc>
   9b034:	e0fffb17 	ldw	r3,-20(fp)
   9b038:	00800fc4 	movi	r2,63
   9b03c:	18800385 	stb	r2,14(r3)
   9b040:	e0bffb17 	ldw	r2,-20(fp)
   9b044:	100003c5 	stb	zero,15(r2)
   9b048:	e0bffb17 	ldw	r2,-20(fp)
   9b04c:	10000005 	stb	zero,0(r2)
   9b050:	008002b4 	movhi	r2,10
   9b054:	10910404 	addi	r2,r2,17424
   9b058:	10c00017 	ldw	r3,0(r2)
   9b05c:	e0bffb17 	ldw	r2,-20(fp)
   9b060:	10c00115 	stw	r3,4(r2)
   9b064:	e0bffb17 	ldw	r2,-20(fp)
   9b068:	1000020d 	sth	zero,8(r2)
   9b06c:	00c002b4 	movhi	r3,10
   9b070:	18d10404 	addi	r3,r3,17424
   9b074:	e0bffb17 	ldw	r2,-20(fp)
   9b078:	18800015 	stw	r2,0(r3)
   9b07c:	e0bff817 	ldw	r2,-32(fp)
   9b080:	e0bff415 	stw	r2,-48(fp)
   9b084:	e0bff417 	ldw	r2,-48(fp)
   9b088:	1001703a 	wrctl	status,r2
   9b08c:	e0bffa03 	ldbu	r2,-24(fp)
   9b090:	10800058 	cmpnei	r2,r2,1
   9b094:	1000011e 	bne	r2,zero,9b09c <OSSemDel+0x24c>
   9b098:	0094f580 	call	94f58 <OS_Sched>
   9b09c:	e0bffd17 	ldw	r2,-12(fp)
   9b0a0:	10000005 	stb	zero,0(r2)
   9b0a4:	e03ff915 	stw	zero,-28(fp)
   9b0a8:	00000906 	br	9b0d0 <OSSemDel+0x280>
   9b0ac:	e0bff817 	ldw	r2,-32(fp)
   9b0b0:	e0bff315 	stw	r2,-52(fp)
   9b0b4:	e0bff317 	ldw	r2,-52(fp)
   9b0b8:	1001703a 	wrctl	status,r2
   9b0bc:	e0fffd17 	ldw	r3,-12(fp)
   9b0c0:	008001c4 	movi	r2,7
   9b0c4:	18800005 	stb	r2,0(r3)
   9b0c8:	e0bffb17 	ldw	r2,-20(fp)
   9b0cc:	e0bff915 	stw	r2,-28(fp)
   9b0d0:	e0bff917 	ldw	r2,-28(fp)
   9b0d4:	e0bfff15 	stw	r2,-4(fp)
   9b0d8:	e0bfff17 	ldw	r2,-4(fp)
   9b0dc:	e037883a 	mov	sp,fp
   9b0e0:	dfc00117 	ldw	ra,4(sp)
   9b0e4:	df000017 	ldw	fp,0(sp)
   9b0e8:	dec00204 	addi	sp,sp,8
   9b0ec:	f800283a 	ret

0009b0f0 <OSSemPend>:
   9b0f0:	defff404 	addi	sp,sp,-48
   9b0f4:	dfc00b15 	stw	ra,44(sp)
   9b0f8:	df000a15 	stw	fp,40(sp)
   9b0fc:	df000a04 	addi	fp,sp,40
   9b100:	e13ffc15 	stw	r4,-16(fp)
   9b104:	e1bffe15 	stw	r6,-8(fp)
   9b108:	e17ffd0d 	sth	r5,-12(fp)
   9b10c:	e03ffb15 	stw	zero,-20(fp)
   9b110:	e0bffe17 	ldw	r2,-8(fp)
   9b114:	1005003a 	cmpeq	r2,r2,zero
   9b118:	10008f1e 	bne	r2,zero,9b358 <OSSemPend+0x268>
   9b11c:	e0bffc17 	ldw	r2,-16(fp)
   9b120:	1004c03a 	cmpne	r2,r2,zero
   9b124:	1000041e 	bne	r2,zero,9b138 <OSSemPend+0x48>
   9b128:	e0fffe17 	ldw	r3,-8(fp)
   9b12c:	00800104 	movi	r2,4
   9b130:	18800005 	stb	r2,0(r3)
   9b134:	00008806 	br	9b358 <OSSemPend+0x268>
   9b138:	e0bffc17 	ldw	r2,-16(fp)
   9b13c:	10800003 	ldbu	r2,0(r2)
   9b140:	10803fcc 	andi	r2,r2,255
   9b144:	108000e0 	cmpeqi	r2,r2,3
   9b148:	1000041e 	bne	r2,zero,9b15c <OSSemPend+0x6c>
   9b14c:	e0fffe17 	ldw	r3,-8(fp)
   9b150:	00800044 	movi	r2,1
   9b154:	18800005 	stb	r2,0(r3)
   9b158:	00007f06 	br	9b358 <OSSemPend+0x268>
   9b15c:	008002b4 	movhi	r2,10
   9b160:	10910504 	addi	r2,r2,17428
   9b164:	10800003 	ldbu	r2,0(r2)
   9b168:	10803fcc 	andi	r2,r2,255
   9b16c:	1005003a 	cmpeq	r2,r2,zero
   9b170:	1000041e 	bne	r2,zero,9b184 <OSSemPend+0x94>
   9b174:	e0fffe17 	ldw	r3,-8(fp)
   9b178:	00800084 	movi	r2,2
   9b17c:	18800005 	stb	r2,0(r3)
   9b180:	00007506 	br	9b358 <OSSemPend+0x268>
   9b184:	008002b4 	movhi	r2,10
   9b188:	1090f704 	addi	r2,r2,17372
   9b18c:	10800003 	ldbu	r2,0(r2)
   9b190:	10803fcc 	andi	r2,r2,255
   9b194:	1005003a 	cmpeq	r2,r2,zero
   9b198:	1000041e 	bne	r2,zero,9b1ac <OSSemPend+0xbc>
   9b19c:	e0fffe17 	ldw	r3,-8(fp)
   9b1a0:	00800344 	movi	r2,13
   9b1a4:	18800005 	stb	r2,0(r3)
   9b1a8:	00006b06 	br	9b358 <OSSemPend+0x268>
   9b1ac:	0005303a 	rdctl	r2,status
   9b1b0:	e0bffa15 	stw	r2,-24(fp)
   9b1b4:	e0fffa17 	ldw	r3,-24(fp)
   9b1b8:	00bfff84 	movi	r2,-2
   9b1bc:	1884703a 	and	r2,r3,r2
   9b1c0:	1001703a 	wrctl	status,r2
   9b1c4:	e0bffa17 	ldw	r2,-24(fp)
   9b1c8:	e0bffb15 	stw	r2,-20(fp)
   9b1cc:	e0bffc17 	ldw	r2,-16(fp)
   9b1d0:	1080020b 	ldhu	r2,8(r2)
   9b1d4:	10bfffcc 	andi	r2,r2,65535
   9b1d8:	1005003a 	cmpeq	r2,r2,zero
   9b1dc:	10000d1e 	bne	r2,zero,9b214 <OSSemPend+0x124>
   9b1e0:	e0bffc17 	ldw	r2,-16(fp)
   9b1e4:	1080020b 	ldhu	r2,8(r2)
   9b1e8:	10bfffc4 	addi	r2,r2,-1
   9b1ec:	1007883a 	mov	r3,r2
   9b1f0:	e0bffc17 	ldw	r2,-16(fp)
   9b1f4:	10c0020d 	sth	r3,8(r2)
   9b1f8:	e0bffb17 	ldw	r2,-20(fp)
   9b1fc:	e0bff915 	stw	r2,-28(fp)
   9b200:	e0bff917 	ldw	r2,-28(fp)
   9b204:	1001703a 	wrctl	status,r2
   9b208:	e0bffe17 	ldw	r2,-8(fp)
   9b20c:	10000005 	stb	zero,0(r2)
   9b210:	00005106 	br	9b358 <OSSemPend+0x268>
   9b214:	008002b4 	movhi	r2,10
   9b218:	10910604 	addi	r2,r2,17432
   9b21c:	10c00017 	ldw	r3,0(r2)
   9b220:	008002b4 	movhi	r2,10
   9b224:	10910604 	addi	r2,r2,17432
   9b228:	10800017 	ldw	r2,0(r2)
   9b22c:	10800c03 	ldbu	r2,48(r2)
   9b230:	10800054 	ori	r2,r2,1
   9b234:	18800c05 	stb	r2,48(r3)
   9b238:	008002b4 	movhi	r2,10
   9b23c:	10910604 	addi	r2,r2,17432
   9b240:	10800017 	ldw	r2,0(r2)
   9b244:	10000c45 	stb	zero,49(r2)
   9b248:	008002b4 	movhi	r2,10
   9b24c:	10910604 	addi	r2,r2,17432
   9b250:	10c00017 	ldw	r3,0(r2)
   9b254:	e0bffd0b 	ldhu	r2,-12(fp)
   9b258:	18800b8d 	sth	r2,46(r3)
   9b25c:	e13ffc17 	ldw	r4,-16(fp)
   9b260:	00946ac0 	call	946ac <OS_EventTaskWait>
   9b264:	e0bffb17 	ldw	r2,-20(fp)
   9b268:	e0bff815 	stw	r2,-32(fp)
   9b26c:	e0bff817 	ldw	r2,-32(fp)
   9b270:	1001703a 	wrctl	status,r2
   9b274:	0094f580 	call	94f58 <OS_Sched>
   9b278:	0005303a 	rdctl	r2,status
   9b27c:	e0bff715 	stw	r2,-36(fp)
   9b280:	e0fff717 	ldw	r3,-36(fp)
   9b284:	00bfff84 	movi	r2,-2
   9b288:	1884703a 	and	r2,r3,r2
   9b28c:	1001703a 	wrctl	status,r2
   9b290:	e0bff717 	ldw	r2,-36(fp)
   9b294:	e0bffb15 	stw	r2,-20(fp)
   9b298:	008002b4 	movhi	r2,10
   9b29c:	10910604 	addi	r2,r2,17432
   9b2a0:	10800017 	ldw	r2,0(r2)
   9b2a4:	10800c43 	ldbu	r2,49(r2)
   9b2a8:	10803fcc 	andi	r2,r2,255
   9b2ac:	e0bfff15 	stw	r2,-4(fp)
   9b2b0:	e0ffff17 	ldw	r3,-4(fp)
   9b2b4:	1805003a 	cmpeq	r2,r3,zero
   9b2b8:	1000041e 	bne	r2,zero,9b2cc <OSSemPend+0x1dc>
   9b2bc:	e0ffff17 	ldw	r3,-4(fp)
   9b2c0:	188000a0 	cmpeqi	r2,r3,2
   9b2c4:	1000041e 	bne	r2,zero,9b2d8 <OSSemPend+0x1e8>
   9b2c8:	00000706 	br	9b2e8 <OSSemPend+0x1f8>
   9b2cc:	e0bffe17 	ldw	r2,-8(fp)
   9b2d0:	10000005 	stb	zero,0(r2)
   9b2d4:	00000c06 	br	9b308 <OSSemPend+0x218>
   9b2d8:	e0fffe17 	ldw	r3,-8(fp)
   9b2dc:	00800384 	movi	r2,14
   9b2e0:	18800005 	stb	r2,0(r3)
   9b2e4:	00000806 	br	9b308 <OSSemPend+0x218>
   9b2e8:	008002b4 	movhi	r2,10
   9b2ec:	10910604 	addi	r2,r2,17432
   9b2f0:	11000017 	ldw	r4,0(r2)
   9b2f4:	e17ffc17 	ldw	r5,-16(fp)
   9b2f8:	00949100 	call	94910 <OS_EventTaskRemove>
   9b2fc:	e0fffe17 	ldw	r3,-8(fp)
   9b300:	00800284 	movi	r2,10
   9b304:	18800005 	stb	r2,0(r3)
   9b308:	008002b4 	movhi	r2,10
   9b30c:	10910604 	addi	r2,r2,17432
   9b310:	10800017 	ldw	r2,0(r2)
   9b314:	10000c05 	stb	zero,48(r2)
   9b318:	008002b4 	movhi	r2,10
   9b31c:	10910604 	addi	r2,r2,17432
   9b320:	10800017 	ldw	r2,0(r2)
   9b324:	10000c45 	stb	zero,49(r2)
   9b328:	008002b4 	movhi	r2,10
   9b32c:	10910604 	addi	r2,r2,17432
   9b330:	10800017 	ldw	r2,0(r2)
   9b334:	10000715 	stw	zero,28(r2)
   9b338:	008002b4 	movhi	r2,10
   9b33c:	10910604 	addi	r2,r2,17432
   9b340:	10800017 	ldw	r2,0(r2)
   9b344:	10000815 	stw	zero,32(r2)
   9b348:	e0bffb17 	ldw	r2,-20(fp)
   9b34c:	e0bff615 	stw	r2,-40(fp)
   9b350:	e0bff617 	ldw	r2,-40(fp)
   9b354:	1001703a 	wrctl	status,r2
   9b358:	e037883a 	mov	sp,fp
   9b35c:	dfc00117 	ldw	ra,4(sp)
   9b360:	df000017 	ldw	fp,0(sp)
   9b364:	dec00204 	addi	sp,sp,8
   9b368:	f800283a 	ret

0009b36c <OSSemPendAbort>:
   9b36c:	defff504 	addi	sp,sp,-44
   9b370:	dfc00a15 	stw	ra,40(sp)
   9b374:	df000915 	stw	fp,36(sp)
   9b378:	df000904 	addi	fp,sp,36
   9b37c:	e13ffc15 	stw	r4,-16(fp)
   9b380:	e1bffe15 	stw	r6,-8(fp)
   9b384:	e17ffd05 	stb	r5,-12(fp)
   9b388:	e03ffa15 	stw	zero,-24(fp)
   9b38c:	e0bffe17 	ldw	r2,-8(fp)
   9b390:	1004c03a 	cmpne	r2,r2,zero
   9b394:	1000021e 	bne	r2,zero,9b3a0 <OSSemPendAbort+0x34>
   9b398:	e03fff15 	stw	zero,-4(fp)
   9b39c:	00004c06 	br	9b4d0 <OSSemPendAbort+0x164>
   9b3a0:	e0bffc17 	ldw	r2,-16(fp)
   9b3a4:	1004c03a 	cmpne	r2,r2,zero
   9b3a8:	1000051e 	bne	r2,zero,9b3c0 <OSSemPendAbort+0x54>
   9b3ac:	e0fffe17 	ldw	r3,-8(fp)
   9b3b0:	00800104 	movi	r2,4
   9b3b4:	18800005 	stb	r2,0(r3)
   9b3b8:	e03fff15 	stw	zero,-4(fp)
   9b3bc:	00004406 	br	9b4d0 <OSSemPendAbort+0x164>
   9b3c0:	e0bffc17 	ldw	r2,-16(fp)
   9b3c4:	10800003 	ldbu	r2,0(r2)
   9b3c8:	10803fcc 	andi	r2,r2,255
   9b3cc:	108000e0 	cmpeqi	r2,r2,3
   9b3d0:	1000051e 	bne	r2,zero,9b3e8 <OSSemPendAbort+0x7c>
   9b3d4:	e0fffe17 	ldw	r3,-8(fp)
   9b3d8:	00800044 	movi	r2,1
   9b3dc:	18800005 	stb	r2,0(r3)
   9b3e0:	e03fff15 	stw	zero,-4(fp)
   9b3e4:	00003a06 	br	9b4d0 <OSSemPendAbort+0x164>
   9b3e8:	0005303a 	rdctl	r2,status
   9b3ec:	e0bff915 	stw	r2,-28(fp)
   9b3f0:	e0fff917 	ldw	r3,-28(fp)
   9b3f4:	00bfff84 	movi	r2,-2
   9b3f8:	1884703a 	and	r2,r3,r2
   9b3fc:	1001703a 	wrctl	status,r2
   9b400:	e0bff917 	ldw	r2,-28(fp)
   9b404:	e0bffa15 	stw	r2,-24(fp)
   9b408:	e0bffc17 	ldw	r2,-16(fp)
   9b40c:	10800283 	ldbu	r2,10(r2)
   9b410:	10803fcc 	andi	r2,r2,255
   9b414:	1005003a 	cmpeq	r2,r2,zero
   9b418:	1000261e 	bne	r2,zero,9b4b4 <OSSemPendAbort+0x148>
   9b41c:	e03ffb05 	stb	zero,-20(fp)
   9b420:	e0bffd03 	ldbu	r2,-12(fp)
   9b424:	10800060 	cmpeqi	r2,r2,1
   9b428:	1000091e 	bne	r2,zero,9b450 <OSSemPendAbort+0xe4>
   9b42c:	00000e06 	br	9b468 <OSSemPendAbort+0xfc>
   9b430:	e13ffc17 	ldw	r4,-16(fp)
   9b434:	000b883a 	mov	r5,zero
   9b438:	01800044 	movi	r6,1
   9b43c:	01c00084 	movi	r7,2
   9b440:	00945180 	call	94518 <OS_EventTaskRdy>
   9b444:	e0bffb03 	ldbu	r2,-20(fp)
   9b448:	10800044 	addi	r2,r2,1
   9b44c:	e0bffb05 	stb	r2,-20(fp)
   9b450:	e0bffc17 	ldw	r2,-16(fp)
   9b454:	10800283 	ldbu	r2,10(r2)
   9b458:	10803fcc 	andi	r2,r2,255
   9b45c:	1004c03a 	cmpne	r2,r2,zero
   9b460:	103ff31e 	bne	r2,zero,9b430 <OSSemPendAbort+0xc4>
   9b464:	00000806 	br	9b488 <OSSemPendAbort+0x11c>
   9b468:	e13ffc17 	ldw	r4,-16(fp)
   9b46c:	000b883a 	mov	r5,zero
   9b470:	01800044 	movi	r6,1
   9b474:	01c00084 	movi	r7,2
   9b478:	00945180 	call	94518 <OS_EventTaskRdy>
   9b47c:	e0bffb03 	ldbu	r2,-20(fp)
   9b480:	10800044 	addi	r2,r2,1
   9b484:	e0bffb05 	stb	r2,-20(fp)
   9b488:	e0bffa17 	ldw	r2,-24(fp)
   9b48c:	e0bff815 	stw	r2,-32(fp)
   9b490:	e0bff817 	ldw	r2,-32(fp)
   9b494:	1001703a 	wrctl	status,r2
   9b498:	0094f580 	call	94f58 <OS_Sched>
   9b49c:	e0fffe17 	ldw	r3,-8(fp)
   9b4a0:	00800384 	movi	r2,14
   9b4a4:	18800005 	stb	r2,0(r3)
   9b4a8:	e0bffb03 	ldbu	r2,-20(fp)
   9b4ac:	e0bfff15 	stw	r2,-4(fp)
   9b4b0:	00000706 	br	9b4d0 <OSSemPendAbort+0x164>
   9b4b4:	e0bffa17 	ldw	r2,-24(fp)
   9b4b8:	e0bff715 	stw	r2,-36(fp)
   9b4bc:	e0bff717 	ldw	r2,-36(fp)
   9b4c0:	1001703a 	wrctl	status,r2
   9b4c4:	e0bffe17 	ldw	r2,-8(fp)
   9b4c8:	10000005 	stb	zero,0(r2)
   9b4cc:	e03fff15 	stw	zero,-4(fp)
   9b4d0:	e0bfff17 	ldw	r2,-4(fp)
   9b4d4:	e037883a 	mov	sp,fp
   9b4d8:	dfc00117 	ldw	ra,4(sp)
   9b4dc:	df000017 	ldw	fp,0(sp)
   9b4e0:	dec00204 	addi	sp,sp,8
   9b4e4:	f800283a 	ret

0009b4e8 <OSSemPost>:
   9b4e8:	defff704 	addi	sp,sp,-36
   9b4ec:	dfc00815 	stw	ra,32(sp)
   9b4f0:	df000715 	stw	fp,28(sp)
   9b4f4:	df000704 	addi	fp,sp,28
   9b4f8:	e13ffe15 	stw	r4,-8(fp)
   9b4fc:	e03ffd15 	stw	zero,-12(fp)
   9b500:	e0bffe17 	ldw	r2,-8(fp)
   9b504:	1004c03a 	cmpne	r2,r2,zero
   9b508:	1000031e 	bne	r2,zero,9b518 <OSSemPost+0x30>
   9b50c:	00800104 	movi	r2,4
   9b510:	e0bfff15 	stw	r2,-4(fp)
   9b514:	00003806 	br	9b5f8 <OSSemPost+0x110>
   9b518:	e0bffe17 	ldw	r2,-8(fp)
   9b51c:	10800003 	ldbu	r2,0(r2)
   9b520:	10803fcc 	andi	r2,r2,255
   9b524:	108000e0 	cmpeqi	r2,r2,3
   9b528:	1000031e 	bne	r2,zero,9b538 <OSSemPost+0x50>
   9b52c:	00800044 	movi	r2,1
   9b530:	e0bfff15 	stw	r2,-4(fp)
   9b534:	00003006 	br	9b5f8 <OSSemPost+0x110>
   9b538:	0005303a 	rdctl	r2,status
   9b53c:	e0bffc15 	stw	r2,-16(fp)
   9b540:	e0fffc17 	ldw	r3,-16(fp)
   9b544:	00bfff84 	movi	r2,-2
   9b548:	1884703a 	and	r2,r3,r2
   9b54c:	1001703a 	wrctl	status,r2
   9b550:	e0bffc17 	ldw	r2,-16(fp)
   9b554:	e0bffd15 	stw	r2,-12(fp)
   9b558:	e0bffe17 	ldw	r2,-8(fp)
   9b55c:	10800283 	ldbu	r2,10(r2)
   9b560:	10803fcc 	andi	r2,r2,255
   9b564:	1005003a 	cmpeq	r2,r2,zero
   9b568:	10000c1e 	bne	r2,zero,9b59c <OSSemPost+0xb4>
   9b56c:	e13ffe17 	ldw	r4,-8(fp)
   9b570:	000b883a 	mov	r5,zero
   9b574:	01800044 	movi	r6,1
   9b578:	000f883a 	mov	r7,zero
   9b57c:	00945180 	call	94518 <OS_EventTaskRdy>
   9b580:	e0bffd17 	ldw	r2,-12(fp)
   9b584:	e0bffb15 	stw	r2,-20(fp)
   9b588:	e0bffb17 	ldw	r2,-20(fp)
   9b58c:	1001703a 	wrctl	status,r2
   9b590:	0094f580 	call	94f58 <OS_Sched>
   9b594:	e03fff15 	stw	zero,-4(fp)
   9b598:	00001706 	br	9b5f8 <OSSemPost+0x110>
   9b59c:	e0bffe17 	ldw	r2,-8(fp)
   9b5a0:	1080020b 	ldhu	r2,8(r2)
   9b5a4:	10ffffcc 	andi	r3,r2,65535
   9b5a8:	00bfffd4 	movui	r2,65535
   9b5ac:	18800c26 	beq	r3,r2,9b5e0 <OSSemPost+0xf8>
   9b5b0:	e0bffe17 	ldw	r2,-8(fp)
   9b5b4:	1080020b 	ldhu	r2,8(r2)
   9b5b8:	10800044 	addi	r2,r2,1
   9b5bc:	1007883a 	mov	r3,r2
   9b5c0:	e0bffe17 	ldw	r2,-8(fp)
   9b5c4:	10c0020d 	sth	r3,8(r2)
   9b5c8:	e0bffd17 	ldw	r2,-12(fp)
   9b5cc:	e0bffa15 	stw	r2,-24(fp)
   9b5d0:	e0bffa17 	ldw	r2,-24(fp)
   9b5d4:	1001703a 	wrctl	status,r2
   9b5d8:	e03fff15 	stw	zero,-4(fp)
   9b5dc:	00000606 	br	9b5f8 <OSSemPost+0x110>
   9b5e0:	e0bffd17 	ldw	r2,-12(fp)
   9b5e4:	e0bff915 	stw	r2,-28(fp)
   9b5e8:	e0bff917 	ldw	r2,-28(fp)
   9b5ec:	1001703a 	wrctl	status,r2
   9b5f0:	00800c84 	movi	r2,50
   9b5f4:	e0bfff15 	stw	r2,-4(fp)
   9b5f8:	e0bfff17 	ldw	r2,-4(fp)
   9b5fc:	e037883a 	mov	sp,fp
   9b600:	dfc00117 	ldw	ra,4(sp)
   9b604:	df000017 	ldw	fp,0(sp)
   9b608:	dec00204 	addi	sp,sp,8
   9b60c:	f800283a 	ret

0009b610 <OSSemQuery>:
   9b610:	defff604 	addi	sp,sp,-40
   9b614:	df000915 	stw	fp,36(sp)
   9b618:	df000904 	addi	fp,sp,36
   9b61c:	e13ffd15 	stw	r4,-12(fp)
   9b620:	e17ffe15 	stw	r5,-8(fp)
   9b624:	e03ff915 	stw	zero,-28(fp)
   9b628:	e0bffd17 	ldw	r2,-12(fp)
   9b62c:	1004c03a 	cmpne	r2,r2,zero
   9b630:	1000031e 	bne	r2,zero,9b640 <OSSemQuery+0x30>
   9b634:	00800104 	movi	r2,4
   9b638:	e0bfff15 	stw	r2,-4(fp)
   9b63c:	00003b06 	br	9b72c <OSSemQuery+0x11c>
   9b640:	e0bffe17 	ldw	r2,-8(fp)
   9b644:	1004c03a 	cmpne	r2,r2,zero
   9b648:	1000031e 	bne	r2,zero,9b658 <OSSemQuery+0x48>
   9b64c:	00800244 	movi	r2,9
   9b650:	e0bfff15 	stw	r2,-4(fp)
   9b654:	00003506 	br	9b72c <OSSemQuery+0x11c>
   9b658:	e0bffd17 	ldw	r2,-12(fp)
   9b65c:	10800003 	ldbu	r2,0(r2)
   9b660:	10803fcc 	andi	r2,r2,255
   9b664:	108000e0 	cmpeqi	r2,r2,3
   9b668:	1000031e 	bne	r2,zero,9b678 <OSSemQuery+0x68>
   9b66c:	00800044 	movi	r2,1
   9b670:	e0bfff15 	stw	r2,-4(fp)
   9b674:	00002d06 	br	9b72c <OSSemQuery+0x11c>
   9b678:	0005303a 	rdctl	r2,status
   9b67c:	e0bff815 	stw	r2,-32(fp)
   9b680:	e0fff817 	ldw	r3,-32(fp)
   9b684:	00bfff84 	movi	r2,-2
   9b688:	1884703a 	and	r2,r3,r2
   9b68c:	1001703a 	wrctl	status,r2
   9b690:	e0bff817 	ldw	r2,-32(fp)
   9b694:	e0bff915 	stw	r2,-28(fp)
   9b698:	e0bffd17 	ldw	r2,-12(fp)
   9b69c:	10c00283 	ldbu	r3,10(r2)
   9b6a0:	e0bffe17 	ldw	r2,-8(fp)
   9b6a4:	10c00145 	stb	r3,5(r2)
   9b6a8:	e0bffd17 	ldw	r2,-12(fp)
   9b6ac:	108002c4 	addi	r2,r2,11
   9b6b0:	e0bffc15 	stw	r2,-16(fp)
   9b6b4:	e0bffe17 	ldw	r2,-8(fp)
   9b6b8:	10800084 	addi	r2,r2,2
   9b6bc:	e0bffb15 	stw	r2,-20(fp)
   9b6c0:	e03ffa05 	stb	zero,-24(fp)
   9b6c4:	00000d06 	br	9b6fc <OSSemQuery+0xec>
   9b6c8:	e0bffc17 	ldw	r2,-16(fp)
   9b6cc:	10c00003 	ldbu	r3,0(r2)
   9b6d0:	e0bffb17 	ldw	r2,-20(fp)
   9b6d4:	10c00005 	stb	r3,0(r2)
   9b6d8:	e0bffb17 	ldw	r2,-20(fp)
   9b6dc:	10800044 	addi	r2,r2,1
   9b6e0:	e0bffb15 	stw	r2,-20(fp)
   9b6e4:	e0bffc17 	ldw	r2,-16(fp)
   9b6e8:	10800044 	addi	r2,r2,1
   9b6ec:	e0bffc15 	stw	r2,-16(fp)
   9b6f0:	e0bffa03 	ldbu	r2,-24(fp)
   9b6f4:	10800044 	addi	r2,r2,1
   9b6f8:	e0bffa05 	stb	r2,-24(fp)
   9b6fc:	e0bffa03 	ldbu	r2,-24(fp)
   9b700:	108000f0 	cmpltui	r2,r2,3
   9b704:	103ff01e 	bne	r2,zero,9b6c8 <OSSemQuery+0xb8>
   9b708:	e0bffd17 	ldw	r2,-12(fp)
   9b70c:	10c0020b 	ldhu	r3,8(r2)
   9b710:	e0bffe17 	ldw	r2,-8(fp)
   9b714:	10c0000d 	sth	r3,0(r2)
   9b718:	e0bff917 	ldw	r2,-28(fp)
   9b71c:	e0bff715 	stw	r2,-36(fp)
   9b720:	e0bff717 	ldw	r2,-36(fp)
   9b724:	1001703a 	wrctl	status,r2
   9b728:	e03fff15 	stw	zero,-4(fp)
   9b72c:	e0bfff17 	ldw	r2,-4(fp)
   9b730:	e037883a 	mov	sp,fp
   9b734:	df000017 	ldw	fp,0(sp)
   9b738:	dec00104 	addi	sp,sp,4
   9b73c:	f800283a 	ret

0009b740 <OSSemSet>:
   9b740:	defff904 	addi	sp,sp,-28
   9b744:	df000615 	stw	fp,24(sp)
   9b748:	df000604 	addi	fp,sp,24
   9b74c:	e13ffd15 	stw	r4,-12(fp)
   9b750:	e1bfff15 	stw	r6,-4(fp)
   9b754:	e17ffe0d 	sth	r5,-8(fp)
   9b758:	e03ffc15 	stw	zero,-16(fp)
   9b75c:	e0bfff17 	ldw	r2,-4(fp)
   9b760:	1005003a 	cmpeq	r2,r2,zero
   9b764:	1000331e 	bne	r2,zero,9b834 <OSSemSet+0xf4>
   9b768:	e0bffd17 	ldw	r2,-12(fp)
   9b76c:	1004c03a 	cmpne	r2,r2,zero
   9b770:	1000041e 	bne	r2,zero,9b784 <OSSemSet+0x44>
   9b774:	e0ffff17 	ldw	r3,-4(fp)
   9b778:	00800104 	movi	r2,4
   9b77c:	18800005 	stb	r2,0(r3)
   9b780:	00002c06 	br	9b834 <OSSemSet+0xf4>
   9b784:	e0bffd17 	ldw	r2,-12(fp)
   9b788:	10800003 	ldbu	r2,0(r2)
   9b78c:	10803fcc 	andi	r2,r2,255
   9b790:	108000e0 	cmpeqi	r2,r2,3
   9b794:	1000041e 	bne	r2,zero,9b7a8 <OSSemSet+0x68>
   9b798:	e0ffff17 	ldw	r3,-4(fp)
   9b79c:	00800044 	movi	r2,1
   9b7a0:	18800005 	stb	r2,0(r3)
   9b7a4:	00002306 	br	9b834 <OSSemSet+0xf4>
   9b7a8:	0005303a 	rdctl	r2,status
   9b7ac:	e0bffb15 	stw	r2,-20(fp)
   9b7b0:	e0fffb17 	ldw	r3,-20(fp)
   9b7b4:	00bfff84 	movi	r2,-2
   9b7b8:	1884703a 	and	r2,r3,r2
   9b7bc:	1001703a 	wrctl	status,r2
   9b7c0:	e0bffb17 	ldw	r2,-20(fp)
   9b7c4:	e0bffc15 	stw	r2,-16(fp)
   9b7c8:	e0bfff17 	ldw	r2,-4(fp)
   9b7cc:	10000005 	stb	zero,0(r2)
   9b7d0:	e0bffd17 	ldw	r2,-12(fp)
   9b7d4:	1080020b 	ldhu	r2,8(r2)
   9b7d8:	10bfffcc 	andi	r2,r2,65535
   9b7dc:	1005003a 	cmpeq	r2,r2,zero
   9b7e0:	1000041e 	bne	r2,zero,9b7f4 <OSSemSet+0xb4>
   9b7e4:	e0fffd17 	ldw	r3,-12(fp)
   9b7e8:	e0bffe0b 	ldhu	r2,-8(fp)
   9b7ec:	1880020d 	sth	r2,8(r3)
   9b7f0:	00000c06 	br	9b824 <OSSemSet+0xe4>
   9b7f4:	e0bffd17 	ldw	r2,-12(fp)
   9b7f8:	10800283 	ldbu	r2,10(r2)
   9b7fc:	10803fcc 	andi	r2,r2,255
   9b800:	1004c03a 	cmpne	r2,r2,zero
   9b804:	1000041e 	bne	r2,zero,9b818 <OSSemSet+0xd8>
   9b808:	e0fffd17 	ldw	r3,-12(fp)
   9b80c:	e0bffe0b 	ldhu	r2,-8(fp)
   9b810:	1880020d 	sth	r2,8(r3)
   9b814:	00000306 	br	9b824 <OSSemSet+0xe4>
   9b818:	e0ffff17 	ldw	r3,-4(fp)
   9b81c:	00801244 	movi	r2,73
   9b820:	18800005 	stb	r2,0(r3)
   9b824:	e0bffc17 	ldw	r2,-16(fp)
   9b828:	e0bffa15 	stw	r2,-24(fp)
   9b82c:	e0bffa17 	ldw	r2,-24(fp)
   9b830:	1001703a 	wrctl	status,r2
   9b834:	e037883a 	mov	sp,fp
   9b838:	df000017 	ldw	fp,0(sp)
   9b83c:	dec00104 	addi	sp,sp,4
   9b840:	f800283a 	ret

0009b844 <OSTaskChangePrio>:
   9b844:	defff004 	addi	sp,sp,-64
   9b848:	dfc00f15 	stw	ra,60(sp)
   9b84c:	df000e15 	stw	fp,56(sp)
   9b850:	df000e04 	addi	fp,sp,56
   9b854:	e13ffd05 	stb	r4,-12(fp)
   9b858:	e17ffe05 	stb	r5,-8(fp)
   9b85c:	e03ff715 	stw	zero,-36(fp)
   9b860:	e0bffd03 	ldbu	r2,-12(fp)
   9b864:	10800530 	cmpltui	r2,r2,20
   9b868:	1000061e 	bne	r2,zero,9b884 <OSTaskChangePrio+0x40>
   9b86c:	e0bffd03 	ldbu	r2,-12(fp)
   9b870:	10803fe0 	cmpeqi	r2,r2,255
   9b874:	1000031e 	bne	r2,zero,9b884 <OSTaskChangePrio+0x40>
   9b878:	00800a84 	movi	r2,42
   9b87c:	e0bfff15 	stw	r2,-4(fp)
   9b880:	00014706 	br	9bda0 <OSTaskChangePrio+0x55c>
   9b884:	e0bffe03 	ldbu	r2,-8(fp)
   9b888:	10800530 	cmpltui	r2,r2,20
   9b88c:	1000031e 	bne	r2,zero,9b89c <OSTaskChangePrio+0x58>
   9b890:	00800a84 	movi	r2,42
   9b894:	e0bfff15 	stw	r2,-4(fp)
   9b898:	00014106 	br	9bda0 <OSTaskChangePrio+0x55c>
   9b89c:	0005303a 	rdctl	r2,status
   9b8a0:	e0bff615 	stw	r2,-40(fp)
   9b8a4:	e0fff617 	ldw	r3,-40(fp)
   9b8a8:	00bfff84 	movi	r2,-2
   9b8ac:	1884703a 	and	r2,r3,r2
   9b8b0:	1001703a 	wrctl	status,r2
   9b8b4:	e0bff617 	ldw	r2,-40(fp)
   9b8b8:	e0bff715 	stw	r2,-36(fp)
   9b8bc:	e0bffe03 	ldbu	r2,-8(fp)
   9b8c0:	00c002f4 	movhi	r3,11
   9b8c4:	18ddd004 	addi	r3,r3,30528
   9b8c8:	1085883a 	add	r2,r2,r2
   9b8cc:	1085883a 	add	r2,r2,r2
   9b8d0:	10c5883a 	add	r2,r2,r3
   9b8d4:	10800017 	ldw	r2,0(r2)
   9b8d8:	1005003a 	cmpeq	r2,r2,zero
   9b8dc:	1000071e 	bne	r2,zero,9b8fc <OSTaskChangePrio+0xb8>
   9b8e0:	e0bff717 	ldw	r2,-36(fp)
   9b8e4:	e0bff515 	stw	r2,-44(fp)
   9b8e8:	e0bff517 	ldw	r2,-44(fp)
   9b8ec:	1001703a 	wrctl	status,r2
   9b8f0:	00800a04 	movi	r2,40
   9b8f4:	e0bfff15 	stw	r2,-4(fp)
   9b8f8:	00012906 	br	9bda0 <OSTaskChangePrio+0x55c>
   9b8fc:	e0bffd03 	ldbu	r2,-12(fp)
   9b900:	10803fd8 	cmpnei	r2,r2,255
   9b904:	1000051e 	bne	r2,zero,9b91c <OSTaskChangePrio+0xd8>
   9b908:	008002b4 	movhi	r2,10
   9b90c:	10910604 	addi	r2,r2,17432
   9b910:	10800017 	ldw	r2,0(r2)
   9b914:	10800c83 	ldbu	r2,50(r2)
   9b918:	e0bffd05 	stb	r2,-12(fp)
   9b91c:	e0bffd03 	ldbu	r2,-12(fp)
   9b920:	00c002f4 	movhi	r3,11
   9b924:	18ddd004 	addi	r3,r3,30528
   9b928:	1085883a 	add	r2,r2,r2
   9b92c:	1085883a 	add	r2,r2,r2
   9b930:	10c5883a 	add	r2,r2,r3
   9b934:	10800017 	ldw	r2,0(r2)
   9b938:	e0bffa15 	stw	r2,-24(fp)
   9b93c:	e0bffa17 	ldw	r2,-24(fp)
   9b940:	1004c03a 	cmpne	r2,r2,zero
   9b944:	1000071e 	bne	r2,zero,9b964 <OSTaskChangePrio+0x120>
   9b948:	e0bff717 	ldw	r2,-36(fp)
   9b94c:	e0bff415 	stw	r2,-48(fp)
   9b950:	e0bff417 	ldw	r2,-48(fp)
   9b954:	1001703a 	wrctl	status,r2
   9b958:	00800a44 	movi	r2,41
   9b95c:	e0bfff15 	stw	r2,-4(fp)
   9b960:	00010f06 	br	9bda0 <OSTaskChangePrio+0x55c>
   9b964:	e0bffa17 	ldw	r2,-24(fp)
   9b968:	10800058 	cmpnei	r2,r2,1
   9b96c:	1000071e 	bne	r2,zero,9b98c <OSTaskChangePrio+0x148>
   9b970:	e0bff717 	ldw	r2,-36(fp)
   9b974:	e0bff315 	stw	r2,-52(fp)
   9b978:	e0bff317 	ldw	r2,-52(fp)
   9b97c:	1001703a 	wrctl	status,r2
   9b980:	008010c4 	movi	r2,67
   9b984:	e0bfff15 	stw	r2,-4(fp)
   9b988:	00010506 	br	9bda0 <OSTaskChangePrio+0x55c>
   9b98c:	e0bffe03 	ldbu	r2,-8(fp)
   9b990:	1004d0fa 	srli	r2,r2,3
   9b994:	e0bff985 	stb	r2,-26(fp)
   9b998:	e0bffe03 	ldbu	r2,-8(fp)
   9b99c:	108001cc 	andi	r2,r2,7
   9b9a0:	e0bff945 	stb	r2,-27(fp)
   9b9a4:	e0fff983 	ldbu	r3,-26(fp)
   9b9a8:	00800044 	movi	r2,1
   9b9ac:	10c4983a 	sll	r2,r2,r3
   9b9b0:	e0bff8c5 	stb	r2,-29(fp)
   9b9b4:	e0fff943 	ldbu	r3,-27(fp)
   9b9b8:	00800044 	movi	r2,1
   9b9bc:	10c4983a 	sll	r2,r2,r3
   9b9c0:	e0bff885 	stb	r2,-30(fp)
   9b9c4:	e0bffd03 	ldbu	r2,-12(fp)
   9b9c8:	00c002f4 	movhi	r3,11
   9b9cc:	18ddd004 	addi	r3,r3,30528
   9b9d0:	1085883a 	add	r2,r2,r2
   9b9d4:	1085883a 	add	r2,r2,r2
   9b9d8:	10c5883a 	add	r2,r2,r3
   9b9dc:	10000015 	stw	zero,0(r2)
   9b9e0:	e0bffe03 	ldbu	r2,-8(fp)
   9b9e4:	00c002f4 	movhi	r3,11
   9b9e8:	18ddd004 	addi	r3,r3,30528
   9b9ec:	1085883a 	add	r2,r2,r2
   9b9f0:	1085883a 	add	r2,r2,r2
   9b9f4:	10c7883a 	add	r3,r2,r3
   9b9f8:	e0bffa17 	ldw	r2,-24(fp)
   9b9fc:	18800015 	stw	r2,0(r3)
   9ba00:	e0bffa17 	ldw	r2,-24(fp)
   9ba04:	10800d03 	ldbu	r2,52(r2)
   9ba08:	e0bff905 	stb	r2,-28(fp)
   9ba0c:	e0bffa17 	ldw	r2,-24(fp)
   9ba10:	10800d83 	ldbu	r2,54(r2)
   9ba14:	e0bff845 	stb	r2,-31(fp)
   9ba18:	e0bffa17 	ldw	r2,-24(fp)
   9ba1c:	10800d43 	ldbu	r2,53(r2)
   9ba20:	e0bff805 	stb	r2,-32(fp)
   9ba24:	e0fff903 	ldbu	r3,-28(fp)
   9ba28:	008002b4 	movhi	r2,10
   9ba2c:	10910344 	addi	r2,r2,17421
   9ba30:	10c5883a 	add	r2,r2,r3
   9ba34:	10c00003 	ldbu	r3,0(r2)
   9ba38:	e0bff803 	ldbu	r2,-32(fp)
   9ba3c:	1884703a 	and	r2,r3,r2
   9ba40:	10803fcc 	andi	r2,r2,255
   9ba44:	1005003a 	cmpeq	r2,r2,zero
   9ba48:	1000381e 	bne	r2,zero,9bb2c <OSTaskChangePrio+0x2e8>
   9ba4c:	e13ff903 	ldbu	r4,-28(fp)
   9ba50:	e0fff903 	ldbu	r3,-28(fp)
   9ba54:	008002b4 	movhi	r2,10
   9ba58:	10910344 	addi	r2,r2,17421
   9ba5c:	10c5883a 	add	r2,r2,r3
   9ba60:	10800003 	ldbu	r2,0(r2)
   9ba64:	1007883a 	mov	r3,r2
   9ba68:	e0bff803 	ldbu	r2,-32(fp)
   9ba6c:	0084303a 	nor	r2,zero,r2
   9ba70:	1884703a 	and	r2,r3,r2
   9ba74:	1007883a 	mov	r3,r2
   9ba78:	008002b4 	movhi	r2,10
   9ba7c:	10910344 	addi	r2,r2,17421
   9ba80:	1105883a 	add	r2,r2,r4
   9ba84:	10c00005 	stb	r3,0(r2)
   9ba88:	e0fff903 	ldbu	r3,-28(fp)
   9ba8c:	008002b4 	movhi	r2,10
   9ba90:	10910344 	addi	r2,r2,17421
   9ba94:	10c5883a 	add	r2,r2,r3
   9ba98:	10800003 	ldbu	r2,0(r2)
   9ba9c:	10803fcc 	andi	r2,r2,255
   9baa0:	1004c03a 	cmpne	r2,r2,zero
   9baa4:	10000b1e 	bne	r2,zero,9bad4 <OSTaskChangePrio+0x290>
   9baa8:	e0bff843 	ldbu	r2,-31(fp)
   9baac:	0084303a 	nor	r2,zero,r2
   9bab0:	1007883a 	mov	r3,r2
   9bab4:	008002b4 	movhi	r2,10
   9bab8:	10910304 	addi	r2,r2,17420
   9babc:	10800003 	ldbu	r2,0(r2)
   9bac0:	1884703a 	and	r2,r3,r2
   9bac4:	1007883a 	mov	r3,r2
   9bac8:	008002b4 	movhi	r2,10
   9bacc:	10910304 	addi	r2,r2,17420
   9bad0:	10c00005 	stb	r3,0(r2)
   9bad4:	008002b4 	movhi	r2,10
   9bad8:	10910304 	addi	r2,r2,17420
   9badc:	10c00003 	ldbu	r3,0(r2)
   9bae0:	e0bff8c3 	ldbu	r2,-29(fp)
   9bae4:	1884b03a 	or	r2,r3,r2
   9bae8:	1007883a 	mov	r3,r2
   9baec:	008002b4 	movhi	r2,10
   9baf0:	10910304 	addi	r2,r2,17420
   9baf4:	10c00005 	stb	r3,0(r2)
   9baf8:	e13ff983 	ldbu	r4,-26(fp)
   9bafc:	e0fff983 	ldbu	r3,-26(fp)
   9bb00:	008002b4 	movhi	r2,10
   9bb04:	10910344 	addi	r2,r2,17421
   9bb08:	10c5883a 	add	r2,r2,r3
   9bb0c:	10c00003 	ldbu	r3,0(r2)
   9bb10:	e0bff883 	ldbu	r2,-30(fp)
   9bb14:	1884b03a 	or	r2,r3,r2
   9bb18:	1007883a 	mov	r3,r2
   9bb1c:	008002b4 	movhi	r2,10
   9bb20:	10910344 	addi	r2,r2,17421
   9bb24:	1105883a 	add	r2,r2,r4
   9bb28:	10c00005 	stb	r3,0(r2)
   9bb2c:	e0bffa17 	ldw	r2,-24(fp)
   9bb30:	10800717 	ldw	r2,28(r2)
   9bb34:	e0bffc15 	stw	r2,-16(fp)
   9bb38:	e0bffc17 	ldw	r2,-16(fp)
   9bb3c:	1005003a 	cmpeq	r2,r2,zero
   9bb40:	1000341e 	bne	r2,zero,9bc14 <OSTaskChangePrio+0x3d0>
   9bb44:	e13ff903 	ldbu	r4,-28(fp)
   9bb48:	e0fff903 	ldbu	r3,-28(fp)
   9bb4c:	e0bffc17 	ldw	r2,-16(fp)
   9bb50:	1885883a 	add	r2,r3,r2
   9bb54:	10800204 	addi	r2,r2,8
   9bb58:	108000c3 	ldbu	r2,3(r2)
   9bb5c:	1007883a 	mov	r3,r2
   9bb60:	e0bff803 	ldbu	r2,-32(fp)
   9bb64:	0084303a 	nor	r2,zero,r2
   9bb68:	1884703a 	and	r2,r3,r2
   9bb6c:	1007883a 	mov	r3,r2
   9bb70:	e0bffc17 	ldw	r2,-16(fp)
   9bb74:	2085883a 	add	r2,r4,r2
   9bb78:	10800204 	addi	r2,r2,8
   9bb7c:	10c000c5 	stb	r3,3(r2)
   9bb80:	e0fff903 	ldbu	r3,-28(fp)
   9bb84:	e0bffc17 	ldw	r2,-16(fp)
   9bb88:	1885883a 	add	r2,r3,r2
   9bb8c:	10800204 	addi	r2,r2,8
   9bb90:	108000c3 	ldbu	r2,3(r2)
   9bb94:	10803fcc 	andi	r2,r2,255
   9bb98:	1004c03a 	cmpne	r2,r2,zero
   9bb9c:	1000091e 	bne	r2,zero,9bbc4 <OSTaskChangePrio+0x380>
   9bba0:	e0bffc17 	ldw	r2,-16(fp)
   9bba4:	10800283 	ldbu	r2,10(r2)
   9bba8:	1007883a 	mov	r3,r2
   9bbac:	e0bff843 	ldbu	r2,-31(fp)
   9bbb0:	0084303a 	nor	r2,zero,r2
   9bbb4:	1884703a 	and	r2,r3,r2
   9bbb8:	1007883a 	mov	r3,r2
   9bbbc:	e0bffc17 	ldw	r2,-16(fp)
   9bbc0:	10c00285 	stb	r3,10(r2)
   9bbc4:	e0bffc17 	ldw	r2,-16(fp)
   9bbc8:	10c00283 	ldbu	r3,10(r2)
   9bbcc:	e0bff8c3 	ldbu	r2,-29(fp)
   9bbd0:	1884b03a 	or	r2,r3,r2
   9bbd4:	1007883a 	mov	r3,r2
   9bbd8:	e0bffc17 	ldw	r2,-16(fp)
   9bbdc:	10c00285 	stb	r3,10(r2)
   9bbe0:	e13ff983 	ldbu	r4,-26(fp)
   9bbe4:	e0fff983 	ldbu	r3,-26(fp)
   9bbe8:	e0bffc17 	ldw	r2,-16(fp)
   9bbec:	1885883a 	add	r2,r3,r2
   9bbf0:	10800204 	addi	r2,r2,8
   9bbf4:	10c000c3 	ldbu	r3,3(r2)
   9bbf8:	e0bff883 	ldbu	r2,-30(fp)
   9bbfc:	1884b03a 	or	r2,r3,r2
   9bc00:	1007883a 	mov	r3,r2
   9bc04:	e0bffc17 	ldw	r2,-16(fp)
   9bc08:	2085883a 	add	r2,r4,r2
   9bc0c:	10800204 	addi	r2,r2,8
   9bc10:	10c000c5 	stb	r3,3(r2)
   9bc14:	e0bffa17 	ldw	r2,-24(fp)
   9bc18:	10800817 	ldw	r2,32(r2)
   9bc1c:	1005003a 	cmpeq	r2,r2,zero
   9bc20:	1000441e 	bne	r2,zero,9bd34 <OSTaskChangePrio+0x4f0>
   9bc24:	e0bffa17 	ldw	r2,-24(fp)
   9bc28:	10800817 	ldw	r2,32(r2)
   9bc2c:	e0bffb15 	stw	r2,-20(fp)
   9bc30:	e0bffb17 	ldw	r2,-20(fp)
   9bc34:	10800017 	ldw	r2,0(r2)
   9bc38:	e0bffc15 	stw	r2,-16(fp)
   9bc3c:	00003a06 	br	9bd28 <OSTaskChangePrio+0x4e4>
   9bc40:	e13ff903 	ldbu	r4,-28(fp)
   9bc44:	e0fff903 	ldbu	r3,-28(fp)
   9bc48:	e0bffc17 	ldw	r2,-16(fp)
   9bc4c:	1885883a 	add	r2,r3,r2
   9bc50:	10800204 	addi	r2,r2,8
   9bc54:	108000c3 	ldbu	r2,3(r2)
   9bc58:	1007883a 	mov	r3,r2
   9bc5c:	e0bff803 	ldbu	r2,-32(fp)
   9bc60:	0084303a 	nor	r2,zero,r2
   9bc64:	1884703a 	and	r2,r3,r2
   9bc68:	1007883a 	mov	r3,r2
   9bc6c:	e0bffc17 	ldw	r2,-16(fp)
   9bc70:	2085883a 	add	r2,r4,r2
   9bc74:	10800204 	addi	r2,r2,8
   9bc78:	10c000c5 	stb	r3,3(r2)
   9bc7c:	e0fff903 	ldbu	r3,-28(fp)
   9bc80:	e0bffc17 	ldw	r2,-16(fp)
   9bc84:	1885883a 	add	r2,r3,r2
   9bc88:	10800204 	addi	r2,r2,8
   9bc8c:	108000c3 	ldbu	r2,3(r2)
   9bc90:	10803fcc 	andi	r2,r2,255
   9bc94:	1004c03a 	cmpne	r2,r2,zero
   9bc98:	1000091e 	bne	r2,zero,9bcc0 <OSTaskChangePrio+0x47c>
   9bc9c:	e0bffc17 	ldw	r2,-16(fp)
   9bca0:	10800283 	ldbu	r2,10(r2)
   9bca4:	1007883a 	mov	r3,r2
   9bca8:	e0bff843 	ldbu	r2,-31(fp)
   9bcac:	0084303a 	nor	r2,zero,r2
   9bcb0:	1884703a 	and	r2,r3,r2
   9bcb4:	1007883a 	mov	r3,r2
   9bcb8:	e0bffc17 	ldw	r2,-16(fp)
   9bcbc:	10c00285 	stb	r3,10(r2)
   9bcc0:	e0bffc17 	ldw	r2,-16(fp)
   9bcc4:	10c00283 	ldbu	r3,10(r2)
   9bcc8:	e0bff8c3 	ldbu	r2,-29(fp)
   9bccc:	1884b03a 	or	r2,r3,r2
   9bcd0:	1007883a 	mov	r3,r2
   9bcd4:	e0bffc17 	ldw	r2,-16(fp)
   9bcd8:	10c00285 	stb	r3,10(r2)
   9bcdc:	e13ff983 	ldbu	r4,-26(fp)
   9bce0:	e0fff983 	ldbu	r3,-26(fp)
   9bce4:	e0bffc17 	ldw	r2,-16(fp)
   9bce8:	1885883a 	add	r2,r3,r2
   9bcec:	10800204 	addi	r2,r2,8
   9bcf0:	10c000c3 	ldbu	r3,3(r2)
   9bcf4:	e0bff883 	ldbu	r2,-30(fp)
   9bcf8:	1884b03a 	or	r2,r3,r2
   9bcfc:	1007883a 	mov	r3,r2
   9bd00:	e0bffc17 	ldw	r2,-16(fp)
   9bd04:	2085883a 	add	r2,r4,r2
   9bd08:	10800204 	addi	r2,r2,8
   9bd0c:	10c000c5 	stb	r3,3(r2)
   9bd10:	e0bffb17 	ldw	r2,-20(fp)
   9bd14:	10800104 	addi	r2,r2,4
   9bd18:	e0bffb15 	stw	r2,-20(fp)
   9bd1c:	e0bffb17 	ldw	r2,-20(fp)
   9bd20:	10800017 	ldw	r2,0(r2)
   9bd24:	e0bffc15 	stw	r2,-16(fp)
   9bd28:	e0bffc17 	ldw	r2,-16(fp)
   9bd2c:	1004c03a 	cmpne	r2,r2,zero
   9bd30:	103fc31e 	bne	r2,zero,9bc40 <OSTaskChangePrio+0x3fc>
   9bd34:	e0fffa17 	ldw	r3,-24(fp)
   9bd38:	e0bffe03 	ldbu	r2,-8(fp)
   9bd3c:	18800c85 	stb	r2,50(r3)
   9bd40:	e0fffa17 	ldw	r3,-24(fp)
   9bd44:	e0bff983 	ldbu	r2,-26(fp)
   9bd48:	18800d05 	stb	r2,52(r3)
   9bd4c:	e0fffa17 	ldw	r3,-24(fp)
   9bd50:	e0bff943 	ldbu	r2,-27(fp)
   9bd54:	18800cc5 	stb	r2,51(r3)
   9bd58:	e0fffa17 	ldw	r3,-24(fp)
   9bd5c:	e0bff8c3 	ldbu	r2,-29(fp)
   9bd60:	18800d85 	stb	r2,54(r3)
   9bd64:	e0fffa17 	ldw	r3,-24(fp)
   9bd68:	e0bff883 	ldbu	r2,-30(fp)
   9bd6c:	18800d45 	stb	r2,53(r3)
   9bd70:	e0bff717 	ldw	r2,-36(fp)
   9bd74:	e0bff215 	stw	r2,-56(fp)
   9bd78:	e0bff217 	ldw	r2,-56(fp)
   9bd7c:	1001703a 	wrctl	status,r2
   9bd80:	008002b4 	movhi	r2,10
   9bd84:	1090f744 	addi	r2,r2,17373
   9bd88:	10800003 	ldbu	r2,0(r2)
   9bd8c:	10803fcc 	andi	r2,r2,255
   9bd90:	10800058 	cmpnei	r2,r2,1
   9bd94:	1000011e 	bne	r2,zero,9bd9c <OSTaskChangePrio+0x558>
   9bd98:	0094f580 	call	94f58 <OS_Sched>
   9bd9c:	e03fff15 	stw	zero,-4(fp)
   9bda0:	e0bfff17 	ldw	r2,-4(fp)
   9bda4:	e037883a 	mov	sp,fp
   9bda8:	dfc00117 	ldw	ra,4(sp)
   9bdac:	df000017 	ldw	fp,0(sp)
   9bdb0:	dec00204 	addi	sp,sp,8
   9bdb4:	f800283a 	ret

0009bdb8 <OSTaskCreate>:
   9bdb8:	deffed04 	addi	sp,sp,-76
   9bdbc:	dfc01215 	stw	ra,72(sp)
   9bdc0:	df001115 	stw	fp,68(sp)
   9bdc4:	df001104 	addi	fp,sp,68
   9bdc8:	e13ffb15 	stw	r4,-20(fp)
   9bdcc:	e17ffc15 	stw	r5,-16(fp)
   9bdd0:	e1bffd15 	stw	r6,-12(fp)
   9bdd4:	e1fffe05 	stb	r7,-8(fp)
   9bdd8:	e03ff815 	stw	zero,-32(fp)
   9bddc:	e0bffe03 	ldbu	r2,-8(fp)
   9bde0:	10800570 	cmpltui	r2,r2,21
   9bde4:	1000031e 	bne	r2,zero,9bdf4 <OSTaskCreate+0x3c>
   9bde8:	00800a84 	movi	r2,42
   9bdec:	e0bfff15 	stw	r2,-4(fp)
   9bdf0:	00006006 	br	9bf74 <OSTaskCreate+0x1bc>
   9bdf4:	0005303a 	rdctl	r2,status
   9bdf8:	e0bff715 	stw	r2,-36(fp)
   9bdfc:	e0fff717 	ldw	r3,-36(fp)
   9be00:	00bfff84 	movi	r2,-2
   9be04:	1884703a 	and	r2,r3,r2
   9be08:	1001703a 	wrctl	status,r2
   9be0c:	e0bff717 	ldw	r2,-36(fp)
   9be10:	e0bff815 	stw	r2,-32(fp)
   9be14:	008002b4 	movhi	r2,10
   9be18:	10910504 	addi	r2,r2,17428
   9be1c:	10800003 	ldbu	r2,0(r2)
   9be20:	10803fcc 	andi	r2,r2,255
   9be24:	1005003a 	cmpeq	r2,r2,zero
   9be28:	1000071e 	bne	r2,zero,9be48 <OSTaskCreate+0x90>
   9be2c:	e0bff817 	ldw	r2,-32(fp)
   9be30:	e0bff615 	stw	r2,-40(fp)
   9be34:	e0bff617 	ldw	r2,-40(fp)
   9be38:	1001703a 	wrctl	status,r2
   9be3c:	00800f04 	movi	r2,60
   9be40:	e0bfff15 	stw	r2,-4(fp)
   9be44:	00004b06 	br	9bf74 <OSTaskCreate+0x1bc>
   9be48:	e0bffe03 	ldbu	r2,-8(fp)
   9be4c:	00c002f4 	movhi	r3,11
   9be50:	18ddd004 	addi	r3,r3,30528
   9be54:	1085883a 	add	r2,r2,r2
   9be58:	1085883a 	add	r2,r2,r2
   9be5c:	10c5883a 	add	r2,r2,r3
   9be60:	10800017 	ldw	r2,0(r2)
   9be64:	1004c03a 	cmpne	r2,r2,zero
   9be68:	10003c1e 	bne	r2,zero,9bf5c <OSTaskCreate+0x1a4>
   9be6c:	e0bffe03 	ldbu	r2,-8(fp)
   9be70:	00c002f4 	movhi	r3,11
   9be74:	18ddd004 	addi	r3,r3,30528
   9be78:	1085883a 	add	r2,r2,r2
   9be7c:	1085883a 	add	r2,r2,r2
   9be80:	10c7883a 	add	r3,r2,r3
   9be84:	00800044 	movi	r2,1
   9be88:	18800015 	stw	r2,0(r3)
   9be8c:	e0bff817 	ldw	r2,-32(fp)
   9be90:	e0bff515 	stw	r2,-44(fp)
   9be94:	e0bff517 	ldw	r2,-44(fp)
   9be98:	1001703a 	wrctl	status,r2
   9be9c:	e13ffb17 	ldw	r4,-20(fp)
   9bea0:	e17ffc17 	ldw	r5,-16(fp)
   9bea4:	e1bffd17 	ldw	r6,-12(fp)
   9bea8:	000f883a 	mov	r7,zero
   9beac:	009f4780 	call	9f478 <OSTaskStkInit>
   9beb0:	e0bffa15 	stw	r2,-24(fp)
   9beb4:	e13ffe03 	ldbu	r4,-8(fp)
   9beb8:	d8000015 	stw	zero,0(sp)
   9bebc:	d8000115 	stw	zero,4(sp)
   9bec0:	d8000215 	stw	zero,8(sp)
   9bec4:	e17ffa17 	ldw	r5,-24(fp)
   9bec8:	000d883a 	mov	r6,zero
   9becc:	000f883a 	mov	r7,zero
   9bed0:	00953600 	call	95360 <OS_TCBInit>
   9bed4:	e0bff905 	stb	r2,-28(fp)
   9bed8:	e0bff903 	ldbu	r2,-28(fp)
   9bedc:	1004c03a 	cmpne	r2,r2,zero
   9bee0:	1000081e 	bne	r2,zero,9bf04 <OSTaskCreate+0x14c>
   9bee4:	008002b4 	movhi	r2,10
   9bee8:	1090f744 	addi	r2,r2,17373
   9beec:	10800003 	ldbu	r2,0(r2)
   9bef0:	10803fcc 	andi	r2,r2,255
   9bef4:	10800058 	cmpnei	r2,r2,1
   9bef8:	1000151e 	bne	r2,zero,9bf50 <OSTaskCreate+0x198>
   9befc:	0094f580 	call	94f58 <OS_Sched>
   9bf00:	00001306 	br	9bf50 <OSTaskCreate+0x198>
   9bf04:	0005303a 	rdctl	r2,status
   9bf08:	e0bff415 	stw	r2,-48(fp)
   9bf0c:	e0fff417 	ldw	r3,-48(fp)
   9bf10:	00bfff84 	movi	r2,-2
   9bf14:	1884703a 	and	r2,r3,r2
   9bf18:	1001703a 	wrctl	status,r2
   9bf1c:	e0bff417 	ldw	r2,-48(fp)
   9bf20:	e0bff815 	stw	r2,-32(fp)
   9bf24:	e0bffe03 	ldbu	r2,-8(fp)
   9bf28:	00c002f4 	movhi	r3,11
   9bf2c:	18ddd004 	addi	r3,r3,30528
   9bf30:	1085883a 	add	r2,r2,r2
   9bf34:	1085883a 	add	r2,r2,r2
   9bf38:	10c5883a 	add	r2,r2,r3
   9bf3c:	10000015 	stw	zero,0(r2)
   9bf40:	e0bff817 	ldw	r2,-32(fp)
   9bf44:	e0bff315 	stw	r2,-52(fp)
   9bf48:	e0bff317 	ldw	r2,-52(fp)
   9bf4c:	1001703a 	wrctl	status,r2
   9bf50:	e0bff903 	ldbu	r2,-28(fp)
   9bf54:	e0bfff15 	stw	r2,-4(fp)
   9bf58:	00000606 	br	9bf74 <OSTaskCreate+0x1bc>
   9bf5c:	e0bff817 	ldw	r2,-32(fp)
   9bf60:	e0bff215 	stw	r2,-56(fp)
   9bf64:	e0bff217 	ldw	r2,-56(fp)
   9bf68:	1001703a 	wrctl	status,r2
   9bf6c:	00800a04 	movi	r2,40
   9bf70:	e0bfff15 	stw	r2,-4(fp)
   9bf74:	e0bfff17 	ldw	r2,-4(fp)
   9bf78:	e037883a 	mov	sp,fp
   9bf7c:	dfc00117 	ldw	ra,4(sp)
   9bf80:	df000017 	ldw	fp,0(sp)
   9bf84:	dec00204 	addi	sp,sp,8
   9bf88:	f800283a 	ret

0009bf8c <OSTaskCreateExt>:
   9bf8c:	deffeb04 	addi	sp,sp,-84
   9bf90:	dfc01415 	stw	ra,80(sp)
   9bf94:	df001315 	stw	fp,76(sp)
   9bf98:	df001304 	addi	fp,sp,76
   9bf9c:	e13ff915 	stw	r4,-28(fp)
   9bfa0:	e17ffa15 	stw	r5,-24(fp)
   9bfa4:	e1bffb15 	stw	r6,-20(fp)
   9bfa8:	e0800217 	ldw	r2,8(fp)
   9bfac:	e0c00617 	ldw	r3,24(fp)
   9bfb0:	e1fffc05 	stb	r7,-16(fp)
   9bfb4:	e0bffd0d 	sth	r2,-12(fp)
   9bfb8:	e0fffe0d 	sth	r3,-8(fp)
   9bfbc:	e03ff615 	stw	zero,-40(fp)
   9bfc0:	e0bffc03 	ldbu	r2,-16(fp)
   9bfc4:	10800570 	cmpltui	r2,r2,21
   9bfc8:	1000031e 	bne	r2,zero,9bfd8 <OSTaskCreateExt+0x4c>
   9bfcc:	00800a84 	movi	r2,42
   9bfd0:	e0bfff15 	stw	r2,-4(fp)
   9bfd4:	00006706 	br	9c174 <OSTaskCreateExt+0x1e8>
   9bfd8:	0005303a 	rdctl	r2,status
   9bfdc:	e0bff515 	stw	r2,-44(fp)
   9bfe0:	e0fff517 	ldw	r3,-44(fp)
   9bfe4:	00bfff84 	movi	r2,-2
   9bfe8:	1884703a 	and	r2,r3,r2
   9bfec:	1001703a 	wrctl	status,r2
   9bff0:	e0bff517 	ldw	r2,-44(fp)
   9bff4:	e0bff615 	stw	r2,-40(fp)
   9bff8:	008002b4 	movhi	r2,10
   9bffc:	10910504 	addi	r2,r2,17428
   9c000:	10800003 	ldbu	r2,0(r2)
   9c004:	10803fcc 	andi	r2,r2,255
   9c008:	1005003a 	cmpeq	r2,r2,zero
   9c00c:	1000071e 	bne	r2,zero,9c02c <OSTaskCreateExt+0xa0>
   9c010:	e0bff617 	ldw	r2,-40(fp)
   9c014:	e0bff415 	stw	r2,-48(fp)
   9c018:	e0bff417 	ldw	r2,-48(fp)
   9c01c:	1001703a 	wrctl	status,r2
   9c020:	00800f04 	movi	r2,60
   9c024:	e0bfff15 	stw	r2,-4(fp)
   9c028:	00005206 	br	9c174 <OSTaskCreateExt+0x1e8>
   9c02c:	e0bffc03 	ldbu	r2,-16(fp)
   9c030:	00c002f4 	movhi	r3,11
   9c034:	18ddd004 	addi	r3,r3,30528
   9c038:	1085883a 	add	r2,r2,r2
   9c03c:	1085883a 	add	r2,r2,r2
   9c040:	10c5883a 	add	r2,r2,r3
   9c044:	10800017 	ldw	r2,0(r2)
   9c048:	1004c03a 	cmpne	r2,r2,zero
   9c04c:	1000431e 	bne	r2,zero,9c15c <OSTaskCreateExt+0x1d0>
   9c050:	e0bffc03 	ldbu	r2,-16(fp)
   9c054:	00c002f4 	movhi	r3,11
   9c058:	18ddd004 	addi	r3,r3,30528
   9c05c:	1085883a 	add	r2,r2,r2
   9c060:	1085883a 	add	r2,r2,r2
   9c064:	10c7883a 	add	r3,r2,r3
   9c068:	00800044 	movi	r2,1
   9c06c:	18800015 	stw	r2,0(r3)
   9c070:	e0bff617 	ldw	r2,-40(fp)
   9c074:	e0bff315 	stw	r2,-52(fp)
   9c078:	e0bff317 	ldw	r2,-52(fp)
   9c07c:	1001703a 	wrctl	status,r2
   9c080:	e1bffe0b 	ldhu	r6,-8(fp)
   9c084:	e1000317 	ldw	r4,12(fp)
   9c088:	e1400417 	ldw	r5,16(fp)
   9c08c:	009d2080 	call	9d208 <OS_TaskStkClr>
   9c090:	e1fffe0b 	ldhu	r7,-8(fp)
   9c094:	e13ff917 	ldw	r4,-28(fp)
   9c098:	e17ffa17 	ldw	r5,-24(fp)
   9c09c:	e1bffb17 	ldw	r6,-20(fp)
   9c0a0:	009f4780 	call	9f478 <OSTaskStkInit>
   9c0a4:	e0bff815 	stw	r2,-32(fp)
   9c0a8:	e13ffc03 	ldbu	r4,-16(fp)
   9c0ac:	e1fffd0b 	ldhu	r7,-12(fp)
   9c0b0:	e0fffe0b 	ldhu	r3,-8(fp)
   9c0b4:	e0800417 	ldw	r2,16(fp)
   9c0b8:	d8800015 	stw	r2,0(sp)
   9c0bc:	e0800517 	ldw	r2,20(fp)
   9c0c0:	d8800115 	stw	r2,4(sp)
   9c0c4:	d8c00215 	stw	r3,8(sp)
   9c0c8:	e17ff817 	ldw	r5,-32(fp)
   9c0cc:	e1800317 	ldw	r6,12(fp)
   9c0d0:	00953600 	call	95360 <OS_TCBInit>
   9c0d4:	e0bff705 	stb	r2,-36(fp)
   9c0d8:	e0bff703 	ldbu	r2,-36(fp)
   9c0dc:	1004c03a 	cmpne	r2,r2,zero
   9c0e0:	1000081e 	bne	r2,zero,9c104 <OSTaskCreateExt+0x178>
   9c0e4:	008002b4 	movhi	r2,10
   9c0e8:	1090f744 	addi	r2,r2,17373
   9c0ec:	10800003 	ldbu	r2,0(r2)
   9c0f0:	10803fcc 	andi	r2,r2,255
   9c0f4:	10800058 	cmpnei	r2,r2,1
   9c0f8:	1000151e 	bne	r2,zero,9c150 <OSTaskCreateExt+0x1c4>
   9c0fc:	0094f580 	call	94f58 <OS_Sched>
   9c100:	00001306 	br	9c150 <OSTaskCreateExt+0x1c4>
   9c104:	0005303a 	rdctl	r2,status
   9c108:	e0bff215 	stw	r2,-56(fp)
   9c10c:	e0fff217 	ldw	r3,-56(fp)
   9c110:	00bfff84 	movi	r2,-2
   9c114:	1884703a 	and	r2,r3,r2
   9c118:	1001703a 	wrctl	status,r2
   9c11c:	e0bff217 	ldw	r2,-56(fp)
   9c120:	e0bff615 	stw	r2,-40(fp)
   9c124:	e0bffc03 	ldbu	r2,-16(fp)
   9c128:	00c002f4 	movhi	r3,11
   9c12c:	18ddd004 	addi	r3,r3,30528
   9c130:	1085883a 	add	r2,r2,r2
   9c134:	1085883a 	add	r2,r2,r2
   9c138:	10c5883a 	add	r2,r2,r3
   9c13c:	10000015 	stw	zero,0(r2)
   9c140:	e0bff617 	ldw	r2,-40(fp)
   9c144:	e0bff115 	stw	r2,-60(fp)
   9c148:	e0bff117 	ldw	r2,-60(fp)
   9c14c:	1001703a 	wrctl	status,r2
   9c150:	e0bff703 	ldbu	r2,-36(fp)
   9c154:	e0bfff15 	stw	r2,-4(fp)
   9c158:	00000606 	br	9c174 <OSTaskCreateExt+0x1e8>
   9c15c:	e0bff617 	ldw	r2,-40(fp)
   9c160:	e0bff015 	stw	r2,-64(fp)
   9c164:	e0bff017 	ldw	r2,-64(fp)
   9c168:	1001703a 	wrctl	status,r2
   9c16c:	00800a04 	movi	r2,40
   9c170:	e0bfff15 	stw	r2,-4(fp)
   9c174:	e0bfff17 	ldw	r2,-4(fp)
   9c178:	e037883a 	mov	sp,fp
   9c17c:	dfc00117 	ldw	ra,4(sp)
   9c180:	df000017 	ldw	fp,0(sp)
   9c184:	dec00204 	addi	sp,sp,8
   9c188:	f800283a 	ret

0009c18c <OSTaskDel>:
   9c18c:	defff304 	addi	sp,sp,-52
   9c190:	dfc00c15 	stw	ra,48(sp)
   9c194:	df000b15 	stw	fp,44(sp)
   9c198:	df000b04 	addi	fp,sp,44
   9c19c:	e13ffe05 	stb	r4,-8(fp)
   9c1a0:	e03ffb15 	stw	zero,-20(fp)
   9c1a4:	008002b4 	movhi	r2,10
   9c1a8:	10910504 	addi	r2,r2,17428
   9c1ac:	10800003 	ldbu	r2,0(r2)
   9c1b0:	10803fcc 	andi	r2,r2,255
   9c1b4:	1005003a 	cmpeq	r2,r2,zero
   9c1b8:	1000031e 	bne	r2,zero,9c1c8 <OSTaskDel+0x3c>
   9c1bc:	00801004 	movi	r2,64
   9c1c0:	e0bfff15 	stw	r2,-4(fp)
   9c1c4:	0000ee06 	br	9c580 <OSTaskDel+0x3f4>
   9c1c8:	e0bffe03 	ldbu	r2,-8(fp)
   9c1cc:	10800518 	cmpnei	r2,r2,20
   9c1d0:	1000031e 	bne	r2,zero,9c1e0 <OSTaskDel+0x54>
   9c1d4:	00800f84 	movi	r2,62
   9c1d8:	e0bfff15 	stw	r2,-4(fp)
   9c1dc:	0000e806 	br	9c580 <OSTaskDel+0x3f4>
   9c1e0:	e0bffe03 	ldbu	r2,-8(fp)
   9c1e4:	10800530 	cmpltui	r2,r2,20
   9c1e8:	1000061e 	bne	r2,zero,9c204 <OSTaskDel+0x78>
   9c1ec:	e0bffe03 	ldbu	r2,-8(fp)
   9c1f0:	10803fe0 	cmpeqi	r2,r2,255
   9c1f4:	1000031e 	bne	r2,zero,9c204 <OSTaskDel+0x78>
   9c1f8:	00800a84 	movi	r2,42
   9c1fc:	e0bfff15 	stw	r2,-4(fp)
   9c200:	0000df06 	br	9c580 <OSTaskDel+0x3f4>
   9c204:	0005303a 	rdctl	r2,status
   9c208:	e0bffa15 	stw	r2,-24(fp)
   9c20c:	e0fffa17 	ldw	r3,-24(fp)
   9c210:	00bfff84 	movi	r2,-2
   9c214:	1884703a 	and	r2,r3,r2
   9c218:	1001703a 	wrctl	status,r2
   9c21c:	e0bffa17 	ldw	r2,-24(fp)
   9c220:	e0bffb15 	stw	r2,-20(fp)
   9c224:	e0bffe03 	ldbu	r2,-8(fp)
   9c228:	10803fd8 	cmpnei	r2,r2,255
   9c22c:	1000051e 	bne	r2,zero,9c244 <OSTaskDel+0xb8>
   9c230:	008002b4 	movhi	r2,10
   9c234:	10910604 	addi	r2,r2,17432
   9c238:	10800017 	ldw	r2,0(r2)
   9c23c:	10800c83 	ldbu	r2,50(r2)
   9c240:	e0bffe05 	stb	r2,-8(fp)
   9c244:	e0bffe03 	ldbu	r2,-8(fp)
   9c248:	00c002f4 	movhi	r3,11
   9c24c:	18ddd004 	addi	r3,r3,30528
   9c250:	1085883a 	add	r2,r2,r2
   9c254:	1085883a 	add	r2,r2,r2
   9c258:	10c5883a 	add	r2,r2,r3
   9c25c:	10800017 	ldw	r2,0(r2)
   9c260:	e0bffc15 	stw	r2,-16(fp)
   9c264:	e0bffc17 	ldw	r2,-16(fp)
   9c268:	1004c03a 	cmpne	r2,r2,zero
   9c26c:	1000071e 	bne	r2,zero,9c28c <OSTaskDel+0x100>
   9c270:	e0bffb17 	ldw	r2,-20(fp)
   9c274:	e0bff915 	stw	r2,-28(fp)
   9c278:	e0bff917 	ldw	r2,-28(fp)
   9c27c:	1001703a 	wrctl	status,r2
   9c280:	008010c4 	movi	r2,67
   9c284:	e0bfff15 	stw	r2,-4(fp)
   9c288:	0000bd06 	br	9c580 <OSTaskDel+0x3f4>
   9c28c:	e0bffc17 	ldw	r2,-16(fp)
   9c290:	10800058 	cmpnei	r2,r2,1
   9c294:	1000071e 	bne	r2,zero,9c2b4 <OSTaskDel+0x128>
   9c298:	e0bffb17 	ldw	r2,-20(fp)
   9c29c:	e0bff815 	stw	r2,-32(fp)
   9c2a0:	e0bff817 	ldw	r2,-32(fp)
   9c2a4:	1001703a 	wrctl	status,r2
   9c2a8:	00800f44 	movi	r2,61
   9c2ac:	e0bfff15 	stw	r2,-4(fp)
   9c2b0:	0000b306 	br	9c580 <OSTaskDel+0x3f4>
   9c2b4:	e0bffc17 	ldw	r2,-16(fp)
   9c2b8:	10800d03 	ldbu	r2,52(r2)
   9c2bc:	11003fcc 	andi	r4,r2,255
   9c2c0:	e0bffc17 	ldw	r2,-16(fp)
   9c2c4:	10800d03 	ldbu	r2,52(r2)
   9c2c8:	10c03fcc 	andi	r3,r2,255
   9c2cc:	008002b4 	movhi	r2,10
   9c2d0:	10910344 	addi	r2,r2,17421
   9c2d4:	10c5883a 	add	r2,r2,r3
   9c2d8:	10800003 	ldbu	r2,0(r2)
   9c2dc:	1007883a 	mov	r3,r2
   9c2e0:	e0bffc17 	ldw	r2,-16(fp)
   9c2e4:	10800d43 	ldbu	r2,53(r2)
   9c2e8:	0084303a 	nor	r2,zero,r2
   9c2ec:	1884703a 	and	r2,r3,r2
   9c2f0:	1007883a 	mov	r3,r2
   9c2f4:	008002b4 	movhi	r2,10
   9c2f8:	10910344 	addi	r2,r2,17421
   9c2fc:	1105883a 	add	r2,r2,r4
   9c300:	10c00005 	stb	r3,0(r2)
   9c304:	e0bffc17 	ldw	r2,-16(fp)
   9c308:	10800d03 	ldbu	r2,52(r2)
   9c30c:	10c03fcc 	andi	r3,r2,255
   9c310:	008002b4 	movhi	r2,10
   9c314:	10910344 	addi	r2,r2,17421
   9c318:	10c5883a 	add	r2,r2,r3
   9c31c:	10800003 	ldbu	r2,0(r2)
   9c320:	10803fcc 	andi	r2,r2,255
   9c324:	1004c03a 	cmpne	r2,r2,zero
   9c328:	10000c1e 	bne	r2,zero,9c35c <OSTaskDel+0x1d0>
   9c32c:	e0bffc17 	ldw	r2,-16(fp)
   9c330:	10800d83 	ldbu	r2,54(r2)
   9c334:	0084303a 	nor	r2,zero,r2
   9c338:	1007883a 	mov	r3,r2
   9c33c:	008002b4 	movhi	r2,10
   9c340:	10910304 	addi	r2,r2,17420
   9c344:	10800003 	ldbu	r2,0(r2)
   9c348:	1884703a 	and	r2,r3,r2
   9c34c:	1007883a 	mov	r3,r2
   9c350:	008002b4 	movhi	r2,10
   9c354:	10910304 	addi	r2,r2,17420
   9c358:	10c00005 	stb	r3,0(r2)
   9c35c:	e0bffc17 	ldw	r2,-16(fp)
   9c360:	10800717 	ldw	r2,28(r2)
   9c364:	1005003a 	cmpeq	r2,r2,zero
   9c368:	1000041e 	bne	r2,zero,9c37c <OSTaskDel+0x1f0>
   9c36c:	e0bffc17 	ldw	r2,-16(fp)
   9c370:	11400717 	ldw	r5,28(r2)
   9c374:	e13ffc17 	ldw	r4,-16(fp)
   9c378:	00949100 	call	94910 <OS_EventTaskRemove>
   9c37c:	e0bffc17 	ldw	r2,-16(fp)
   9c380:	10800817 	ldw	r2,32(r2)
   9c384:	1005003a 	cmpeq	r2,r2,zero
   9c388:	1000041e 	bne	r2,zero,9c39c <OSTaskDel+0x210>
   9c38c:	e0bffc17 	ldw	r2,-16(fp)
   9c390:	11400817 	ldw	r5,32(r2)
   9c394:	e13ffc17 	ldw	r4,-16(fp)
   9c398:	00949c80 	call	949c8 <OS_EventTaskRemoveMulti>
   9c39c:	e0bffc17 	ldw	r2,-16(fp)
   9c3a0:	10800a17 	ldw	r2,40(r2)
   9c3a4:	e0bffd15 	stw	r2,-12(fp)
   9c3a8:	e0bffd17 	ldw	r2,-12(fp)
   9c3ac:	1005003a 	cmpeq	r2,r2,zero
   9c3b0:	1000021e 	bne	r2,zero,9c3bc <OSTaskDel+0x230>
   9c3b4:	e13ffd17 	ldw	r4,-12(fp)
   9c3b8:	009705c0 	call	9705c <OS_FlagUnlink>
   9c3bc:	e0bffc17 	ldw	r2,-16(fp)
   9c3c0:	10000b8d 	sth	zero,46(r2)
   9c3c4:	e0bffc17 	ldw	r2,-16(fp)
   9c3c8:	10000c05 	stb	zero,48(r2)
   9c3cc:	e0bffc17 	ldw	r2,-16(fp)
   9c3d0:	10000c45 	stb	zero,49(r2)
   9c3d4:	008002b4 	movhi	r2,10
   9c3d8:	1090f704 	addi	r2,r2,17372
   9c3dc:	10800003 	ldbu	r2,0(r2)
   9c3e0:	10803fcc 	andi	r2,r2,255
   9c3e4:	10803fe0 	cmpeqi	r2,r2,255
   9c3e8:	1000081e 	bne	r2,zero,9c40c <OSTaskDel+0x280>
   9c3ec:	008002b4 	movhi	r2,10
   9c3f0:	1090f704 	addi	r2,r2,17372
   9c3f4:	10800003 	ldbu	r2,0(r2)
   9c3f8:	10800044 	addi	r2,r2,1
   9c3fc:	1007883a 	mov	r3,r2
   9c400:	008002b4 	movhi	r2,10
   9c404:	1090f704 	addi	r2,r2,17372
   9c408:	10c00005 	stb	r3,0(r2)
   9c40c:	e0bffb17 	ldw	r2,-20(fp)
   9c410:	e0bff715 	stw	r2,-36(fp)
   9c414:	e0bff717 	ldw	r2,-36(fp)
   9c418:	1001703a 	wrctl	status,r2
   9c41c:	00944fc0 	call	944fc <OS_Dummy>
   9c420:	0005303a 	rdctl	r2,status
   9c424:	e0bff615 	stw	r2,-40(fp)
   9c428:	e0fff617 	ldw	r3,-40(fp)
   9c42c:	00bfff84 	movi	r2,-2
   9c430:	1884703a 	and	r2,r3,r2
   9c434:	1001703a 	wrctl	status,r2
   9c438:	e0bff617 	ldw	r2,-40(fp)
   9c43c:	e0bffb15 	stw	r2,-20(fp)
   9c440:	008002b4 	movhi	r2,10
   9c444:	1090f704 	addi	r2,r2,17372
   9c448:	10800003 	ldbu	r2,0(r2)
   9c44c:	10803fcc 	andi	r2,r2,255
   9c450:	1005003a 	cmpeq	r2,r2,zero
   9c454:	1000081e 	bne	r2,zero,9c478 <OSTaskDel+0x2ec>
   9c458:	008002b4 	movhi	r2,10
   9c45c:	1090f704 	addi	r2,r2,17372
   9c460:	10800003 	ldbu	r2,0(r2)
   9c464:	10bfffc4 	addi	r2,r2,-1
   9c468:	1007883a 	mov	r3,r2
   9c46c:	008002b4 	movhi	r2,10
   9c470:	1090f704 	addi	r2,r2,17372
   9c474:	10c00005 	stb	r3,0(r2)
   9c478:	e13ffc17 	ldw	r4,-16(fp)
   9c47c:	009f7a80 	call	9f7a8 <OSTaskDelHook>
   9c480:	008002b4 	movhi	r2,10
   9c484:	1090ff44 	addi	r2,r2,17405
   9c488:	10800003 	ldbu	r2,0(r2)
   9c48c:	10bfffc4 	addi	r2,r2,-1
   9c490:	1007883a 	mov	r3,r2
   9c494:	008002b4 	movhi	r2,10
   9c498:	1090ff44 	addi	r2,r2,17405
   9c49c:	10c00005 	stb	r3,0(r2)
   9c4a0:	e0bffe03 	ldbu	r2,-8(fp)
   9c4a4:	00c002f4 	movhi	r3,11
   9c4a8:	18ddd004 	addi	r3,r3,30528
   9c4ac:	1085883a 	add	r2,r2,r2
   9c4b0:	1085883a 	add	r2,r2,r2
   9c4b4:	10c5883a 	add	r2,r2,r3
   9c4b8:	10000015 	stw	zero,0(r2)
   9c4bc:	e0bffc17 	ldw	r2,-16(fp)
   9c4c0:	10800617 	ldw	r2,24(r2)
   9c4c4:	1004c03a 	cmpne	r2,r2,zero
   9c4c8:	1000091e 	bne	r2,zero,9c4f0 <OSTaskDel+0x364>
   9c4cc:	e0bffc17 	ldw	r2,-16(fp)
   9c4d0:	10800517 	ldw	r2,20(r2)
   9c4d4:	10000615 	stw	zero,24(r2)
   9c4d8:	e0bffc17 	ldw	r2,-16(fp)
   9c4dc:	10c00517 	ldw	r3,20(r2)
   9c4e0:	008002b4 	movhi	r2,10
   9c4e4:	1090fa04 	addi	r2,r2,17384
   9c4e8:	10c00015 	stw	r3,0(r2)
   9c4ec:	00000a06 	br	9c518 <OSTaskDel+0x38c>
   9c4f0:	e0bffc17 	ldw	r2,-16(fp)
   9c4f4:	10c00617 	ldw	r3,24(r2)
   9c4f8:	e0bffc17 	ldw	r2,-16(fp)
   9c4fc:	10800517 	ldw	r2,20(r2)
   9c500:	18800515 	stw	r2,20(r3)
   9c504:	e0bffc17 	ldw	r2,-16(fp)
   9c508:	10c00517 	ldw	r3,20(r2)
   9c50c:	e0bffc17 	ldw	r2,-16(fp)
   9c510:	10800617 	ldw	r2,24(r2)
   9c514:	18800615 	stw	r2,24(r3)
   9c518:	008002b4 	movhi	r2,10
   9c51c:	1090fe04 	addi	r2,r2,17400
   9c520:	10c00017 	ldw	r3,0(r2)
   9c524:	e0bffc17 	ldw	r2,-16(fp)
   9c528:	10c00515 	stw	r3,20(r2)
   9c52c:	00c002b4 	movhi	r3,10
   9c530:	18d0fe04 	addi	r3,r3,17400
   9c534:	e0bffc17 	ldw	r2,-16(fp)
   9c538:	18800015 	stw	r2,0(r3)
   9c53c:	e0fffc17 	ldw	r3,-16(fp)
   9c540:	00800fc4 	movi	r2,63
   9c544:	18801305 	stb	r2,76(r3)
   9c548:	e0bffc17 	ldw	r2,-16(fp)
   9c54c:	10001345 	stb	zero,77(r2)
   9c550:	e0bffb17 	ldw	r2,-20(fp)
   9c554:	e0bff515 	stw	r2,-44(fp)
   9c558:	e0bff517 	ldw	r2,-44(fp)
   9c55c:	1001703a 	wrctl	status,r2
   9c560:	008002b4 	movhi	r2,10
   9c564:	1090f744 	addi	r2,r2,17373
   9c568:	10800003 	ldbu	r2,0(r2)
   9c56c:	10803fcc 	andi	r2,r2,255
   9c570:	10800058 	cmpnei	r2,r2,1
   9c574:	1000011e 	bne	r2,zero,9c57c <OSTaskDel+0x3f0>
   9c578:	0094f580 	call	94f58 <OS_Sched>
   9c57c:	e03fff15 	stw	zero,-4(fp)
   9c580:	e0bfff17 	ldw	r2,-4(fp)
   9c584:	e037883a 	mov	sp,fp
   9c588:	dfc00117 	ldw	ra,4(sp)
   9c58c:	df000017 	ldw	fp,0(sp)
   9c590:	dec00204 	addi	sp,sp,8
   9c594:	f800283a 	ret

0009c598 <OSTaskDelReq>:
   9c598:	defff404 	addi	sp,sp,-48
   9c59c:	df000b15 	stw	fp,44(sp)
   9c5a0:	df000b04 	addi	fp,sp,44
   9c5a4:	e13ffe05 	stb	r4,-8(fp)
   9c5a8:	e03ffb15 	stw	zero,-20(fp)
   9c5ac:	e0bffe03 	ldbu	r2,-8(fp)
   9c5b0:	10800518 	cmpnei	r2,r2,20
   9c5b4:	1000031e 	bne	r2,zero,9c5c4 <OSTaskDelReq+0x2c>
   9c5b8:	00800f84 	movi	r2,62
   9c5bc:	e0bfff15 	stw	r2,-4(fp)
   9c5c0:	00004c06 	br	9c6f4 <OSTaskDelReq+0x15c>
   9c5c4:	e0bffe03 	ldbu	r2,-8(fp)
   9c5c8:	10800530 	cmpltui	r2,r2,20
   9c5cc:	1000061e 	bne	r2,zero,9c5e8 <OSTaskDelReq+0x50>
   9c5d0:	e0bffe03 	ldbu	r2,-8(fp)
   9c5d4:	10803fe0 	cmpeqi	r2,r2,255
   9c5d8:	1000031e 	bne	r2,zero,9c5e8 <OSTaskDelReq+0x50>
   9c5dc:	00800a84 	movi	r2,42
   9c5e0:	e0bfff15 	stw	r2,-4(fp)
   9c5e4:	00004306 	br	9c6f4 <OSTaskDelReq+0x15c>
   9c5e8:	e0bffe03 	ldbu	r2,-8(fp)
   9c5ec:	10803fd8 	cmpnei	r2,r2,255
   9c5f0:	1000141e 	bne	r2,zero,9c644 <OSTaskDelReq+0xac>
   9c5f4:	0005303a 	rdctl	r2,status
   9c5f8:	e0bffa15 	stw	r2,-24(fp)
   9c5fc:	e0fffa17 	ldw	r3,-24(fp)
   9c600:	00bfff84 	movi	r2,-2
   9c604:	1884703a 	and	r2,r3,r2
   9c608:	1001703a 	wrctl	status,r2
   9c60c:	e0bffa17 	ldw	r2,-24(fp)
   9c610:	e0bffb15 	stw	r2,-20(fp)
   9c614:	008002b4 	movhi	r2,10
   9c618:	10910604 	addi	r2,r2,17432
   9c61c:	10800017 	ldw	r2,0(r2)
   9c620:	10800dc3 	ldbu	r2,55(r2)
   9c624:	e0bffd05 	stb	r2,-12(fp)
   9c628:	e0bffb17 	ldw	r2,-20(fp)
   9c62c:	e0bff915 	stw	r2,-28(fp)
   9c630:	e0bff917 	ldw	r2,-28(fp)
   9c634:	1001703a 	wrctl	status,r2
   9c638:	e0bffd03 	ldbu	r2,-12(fp)
   9c63c:	e0bfff15 	stw	r2,-4(fp)
   9c640:	00002c06 	br	9c6f4 <OSTaskDelReq+0x15c>
   9c644:	0005303a 	rdctl	r2,status
   9c648:	e0bff815 	stw	r2,-32(fp)
   9c64c:	e0fff817 	ldw	r3,-32(fp)
   9c650:	00bfff84 	movi	r2,-2
   9c654:	1884703a 	and	r2,r3,r2
   9c658:	1001703a 	wrctl	status,r2
   9c65c:	e0bff817 	ldw	r2,-32(fp)
   9c660:	e0bffb15 	stw	r2,-20(fp)
   9c664:	e0bffe03 	ldbu	r2,-8(fp)
   9c668:	00c002f4 	movhi	r3,11
   9c66c:	18ddd004 	addi	r3,r3,30528
   9c670:	1085883a 	add	r2,r2,r2
   9c674:	1085883a 	add	r2,r2,r2
   9c678:	10c5883a 	add	r2,r2,r3
   9c67c:	10800017 	ldw	r2,0(r2)
   9c680:	e0bffc15 	stw	r2,-16(fp)
   9c684:	e0bffc17 	ldw	r2,-16(fp)
   9c688:	1004c03a 	cmpne	r2,r2,zero
   9c68c:	1000071e 	bne	r2,zero,9c6ac <OSTaskDelReq+0x114>
   9c690:	e0bffb17 	ldw	r2,-20(fp)
   9c694:	e0bff715 	stw	r2,-36(fp)
   9c698:	e0bff717 	ldw	r2,-36(fp)
   9c69c:	1001703a 	wrctl	status,r2
   9c6a0:	008010c4 	movi	r2,67
   9c6a4:	e0bfff15 	stw	r2,-4(fp)
   9c6a8:	00001206 	br	9c6f4 <OSTaskDelReq+0x15c>
   9c6ac:	e0bffc17 	ldw	r2,-16(fp)
   9c6b0:	10800058 	cmpnei	r2,r2,1
   9c6b4:	1000071e 	bne	r2,zero,9c6d4 <OSTaskDelReq+0x13c>
   9c6b8:	e0bffb17 	ldw	r2,-20(fp)
   9c6bc:	e0bff615 	stw	r2,-40(fp)
   9c6c0:	e0bff617 	ldw	r2,-40(fp)
   9c6c4:	1001703a 	wrctl	status,r2
   9c6c8:	00800f44 	movi	r2,61
   9c6cc:	e0bfff15 	stw	r2,-4(fp)
   9c6d0:	00000806 	br	9c6f4 <OSTaskDelReq+0x15c>
   9c6d4:	e0fffc17 	ldw	r3,-16(fp)
   9c6d8:	00800fc4 	movi	r2,63
   9c6dc:	18800dc5 	stb	r2,55(r3)
   9c6e0:	e0bffb17 	ldw	r2,-20(fp)
   9c6e4:	e0bff515 	stw	r2,-44(fp)
   9c6e8:	e0bff517 	ldw	r2,-44(fp)
   9c6ec:	1001703a 	wrctl	status,r2
   9c6f0:	e03fff15 	stw	zero,-4(fp)
   9c6f4:	e0bfff17 	ldw	r2,-4(fp)
   9c6f8:	e037883a 	mov	sp,fp
   9c6fc:	df000017 	ldw	fp,0(sp)
   9c700:	dec00104 	addi	sp,sp,4
   9c704:	f800283a 	ret

0009c708 <OSTaskNameGet>:
   9c708:	defff304 	addi	sp,sp,-52
   9c70c:	dfc00c15 	stw	ra,48(sp)
   9c710:	df000b15 	stw	fp,44(sp)
   9c714:	df000b04 	addi	fp,sp,44
   9c718:	e17ffd15 	stw	r5,-12(fp)
   9c71c:	e1bffe15 	stw	r6,-8(fp)
   9c720:	e13ffc05 	stb	r4,-16(fp)
   9c724:	e03ff915 	stw	zero,-28(fp)
   9c728:	e0bffe17 	ldw	r2,-8(fp)
   9c72c:	1004c03a 	cmpne	r2,r2,zero
   9c730:	1000021e 	bne	r2,zero,9c73c <OSTaskNameGet+0x34>
   9c734:	e03fff15 	stw	zero,-4(fp)
   9c738:	00005b06 	br	9c8a8 <OSTaskNameGet+0x1a0>
   9c73c:	e0bffc03 	ldbu	r2,-16(fp)
   9c740:	10800570 	cmpltui	r2,r2,21
   9c744:	1000081e 	bne	r2,zero,9c768 <OSTaskNameGet+0x60>
   9c748:	e0bffc03 	ldbu	r2,-16(fp)
   9c74c:	10803fe0 	cmpeqi	r2,r2,255
   9c750:	1000051e 	bne	r2,zero,9c768 <OSTaskNameGet+0x60>
   9c754:	e0fffe17 	ldw	r3,-8(fp)
   9c758:	00800a84 	movi	r2,42
   9c75c:	18800005 	stb	r2,0(r3)
   9c760:	e03fff15 	stw	zero,-4(fp)
   9c764:	00005006 	br	9c8a8 <OSTaskNameGet+0x1a0>
   9c768:	e0bffd17 	ldw	r2,-12(fp)
   9c76c:	1004c03a 	cmpne	r2,r2,zero
   9c770:	1000051e 	bne	r2,zero,9c788 <OSTaskNameGet+0x80>
   9c774:	e0fffe17 	ldw	r3,-8(fp)
   9c778:	00800304 	movi	r2,12
   9c77c:	18800005 	stb	r2,0(r3)
   9c780:	e03fff15 	stw	zero,-4(fp)
   9c784:	00004806 	br	9c8a8 <OSTaskNameGet+0x1a0>
   9c788:	008002b4 	movhi	r2,10
   9c78c:	10910504 	addi	r2,r2,17428
   9c790:	10800003 	ldbu	r2,0(r2)
   9c794:	10803fcc 	andi	r2,r2,255
   9c798:	1005003a 	cmpeq	r2,r2,zero
   9c79c:	1000051e 	bne	r2,zero,9c7b4 <OSTaskNameGet+0xac>
   9c7a0:	e0fffe17 	ldw	r3,-8(fp)
   9c7a4:	00800444 	movi	r2,17
   9c7a8:	18800005 	stb	r2,0(r3)
   9c7ac:	e03fff15 	stw	zero,-4(fp)
   9c7b0:	00003d06 	br	9c8a8 <OSTaskNameGet+0x1a0>
   9c7b4:	0005303a 	rdctl	r2,status
   9c7b8:	e0bff815 	stw	r2,-32(fp)
   9c7bc:	e0fff817 	ldw	r3,-32(fp)
   9c7c0:	00bfff84 	movi	r2,-2
   9c7c4:	1884703a 	and	r2,r3,r2
   9c7c8:	1001703a 	wrctl	status,r2
   9c7cc:	e0bff817 	ldw	r2,-32(fp)
   9c7d0:	e0bff915 	stw	r2,-28(fp)
   9c7d4:	e0bffc03 	ldbu	r2,-16(fp)
   9c7d8:	10803fd8 	cmpnei	r2,r2,255
   9c7dc:	1000051e 	bne	r2,zero,9c7f4 <OSTaskNameGet+0xec>
   9c7e0:	008002b4 	movhi	r2,10
   9c7e4:	10910604 	addi	r2,r2,17432
   9c7e8:	10800017 	ldw	r2,0(r2)
   9c7ec:	10800c83 	ldbu	r2,50(r2)
   9c7f0:	e0bffc05 	stb	r2,-16(fp)
   9c7f4:	e0bffc03 	ldbu	r2,-16(fp)
   9c7f8:	00c002f4 	movhi	r3,11
   9c7fc:	18ddd004 	addi	r3,r3,30528
   9c800:	1085883a 	add	r2,r2,r2
   9c804:	1085883a 	add	r2,r2,r2
   9c808:	10c5883a 	add	r2,r2,r3
   9c80c:	10800017 	ldw	r2,0(r2)
   9c810:	e0bffb15 	stw	r2,-20(fp)
   9c814:	e0bffb17 	ldw	r2,-20(fp)
   9c818:	1004c03a 	cmpne	r2,r2,zero
   9c81c:	1000091e 	bne	r2,zero,9c844 <OSTaskNameGet+0x13c>
   9c820:	e0bff917 	ldw	r2,-28(fp)
   9c824:	e0bff715 	stw	r2,-36(fp)
   9c828:	e0bff717 	ldw	r2,-36(fp)
   9c82c:	1001703a 	wrctl	status,r2
   9c830:	e0fffe17 	ldw	r3,-8(fp)
   9c834:	008010c4 	movi	r2,67
   9c838:	18800005 	stb	r2,0(r3)
   9c83c:	e03fff15 	stw	zero,-4(fp)
   9c840:	00001906 	br	9c8a8 <OSTaskNameGet+0x1a0>
   9c844:	e0bffb17 	ldw	r2,-20(fp)
   9c848:	10800058 	cmpnei	r2,r2,1
   9c84c:	1000091e 	bne	r2,zero,9c874 <OSTaskNameGet+0x16c>
   9c850:	e0bff917 	ldw	r2,-28(fp)
   9c854:	e0bff615 	stw	r2,-40(fp)
   9c858:	e0bff617 	ldw	r2,-40(fp)
   9c85c:	1001703a 	wrctl	status,r2
   9c860:	e0fffe17 	ldw	r3,-8(fp)
   9c864:	008010c4 	movi	r2,67
   9c868:	18800005 	stb	r2,0(r3)
   9c86c:	e03fff15 	stw	zero,-4(fp)
   9c870:	00000d06 	br	9c8a8 <OSTaskNameGet+0x1a0>
   9c874:	e0bffb17 	ldw	r2,-20(fp)
   9c878:	11401304 	addi	r5,r2,76
   9c87c:	e13ffd17 	ldw	r4,-12(fp)
   9c880:	009509c0 	call	9509c <OS_StrCopy>
   9c884:	e0bffa05 	stb	r2,-24(fp)
   9c888:	e0bff917 	ldw	r2,-28(fp)
   9c88c:	e0bff515 	stw	r2,-44(fp)
   9c890:	e0bff517 	ldw	r2,-44(fp)
   9c894:	1001703a 	wrctl	status,r2
   9c898:	e0bffe17 	ldw	r2,-8(fp)
   9c89c:	10000005 	stb	zero,0(r2)
   9c8a0:	e0bffa03 	ldbu	r2,-24(fp)
   9c8a4:	e0bfff15 	stw	r2,-4(fp)
   9c8a8:	e0bfff17 	ldw	r2,-4(fp)
   9c8ac:	e037883a 	mov	sp,fp
   9c8b0:	dfc00117 	ldw	ra,4(sp)
   9c8b4:	df000017 	ldw	fp,0(sp)
   9c8b8:	dec00204 	addi	sp,sp,8
   9c8bc:	f800283a 	ret

0009c8c0 <OSTaskNameSet>:
   9c8c0:	defff304 	addi	sp,sp,-52
   9c8c4:	dfc00c15 	stw	ra,48(sp)
   9c8c8:	df000b15 	stw	fp,44(sp)
   9c8cc:	df000b04 	addi	fp,sp,44
   9c8d0:	e17ffe15 	stw	r5,-8(fp)
   9c8d4:	e1bfff15 	stw	r6,-4(fp)
   9c8d8:	e13ffd05 	stb	r4,-12(fp)
   9c8dc:	e03ffa15 	stw	zero,-24(fp)
   9c8e0:	e0bfff17 	ldw	r2,-4(fp)
   9c8e4:	1005003a 	cmpeq	r2,r2,zero
   9c8e8:	1000611e 	bne	r2,zero,9ca70 <OSTaskNameSet+0x1b0>
   9c8ec:	e0bffd03 	ldbu	r2,-12(fp)
   9c8f0:	10800570 	cmpltui	r2,r2,21
   9c8f4:	1000071e 	bne	r2,zero,9c914 <OSTaskNameSet+0x54>
   9c8f8:	e0bffd03 	ldbu	r2,-12(fp)
   9c8fc:	10803fe0 	cmpeqi	r2,r2,255
   9c900:	1000041e 	bne	r2,zero,9c914 <OSTaskNameSet+0x54>
   9c904:	e0ffff17 	ldw	r3,-4(fp)
   9c908:	00800a84 	movi	r2,42
   9c90c:	18800005 	stb	r2,0(r3)
   9c910:	00005706 	br	9ca70 <OSTaskNameSet+0x1b0>
   9c914:	e0bffe17 	ldw	r2,-8(fp)
   9c918:	1004c03a 	cmpne	r2,r2,zero
   9c91c:	1000041e 	bne	r2,zero,9c930 <OSTaskNameSet+0x70>
   9c920:	e0ffff17 	ldw	r3,-4(fp)
   9c924:	00800304 	movi	r2,12
   9c928:	18800005 	stb	r2,0(r3)
   9c92c:	00005006 	br	9ca70 <OSTaskNameSet+0x1b0>
   9c930:	008002b4 	movhi	r2,10
   9c934:	10910504 	addi	r2,r2,17428
   9c938:	10800003 	ldbu	r2,0(r2)
   9c93c:	10803fcc 	andi	r2,r2,255
   9c940:	1005003a 	cmpeq	r2,r2,zero
   9c944:	1000041e 	bne	r2,zero,9c958 <OSTaskNameSet+0x98>
   9c948:	e0ffff17 	ldw	r3,-4(fp)
   9c94c:	00800484 	movi	r2,18
   9c950:	18800005 	stb	r2,0(r3)
   9c954:	00004606 	br	9ca70 <OSTaskNameSet+0x1b0>
   9c958:	0005303a 	rdctl	r2,status
   9c95c:	e0bff915 	stw	r2,-28(fp)
   9c960:	e0fff917 	ldw	r3,-28(fp)
   9c964:	00bfff84 	movi	r2,-2
   9c968:	1884703a 	and	r2,r3,r2
   9c96c:	1001703a 	wrctl	status,r2
   9c970:	e0bff917 	ldw	r2,-28(fp)
   9c974:	e0bffa15 	stw	r2,-24(fp)
   9c978:	e0bffd03 	ldbu	r2,-12(fp)
   9c97c:	10803fd8 	cmpnei	r2,r2,255
   9c980:	1000051e 	bne	r2,zero,9c998 <OSTaskNameSet+0xd8>
   9c984:	008002b4 	movhi	r2,10
   9c988:	10910604 	addi	r2,r2,17432
   9c98c:	10800017 	ldw	r2,0(r2)
   9c990:	10800c83 	ldbu	r2,50(r2)
   9c994:	e0bffd05 	stb	r2,-12(fp)
   9c998:	e0bffd03 	ldbu	r2,-12(fp)
   9c99c:	00c002f4 	movhi	r3,11
   9c9a0:	18ddd004 	addi	r3,r3,30528
   9c9a4:	1085883a 	add	r2,r2,r2
   9c9a8:	1085883a 	add	r2,r2,r2
   9c9ac:	10c5883a 	add	r2,r2,r3
   9c9b0:	10800017 	ldw	r2,0(r2)
   9c9b4:	e0bffb15 	stw	r2,-20(fp)
   9c9b8:	e0bffb17 	ldw	r2,-20(fp)
   9c9bc:	1004c03a 	cmpne	r2,r2,zero
   9c9c0:	1000081e 	bne	r2,zero,9c9e4 <OSTaskNameSet+0x124>
   9c9c4:	e0bffa17 	ldw	r2,-24(fp)
   9c9c8:	e0bff815 	stw	r2,-32(fp)
   9c9cc:	e0bff817 	ldw	r2,-32(fp)
   9c9d0:	1001703a 	wrctl	status,r2
   9c9d4:	e0ffff17 	ldw	r3,-4(fp)
   9c9d8:	008010c4 	movi	r2,67
   9c9dc:	18800005 	stb	r2,0(r3)
   9c9e0:	00002306 	br	9ca70 <OSTaskNameSet+0x1b0>
   9c9e4:	e0bffb17 	ldw	r2,-20(fp)
   9c9e8:	10800058 	cmpnei	r2,r2,1
   9c9ec:	1000081e 	bne	r2,zero,9ca10 <OSTaskNameSet+0x150>
   9c9f0:	e0bffa17 	ldw	r2,-24(fp)
   9c9f4:	e0bff715 	stw	r2,-36(fp)
   9c9f8:	e0bff717 	ldw	r2,-36(fp)
   9c9fc:	1001703a 	wrctl	status,r2
   9ca00:	e0ffff17 	ldw	r3,-4(fp)
   9ca04:	008010c4 	movi	r2,67
   9ca08:	18800005 	stb	r2,0(r3)
   9ca0c:	00001806 	br	9ca70 <OSTaskNameSet+0x1b0>
   9ca10:	e13ffe17 	ldw	r4,-8(fp)
   9ca14:	009511c0 	call	9511c <OS_StrLen>
   9ca18:	e0bffc05 	stb	r2,-16(fp)
   9ca1c:	e0bffc03 	ldbu	r2,-16(fp)
   9ca20:	10800830 	cmpltui	r2,r2,32
   9ca24:	1000081e 	bne	r2,zero,9ca48 <OSTaskNameSet+0x188>
   9ca28:	e0bffa17 	ldw	r2,-24(fp)
   9ca2c:	e0bff615 	stw	r2,-40(fp)
   9ca30:	e0bff617 	ldw	r2,-40(fp)
   9ca34:	1001703a 	wrctl	status,r2
   9ca38:	e0ffff17 	ldw	r3,-4(fp)
   9ca3c:	00801044 	movi	r2,65
   9ca40:	18800005 	stb	r2,0(r3)
   9ca44:	00000a06 	br	9ca70 <OSTaskNameSet+0x1b0>
   9ca48:	e0bffb17 	ldw	r2,-20(fp)
   9ca4c:	11001304 	addi	r4,r2,76
   9ca50:	e17ffe17 	ldw	r5,-8(fp)
   9ca54:	009509c0 	call	9509c <OS_StrCopy>
   9ca58:	e0bffa17 	ldw	r2,-24(fp)
   9ca5c:	e0bff515 	stw	r2,-44(fp)
   9ca60:	e0bff517 	ldw	r2,-44(fp)
   9ca64:	1001703a 	wrctl	status,r2
   9ca68:	e0bfff17 	ldw	r2,-4(fp)
   9ca6c:	10000005 	stb	zero,0(r2)
   9ca70:	e037883a 	mov	sp,fp
   9ca74:	dfc00117 	ldw	ra,4(sp)
   9ca78:	df000017 	ldw	fp,0(sp)
   9ca7c:	dec00204 	addi	sp,sp,8
   9ca80:	f800283a 	ret

0009ca84 <OSTaskResume>:
   9ca84:	defff304 	addi	sp,sp,-52
   9ca88:	dfc00c15 	stw	ra,48(sp)
   9ca8c:	df000b15 	stw	fp,44(sp)
   9ca90:	df000b04 	addi	fp,sp,44
   9ca94:	e13ffe05 	stb	r4,-8(fp)
   9ca98:	e03ffc15 	stw	zero,-16(fp)
   9ca9c:	e0bffe03 	ldbu	r2,-8(fp)
   9caa0:	10800530 	cmpltui	r2,r2,20
   9caa4:	1000031e 	bne	r2,zero,9cab4 <OSTaskResume+0x30>
   9caa8:	00800a84 	movi	r2,42
   9caac:	e0bfff15 	stw	r2,-4(fp)
   9cab0:	00007406 	br	9cc84 <OSTaskResume+0x200>
   9cab4:	0005303a 	rdctl	r2,status
   9cab8:	e0bffb15 	stw	r2,-20(fp)
   9cabc:	e0fffb17 	ldw	r3,-20(fp)
   9cac0:	00bfff84 	movi	r2,-2
   9cac4:	1884703a 	and	r2,r3,r2
   9cac8:	1001703a 	wrctl	status,r2
   9cacc:	e0bffb17 	ldw	r2,-20(fp)
   9cad0:	e0bffc15 	stw	r2,-16(fp)
   9cad4:	e0bffe03 	ldbu	r2,-8(fp)
   9cad8:	00c002f4 	movhi	r3,11
   9cadc:	18ddd004 	addi	r3,r3,30528
   9cae0:	1085883a 	add	r2,r2,r2
   9cae4:	1085883a 	add	r2,r2,r2
   9cae8:	10c5883a 	add	r2,r2,r3
   9caec:	10800017 	ldw	r2,0(r2)
   9caf0:	e0bffd15 	stw	r2,-12(fp)
   9caf4:	e0bffd17 	ldw	r2,-12(fp)
   9caf8:	1004c03a 	cmpne	r2,r2,zero
   9cafc:	1000071e 	bne	r2,zero,9cb1c <OSTaskResume+0x98>
   9cb00:	e0bffc17 	ldw	r2,-16(fp)
   9cb04:	e0bffa15 	stw	r2,-24(fp)
   9cb08:	e0bffa17 	ldw	r2,-24(fp)
   9cb0c:	1001703a 	wrctl	status,r2
   9cb10:	00801184 	movi	r2,70
   9cb14:	e0bfff15 	stw	r2,-4(fp)
   9cb18:	00005a06 	br	9cc84 <OSTaskResume+0x200>
   9cb1c:	e0bffd17 	ldw	r2,-12(fp)
   9cb20:	10800058 	cmpnei	r2,r2,1
   9cb24:	1000071e 	bne	r2,zero,9cb44 <OSTaskResume+0xc0>
   9cb28:	e0bffc17 	ldw	r2,-16(fp)
   9cb2c:	e0bff915 	stw	r2,-28(fp)
   9cb30:	e0bff917 	ldw	r2,-28(fp)
   9cb34:	1001703a 	wrctl	status,r2
   9cb38:	008010c4 	movi	r2,67
   9cb3c:	e0bfff15 	stw	r2,-4(fp)
   9cb40:	00005006 	br	9cc84 <OSTaskResume+0x200>
   9cb44:	e0bffd17 	ldw	r2,-12(fp)
   9cb48:	10800c03 	ldbu	r2,48(r2)
   9cb4c:	10803fcc 	andi	r2,r2,255
   9cb50:	1080020c 	andi	r2,r2,8
   9cb54:	1005003a 	cmpeq	r2,r2,zero
   9cb58:	1000441e 	bne	r2,zero,9cc6c <OSTaskResume+0x1e8>
   9cb5c:	e0bffd17 	ldw	r2,-12(fp)
   9cb60:	10c00c03 	ldbu	r3,48(r2)
   9cb64:	00bffdc4 	movi	r2,-9
   9cb68:	1884703a 	and	r2,r3,r2
   9cb6c:	1007883a 	mov	r3,r2
   9cb70:	e0bffd17 	ldw	r2,-12(fp)
   9cb74:	10c00c05 	stb	r3,48(r2)
   9cb78:	e0bffd17 	ldw	r2,-12(fp)
   9cb7c:	10800c03 	ldbu	r2,48(r2)
   9cb80:	10803fcc 	andi	r2,r2,255
   9cb84:	1004c03a 	cmpne	r2,r2,zero
   9cb88:	1000321e 	bne	r2,zero,9cc54 <OSTaskResume+0x1d0>
   9cb8c:	e0bffd17 	ldw	r2,-12(fp)
   9cb90:	10800b8b 	ldhu	r2,46(r2)
   9cb94:	10bfffcc 	andi	r2,r2,65535
   9cb98:	1004c03a 	cmpne	r2,r2,zero
   9cb9c:	1000281e 	bne	r2,zero,9cc40 <OSTaskResume+0x1bc>
   9cba0:	e0bffd17 	ldw	r2,-12(fp)
   9cba4:	10c00d83 	ldbu	r3,54(r2)
   9cba8:	008002b4 	movhi	r2,10
   9cbac:	10910304 	addi	r2,r2,17420
   9cbb0:	10800003 	ldbu	r2,0(r2)
   9cbb4:	1884b03a 	or	r2,r3,r2
   9cbb8:	1007883a 	mov	r3,r2
   9cbbc:	008002b4 	movhi	r2,10
   9cbc0:	10910304 	addi	r2,r2,17420
   9cbc4:	10c00005 	stb	r3,0(r2)
   9cbc8:	e0bffd17 	ldw	r2,-12(fp)
   9cbcc:	10800d03 	ldbu	r2,52(r2)
   9cbd0:	11003fcc 	andi	r4,r2,255
   9cbd4:	e0bffd17 	ldw	r2,-12(fp)
   9cbd8:	10800d03 	ldbu	r2,52(r2)
   9cbdc:	10c03fcc 	andi	r3,r2,255
   9cbe0:	008002b4 	movhi	r2,10
   9cbe4:	10910344 	addi	r2,r2,17421
   9cbe8:	10c5883a 	add	r2,r2,r3
   9cbec:	10c00003 	ldbu	r3,0(r2)
   9cbf0:	e0bffd17 	ldw	r2,-12(fp)
   9cbf4:	10800d43 	ldbu	r2,53(r2)
   9cbf8:	1884b03a 	or	r2,r3,r2
   9cbfc:	1007883a 	mov	r3,r2
   9cc00:	008002b4 	movhi	r2,10
   9cc04:	10910344 	addi	r2,r2,17421
   9cc08:	1105883a 	add	r2,r2,r4
   9cc0c:	10c00005 	stb	r3,0(r2)
   9cc10:	e0bffc17 	ldw	r2,-16(fp)
   9cc14:	e0bff815 	stw	r2,-32(fp)
   9cc18:	e0bff817 	ldw	r2,-32(fp)
   9cc1c:	1001703a 	wrctl	status,r2
   9cc20:	008002b4 	movhi	r2,10
   9cc24:	1090f744 	addi	r2,r2,17373
   9cc28:	10800003 	ldbu	r2,0(r2)
   9cc2c:	10803fcc 	andi	r2,r2,255
   9cc30:	10800058 	cmpnei	r2,r2,1
   9cc34:	10000b1e 	bne	r2,zero,9cc64 <OSTaskResume+0x1e0>
   9cc38:	0094f580 	call	94f58 <OS_Sched>
   9cc3c:	00000906 	br	9cc64 <OSTaskResume+0x1e0>
   9cc40:	e0bffc17 	ldw	r2,-16(fp)
   9cc44:	e0bff715 	stw	r2,-36(fp)
   9cc48:	e0bff717 	ldw	r2,-36(fp)
   9cc4c:	1001703a 	wrctl	status,r2
   9cc50:	00000406 	br	9cc64 <OSTaskResume+0x1e0>
   9cc54:	e0bffc17 	ldw	r2,-16(fp)
   9cc58:	e0bff615 	stw	r2,-40(fp)
   9cc5c:	e0bff617 	ldw	r2,-40(fp)
   9cc60:	1001703a 	wrctl	status,r2
   9cc64:	e03fff15 	stw	zero,-4(fp)
   9cc68:	00000606 	br	9cc84 <OSTaskResume+0x200>
   9cc6c:	e0bffc17 	ldw	r2,-16(fp)
   9cc70:	e0bff515 	stw	r2,-44(fp)
   9cc74:	e0bff517 	ldw	r2,-44(fp)
   9cc78:	1001703a 	wrctl	status,r2
   9cc7c:	00801104 	movi	r2,68
   9cc80:	e0bfff15 	stw	r2,-4(fp)
   9cc84:	e0bfff17 	ldw	r2,-4(fp)
   9cc88:	e037883a 	mov	sp,fp
   9cc8c:	dfc00117 	ldw	ra,4(sp)
   9cc90:	df000017 	ldw	fp,0(sp)
   9cc94:	dec00204 	addi	sp,sp,8
   9cc98:	f800283a 	ret

0009cc9c <OSTaskStkChk>:
   9cc9c:	defff204 	addi	sp,sp,-56
   9cca0:	df000d15 	stw	fp,52(sp)
   9cca4:	df000d04 	addi	fp,sp,52
   9cca8:	e17ffe15 	stw	r5,-8(fp)
   9ccac:	e13ffd05 	stb	r4,-12(fp)
   9ccb0:	e03ff815 	stw	zero,-32(fp)
   9ccb4:	e0bffd03 	ldbu	r2,-12(fp)
   9ccb8:	10800570 	cmpltui	r2,r2,21
   9ccbc:	1000061e 	bne	r2,zero,9ccd8 <OSTaskStkChk+0x3c>
   9ccc0:	e0bffd03 	ldbu	r2,-12(fp)
   9ccc4:	10803fe0 	cmpeqi	r2,r2,255
   9ccc8:	1000031e 	bne	r2,zero,9ccd8 <OSTaskStkChk+0x3c>
   9cccc:	00800a84 	movi	r2,42
   9ccd0:	e0bfff15 	stw	r2,-4(fp)
   9ccd4:	00006b06 	br	9ce84 <OSTaskStkChk+0x1e8>
   9ccd8:	e0bffe17 	ldw	r2,-8(fp)
   9ccdc:	1004c03a 	cmpne	r2,r2,zero
   9cce0:	1000031e 	bne	r2,zero,9ccf0 <OSTaskStkChk+0x54>
   9cce4:	00800244 	movi	r2,9
   9cce8:	e0bfff15 	stw	r2,-4(fp)
   9ccec:	00006506 	br	9ce84 <OSTaskStkChk+0x1e8>
   9ccf0:	e0bffe17 	ldw	r2,-8(fp)
   9ccf4:	10000015 	stw	zero,0(r2)
   9ccf8:	e0bffe17 	ldw	r2,-8(fp)
   9ccfc:	10000115 	stw	zero,4(r2)
   9cd00:	0005303a 	rdctl	r2,status
   9cd04:	e0bff715 	stw	r2,-36(fp)
   9cd08:	e0fff717 	ldw	r3,-36(fp)
   9cd0c:	00bfff84 	movi	r2,-2
   9cd10:	1884703a 	and	r2,r3,r2
   9cd14:	1001703a 	wrctl	status,r2
   9cd18:	e0bff717 	ldw	r2,-36(fp)
   9cd1c:	e0bff815 	stw	r2,-32(fp)
   9cd20:	e0bffd03 	ldbu	r2,-12(fp)
   9cd24:	10803fd8 	cmpnei	r2,r2,255
   9cd28:	1000051e 	bne	r2,zero,9cd40 <OSTaskStkChk+0xa4>
   9cd2c:	008002b4 	movhi	r2,10
   9cd30:	10910604 	addi	r2,r2,17432
   9cd34:	10800017 	ldw	r2,0(r2)
   9cd38:	10800c83 	ldbu	r2,50(r2)
   9cd3c:	e0bffd05 	stb	r2,-12(fp)
   9cd40:	e0bffd03 	ldbu	r2,-12(fp)
   9cd44:	00c002f4 	movhi	r3,11
   9cd48:	18ddd004 	addi	r3,r3,30528
   9cd4c:	1085883a 	add	r2,r2,r2
   9cd50:	1085883a 	add	r2,r2,r2
   9cd54:	10c5883a 	add	r2,r2,r3
   9cd58:	10800017 	ldw	r2,0(r2)
   9cd5c:	e0bffc15 	stw	r2,-16(fp)
   9cd60:	e0bffc17 	ldw	r2,-16(fp)
   9cd64:	1004c03a 	cmpne	r2,r2,zero
   9cd68:	1000071e 	bne	r2,zero,9cd88 <OSTaskStkChk+0xec>
   9cd6c:	e0bff817 	ldw	r2,-32(fp)
   9cd70:	e0bff615 	stw	r2,-40(fp)
   9cd74:	e0bff617 	ldw	r2,-40(fp)
   9cd78:	1001703a 	wrctl	status,r2
   9cd7c:	008010c4 	movi	r2,67
   9cd80:	e0bfff15 	stw	r2,-4(fp)
   9cd84:	00003f06 	br	9ce84 <OSTaskStkChk+0x1e8>
   9cd88:	e0bffc17 	ldw	r2,-16(fp)
   9cd8c:	10800058 	cmpnei	r2,r2,1
   9cd90:	1000071e 	bne	r2,zero,9cdb0 <OSTaskStkChk+0x114>
   9cd94:	e0bff817 	ldw	r2,-32(fp)
   9cd98:	e0bff515 	stw	r2,-44(fp)
   9cd9c:	e0bff517 	ldw	r2,-44(fp)
   9cda0:	1001703a 	wrctl	status,r2
   9cda4:	008010c4 	movi	r2,67
   9cda8:	e0bfff15 	stw	r2,-4(fp)
   9cdac:	00003506 	br	9ce84 <OSTaskStkChk+0x1e8>
   9cdb0:	e0bffc17 	ldw	r2,-16(fp)
   9cdb4:	1080040b 	ldhu	r2,16(r2)
   9cdb8:	10bfffcc 	andi	r2,r2,65535
   9cdbc:	1080004c 	andi	r2,r2,1
   9cdc0:	1004c03a 	cmpne	r2,r2,zero
   9cdc4:	1000071e 	bne	r2,zero,9cde4 <OSTaskStkChk+0x148>
   9cdc8:	e0bff817 	ldw	r2,-32(fp)
   9cdcc:	e0bff415 	stw	r2,-48(fp)
   9cdd0:	e0bff417 	ldw	r2,-48(fp)
   9cdd4:	1001703a 	wrctl	status,r2
   9cdd8:	00801144 	movi	r2,69
   9cddc:	e0bfff15 	stw	r2,-4(fp)
   9cde0:	00002806 	br	9ce84 <OSTaskStkChk+0x1e8>
   9cde4:	e03ffa15 	stw	zero,-24(fp)
   9cde8:	e0bffc17 	ldw	r2,-16(fp)
   9cdec:	10800317 	ldw	r2,12(r2)
   9cdf0:	e0bff915 	stw	r2,-28(fp)
   9cdf4:	e0bffc17 	ldw	r2,-16(fp)
   9cdf8:	10800217 	ldw	r2,8(r2)
   9cdfc:	e0bffb15 	stw	r2,-20(fp)
   9ce00:	e0bff817 	ldw	r2,-32(fp)
   9ce04:	e0bff315 	stw	r2,-52(fp)
   9ce08:	e0bff317 	ldw	r2,-52(fp)
   9ce0c:	1001703a 	wrctl	status,r2
   9ce10:	00000306 	br	9ce20 <OSTaskStkChk+0x184>
   9ce14:	e0bffa17 	ldw	r2,-24(fp)
   9ce18:	10800044 	addi	r2,r2,1
   9ce1c:	e0bffa15 	stw	r2,-24(fp)
   9ce20:	e0bffb17 	ldw	r2,-20(fp)
   9ce24:	10800017 	ldw	r2,0(r2)
   9ce28:	1005003a 	cmpeq	r2,r2,zero
   9ce2c:	1007883a 	mov	r3,r2
   9ce30:	e0bffb17 	ldw	r2,-20(fp)
   9ce34:	10800104 	addi	r2,r2,4
   9ce38:	e0bffb15 	stw	r2,-20(fp)
   9ce3c:	18803fcc 	andi	r2,r3,255
   9ce40:	1004c03a 	cmpne	r2,r2,zero
   9ce44:	103ff31e 	bne	r2,zero,9ce14 <OSTaskStkChk+0x178>
   9ce48:	e0bffa17 	ldw	r2,-24(fp)
   9ce4c:	1085883a 	add	r2,r2,r2
   9ce50:	1085883a 	add	r2,r2,r2
   9ce54:	1007883a 	mov	r3,r2
   9ce58:	e0bffe17 	ldw	r2,-8(fp)
   9ce5c:	10c00015 	stw	r3,0(r2)
   9ce60:	e0fff917 	ldw	r3,-28(fp)
   9ce64:	e0bffa17 	ldw	r2,-24(fp)
   9ce68:	1885c83a 	sub	r2,r3,r2
   9ce6c:	1085883a 	add	r2,r2,r2
   9ce70:	1085883a 	add	r2,r2,r2
   9ce74:	1007883a 	mov	r3,r2
   9ce78:	e0bffe17 	ldw	r2,-8(fp)
   9ce7c:	10c00115 	stw	r3,4(r2)
   9ce80:	e03fff15 	stw	zero,-4(fp)
   9ce84:	e0bfff17 	ldw	r2,-4(fp)
   9ce88:	e037883a 	mov	sp,fp
   9ce8c:	df000017 	ldw	fp,0(sp)
   9ce90:	dec00104 	addi	sp,sp,4
   9ce94:	f800283a 	ret

0009ce98 <OSTaskSuspend>:
   9ce98:	defff404 	addi	sp,sp,-48
   9ce9c:	dfc00b15 	stw	ra,44(sp)
   9cea0:	df000a15 	stw	fp,40(sp)
   9cea4:	df000a04 	addi	fp,sp,40
   9cea8:	e13ffe05 	stb	r4,-8(fp)
   9ceac:	e03ffa15 	stw	zero,-24(fp)
   9ceb0:	e0bffe03 	ldbu	r2,-8(fp)
   9ceb4:	10800518 	cmpnei	r2,r2,20
   9ceb8:	1000031e 	bne	r2,zero,9cec8 <OSTaskSuspend+0x30>
   9cebc:	008011c4 	movi	r2,71
   9cec0:	e0bfff15 	stw	r2,-4(fp)
   9cec4:	00007906 	br	9d0ac <OSTaskSuspend+0x214>
   9cec8:	e0bffe03 	ldbu	r2,-8(fp)
   9cecc:	10800530 	cmpltui	r2,r2,20
   9ced0:	1000061e 	bne	r2,zero,9ceec <OSTaskSuspend+0x54>
   9ced4:	e0bffe03 	ldbu	r2,-8(fp)
   9ced8:	10803fe0 	cmpeqi	r2,r2,255
   9cedc:	1000031e 	bne	r2,zero,9ceec <OSTaskSuspend+0x54>
   9cee0:	00800a84 	movi	r2,42
   9cee4:	e0bfff15 	stw	r2,-4(fp)
   9cee8:	00007006 	br	9d0ac <OSTaskSuspend+0x214>
   9ceec:	0005303a 	rdctl	r2,status
   9cef0:	e0bff915 	stw	r2,-28(fp)
   9cef4:	e0fff917 	ldw	r3,-28(fp)
   9cef8:	00bfff84 	movi	r2,-2
   9cefc:	1884703a 	and	r2,r3,r2
   9cf00:	1001703a 	wrctl	status,r2
   9cf04:	e0bff917 	ldw	r2,-28(fp)
   9cf08:	e0bffa15 	stw	r2,-24(fp)
   9cf0c:	e0bffe03 	ldbu	r2,-8(fp)
   9cf10:	10803fd8 	cmpnei	r2,r2,255
   9cf14:	1000081e 	bne	r2,zero,9cf38 <OSTaskSuspend+0xa0>
   9cf18:	008002b4 	movhi	r2,10
   9cf1c:	10910604 	addi	r2,r2,17432
   9cf20:	10800017 	ldw	r2,0(r2)
   9cf24:	10800c83 	ldbu	r2,50(r2)
   9cf28:	e0bffe05 	stb	r2,-8(fp)
   9cf2c:	00800044 	movi	r2,1
   9cf30:	e0bffd05 	stb	r2,-12(fp)
   9cf34:	00000b06 	br	9cf64 <OSTaskSuspend+0xcc>
   9cf38:	008002b4 	movhi	r2,10
   9cf3c:	10910604 	addi	r2,r2,17432
   9cf40:	10800017 	ldw	r2,0(r2)
   9cf44:	10800c83 	ldbu	r2,50(r2)
   9cf48:	10c03fcc 	andi	r3,r2,255
   9cf4c:	e0bffe03 	ldbu	r2,-8(fp)
   9cf50:	1880031e 	bne	r3,r2,9cf60 <OSTaskSuspend+0xc8>
   9cf54:	00800044 	movi	r2,1
   9cf58:	e0bffd05 	stb	r2,-12(fp)
   9cf5c:	00000106 	br	9cf64 <OSTaskSuspend+0xcc>
   9cf60:	e03ffd05 	stb	zero,-12(fp)
   9cf64:	e0bffe03 	ldbu	r2,-8(fp)
   9cf68:	00c002f4 	movhi	r3,11
   9cf6c:	18ddd004 	addi	r3,r3,30528
   9cf70:	1085883a 	add	r2,r2,r2
   9cf74:	1085883a 	add	r2,r2,r2
   9cf78:	10c5883a 	add	r2,r2,r3
   9cf7c:	10800017 	ldw	r2,0(r2)
   9cf80:	e0bffc15 	stw	r2,-16(fp)
   9cf84:	e0bffc17 	ldw	r2,-16(fp)
   9cf88:	1004c03a 	cmpne	r2,r2,zero
   9cf8c:	1000071e 	bne	r2,zero,9cfac <OSTaskSuspend+0x114>
   9cf90:	e0bffa17 	ldw	r2,-24(fp)
   9cf94:	e0bff815 	stw	r2,-32(fp)
   9cf98:	e0bff817 	ldw	r2,-32(fp)
   9cf9c:	1001703a 	wrctl	status,r2
   9cfa0:	00801204 	movi	r2,72
   9cfa4:	e0bfff15 	stw	r2,-4(fp)
   9cfa8:	00004006 	br	9d0ac <OSTaskSuspend+0x214>
   9cfac:	e0bffc17 	ldw	r2,-16(fp)
   9cfb0:	10800058 	cmpnei	r2,r2,1
   9cfb4:	1000071e 	bne	r2,zero,9cfd4 <OSTaskSuspend+0x13c>
   9cfb8:	e0bffa17 	ldw	r2,-24(fp)
   9cfbc:	e0bff715 	stw	r2,-36(fp)
   9cfc0:	e0bff717 	ldw	r2,-36(fp)
   9cfc4:	1001703a 	wrctl	status,r2
   9cfc8:	008010c4 	movi	r2,67
   9cfcc:	e0bfff15 	stw	r2,-4(fp)
   9cfd0:	00003606 	br	9d0ac <OSTaskSuspend+0x214>
   9cfd4:	e0bffc17 	ldw	r2,-16(fp)
   9cfd8:	10800d03 	ldbu	r2,52(r2)
   9cfdc:	e0bffb05 	stb	r2,-20(fp)
   9cfe0:	e13ffb03 	ldbu	r4,-20(fp)
   9cfe4:	e0fffb03 	ldbu	r3,-20(fp)
   9cfe8:	008002b4 	movhi	r2,10
   9cfec:	10910344 	addi	r2,r2,17421
   9cff0:	10c5883a 	add	r2,r2,r3
   9cff4:	10800003 	ldbu	r2,0(r2)
   9cff8:	1007883a 	mov	r3,r2
   9cffc:	e0bffc17 	ldw	r2,-16(fp)
   9d000:	10800d43 	ldbu	r2,53(r2)
   9d004:	0084303a 	nor	r2,zero,r2
   9d008:	1884703a 	and	r2,r3,r2
   9d00c:	1007883a 	mov	r3,r2
   9d010:	008002b4 	movhi	r2,10
   9d014:	10910344 	addi	r2,r2,17421
   9d018:	1105883a 	add	r2,r2,r4
   9d01c:	10c00005 	stb	r3,0(r2)
   9d020:	e0fffb03 	ldbu	r3,-20(fp)
   9d024:	008002b4 	movhi	r2,10
   9d028:	10910344 	addi	r2,r2,17421
   9d02c:	10c5883a 	add	r2,r2,r3
   9d030:	10800003 	ldbu	r2,0(r2)
   9d034:	10803fcc 	andi	r2,r2,255
   9d038:	1004c03a 	cmpne	r2,r2,zero
   9d03c:	10000c1e 	bne	r2,zero,9d070 <OSTaskSuspend+0x1d8>
   9d040:	e0bffc17 	ldw	r2,-16(fp)
   9d044:	10800d83 	ldbu	r2,54(r2)
   9d048:	0084303a 	nor	r2,zero,r2
   9d04c:	1007883a 	mov	r3,r2
   9d050:	008002b4 	movhi	r2,10
   9d054:	10910304 	addi	r2,r2,17420
   9d058:	10800003 	ldbu	r2,0(r2)
   9d05c:	1884703a 	and	r2,r3,r2
   9d060:	1007883a 	mov	r3,r2
   9d064:	008002b4 	movhi	r2,10
   9d068:	10910304 	addi	r2,r2,17420
   9d06c:	10c00005 	stb	r3,0(r2)
   9d070:	e0bffc17 	ldw	r2,-16(fp)
   9d074:	10800c03 	ldbu	r2,48(r2)
   9d078:	10800214 	ori	r2,r2,8
   9d07c:	1007883a 	mov	r3,r2
   9d080:	e0bffc17 	ldw	r2,-16(fp)
   9d084:	10c00c05 	stb	r3,48(r2)
   9d088:	e0bffa17 	ldw	r2,-24(fp)
   9d08c:	e0bff615 	stw	r2,-40(fp)
   9d090:	e0bff617 	ldw	r2,-40(fp)
   9d094:	1001703a 	wrctl	status,r2
   9d098:	e0bffd03 	ldbu	r2,-12(fp)
   9d09c:	10800058 	cmpnei	r2,r2,1
   9d0a0:	1000011e 	bne	r2,zero,9d0a8 <OSTaskSuspend+0x210>
   9d0a4:	0094f580 	call	94f58 <OS_Sched>
   9d0a8:	e03fff15 	stw	zero,-4(fp)
   9d0ac:	e0bfff17 	ldw	r2,-4(fp)
   9d0b0:	e037883a 	mov	sp,fp
   9d0b4:	dfc00117 	ldw	ra,4(sp)
   9d0b8:	df000017 	ldw	fp,0(sp)
   9d0bc:	dec00204 	addi	sp,sp,8
   9d0c0:	f800283a 	ret

0009d0c4 <OSTaskQuery>:
   9d0c4:	defff504 	addi	sp,sp,-44
   9d0c8:	dfc00a15 	stw	ra,40(sp)
   9d0cc:	df000915 	stw	fp,36(sp)
   9d0d0:	df000904 	addi	fp,sp,36
   9d0d4:	e17ffe15 	stw	r5,-8(fp)
   9d0d8:	e13ffd05 	stb	r4,-12(fp)
   9d0dc:	e03ffb15 	stw	zero,-20(fp)
   9d0e0:	e0bffd03 	ldbu	r2,-12(fp)
   9d0e4:	10800570 	cmpltui	r2,r2,21
   9d0e8:	1000061e 	bne	r2,zero,9d104 <OSTaskQuery+0x40>
   9d0ec:	e0bffd03 	ldbu	r2,-12(fp)
   9d0f0:	10803fe0 	cmpeqi	r2,r2,255
   9d0f4:	1000031e 	bne	r2,zero,9d104 <OSTaskQuery+0x40>
   9d0f8:	00800a84 	movi	r2,42
   9d0fc:	e0bfff15 	stw	r2,-4(fp)
   9d100:	00003b06 	br	9d1f0 <OSTaskQuery+0x12c>
   9d104:	e0bffe17 	ldw	r2,-8(fp)
   9d108:	1004c03a 	cmpne	r2,r2,zero
   9d10c:	1000031e 	bne	r2,zero,9d11c <OSTaskQuery+0x58>
   9d110:	00800244 	movi	r2,9
   9d114:	e0bfff15 	stw	r2,-4(fp)
   9d118:	00003506 	br	9d1f0 <OSTaskQuery+0x12c>
   9d11c:	0005303a 	rdctl	r2,status
   9d120:	e0bffa15 	stw	r2,-24(fp)
   9d124:	e0fffa17 	ldw	r3,-24(fp)
   9d128:	00bfff84 	movi	r2,-2
   9d12c:	1884703a 	and	r2,r3,r2
   9d130:	1001703a 	wrctl	status,r2
   9d134:	e0bffa17 	ldw	r2,-24(fp)
   9d138:	e0bffb15 	stw	r2,-20(fp)
   9d13c:	e0bffd03 	ldbu	r2,-12(fp)
   9d140:	10803fd8 	cmpnei	r2,r2,255
   9d144:	1000051e 	bne	r2,zero,9d15c <OSTaskQuery+0x98>
   9d148:	008002b4 	movhi	r2,10
   9d14c:	10910604 	addi	r2,r2,17432
   9d150:	10800017 	ldw	r2,0(r2)
   9d154:	10800c83 	ldbu	r2,50(r2)
   9d158:	e0bffd05 	stb	r2,-12(fp)
   9d15c:	e0bffd03 	ldbu	r2,-12(fp)
   9d160:	00c002f4 	movhi	r3,11
   9d164:	18ddd004 	addi	r3,r3,30528
   9d168:	1085883a 	add	r2,r2,r2
   9d16c:	1085883a 	add	r2,r2,r2
   9d170:	10c5883a 	add	r2,r2,r3
   9d174:	10800017 	ldw	r2,0(r2)
   9d178:	e0bffc15 	stw	r2,-16(fp)
   9d17c:	e0bffc17 	ldw	r2,-16(fp)
   9d180:	1004c03a 	cmpne	r2,r2,zero
   9d184:	1000071e 	bne	r2,zero,9d1a4 <OSTaskQuery+0xe0>
   9d188:	e0bffb17 	ldw	r2,-20(fp)
   9d18c:	e0bff915 	stw	r2,-28(fp)
   9d190:	e0bff917 	ldw	r2,-28(fp)
   9d194:	1001703a 	wrctl	status,r2
   9d198:	00800a44 	movi	r2,41
   9d19c:	e0bfff15 	stw	r2,-4(fp)
   9d1a0:	00001306 	br	9d1f0 <OSTaskQuery+0x12c>
   9d1a4:	e0bffc17 	ldw	r2,-16(fp)
   9d1a8:	10800058 	cmpnei	r2,r2,1
   9d1ac:	1000071e 	bne	r2,zero,9d1cc <OSTaskQuery+0x108>
   9d1b0:	e0bffb17 	ldw	r2,-20(fp)
   9d1b4:	e0bff815 	stw	r2,-32(fp)
   9d1b8:	e0bff817 	ldw	r2,-32(fp)
   9d1bc:	1001703a 	wrctl	status,r2
   9d1c0:	008010c4 	movi	r2,67
   9d1c4:	e0bfff15 	stw	r2,-4(fp)
   9d1c8:	00000906 	br	9d1f0 <OSTaskQuery+0x12c>
   9d1cc:	e13ffe17 	ldw	r4,-8(fp)
   9d1d0:	e17ffc17 	ldw	r5,-16(fp)
   9d1d4:	01801b04 	movi	r6,108
   9d1d8:	0094eec0 	call	94eec <OS_MemCopy>
   9d1dc:	e0bffb17 	ldw	r2,-20(fp)
   9d1e0:	e0bff715 	stw	r2,-36(fp)
   9d1e4:	e0bff717 	ldw	r2,-36(fp)
   9d1e8:	1001703a 	wrctl	status,r2
   9d1ec:	e03fff15 	stw	zero,-4(fp)
   9d1f0:	e0bfff17 	ldw	r2,-4(fp)
   9d1f4:	e037883a 	mov	sp,fp
   9d1f8:	dfc00117 	ldw	ra,4(sp)
   9d1fc:	df000017 	ldw	fp,0(sp)
   9d200:	dec00204 	addi	sp,sp,8
   9d204:	f800283a 	ret

0009d208 <OS_TaskStkClr>:
   9d208:	defffc04 	addi	sp,sp,-16
   9d20c:	df000315 	stw	fp,12(sp)
   9d210:	df000304 	addi	fp,sp,12
   9d214:	e13ffd15 	stw	r4,-12(fp)
   9d218:	e17ffe15 	stw	r5,-8(fp)
   9d21c:	e1bfff0d 	sth	r6,-4(fp)
   9d220:	e0bfff0b 	ldhu	r2,-4(fp)
   9d224:	1080004c 	andi	r2,r2,1
   9d228:	10803fcc 	andi	r2,r2,255
   9d22c:	1005003a 	cmpeq	r2,r2,zero
   9d230:	1000101e 	bne	r2,zero,9d274 <OS_TaskStkClr+0x6c>
   9d234:	e0bfff0b 	ldhu	r2,-4(fp)
   9d238:	1080008c 	andi	r2,r2,2
   9d23c:	1005003a 	cmpeq	r2,r2,zero
   9d240:	10000c1e 	bne	r2,zero,9d274 <OS_TaskStkClr+0x6c>
   9d244:	00000806 	br	9d268 <OS_TaskStkClr+0x60>
   9d248:	e0bffe17 	ldw	r2,-8(fp)
   9d24c:	10bfffc4 	addi	r2,r2,-1
   9d250:	e0bffe15 	stw	r2,-8(fp)
   9d254:	e0bffd17 	ldw	r2,-12(fp)
   9d258:	10000015 	stw	zero,0(r2)
   9d25c:	e0bffd17 	ldw	r2,-12(fp)
   9d260:	10800104 	addi	r2,r2,4
   9d264:	e0bffd15 	stw	r2,-12(fp)
   9d268:	e0bffe17 	ldw	r2,-8(fp)
   9d26c:	1004c03a 	cmpne	r2,r2,zero
   9d270:	103ff51e 	bne	r2,zero,9d248 <OS_TaskStkClr+0x40>
   9d274:	e037883a 	mov	sp,fp
   9d278:	df000017 	ldw	fp,0(sp)
   9d27c:	dec00104 	addi	sp,sp,4
   9d280:	f800283a 	ret

0009d284 <OSTimeDly>:
   9d284:	defff904 	addi	sp,sp,-28
   9d288:	dfc00615 	stw	ra,24(sp)
   9d28c:	df000515 	stw	fp,20(sp)
   9d290:	df000504 	addi	fp,sp,20
   9d294:	e13fff0d 	sth	r4,-4(fp)
   9d298:	e03ffd15 	stw	zero,-12(fp)
   9d29c:	008002b4 	movhi	r2,10
   9d2a0:	10910504 	addi	r2,r2,17428
   9d2a4:	10800003 	ldbu	r2,0(r2)
   9d2a8:	10803fcc 	andi	r2,r2,255
   9d2ac:	1004c03a 	cmpne	r2,r2,zero
   9d2b0:	1000421e 	bne	r2,zero,9d3bc <OSTimeDly+0x138>
   9d2b4:	e0bfff0b 	ldhu	r2,-4(fp)
   9d2b8:	1005003a 	cmpeq	r2,r2,zero
   9d2bc:	10003f1e 	bne	r2,zero,9d3bc <OSTimeDly+0x138>
   9d2c0:	0005303a 	rdctl	r2,status
   9d2c4:	e0bffc15 	stw	r2,-16(fp)
   9d2c8:	e0fffc17 	ldw	r3,-16(fp)
   9d2cc:	00bfff84 	movi	r2,-2
   9d2d0:	1884703a 	and	r2,r3,r2
   9d2d4:	1001703a 	wrctl	status,r2
   9d2d8:	e0bffc17 	ldw	r2,-16(fp)
   9d2dc:	e0bffd15 	stw	r2,-12(fp)
   9d2e0:	008002b4 	movhi	r2,10
   9d2e4:	10910604 	addi	r2,r2,17432
   9d2e8:	10800017 	ldw	r2,0(r2)
   9d2ec:	10800d03 	ldbu	r2,52(r2)
   9d2f0:	e0bffe05 	stb	r2,-8(fp)
   9d2f4:	e13ffe03 	ldbu	r4,-8(fp)
   9d2f8:	e0fffe03 	ldbu	r3,-8(fp)
   9d2fc:	008002b4 	movhi	r2,10
   9d300:	10910344 	addi	r2,r2,17421
   9d304:	10c5883a 	add	r2,r2,r3
   9d308:	10800003 	ldbu	r2,0(r2)
   9d30c:	1007883a 	mov	r3,r2
   9d310:	008002b4 	movhi	r2,10
   9d314:	10910604 	addi	r2,r2,17432
   9d318:	10800017 	ldw	r2,0(r2)
   9d31c:	10800d43 	ldbu	r2,53(r2)
   9d320:	0084303a 	nor	r2,zero,r2
   9d324:	1884703a 	and	r2,r3,r2
   9d328:	1007883a 	mov	r3,r2
   9d32c:	008002b4 	movhi	r2,10
   9d330:	10910344 	addi	r2,r2,17421
   9d334:	1105883a 	add	r2,r2,r4
   9d338:	10c00005 	stb	r3,0(r2)
   9d33c:	e0fffe03 	ldbu	r3,-8(fp)
   9d340:	008002b4 	movhi	r2,10
   9d344:	10910344 	addi	r2,r2,17421
   9d348:	10c5883a 	add	r2,r2,r3
   9d34c:	10800003 	ldbu	r2,0(r2)
   9d350:	10803fcc 	andi	r2,r2,255
   9d354:	1004c03a 	cmpne	r2,r2,zero
   9d358:	10000e1e 	bne	r2,zero,9d394 <OSTimeDly+0x110>
   9d35c:	008002b4 	movhi	r2,10
   9d360:	10910604 	addi	r2,r2,17432
   9d364:	10800017 	ldw	r2,0(r2)
   9d368:	10800d83 	ldbu	r2,54(r2)
   9d36c:	0084303a 	nor	r2,zero,r2
   9d370:	1007883a 	mov	r3,r2
   9d374:	008002b4 	movhi	r2,10
   9d378:	10910304 	addi	r2,r2,17420
   9d37c:	10800003 	ldbu	r2,0(r2)
   9d380:	1884703a 	and	r2,r3,r2
   9d384:	1007883a 	mov	r3,r2
   9d388:	008002b4 	movhi	r2,10
   9d38c:	10910304 	addi	r2,r2,17420
   9d390:	10c00005 	stb	r3,0(r2)
   9d394:	008002b4 	movhi	r2,10
   9d398:	10910604 	addi	r2,r2,17432
   9d39c:	10c00017 	ldw	r3,0(r2)
   9d3a0:	e0bfff0b 	ldhu	r2,-4(fp)
   9d3a4:	18800b8d 	sth	r2,46(r3)
   9d3a8:	e0bffd17 	ldw	r2,-12(fp)
   9d3ac:	e0bffb15 	stw	r2,-20(fp)
   9d3b0:	e0bffb17 	ldw	r2,-20(fp)
   9d3b4:	1001703a 	wrctl	status,r2
   9d3b8:	0094f580 	call	94f58 <OS_Sched>
   9d3bc:	e037883a 	mov	sp,fp
   9d3c0:	dfc00117 	ldw	ra,4(sp)
   9d3c4:	df000017 	ldw	fp,0(sp)
   9d3c8:	dec00204 	addi	sp,sp,8
   9d3cc:	f800283a 	ret

0009d3d0 <OSTimeDlyHMSM>:
   9d3d0:	defff604 	addi	sp,sp,-40
   9d3d4:	dfc00915 	stw	ra,36(sp)
   9d3d8:	df000815 	stw	fp,32(sp)
   9d3dc:	dc000715 	stw	r16,28(sp)
   9d3e0:	df000704 	addi	fp,sp,28
   9d3e4:	e13ffb05 	stb	r4,-20(fp)
   9d3e8:	e17ffc05 	stb	r5,-16(fp)
   9d3ec:	e1bffd05 	stb	r6,-12(fp)
   9d3f0:	e1fffe0d 	sth	r7,-8(fp)
   9d3f4:	008002b4 	movhi	r2,10
   9d3f8:	10910504 	addi	r2,r2,17428
   9d3fc:	10800003 	ldbu	r2,0(r2)
   9d400:	10803fcc 	andi	r2,r2,255
   9d404:	1005003a 	cmpeq	r2,r2,zero
   9d408:	1000031e 	bne	r2,zero,9d418 <OSTimeDlyHMSM+0x48>
   9d40c:	00801544 	movi	r2,85
   9d410:	e0bfff15 	stw	r2,-4(fp)
   9d414:	00004b06 	br	9d544 <OSTimeDlyHMSM+0x174>
   9d418:	e0bffb03 	ldbu	r2,-20(fp)
   9d41c:	1004c03a 	cmpne	r2,r2,zero
   9d420:	10000c1e 	bne	r2,zero,9d454 <OSTimeDlyHMSM+0x84>
   9d424:	e0bffc03 	ldbu	r2,-16(fp)
   9d428:	1004c03a 	cmpne	r2,r2,zero
   9d42c:	1000091e 	bne	r2,zero,9d454 <OSTimeDlyHMSM+0x84>
   9d430:	e0bffd03 	ldbu	r2,-12(fp)
   9d434:	1004c03a 	cmpne	r2,r2,zero
   9d438:	1000061e 	bne	r2,zero,9d454 <OSTimeDlyHMSM+0x84>
   9d43c:	e0bffe0b 	ldhu	r2,-8(fp)
   9d440:	1004c03a 	cmpne	r2,r2,zero
   9d444:	1000031e 	bne	r2,zero,9d454 <OSTimeDlyHMSM+0x84>
   9d448:	00801504 	movi	r2,84
   9d44c:	e0bfff15 	stw	r2,-4(fp)
   9d450:	00003c06 	br	9d544 <OSTimeDlyHMSM+0x174>
   9d454:	e0bffc03 	ldbu	r2,-16(fp)
   9d458:	10800f30 	cmpltui	r2,r2,60
   9d45c:	1000031e 	bne	r2,zero,9d46c <OSTimeDlyHMSM+0x9c>
   9d460:	00801444 	movi	r2,81
   9d464:	e0bfff15 	stw	r2,-4(fp)
   9d468:	00003606 	br	9d544 <OSTimeDlyHMSM+0x174>
   9d46c:	e0bffd03 	ldbu	r2,-12(fp)
   9d470:	10800f30 	cmpltui	r2,r2,60
   9d474:	1000031e 	bne	r2,zero,9d484 <OSTimeDlyHMSM+0xb4>
   9d478:	00801484 	movi	r2,82
   9d47c:	e0bfff15 	stw	r2,-4(fp)
   9d480:	00003006 	br	9d544 <OSTimeDlyHMSM+0x174>
   9d484:	e0bffe0b 	ldhu	r2,-8(fp)
   9d488:	1080fa30 	cmpltui	r2,r2,1000
   9d48c:	1000031e 	bne	r2,zero,9d49c <OSTimeDlyHMSM+0xcc>
   9d490:	008014c4 	movi	r2,83
   9d494:	e0bfff15 	stw	r2,-4(fp)
   9d498:	00002a06 	br	9d544 <OSTimeDlyHMSM+0x174>
   9d49c:	e13ffb03 	ldbu	r4,-20(fp)
   9d4a0:	01438404 	movi	r5,3600
   9d4a4:	00886b00 	call	886b0 <__mulsi3>
   9d4a8:	1021883a 	mov	r16,r2
   9d4ac:	e13ffc03 	ldbu	r4,-16(fp)
   9d4b0:	01400f04 	movi	r5,60
   9d4b4:	00886b00 	call	886b0 <__mulsi3>
   9d4b8:	8087883a 	add	r3,r16,r2
   9d4bc:	e0bffd03 	ldbu	r2,-12(fp)
   9d4c0:	1889883a 	add	r4,r3,r2
   9d4c4:	0140fa04 	movi	r5,1000
   9d4c8:	00886b00 	call	886b0 <__mulsi3>
   9d4cc:	1021883a 	mov	r16,r2
   9d4d0:	e13ffe0b 	ldhu	r4,-8(fp)
   9d4d4:	0140fa04 	movi	r5,1000
   9d4d8:	00886b00 	call	886b0 <__mulsi3>
   9d4dc:	1009883a 	mov	r4,r2
   9d4e0:	0140fa04 	movi	r5,1000
   9d4e4:	00886a00 	call	886a0 <__udivsi3>
   9d4e8:	8085883a 	add	r2,r16,r2
   9d4ec:	e0bffa15 	stw	r2,-24(fp)
   9d4f0:	e0bffa17 	ldw	r2,-24(fp)
   9d4f4:	1004d43a 	srli	r2,r2,16
   9d4f8:	e0bff90d 	sth	r2,-28(fp)
   9d4fc:	e0bffa17 	ldw	r2,-24(fp)
   9d500:	10bfffcc 	andi	r2,r2,65535
   9d504:	e0bffa15 	stw	r2,-24(fp)
   9d508:	e0bffa17 	ldw	r2,-24(fp)
   9d50c:	113fffcc 	andi	r4,r2,65535
   9d510:	009d2840 	call	9d284 <OSTimeDly>
   9d514:	00000706 	br	9d534 <OSTimeDlyHMSM+0x164>
   9d518:	01200014 	movui	r4,32768
   9d51c:	009d2840 	call	9d284 <OSTimeDly>
   9d520:	01200014 	movui	r4,32768
   9d524:	009d2840 	call	9d284 <OSTimeDly>
   9d528:	e0bff90b 	ldhu	r2,-28(fp)
   9d52c:	10bfffc4 	addi	r2,r2,-1
   9d530:	e0bff90d 	sth	r2,-28(fp)
   9d534:	e0bff90b 	ldhu	r2,-28(fp)
   9d538:	1004c03a 	cmpne	r2,r2,zero
   9d53c:	103ff61e 	bne	r2,zero,9d518 <OSTimeDlyHMSM+0x148>
   9d540:	e03fff15 	stw	zero,-4(fp)
   9d544:	e0bfff17 	ldw	r2,-4(fp)
   9d548:	e037883a 	mov	sp,fp
   9d54c:	dfc00217 	ldw	ra,8(sp)
   9d550:	df000117 	ldw	fp,4(sp)
   9d554:	dc000017 	ldw	r16,0(sp)
   9d558:	dec00304 	addi	sp,sp,12
   9d55c:	f800283a 	ret

0009d560 <OSTimeDlyResume>:
   9d560:	defff404 	addi	sp,sp,-48
   9d564:	dfc00b15 	stw	ra,44(sp)
   9d568:	df000a15 	stw	fp,40(sp)
   9d56c:	df000a04 	addi	fp,sp,40
   9d570:	e13ffe05 	stb	r4,-8(fp)
   9d574:	e03ffc15 	stw	zero,-16(fp)
   9d578:	e0bffe03 	ldbu	r2,-8(fp)
   9d57c:	10800530 	cmpltui	r2,r2,20
   9d580:	1000031e 	bne	r2,zero,9d590 <OSTimeDlyResume+0x30>
   9d584:	00800a84 	movi	r2,42
   9d588:	e0bfff15 	stw	r2,-4(fp)
   9d58c:	00007206 	br	9d758 <OSTimeDlyResume+0x1f8>
   9d590:	0005303a 	rdctl	r2,status
   9d594:	e0bffb15 	stw	r2,-20(fp)
   9d598:	e0fffb17 	ldw	r3,-20(fp)
   9d59c:	00bfff84 	movi	r2,-2
   9d5a0:	1884703a 	and	r2,r3,r2
   9d5a4:	1001703a 	wrctl	status,r2
   9d5a8:	e0bffb17 	ldw	r2,-20(fp)
   9d5ac:	e0bffc15 	stw	r2,-16(fp)
   9d5b0:	e0bffe03 	ldbu	r2,-8(fp)
   9d5b4:	00c002f4 	movhi	r3,11
   9d5b8:	18ddd004 	addi	r3,r3,30528
   9d5bc:	1085883a 	add	r2,r2,r2
   9d5c0:	1085883a 	add	r2,r2,r2
   9d5c4:	10c5883a 	add	r2,r2,r3
   9d5c8:	10800017 	ldw	r2,0(r2)
   9d5cc:	e0bffd15 	stw	r2,-12(fp)
   9d5d0:	e0bffd17 	ldw	r2,-12(fp)
   9d5d4:	1004c03a 	cmpne	r2,r2,zero
   9d5d8:	1000071e 	bne	r2,zero,9d5f8 <OSTimeDlyResume+0x98>
   9d5dc:	e0bffc17 	ldw	r2,-16(fp)
   9d5e0:	e0bffa15 	stw	r2,-24(fp)
   9d5e4:	e0bffa17 	ldw	r2,-24(fp)
   9d5e8:	1001703a 	wrctl	status,r2
   9d5ec:	008010c4 	movi	r2,67
   9d5f0:	e0bfff15 	stw	r2,-4(fp)
   9d5f4:	00005806 	br	9d758 <OSTimeDlyResume+0x1f8>
   9d5f8:	e0bffd17 	ldw	r2,-12(fp)
   9d5fc:	10800058 	cmpnei	r2,r2,1
   9d600:	1000071e 	bne	r2,zero,9d620 <OSTimeDlyResume+0xc0>
   9d604:	e0bffc17 	ldw	r2,-16(fp)
   9d608:	e0bff915 	stw	r2,-28(fp)
   9d60c:	e0bff917 	ldw	r2,-28(fp)
   9d610:	1001703a 	wrctl	status,r2
   9d614:	008010c4 	movi	r2,67
   9d618:	e0bfff15 	stw	r2,-4(fp)
   9d61c:	00004e06 	br	9d758 <OSTimeDlyResume+0x1f8>
   9d620:	e0bffd17 	ldw	r2,-12(fp)
   9d624:	10800b8b 	ldhu	r2,46(r2)
   9d628:	10bfffcc 	andi	r2,r2,65535
   9d62c:	1004c03a 	cmpne	r2,r2,zero
   9d630:	1000071e 	bne	r2,zero,9d650 <OSTimeDlyResume+0xf0>
   9d634:	e0bffc17 	ldw	r2,-16(fp)
   9d638:	e0bff815 	stw	r2,-32(fp)
   9d63c:	e0bff817 	ldw	r2,-32(fp)
   9d640:	1001703a 	wrctl	status,r2
   9d644:	00801404 	movi	r2,80
   9d648:	e0bfff15 	stw	r2,-4(fp)
   9d64c:	00004206 	br	9d758 <OSTimeDlyResume+0x1f8>
   9d650:	e0bffd17 	ldw	r2,-12(fp)
   9d654:	10000b8d 	sth	zero,46(r2)
   9d658:	e0bffd17 	ldw	r2,-12(fp)
   9d65c:	10800c03 	ldbu	r2,48(r2)
   9d660:	10803fcc 	andi	r2,r2,255
   9d664:	10800dcc 	andi	r2,r2,55
   9d668:	1005003a 	cmpeq	r2,r2,zero
   9d66c:	10000b1e 	bne	r2,zero,9d69c <OSTimeDlyResume+0x13c>
   9d670:	e0bffd17 	ldw	r2,-12(fp)
   9d674:	10c00c03 	ldbu	r3,48(r2)
   9d678:	00bff204 	movi	r2,-56
   9d67c:	1884703a 	and	r2,r3,r2
   9d680:	1007883a 	mov	r3,r2
   9d684:	e0bffd17 	ldw	r2,-12(fp)
   9d688:	10c00c05 	stb	r3,48(r2)
   9d68c:	e0fffd17 	ldw	r3,-12(fp)
   9d690:	00800044 	movi	r2,1
   9d694:	18800c45 	stb	r2,49(r3)
   9d698:	00000206 	br	9d6a4 <OSTimeDlyResume+0x144>
   9d69c:	e0bffd17 	ldw	r2,-12(fp)
   9d6a0:	10000c45 	stb	zero,49(r2)
   9d6a4:	e0bffd17 	ldw	r2,-12(fp)
   9d6a8:	10800c03 	ldbu	r2,48(r2)
   9d6ac:	10803fcc 	andi	r2,r2,255
   9d6b0:	1080020c 	andi	r2,r2,8
   9d6b4:	1004c03a 	cmpne	r2,r2,zero
   9d6b8:	1000221e 	bne	r2,zero,9d744 <OSTimeDlyResume+0x1e4>
   9d6bc:	e0bffd17 	ldw	r2,-12(fp)
   9d6c0:	10c00d83 	ldbu	r3,54(r2)
   9d6c4:	008002b4 	movhi	r2,10
   9d6c8:	10910304 	addi	r2,r2,17420
   9d6cc:	10800003 	ldbu	r2,0(r2)
   9d6d0:	1884b03a 	or	r2,r3,r2
   9d6d4:	1007883a 	mov	r3,r2
   9d6d8:	008002b4 	movhi	r2,10
   9d6dc:	10910304 	addi	r2,r2,17420
   9d6e0:	10c00005 	stb	r3,0(r2)
   9d6e4:	e0bffd17 	ldw	r2,-12(fp)
   9d6e8:	10800d03 	ldbu	r2,52(r2)
   9d6ec:	11003fcc 	andi	r4,r2,255
   9d6f0:	e0bffd17 	ldw	r2,-12(fp)
   9d6f4:	10800d03 	ldbu	r2,52(r2)
   9d6f8:	10c03fcc 	andi	r3,r2,255
   9d6fc:	008002b4 	movhi	r2,10
   9d700:	10910344 	addi	r2,r2,17421
   9d704:	10c5883a 	add	r2,r2,r3
   9d708:	10c00003 	ldbu	r3,0(r2)
   9d70c:	e0bffd17 	ldw	r2,-12(fp)
   9d710:	10800d43 	ldbu	r2,53(r2)
   9d714:	1884b03a 	or	r2,r3,r2
   9d718:	1007883a 	mov	r3,r2
   9d71c:	008002b4 	movhi	r2,10
   9d720:	10910344 	addi	r2,r2,17421
   9d724:	1105883a 	add	r2,r2,r4
   9d728:	10c00005 	stb	r3,0(r2)
   9d72c:	e0bffc17 	ldw	r2,-16(fp)
   9d730:	e0bff715 	stw	r2,-36(fp)
   9d734:	e0bff717 	ldw	r2,-36(fp)
   9d738:	1001703a 	wrctl	status,r2
   9d73c:	0094f580 	call	94f58 <OS_Sched>
   9d740:	00000406 	br	9d754 <OSTimeDlyResume+0x1f4>
   9d744:	e0bffc17 	ldw	r2,-16(fp)
   9d748:	e0bff615 	stw	r2,-40(fp)
   9d74c:	e0bff617 	ldw	r2,-40(fp)
   9d750:	1001703a 	wrctl	status,r2
   9d754:	e03fff15 	stw	zero,-4(fp)
   9d758:	e0bfff17 	ldw	r2,-4(fp)
   9d75c:	e037883a 	mov	sp,fp
   9d760:	dfc00117 	ldw	ra,4(sp)
   9d764:	df000017 	ldw	fp,0(sp)
   9d768:	dec00204 	addi	sp,sp,8
   9d76c:	f800283a 	ret

0009d770 <OSTimeGet>:
   9d770:	defffb04 	addi	sp,sp,-20
   9d774:	df000415 	stw	fp,16(sp)
   9d778:	df000404 	addi	fp,sp,16
   9d77c:	e03ffe15 	stw	zero,-8(fp)
   9d780:	0005303a 	rdctl	r2,status
   9d784:	e0bffd15 	stw	r2,-12(fp)
   9d788:	e0fffd17 	ldw	r3,-12(fp)
   9d78c:	00bfff84 	movi	r2,-2
   9d790:	1884703a 	and	r2,r3,r2
   9d794:	1001703a 	wrctl	status,r2
   9d798:	e0bffd17 	ldw	r2,-12(fp)
   9d79c:	e0bffe15 	stw	r2,-8(fp)
   9d7a0:	008002b4 	movhi	r2,10
   9d7a4:	10910704 	addi	r2,r2,17436
   9d7a8:	10800017 	ldw	r2,0(r2)
   9d7ac:	e0bfff15 	stw	r2,-4(fp)
   9d7b0:	e0bffe17 	ldw	r2,-8(fp)
   9d7b4:	e0bffc15 	stw	r2,-16(fp)
   9d7b8:	e0bffc17 	ldw	r2,-16(fp)
   9d7bc:	1001703a 	wrctl	status,r2
   9d7c0:	e0bfff17 	ldw	r2,-4(fp)
   9d7c4:	e037883a 	mov	sp,fp
   9d7c8:	df000017 	ldw	fp,0(sp)
   9d7cc:	dec00104 	addi	sp,sp,4
   9d7d0:	f800283a 	ret

0009d7d4 <OSTimeSet>:
   9d7d4:	defffb04 	addi	sp,sp,-20
   9d7d8:	df000415 	stw	fp,16(sp)
   9d7dc:	df000404 	addi	fp,sp,16
   9d7e0:	e13fff15 	stw	r4,-4(fp)
   9d7e4:	e03ffe15 	stw	zero,-8(fp)
   9d7e8:	0005303a 	rdctl	r2,status
   9d7ec:	e0bffd15 	stw	r2,-12(fp)
   9d7f0:	e0fffd17 	ldw	r3,-12(fp)
   9d7f4:	00bfff84 	movi	r2,-2
   9d7f8:	1884703a 	and	r2,r3,r2
   9d7fc:	1001703a 	wrctl	status,r2
   9d800:	e0bffd17 	ldw	r2,-12(fp)
   9d804:	e0bffe15 	stw	r2,-8(fp)
   9d808:	00c002b4 	movhi	r3,10
   9d80c:	18d10704 	addi	r3,r3,17436
   9d810:	e0bfff17 	ldw	r2,-4(fp)
   9d814:	18800015 	stw	r2,0(r3)
   9d818:	e0bffe17 	ldw	r2,-8(fp)
   9d81c:	e0bffc15 	stw	r2,-16(fp)
   9d820:	e0bffc17 	ldw	r2,-16(fp)
   9d824:	1001703a 	wrctl	status,r2
   9d828:	e037883a 	mov	sp,fp
   9d82c:	df000017 	ldw	fp,0(sp)
   9d830:	dec00104 	addi	sp,sp,4
   9d834:	f800283a 	ret

0009d838 <alt_irq_init>:
   9d838:	defffd04 	addi	sp,sp,-12
   9d83c:	dfc00215 	stw	ra,8(sp)
   9d840:	df000115 	stw	fp,4(sp)
   9d844:	df000104 	addi	fp,sp,4
   9d848:	e13fff15 	stw	r4,-4(fp)
   9d84c:	009f3880 	call	9f388 <altera_nios2_qsys_irq_init>
   9d850:	00800044 	movi	r2,1
   9d854:	1001703a 	wrctl	status,r2
   9d858:	e037883a 	mov	sp,fp
   9d85c:	dfc00117 	ldw	ra,4(sp)
   9d860:	df000017 	ldw	fp,0(sp)
   9d864:	dec00204 	addi	sp,sp,8
   9d868:	f800283a 	ret

0009d86c <alt_sys_init>:
   9d86c:	defffe04 	addi	sp,sp,-8
   9d870:	dfc00115 	stw	ra,4(sp)
   9d874:	df000015 	stw	fp,0(sp)
   9d878:	d839883a 	mov	fp,sp
   9d87c:	01000434 	movhi	r4,16
   9d880:	21051004 	addi	r4,r4,5184
   9d884:	000b883a 	mov	r5,zero
   9d888:	01800044 	movi	r6,1
   9d88c:	01c0fa04 	movi	r7,1000
   9d890:	009e6e80 	call	9e6e8 <alt_avalon_timer_sc_init>
   9d894:	010002b4 	movhi	r4,10
   9d898:	2105ba04 	addi	r4,r4,5864
   9d89c:	000b883a 	mov	r5,zero
   9d8a0:	000d883a 	mov	r6,zero
   9d8a4:	009da640 	call	9da64 <altera_avalon_jtag_uart_init>
   9d8a8:	010002b4 	movhi	r4,10
   9d8ac:	2105b004 	addi	r4,r4,5824
   9d8b0:	009d8e40 	call	9d8e4 <alt_dev_reg>
   9d8b4:	00c00434 	movhi	r3,16
   9d8b8:	18c50004 	addi	r3,r3,5120
   9d8bc:	00800044 	movi	r2,1
   9d8c0:	18800035 	stwio	r2,0(r3)
   9d8c4:	010002b4 	movhi	r4,10
   9d8c8:	2109cb04 	addi	r4,r4,10028
   9d8cc:	009d8e40 	call	9d8e4 <alt_dev_reg>
   9d8d0:	e037883a 	mov	sp,fp
   9d8d4:	dfc00117 	ldw	ra,4(sp)
   9d8d8:	df000017 	ldw	fp,0(sp)
   9d8dc:	dec00204 	addi	sp,sp,8
   9d8e0:	f800283a 	ret

0009d8e4 <alt_dev_reg>:
   9d8e4:	defffd04 	addi	sp,sp,-12
   9d8e8:	dfc00215 	stw	ra,8(sp)
   9d8ec:	df000115 	stw	fp,4(sp)
   9d8f0:	df000104 	addi	fp,sp,4
   9d8f4:	e13fff15 	stw	r4,-4(fp)
   9d8f8:	e13fff17 	ldw	r4,-4(fp)
   9d8fc:	014002b4 	movhi	r5,10
   9d900:	2949df04 	addi	r5,r5,10108
   9d904:	009e8e80 	call	9e8e8 <alt_dev_llist_insert>
   9d908:	e037883a 	mov	sp,fp
   9d90c:	dfc00117 	ldw	ra,4(sp)
   9d910:	df000017 	ldw	fp,0(sp)
   9d914:	dec00204 	addi	sp,sp,8
   9d918:	f800283a 	ret

0009d91c <altera_avalon_jtag_uart_read_fd>:
   9d91c:	defffa04 	addi	sp,sp,-24
   9d920:	dfc00515 	stw	ra,20(sp)
   9d924:	df000415 	stw	fp,16(sp)
   9d928:	df000404 	addi	fp,sp,16
   9d92c:	e13ffd15 	stw	r4,-12(fp)
   9d930:	e17ffe15 	stw	r5,-8(fp)
   9d934:	e1bfff15 	stw	r6,-4(fp)
   9d938:	e0bffd17 	ldw	r2,-12(fp)
   9d93c:	10800017 	ldw	r2,0(r2)
   9d940:	e0bffc15 	stw	r2,-16(fp)
   9d944:	e0bffc17 	ldw	r2,-16(fp)
   9d948:	11000a04 	addi	r4,r2,40
   9d94c:	e0bffd17 	ldw	r2,-12(fp)
   9d950:	11c00217 	ldw	r7,8(r2)
   9d954:	e17ffe17 	ldw	r5,-8(fp)
   9d958:	e1bfff17 	ldw	r6,-4(fp)
   9d95c:	009e0dc0 	call	9e0dc <altera_avalon_jtag_uart_read>
   9d960:	e037883a 	mov	sp,fp
   9d964:	dfc00117 	ldw	ra,4(sp)
   9d968:	df000017 	ldw	fp,0(sp)
   9d96c:	dec00204 	addi	sp,sp,8
   9d970:	f800283a 	ret

0009d974 <altera_avalon_jtag_uart_write_fd>:
   9d974:	defffa04 	addi	sp,sp,-24
   9d978:	dfc00515 	stw	ra,20(sp)
   9d97c:	df000415 	stw	fp,16(sp)
   9d980:	df000404 	addi	fp,sp,16
   9d984:	e13ffd15 	stw	r4,-12(fp)
   9d988:	e17ffe15 	stw	r5,-8(fp)
   9d98c:	e1bfff15 	stw	r6,-4(fp)
   9d990:	e0bffd17 	ldw	r2,-12(fp)
   9d994:	10800017 	ldw	r2,0(r2)
   9d998:	e0bffc15 	stw	r2,-16(fp)
   9d99c:	e0bffc17 	ldw	r2,-16(fp)
   9d9a0:	11000a04 	addi	r4,r2,40
   9d9a4:	e0bffd17 	ldw	r2,-12(fp)
   9d9a8:	11c00217 	ldw	r7,8(r2)
   9d9ac:	e17ffe17 	ldw	r5,-8(fp)
   9d9b0:	e1bfff17 	ldw	r6,-4(fp)
   9d9b4:	009e39c0 	call	9e39c <altera_avalon_jtag_uart_write>
   9d9b8:	e037883a 	mov	sp,fp
   9d9bc:	dfc00117 	ldw	ra,4(sp)
   9d9c0:	df000017 	ldw	fp,0(sp)
   9d9c4:	dec00204 	addi	sp,sp,8
   9d9c8:	f800283a 	ret

0009d9cc <altera_avalon_jtag_uart_close_fd>:
   9d9cc:	defffc04 	addi	sp,sp,-16
   9d9d0:	dfc00315 	stw	ra,12(sp)
   9d9d4:	df000215 	stw	fp,8(sp)
   9d9d8:	df000204 	addi	fp,sp,8
   9d9dc:	e13fff15 	stw	r4,-4(fp)
   9d9e0:	e0bfff17 	ldw	r2,-4(fp)
   9d9e4:	10800017 	ldw	r2,0(r2)
   9d9e8:	e0bffe15 	stw	r2,-8(fp)
   9d9ec:	e0bffe17 	ldw	r2,-8(fp)
   9d9f0:	11000a04 	addi	r4,r2,40
   9d9f4:	e0bfff17 	ldw	r2,-4(fp)
   9d9f8:	11400217 	ldw	r5,8(r2)
   9d9fc:	009df740 	call	9df74 <altera_avalon_jtag_uart_close>
   9da00:	e037883a 	mov	sp,fp
   9da04:	dfc00117 	ldw	ra,4(sp)
   9da08:	df000017 	ldw	fp,0(sp)
   9da0c:	dec00204 	addi	sp,sp,8
   9da10:	f800283a 	ret

0009da14 <altera_avalon_jtag_uart_ioctl_fd>:
   9da14:	defffa04 	addi	sp,sp,-24
   9da18:	dfc00515 	stw	ra,20(sp)
   9da1c:	df000415 	stw	fp,16(sp)
   9da20:	df000404 	addi	fp,sp,16
   9da24:	e13ffd15 	stw	r4,-12(fp)
   9da28:	e17ffe15 	stw	r5,-8(fp)
   9da2c:	e1bfff15 	stw	r6,-4(fp)
   9da30:	e0bffd17 	ldw	r2,-12(fp)
   9da34:	10800017 	ldw	r2,0(r2)
   9da38:	e0bffc15 	stw	r2,-16(fp)
   9da3c:	e0bffc17 	ldw	r2,-16(fp)
   9da40:	11000a04 	addi	r4,r2,40
   9da44:	e17ffe17 	ldw	r5,-8(fp)
   9da48:	e1bfff17 	ldw	r6,-4(fp)
   9da4c:	009dfe80 	call	9dfe8 <altera_avalon_jtag_uart_ioctl>
   9da50:	e037883a 	mov	sp,fp
   9da54:	dfc00117 	ldw	ra,4(sp)
   9da58:	df000017 	ldw	fp,0(sp)
   9da5c:	dec00204 	addi	sp,sp,8
   9da60:	f800283a 	ret

0009da64 <altera_avalon_jtag_uart_init>:
   9da64:	defff404 	addi	sp,sp,-48
   9da68:	dfc00b15 	stw	ra,44(sp)
   9da6c:	df000a15 	stw	fp,40(sp)
   9da70:	df000a04 	addi	fp,sp,40
   9da74:	e13ffd15 	stw	r4,-12(fp)
   9da78:	e17ffe15 	stw	r5,-8(fp)
   9da7c:	e1bfff15 	stw	r6,-4(fp)
   9da80:	e0bffd17 	ldw	r2,-12(fp)
   9da84:	10800c04 	addi	r2,r2,48
   9da88:	e0bffb15 	stw	r2,-20(fp)
   9da8c:	e03ffc0d 	sth	zero,-16(fp)
   9da90:	e13ffc0b 	ldhu	r4,-16(fp)
   9da94:	e17ffc84 	addi	r5,fp,-14
   9da98:	0095b000 	call	95b00 <OSFlagCreate>
   9da9c:	1007883a 	mov	r3,r2
   9daa0:	e0bffb17 	ldw	r2,-20(fp)
   9daa4:	10c00015 	stw	r3,0(r2)
   9daa8:	e0bffd17 	ldw	r2,-12(fp)
   9daac:	10800a04 	addi	r2,r2,40
   9dab0:	e0bff915 	stw	r2,-28(fp)
   9dab4:	00800044 	movi	r2,1
   9dab8:	e0bffa0d 	sth	r2,-24(fp)
   9dabc:	e13ffa0b 	ldhu	r4,-24(fp)
   9dac0:	009ad3c0 	call	9ad3c <OSSemCreate>
   9dac4:	1007883a 	mov	r3,r2
   9dac8:	e0bff917 	ldw	r2,-28(fp)
   9dacc:	10c00015 	stw	r3,0(r2)
   9dad0:	e0bffd17 	ldw	r2,-12(fp)
   9dad4:	10800b04 	addi	r2,r2,44
   9dad8:	e0bff715 	stw	r2,-36(fp)
   9dadc:	00800044 	movi	r2,1
   9dae0:	e0bff80d 	sth	r2,-32(fp)
   9dae4:	e13ff80b 	ldhu	r4,-32(fp)
   9dae8:	009ad3c0 	call	9ad3c <OSSemCreate>
   9daec:	1007883a 	mov	r3,r2
   9daf0:	e0bff717 	ldw	r2,-36(fp)
   9daf4:	10c00015 	stw	r3,0(r2)
   9daf8:	e0fffd17 	ldw	r3,-12(fp)
   9dafc:	00800044 	movi	r2,1
   9db00:	18800815 	stw	r2,32(r3)
   9db04:	e0bffd17 	ldw	r2,-12(fp)
   9db08:	10800017 	ldw	r2,0(r2)
   9db0c:	11000104 	addi	r4,r2,4
   9db10:	e0bffd17 	ldw	r2,-12(fp)
   9db14:	10800817 	ldw	r2,32(r2)
   9db18:	1007883a 	mov	r3,r2
   9db1c:	2005883a 	mov	r2,r4
   9db20:	10c00035 	stwio	r3,0(r2)
   9db24:	e13ffe17 	ldw	r4,-8(fp)
   9db28:	e17fff17 	ldw	r5,-4(fp)
   9db2c:	d8000015 	stw	zero,0(sp)
   9db30:	018002b4 	movhi	r6,10
   9db34:	31b6e704 	addi	r6,r6,-9316
   9db38:	e1fffd17 	ldw	r7,-12(fp)
   9db3c:	009eae00 	call	9eae0 <alt_ic_isr_register>
   9db40:	e0bffd17 	ldw	r2,-12(fp)
   9db44:	10000915 	stw	zero,36(r2)
   9db48:	e0bffd17 	ldw	r2,-12(fp)
   9db4c:	11000204 	addi	r4,r2,8
   9db50:	008002b4 	movhi	r2,10
   9db54:	10910b04 	addi	r2,r2,17452
   9db58:	10800017 	ldw	r2,0(r2)
   9db5c:	100b883a 	mov	r5,r2
   9db60:	018002b4 	movhi	r6,10
   9db64:	31b79804 	addi	r6,r6,-8608
   9db68:	e1fffd17 	ldw	r7,-12(fp)
   9db6c:	009e7780 	call	9e778 <alt_alarm_start>
   9db70:	1004403a 	cmpge	r2,r2,zero
   9db74:	1000041e 	bne	r2,zero,9db88 <altera_avalon_jtag_uart_init+0x124>
   9db78:	e0fffd17 	ldw	r3,-12(fp)
   9db7c:	00a00034 	movhi	r2,32768
   9db80:	10bfffc4 	addi	r2,r2,-1
   9db84:	18800115 	stw	r2,4(r3)
   9db88:	e037883a 	mov	sp,fp
   9db8c:	dfc00117 	ldw	ra,4(sp)
   9db90:	df000017 	ldw	fp,0(sp)
   9db94:	dec00204 	addi	sp,sp,8
   9db98:	f800283a 	ret

0009db9c <altera_avalon_jtag_uart_irq>:
   9db9c:	defff204 	addi	sp,sp,-56
   9dba0:	dfc00d15 	stw	ra,52(sp)
   9dba4:	df000c15 	stw	fp,48(sp)
   9dba8:	df000c04 	addi	fp,sp,48
   9dbac:	e13fff15 	stw	r4,-4(fp)
   9dbb0:	e0bfff17 	ldw	r2,-4(fp)
   9dbb4:	e0bffd15 	stw	r2,-12(fp)
   9dbb8:	e0bffd17 	ldw	r2,-12(fp)
   9dbbc:	10800017 	ldw	r2,0(r2)
   9dbc0:	e0bffc15 	stw	r2,-16(fp)
   9dbc4:	00000006 	br	9dbc8 <altera_avalon_jtag_uart_irq+0x2c>
   9dbc8:	e0bffc17 	ldw	r2,-16(fp)
   9dbcc:	10800104 	addi	r2,r2,4
   9dbd0:	10800037 	ldwio	r2,0(r2)
   9dbd4:	e0bffb15 	stw	r2,-20(fp)
   9dbd8:	e0bffb17 	ldw	r2,-20(fp)
   9dbdc:	1080c00c 	andi	r2,r2,768
   9dbe0:	1005003a 	cmpeq	r2,r2,zero
   9dbe4:	1000991e 	bne	r2,zero,9de4c <altera_avalon_jtag_uart_irq+0x2b0>
   9dbe8:	e0bffb17 	ldw	r2,-20(fp)
   9dbec:	1080400c 	andi	r2,r2,256
   9dbf0:	1005003a 	cmpeq	r2,r2,zero
   9dbf4:	1000481e 	bne	r2,zero,9dd18 <altera_avalon_jtag_uart_irq+0x17c>
   9dbf8:	00800074 	movhi	r2,1
   9dbfc:	e0bffa15 	stw	r2,-24(fp)
   9dc00:	00000006 	br	9dc04 <altera_avalon_jtag_uart_irq+0x68>
   9dc04:	e0bffd17 	ldw	r2,-12(fp)
   9dc08:	10800d17 	ldw	r2,52(r2)
   9dc0c:	10800044 	addi	r2,r2,1
   9dc10:	1081ffcc 	andi	r2,r2,2047
   9dc14:	e0bff915 	stw	r2,-28(fp)
   9dc18:	e0bffd17 	ldw	r2,-12(fp)
   9dc1c:	10c00e17 	ldw	r3,56(r2)
   9dc20:	e0bff917 	ldw	r2,-28(fp)
   9dc24:	18802826 	beq	r3,r2,9dcc8 <altera_avalon_jtag_uart_irq+0x12c>
   9dc28:	e0bffc17 	ldw	r2,-16(fp)
   9dc2c:	10800037 	ldwio	r2,0(r2)
   9dc30:	e0bffa15 	stw	r2,-24(fp)
   9dc34:	e0bffa17 	ldw	r2,-24(fp)
   9dc38:	10a0000c 	andi	r2,r2,32768
   9dc3c:	1005003a 	cmpeq	r2,r2,zero
   9dc40:	1000211e 	bne	r2,zero,9dcc8 <altera_avalon_jtag_uart_irq+0x12c>
   9dc44:	e0bffd17 	ldw	r2,-12(fp)
   9dc48:	10c00d17 	ldw	r3,52(r2)
   9dc4c:	e0bffa17 	ldw	r2,-24(fp)
   9dc50:	1009883a 	mov	r4,r2
   9dc54:	e0bffd17 	ldw	r2,-12(fp)
   9dc58:	1885883a 	add	r2,r3,r2
   9dc5c:	10801104 	addi	r2,r2,68
   9dc60:	11000005 	stb	r4,0(r2)
   9dc64:	e0bffd17 	ldw	r2,-12(fp)
   9dc68:	10800d17 	ldw	r2,52(r2)
   9dc6c:	10800044 	addi	r2,r2,1
   9dc70:	10c1ffcc 	andi	r3,r2,2047
   9dc74:	e0bffd17 	ldw	r2,-12(fp)
   9dc78:	10c00d15 	stw	r3,52(r2)
   9dc7c:	e0bffd17 	ldw	r2,-12(fp)
   9dc80:	10800c17 	ldw	r2,48(r2)
   9dc84:	e0bff615 	stw	r2,-40(fp)
   9dc88:	00800044 	movi	r2,1
   9dc8c:	e0bff70d 	sth	r2,-36(fp)
   9dc90:	00800044 	movi	r2,1
   9dc94:	e0bff785 	stb	r2,-34(fp)
   9dc98:	008002b4 	movhi	r2,10
   9dc9c:	1090f744 	addi	r2,r2,17373
   9dca0:	10800003 	ldbu	r2,0(r2)
   9dca4:	10803fcc 	andi	r2,r2,255
   9dca8:	1005003a 	cmpeq	r2,r2,zero
   9dcac:	103fd51e 	bne	r2,zero,9dc04 <altera_avalon_jtag_uart_irq+0x68>
   9dcb0:	e17ff70b 	ldhu	r5,-36(fp)
   9dcb4:	e1bff783 	ldbu	r6,-34(fp)
   9dcb8:	e1fffe04 	addi	r7,fp,-8
   9dcbc:	e13ff617 	ldw	r4,-40(fp)
   9dcc0:	00968280 	call	96828 <OSFlagPost>
   9dcc4:	003fcf06 	br	9dc04 <altera_avalon_jtag_uart_irq+0x68>
   9dcc8:	e0bffa17 	ldw	r2,-24(fp)
   9dccc:	10bfffec 	andhi	r2,r2,65535
   9dcd0:	1005003a 	cmpeq	r2,r2,zero
   9dcd4:	1000101e 	bne	r2,zero,9dd18 <altera_avalon_jtag_uart_irq+0x17c>
   9dcd8:	e0bffd17 	ldw	r2,-12(fp)
   9dcdc:	10c00817 	ldw	r3,32(r2)
   9dce0:	00bfff84 	movi	r2,-2
   9dce4:	1886703a 	and	r3,r3,r2
   9dce8:	e0bffd17 	ldw	r2,-12(fp)
   9dcec:	10c00815 	stw	r3,32(r2)
   9dcf0:	e0bffc17 	ldw	r2,-16(fp)
   9dcf4:	11000104 	addi	r4,r2,4
   9dcf8:	e0bffd17 	ldw	r2,-12(fp)
   9dcfc:	10800817 	ldw	r2,32(r2)
   9dd00:	1007883a 	mov	r3,r2
   9dd04:	2005883a 	mov	r2,r4
   9dd08:	10c00035 	stwio	r3,0(r2)
   9dd0c:	e0bffc17 	ldw	r2,-16(fp)
   9dd10:	10800104 	addi	r2,r2,4
   9dd14:	10800037 	ldwio	r2,0(r2)
   9dd18:	e0bffb17 	ldw	r2,-20(fp)
   9dd1c:	1080800c 	andi	r2,r2,512
   9dd20:	1005003a 	cmpeq	r2,r2,zero
   9dd24:	103fa81e 	bne	r2,zero,9dbc8 <altera_avalon_jtag_uart_irq+0x2c>
   9dd28:	e0bffb17 	ldw	r2,-20(fp)
   9dd2c:	10bfffec 	andhi	r2,r2,65535
   9dd30:	1004d43a 	srli	r2,r2,16
   9dd34:	e0bff815 	stw	r2,-32(fp)
   9dd38:	00002706 	br	9ddd8 <altera_avalon_jtag_uart_irq+0x23c>
   9dd3c:	e13ffc17 	ldw	r4,-16(fp)
   9dd40:	e0bffd17 	ldw	r2,-12(fp)
   9dd44:	10c01017 	ldw	r3,64(r2)
   9dd48:	e0bffd17 	ldw	r2,-12(fp)
   9dd4c:	1885883a 	add	r2,r3,r2
   9dd50:	10821104 	addi	r2,r2,2116
   9dd54:	10800003 	ldbu	r2,0(r2)
   9dd58:	10c03fcc 	andi	r3,r2,255
   9dd5c:	18c0201c 	xori	r3,r3,128
   9dd60:	18ffe004 	addi	r3,r3,-128
   9dd64:	2005883a 	mov	r2,r4
   9dd68:	10c00035 	stwio	r3,0(r2)
   9dd6c:	e0bffd17 	ldw	r2,-12(fp)
   9dd70:	10801017 	ldw	r2,64(r2)
   9dd74:	10800044 	addi	r2,r2,1
   9dd78:	10c1ffcc 	andi	r3,r2,2047
   9dd7c:	e0bffd17 	ldw	r2,-12(fp)
   9dd80:	10c01015 	stw	r3,64(r2)
   9dd84:	e0bffd17 	ldw	r2,-12(fp)
   9dd88:	10800c17 	ldw	r2,48(r2)
   9dd8c:	e0bff415 	stw	r2,-48(fp)
   9dd90:	00800084 	movi	r2,2
   9dd94:	e0bff50d 	sth	r2,-44(fp)
   9dd98:	00800044 	movi	r2,1
   9dd9c:	e0bff585 	stb	r2,-42(fp)
   9dda0:	008002b4 	movhi	r2,10
   9dda4:	1090f744 	addi	r2,r2,17373
   9dda8:	10800003 	ldbu	r2,0(r2)
   9ddac:	10803fcc 	andi	r2,r2,255
   9ddb0:	1005003a 	cmpeq	r2,r2,zero
   9ddb4:	1000051e 	bne	r2,zero,9ddcc <altera_avalon_jtag_uart_irq+0x230>
   9ddb8:	e17ff50b 	ldhu	r5,-44(fp)
   9ddbc:	e1bff583 	ldbu	r6,-42(fp)
   9ddc0:	e1fffe44 	addi	r7,fp,-7
   9ddc4:	e13ff417 	ldw	r4,-48(fp)
   9ddc8:	00968280 	call	96828 <OSFlagPost>
   9ddcc:	e0bff817 	ldw	r2,-32(fp)
   9ddd0:	10bfffc4 	addi	r2,r2,-1
   9ddd4:	e0bff815 	stw	r2,-32(fp)
   9ddd8:	e0bff817 	ldw	r2,-32(fp)
   9dddc:	1005003a 	cmpeq	r2,r2,zero
   9dde0:	1000051e 	bne	r2,zero,9ddf8 <altera_avalon_jtag_uart_irq+0x25c>
   9dde4:	e0bffd17 	ldw	r2,-12(fp)
   9dde8:	10c01017 	ldw	r3,64(r2)
   9ddec:	e0bffd17 	ldw	r2,-12(fp)
   9ddf0:	10800f17 	ldw	r2,60(r2)
   9ddf4:	18bfd11e 	bne	r3,r2,9dd3c <altera_avalon_jtag_uart_irq+0x1a0>
   9ddf8:	e0bff817 	ldw	r2,-32(fp)
   9ddfc:	1005003a 	cmpeq	r2,r2,zero
   9de00:	103f711e 	bne	r2,zero,9dbc8 <altera_avalon_jtag_uart_irq+0x2c>
   9de04:	e0bffd17 	ldw	r2,-12(fp)
   9de08:	10c00817 	ldw	r3,32(r2)
   9de0c:	00bfff44 	movi	r2,-3
   9de10:	1886703a 	and	r3,r3,r2
   9de14:	e0bffd17 	ldw	r2,-12(fp)
   9de18:	10c00815 	stw	r3,32(r2)
   9de1c:	e0bffd17 	ldw	r2,-12(fp)
   9de20:	10800017 	ldw	r2,0(r2)
   9de24:	11000104 	addi	r4,r2,4
   9de28:	e0bffd17 	ldw	r2,-12(fp)
   9de2c:	10800817 	ldw	r2,32(r2)
   9de30:	1007883a 	mov	r3,r2
   9de34:	2005883a 	mov	r2,r4
   9de38:	10c00035 	stwio	r3,0(r2)
   9de3c:	e0bffc17 	ldw	r2,-16(fp)
   9de40:	10800104 	addi	r2,r2,4
   9de44:	10800037 	ldwio	r2,0(r2)
   9de48:	003f5f06 	br	9dbc8 <altera_avalon_jtag_uart_irq+0x2c>
   9de4c:	e037883a 	mov	sp,fp
   9de50:	dfc00117 	ldw	ra,4(sp)
   9de54:	df000017 	ldw	fp,0(sp)
   9de58:	dec00204 	addi	sp,sp,8
   9de5c:	f800283a 	ret

0009de60 <altera_avalon_jtag_uart_timeout>:
   9de60:	defff804 	addi	sp,sp,-32
   9de64:	dfc00715 	stw	ra,28(sp)
   9de68:	df000615 	stw	fp,24(sp)
   9de6c:	df000604 	addi	fp,sp,24
   9de70:	e13fff15 	stw	r4,-4(fp)
   9de74:	e0bfff17 	ldw	r2,-4(fp)
   9de78:	e0bffd15 	stw	r2,-12(fp)
   9de7c:	e0bffd17 	ldw	r2,-12(fp)
   9de80:	10800017 	ldw	r2,0(r2)
   9de84:	10800104 	addi	r2,r2,4
   9de88:	10800037 	ldwio	r2,0(r2)
   9de8c:	e0bffc15 	stw	r2,-16(fp)
   9de90:	e0bffc17 	ldw	r2,-16(fp)
   9de94:	1081000c 	andi	r2,r2,1024
   9de98:	1005003a 	cmpeq	r2,r2,zero
   9de9c:	10000c1e 	bne	r2,zero,9ded0 <altera_avalon_jtag_uart_timeout+0x70>
   9dea0:	e0bffd17 	ldw	r2,-12(fp)
   9dea4:	10800017 	ldw	r2,0(r2)
   9dea8:	11000104 	addi	r4,r2,4
   9deac:	e0bffd17 	ldw	r2,-12(fp)
   9deb0:	10800817 	ldw	r2,32(r2)
   9deb4:	10810014 	ori	r2,r2,1024
   9deb8:	1007883a 	mov	r3,r2
   9debc:	2005883a 	mov	r2,r4
   9dec0:	10c00035 	stwio	r3,0(r2)
   9dec4:	e0bffd17 	ldw	r2,-12(fp)
   9dec8:	10000915 	stw	zero,36(r2)
   9decc:	00002106 	br	9df54 <altera_avalon_jtag_uart_timeout+0xf4>
   9ded0:	e0bffd17 	ldw	r2,-12(fp)
   9ded4:	10c00917 	ldw	r3,36(r2)
   9ded8:	00a00034 	movhi	r2,32768
   9dedc:	10bfff04 	addi	r2,r2,-4
   9dee0:	10c01c36 	bltu	r2,r3,9df54 <altera_avalon_jtag_uart_timeout+0xf4>
   9dee4:	e0bffd17 	ldw	r2,-12(fp)
   9dee8:	10800917 	ldw	r2,36(r2)
   9deec:	10c00044 	addi	r3,r2,1
   9def0:	e0bffd17 	ldw	r2,-12(fp)
   9def4:	10c00915 	stw	r3,36(r2)
   9def8:	e0bffd17 	ldw	r2,-12(fp)
   9defc:	10c00917 	ldw	r3,36(r2)
   9df00:	e0bffd17 	ldw	r2,-12(fp)
   9df04:	10800117 	ldw	r2,4(r2)
   9df08:	18801236 	bltu	r3,r2,9df54 <altera_avalon_jtag_uart_timeout+0xf4>
   9df0c:	e0bffd17 	ldw	r2,-12(fp)
   9df10:	10800c17 	ldw	r2,48(r2)
   9df14:	e0bffa15 	stw	r2,-24(fp)
   9df18:	00800104 	movi	r2,4
   9df1c:	e0bffb0d 	sth	r2,-20(fp)
   9df20:	00800044 	movi	r2,1
   9df24:	e0bffb85 	stb	r2,-18(fp)
   9df28:	008002b4 	movhi	r2,10
   9df2c:	1090f744 	addi	r2,r2,17373
   9df30:	10800003 	ldbu	r2,0(r2)
   9df34:	10803fcc 	andi	r2,r2,255
   9df38:	1005003a 	cmpeq	r2,r2,zero
   9df3c:	1000051e 	bne	r2,zero,9df54 <altera_avalon_jtag_uart_timeout+0xf4>
   9df40:	e17ffb0b 	ldhu	r5,-20(fp)
   9df44:	e1bffb83 	ldbu	r6,-18(fp)
   9df48:	e1fffe04 	addi	r7,fp,-8
   9df4c:	e13ffa17 	ldw	r4,-24(fp)
   9df50:	00968280 	call	96828 <OSFlagPost>
   9df54:	008002b4 	movhi	r2,10
   9df58:	10910b04 	addi	r2,r2,17452
   9df5c:	10800017 	ldw	r2,0(r2)
   9df60:	e037883a 	mov	sp,fp
   9df64:	dfc00117 	ldw	ra,4(sp)
   9df68:	df000017 	ldw	fp,0(sp)
   9df6c:	dec00204 	addi	sp,sp,8
   9df70:	f800283a 	ret

0009df74 <altera_avalon_jtag_uart_close>:
   9df74:	defffc04 	addi	sp,sp,-16
   9df78:	df000315 	stw	fp,12(sp)
   9df7c:	df000304 	addi	fp,sp,12
   9df80:	e13ffd15 	stw	r4,-12(fp)
   9df84:	e17ffe15 	stw	r5,-8(fp)
   9df88:	00000706 	br	9dfa8 <altera_avalon_jtag_uart_close+0x34>
   9df8c:	e0bffe17 	ldw	r2,-8(fp)
   9df90:	1090000c 	andi	r2,r2,16384
   9df94:	1005003a 	cmpeq	r2,r2,zero
   9df98:	1000031e 	bne	r2,zero,9dfa8 <altera_avalon_jtag_uart_close+0x34>
   9df9c:	00bffd44 	movi	r2,-11
   9dfa0:	e0bfff15 	stw	r2,-4(fp)
   9dfa4:	00000b06 	br	9dfd4 <altera_avalon_jtag_uart_close+0x60>
   9dfa8:	e0bffd17 	ldw	r2,-12(fp)
   9dfac:	10c01017 	ldw	r3,64(r2)
   9dfb0:	e0bffd17 	ldw	r2,-12(fp)
   9dfb4:	10800f17 	ldw	r2,60(r2)
   9dfb8:	18800526 	beq	r3,r2,9dfd0 <altera_avalon_jtag_uart_close+0x5c>
   9dfbc:	e0bffd17 	ldw	r2,-12(fp)
   9dfc0:	10c00917 	ldw	r3,36(r2)
   9dfc4:	e0bffd17 	ldw	r2,-12(fp)
   9dfc8:	10800117 	ldw	r2,4(r2)
   9dfcc:	18bfef36 	bltu	r3,r2,9df8c <altera_avalon_jtag_uart_close+0x18>
   9dfd0:	e03fff15 	stw	zero,-4(fp)
   9dfd4:	e0bfff17 	ldw	r2,-4(fp)
   9dfd8:	e037883a 	mov	sp,fp
   9dfdc:	df000017 	ldw	fp,0(sp)
   9dfe0:	dec00104 	addi	sp,sp,4
   9dfe4:	f800283a 	ret

0009dfe8 <altera_avalon_jtag_uart_ioctl>:
   9dfe8:	defff804 	addi	sp,sp,-32
   9dfec:	df000715 	stw	fp,28(sp)
   9dff0:	df000704 	addi	fp,sp,28
   9dff4:	e13ffb15 	stw	r4,-20(fp)
   9dff8:	e17ffc15 	stw	r5,-16(fp)
   9dffc:	e1bffd15 	stw	r6,-12(fp)
   9e000:	00bff9c4 	movi	r2,-25
   9e004:	e0bffa15 	stw	r2,-24(fp)
   9e008:	e0bffc17 	ldw	r2,-16(fp)
   9e00c:	e0bfff15 	stw	r2,-4(fp)
   9e010:	e0ffff17 	ldw	r3,-4(fp)
   9e014:	189a8060 	cmpeqi	r2,r3,27137
   9e018:	1000041e 	bne	r2,zero,9e02c <altera_avalon_jtag_uart_ioctl+0x44>
   9e01c:	e0ffff17 	ldw	r3,-4(fp)
   9e020:	189a80a0 	cmpeqi	r2,r3,27138
   9e024:	10001b1e 	bne	r2,zero,9e094 <altera_avalon_jtag_uart_ioctl+0xac>
   9e028:	00002706 	br	9e0c8 <altera_avalon_jtag_uart_ioctl+0xe0>
   9e02c:	e0bffb17 	ldw	r2,-20(fp)
   9e030:	10c00117 	ldw	r3,4(r2)
   9e034:	00a00034 	movhi	r2,32768
   9e038:	10bfffc4 	addi	r2,r2,-1
   9e03c:	18802226 	beq	r3,r2,9e0c8 <altera_avalon_jtag_uart_ioctl+0xe0>
   9e040:	e0bffd17 	ldw	r2,-12(fp)
   9e044:	10800017 	ldw	r2,0(r2)
   9e048:	e0bff915 	stw	r2,-28(fp)
   9e04c:	e0bff917 	ldw	r2,-28(fp)
   9e050:	10800090 	cmplti	r2,r2,2
   9e054:	1000071e 	bne	r2,zero,9e074 <altera_avalon_jtag_uart_ioctl+0x8c>
   9e058:	e0fff917 	ldw	r3,-28(fp)
   9e05c:	00a00034 	movhi	r2,32768
   9e060:	10bfffc4 	addi	r2,r2,-1
   9e064:	18800326 	beq	r3,r2,9e074 <altera_avalon_jtag_uart_ioctl+0x8c>
   9e068:	e0bff917 	ldw	r2,-28(fp)
   9e06c:	e0bffe15 	stw	r2,-8(fp)
   9e070:	00000306 	br	9e080 <altera_avalon_jtag_uart_ioctl+0x98>
   9e074:	00e00034 	movhi	r3,32768
   9e078:	18ffff84 	addi	r3,r3,-2
   9e07c:	e0fffe15 	stw	r3,-8(fp)
   9e080:	e0bffb17 	ldw	r2,-20(fp)
   9e084:	e0fffe17 	ldw	r3,-8(fp)
   9e088:	10c00115 	stw	r3,4(r2)
   9e08c:	e03ffa15 	stw	zero,-24(fp)
   9e090:	00000d06 	br	9e0c8 <altera_avalon_jtag_uart_ioctl+0xe0>
   9e094:	e0bffb17 	ldw	r2,-20(fp)
   9e098:	10c00117 	ldw	r3,4(r2)
   9e09c:	00a00034 	movhi	r2,32768
   9e0a0:	10bfffc4 	addi	r2,r2,-1
   9e0a4:	18800826 	beq	r3,r2,9e0c8 <altera_avalon_jtag_uart_ioctl+0xe0>
   9e0a8:	e13ffd17 	ldw	r4,-12(fp)
   9e0ac:	e0bffb17 	ldw	r2,-20(fp)
   9e0b0:	10c00917 	ldw	r3,36(r2)
   9e0b4:	e0bffb17 	ldw	r2,-20(fp)
   9e0b8:	10800117 	ldw	r2,4(r2)
   9e0bc:	1885803a 	cmpltu	r2,r3,r2
   9e0c0:	20800015 	stw	r2,0(r4)
   9e0c4:	e03ffa15 	stw	zero,-24(fp)
   9e0c8:	e0bffa17 	ldw	r2,-24(fp)
   9e0cc:	e037883a 	mov	sp,fp
   9e0d0:	df000017 	ldw	fp,0(sp)
   9e0d4:	dec00104 	addi	sp,sp,4
   9e0d8:	f800283a 	ret

0009e0dc <altera_avalon_jtag_uart_read>:
   9e0dc:	deffeb04 	addi	sp,sp,-84
   9e0e0:	dfc01415 	stw	ra,80(sp)
   9e0e4:	df001315 	stw	fp,76(sp)
   9e0e8:	df001304 	addi	fp,sp,76
   9e0ec:	e13ffb15 	stw	r4,-20(fp)
   9e0f0:	e17ffc15 	stw	r5,-16(fp)
   9e0f4:	e1bffd15 	stw	r6,-12(fp)
   9e0f8:	e1fffe15 	stw	r7,-8(fp)
   9e0fc:	e0bffc17 	ldw	r2,-16(fp)
   9e100:	e0bff915 	stw	r2,-28(fp)
   9e104:	e0bffb17 	ldw	r2,-20(fp)
   9e108:	10800a17 	ldw	r2,40(r2)
   9e10c:	e0bff315 	stw	r2,-52(fp)
   9e110:	e03ff40d 	sth	zero,-48(fp)
   9e114:	e17ff40b 	ldhu	r5,-48(fp)
   9e118:	e1bffa44 	addi	r6,fp,-23
   9e11c:	e13ff317 	ldw	r4,-52(fp)
   9e120:	009b0f00 	call	9b0f0 <OSSemPend>
   9e124:	00006406 	br	9e2b8 <altera_avalon_jtag_uart_read+0x1dc>
   9e128:	e0bffb17 	ldw	r2,-20(fp)
   9e12c:	10800d17 	ldw	r2,52(r2)
   9e130:	e0bff615 	stw	r2,-40(fp)
   9e134:	e0bffb17 	ldw	r2,-20(fp)
   9e138:	10800e17 	ldw	r2,56(r2)
   9e13c:	e0bff515 	stw	r2,-44(fp)
   9e140:	e0fff617 	ldw	r3,-40(fp)
   9e144:	e0bff517 	ldw	r2,-44(fp)
   9e148:	18800536 	bltu	r3,r2,9e160 <altera_avalon_jtag_uart_read+0x84>
   9e14c:	e0bff617 	ldw	r2,-40(fp)
   9e150:	e0fff517 	ldw	r3,-44(fp)
   9e154:	10c5c83a 	sub	r2,r2,r3
   9e158:	e0bff715 	stw	r2,-36(fp)
   9e15c:	00000406 	br	9e170 <altera_avalon_jtag_uart_read+0x94>
   9e160:	00820004 	movi	r2,2048
   9e164:	e0fff517 	ldw	r3,-44(fp)
   9e168:	10c5c83a 	sub	r2,r2,r3
   9e16c:	e0bff715 	stw	r2,-36(fp)
   9e170:	e0bff717 	ldw	r2,-36(fp)
   9e174:	1005003a 	cmpeq	r2,r2,zero
   9e178:	10001f1e 	bne	r2,zero,9e1f8 <altera_avalon_jtag_uart_read+0x11c>
   9e17c:	e0fffd17 	ldw	r3,-12(fp)
   9e180:	e0bff717 	ldw	r2,-36(fp)
   9e184:	1880022e 	bgeu	r3,r2,9e190 <altera_avalon_jtag_uart_read+0xb4>
   9e188:	e0bffd17 	ldw	r2,-12(fp)
   9e18c:	e0bff715 	stw	r2,-36(fp)
   9e190:	e0bffb17 	ldw	r2,-20(fp)
   9e194:	10c01104 	addi	r3,r2,68
   9e198:	e0bff517 	ldw	r2,-44(fp)
   9e19c:	1887883a 	add	r3,r3,r2
   9e1a0:	e0bff917 	ldw	r2,-28(fp)
   9e1a4:	1009883a 	mov	r4,r2
   9e1a8:	180b883a 	mov	r5,r3
   9e1ac:	e1bff717 	ldw	r6,-36(fp)
   9e1b0:	008dd3c0 	call	8dd3c <memcpy>
   9e1b4:	e0fff717 	ldw	r3,-36(fp)
   9e1b8:	e0bff917 	ldw	r2,-28(fp)
   9e1bc:	10c5883a 	add	r2,r2,r3
   9e1c0:	e0bff915 	stw	r2,-28(fp)
   9e1c4:	e0fffd17 	ldw	r3,-12(fp)
   9e1c8:	e0bff717 	ldw	r2,-36(fp)
   9e1cc:	1885c83a 	sub	r2,r3,r2
   9e1d0:	e0bffd15 	stw	r2,-12(fp)
   9e1d4:	e0fff517 	ldw	r3,-44(fp)
   9e1d8:	e0bff717 	ldw	r2,-36(fp)
   9e1dc:	1885883a 	add	r2,r3,r2
   9e1e0:	10c1ffcc 	andi	r3,r2,2047
   9e1e4:	e0bffb17 	ldw	r2,-20(fp)
   9e1e8:	10c00e15 	stw	r3,56(r2)
   9e1ec:	e0bffd17 	ldw	r2,-12(fp)
   9e1f0:	10800048 	cmpgei	r2,r2,1
   9e1f4:	103fcc1e 	bne	r2,zero,9e128 <altera_avalon_jtag_uart_read+0x4c>
   9e1f8:	e0fff917 	ldw	r3,-28(fp)
   9e1fc:	e0bffc17 	ldw	r2,-16(fp)
   9e200:	1880301e 	bne	r3,r2,9e2c4 <altera_avalon_jtag_uart_read+0x1e8>
   9e204:	e0bffe17 	ldw	r2,-8(fp)
   9e208:	1090000c 	andi	r2,r2,16384
   9e20c:	1004c03a 	cmpne	r2,r2,zero
   9e210:	10002c1e 	bne	r2,zero,9e2c4 <altera_avalon_jtag_uart_read+0x1e8>
   9e214:	008002b4 	movhi	r2,10
   9e218:	1090f744 	addi	r2,r2,17373
   9e21c:	10800003 	ldbu	r2,0(r2)
   9e220:	10803fcc 	andi	r2,r2,255
   9e224:	10800058 	cmpnei	r2,r2,1
   9e228:	1000161e 	bne	r2,zero,9e284 <altera_avalon_jtag_uart_read+0x1a8>
   9e22c:	e0bffb17 	ldw	r2,-20(fp)
   9e230:	10800c17 	ldw	r2,48(r2)
   9e234:	e0bff015 	stw	r2,-64(fp)
   9e238:	00800144 	movi	r2,5
   9e23c:	e0bff10d 	sth	r2,-60(fp)
   9e240:	00bfe0c4 	movi	r2,-125
   9e244:	e0bff185 	stb	r2,-58(fp)
   9e248:	e03ff20d 	sth	zero,-56(fp)
   9e24c:	008002b4 	movhi	r2,10
   9e250:	1090f744 	addi	r2,r2,17373
   9e254:	10800003 	ldbu	r2,0(r2)
   9e258:	10803fcc 	andi	r2,r2,255
   9e25c:	1005003a 	cmpeq	r2,r2,zero
   9e260:	1000111e 	bne	r2,zero,9e2a8 <altera_avalon_jtag_uart_read+0x1cc>
   9e264:	e17ff10b 	ldhu	r5,-60(fp)
   9e268:	e1bff183 	ldbu	r6,-58(fp)
   9e26c:	e1fff20b 	ldhu	r7,-56(fp)
   9e270:	e0bffa04 	addi	r2,fp,-24
   9e274:	d8800015 	stw	r2,0(sp)
   9e278:	e13ff017 	ldw	r4,-64(fp)
   9e27c:	009617c0 	call	9617c <OSFlagPend>
   9e280:	00000906 	br	9e2a8 <altera_avalon_jtag_uart_read+0x1cc>
   9e284:	e0bffb17 	ldw	r2,-20(fp)
   9e288:	10c00d17 	ldw	r3,52(r2)
   9e28c:	e0bff617 	ldw	r2,-40(fp)
   9e290:	1880051e 	bne	r3,r2,9e2a8 <altera_avalon_jtag_uart_read+0x1cc>
   9e294:	e0bffb17 	ldw	r2,-20(fp)
   9e298:	10c00917 	ldw	r3,36(r2)
   9e29c:	e0bffb17 	ldw	r2,-20(fp)
   9e2a0:	10800117 	ldw	r2,4(r2)
   9e2a4:	18bff736 	bltu	r3,r2,9e284 <altera_avalon_jtag_uart_read+0x1a8>
   9e2a8:	e0bffb17 	ldw	r2,-20(fp)
   9e2ac:	10c00d17 	ldw	r3,52(r2)
   9e2b0:	e0bff617 	ldw	r2,-40(fp)
   9e2b4:	18800326 	beq	r3,r2,9e2c4 <altera_avalon_jtag_uart_read+0x1e8>
   9e2b8:	e0bffd17 	ldw	r2,-12(fp)
   9e2bc:	10800048 	cmpgei	r2,r2,1
   9e2c0:	103f991e 	bne	r2,zero,9e128 <altera_avalon_jtag_uart_read+0x4c>
   9e2c4:	e0bffb17 	ldw	r2,-20(fp)
   9e2c8:	11000a17 	ldw	r4,40(r2)
   9e2cc:	009b4e80 	call	9b4e8 <OSSemPost>
   9e2d0:	e0fff917 	ldw	r3,-28(fp)
   9e2d4:	e0bffc17 	ldw	r2,-16(fp)
   9e2d8:	18801926 	beq	r3,r2,9e340 <altera_avalon_jtag_uart_read+0x264>
   9e2dc:	0005303a 	rdctl	r2,status
   9e2e0:	e0bfef15 	stw	r2,-68(fp)
   9e2e4:	e0ffef17 	ldw	r3,-68(fp)
   9e2e8:	00bfff84 	movi	r2,-2
   9e2ec:	1884703a 	and	r2,r3,r2
   9e2f0:	1001703a 	wrctl	status,r2
   9e2f4:	e0bfef17 	ldw	r2,-68(fp)
   9e2f8:	e0bff815 	stw	r2,-32(fp)
   9e2fc:	e0bffb17 	ldw	r2,-20(fp)
   9e300:	10800817 	ldw	r2,32(r2)
   9e304:	10c00054 	ori	r3,r2,1
   9e308:	e0bffb17 	ldw	r2,-20(fp)
   9e30c:	10c00815 	stw	r3,32(r2)
   9e310:	e0bffb17 	ldw	r2,-20(fp)
   9e314:	10800017 	ldw	r2,0(r2)
   9e318:	11000104 	addi	r4,r2,4
   9e31c:	e0bffb17 	ldw	r2,-20(fp)
   9e320:	10800817 	ldw	r2,32(r2)
   9e324:	1007883a 	mov	r3,r2
   9e328:	2005883a 	mov	r2,r4
   9e32c:	10c00035 	stwio	r3,0(r2)
   9e330:	e0bff817 	ldw	r2,-32(fp)
   9e334:	e0bfee15 	stw	r2,-72(fp)
   9e338:	e0bfee17 	ldw	r2,-72(fp)
   9e33c:	1001703a 	wrctl	status,r2
   9e340:	e0fff917 	ldw	r3,-28(fp)
   9e344:	e0bffc17 	ldw	r2,-16(fp)
   9e348:	18800526 	beq	r3,r2,9e360 <altera_avalon_jtag_uart_read+0x284>
   9e34c:	e0fff917 	ldw	r3,-28(fp)
   9e350:	e0bffc17 	ldw	r2,-16(fp)
   9e354:	1887c83a 	sub	r3,r3,r2
   9e358:	e0ffff15 	stw	r3,-4(fp)
   9e35c:	00000906 	br	9e384 <altera_avalon_jtag_uart_read+0x2a8>
   9e360:	e0bffe17 	ldw	r2,-8(fp)
   9e364:	1090000c 	andi	r2,r2,16384
   9e368:	1005003a 	cmpeq	r2,r2,zero
   9e36c:	1000031e 	bne	r2,zero,9e37c <altera_avalon_jtag_uart_read+0x2a0>
   9e370:	00bffd44 	movi	r2,-11
   9e374:	e0bfff15 	stw	r2,-4(fp)
   9e378:	00000206 	br	9e384 <altera_avalon_jtag_uart_read+0x2a8>
   9e37c:	00bffec4 	movi	r2,-5
   9e380:	e0bfff15 	stw	r2,-4(fp)
   9e384:	e0bfff17 	ldw	r2,-4(fp)
   9e388:	e037883a 	mov	sp,fp
   9e38c:	dfc00117 	ldw	ra,4(sp)
   9e390:	df000017 	ldw	fp,0(sp)
   9e394:	dec00204 	addi	sp,sp,8
   9e398:	f800283a 	ret

0009e39c <altera_avalon_jtag_uart_write>:
   9e39c:	deffeb04 	addi	sp,sp,-84
   9e3a0:	dfc01415 	stw	ra,80(sp)
   9e3a4:	df001315 	stw	fp,76(sp)
   9e3a8:	df001304 	addi	fp,sp,76
   9e3ac:	e13ffb15 	stw	r4,-20(fp)
   9e3b0:	e17ffc15 	stw	r5,-16(fp)
   9e3b4:	e1bffd15 	stw	r6,-12(fp)
   9e3b8:	e1fffe15 	stw	r7,-8(fp)
   9e3bc:	e03ff815 	stw	zero,-32(fp)
   9e3c0:	e0bffc17 	ldw	r2,-16(fp)
   9e3c4:	e0bff515 	stw	r2,-44(fp)
   9e3c8:	e0bffb17 	ldw	r2,-20(fp)
   9e3cc:	10800b17 	ldw	r2,44(r2)
   9e3d0:	e0bff315 	stw	r2,-52(fp)
   9e3d4:	e03ff40d 	sth	zero,-48(fp)
   9e3d8:	e17ff40b 	ldhu	r5,-48(fp)
   9e3dc:	e1bffa04 	addi	r6,fp,-24
   9e3e0:	e13ff317 	ldw	r4,-52(fp)
   9e3e4:	009b0f00 	call	9b0f0 <OSSemPend>
   9e3e8:	00003a06 	br	9e4d4 <altera_avalon_jtag_uart_write+0x138>
   9e3ec:	e0bffb17 	ldw	r2,-20(fp)
   9e3f0:	10800f17 	ldw	r2,60(r2)
   9e3f4:	e0bff915 	stw	r2,-28(fp)
   9e3f8:	e0bffb17 	ldw	r2,-20(fp)
   9e3fc:	10801017 	ldw	r2,64(r2)
   9e400:	e0bff815 	stw	r2,-32(fp)
   9e404:	e0fff917 	ldw	r3,-28(fp)
   9e408:	e0bff817 	ldw	r2,-32(fp)
   9e40c:	1880062e 	bgeu	r3,r2,9e428 <altera_avalon_jtag_uart_write+0x8c>
   9e410:	e0fff817 	ldw	r3,-32(fp)
   9e414:	e0bff917 	ldw	r2,-28(fp)
   9e418:	1885c83a 	sub	r2,r3,r2
   9e41c:	10bfffc4 	addi	r2,r2,-1
   9e420:	e0bff715 	stw	r2,-36(fp)
   9e424:	00000c06 	br	9e458 <altera_avalon_jtag_uart_write+0xbc>
   9e428:	e0bff817 	ldw	r2,-32(fp)
   9e42c:	1005003a 	cmpeq	r2,r2,zero
   9e430:	1000051e 	bne	r2,zero,9e448 <altera_avalon_jtag_uart_write+0xac>
   9e434:	00820004 	movi	r2,2048
   9e438:	e0fff917 	ldw	r3,-28(fp)
   9e43c:	10c5c83a 	sub	r2,r2,r3
   9e440:	e0bff715 	stw	r2,-36(fp)
   9e444:	00000406 	br	9e458 <altera_avalon_jtag_uart_write+0xbc>
   9e448:	0081ffc4 	movi	r2,2047
   9e44c:	e0fff917 	ldw	r3,-28(fp)
   9e450:	10c5c83a 	sub	r2,r2,r3
   9e454:	e0bff715 	stw	r2,-36(fp)
   9e458:	e0bff717 	ldw	r2,-36(fp)
   9e45c:	1005003a 	cmpeq	r2,r2,zero
   9e460:	10001f1e 	bne	r2,zero,9e4e0 <altera_avalon_jtag_uart_write+0x144>
   9e464:	e0fffd17 	ldw	r3,-12(fp)
   9e468:	e0bff717 	ldw	r2,-36(fp)
   9e46c:	1880022e 	bgeu	r3,r2,9e478 <altera_avalon_jtag_uart_write+0xdc>
   9e470:	e0bffd17 	ldw	r2,-12(fp)
   9e474:	e0bff715 	stw	r2,-36(fp)
   9e478:	e0bffb17 	ldw	r2,-20(fp)
   9e47c:	10c21104 	addi	r3,r2,2116
   9e480:	e0bff917 	ldw	r2,-28(fp)
   9e484:	1885883a 	add	r2,r3,r2
   9e488:	e0fffc17 	ldw	r3,-16(fp)
   9e48c:	1009883a 	mov	r4,r2
   9e490:	180b883a 	mov	r5,r3
   9e494:	e1bff717 	ldw	r6,-36(fp)
   9e498:	008dd3c0 	call	8dd3c <memcpy>
   9e49c:	e0fff717 	ldw	r3,-36(fp)
   9e4a0:	e0bffc17 	ldw	r2,-16(fp)
   9e4a4:	10c5883a 	add	r2,r2,r3
   9e4a8:	e0bffc15 	stw	r2,-16(fp)
   9e4ac:	e0fffd17 	ldw	r3,-12(fp)
   9e4b0:	e0bff717 	ldw	r2,-36(fp)
   9e4b4:	1885c83a 	sub	r2,r3,r2
   9e4b8:	e0bffd15 	stw	r2,-12(fp)
   9e4bc:	e0fff917 	ldw	r3,-28(fp)
   9e4c0:	e0bff717 	ldw	r2,-36(fp)
   9e4c4:	1885883a 	add	r2,r3,r2
   9e4c8:	10c1ffcc 	andi	r3,r2,2047
   9e4cc:	e0bffb17 	ldw	r2,-20(fp)
   9e4d0:	10c00f15 	stw	r3,60(r2)
   9e4d4:	e0bffd17 	ldw	r2,-12(fp)
   9e4d8:	10800048 	cmpgei	r2,r2,1
   9e4dc:	103fc31e 	bne	r2,zero,9e3ec <altera_avalon_jtag_uart_write+0x50>
   9e4e0:	0005303a 	rdctl	r2,status
   9e4e4:	e0bff215 	stw	r2,-56(fp)
   9e4e8:	e0fff217 	ldw	r3,-56(fp)
   9e4ec:	00bfff84 	movi	r2,-2
   9e4f0:	1884703a 	and	r2,r3,r2
   9e4f4:	1001703a 	wrctl	status,r2
   9e4f8:	e0bff217 	ldw	r2,-56(fp)
   9e4fc:	e0bff615 	stw	r2,-40(fp)
   9e500:	e0bffb17 	ldw	r2,-20(fp)
   9e504:	10800817 	ldw	r2,32(r2)
   9e508:	10c00094 	ori	r3,r2,2
   9e50c:	e0bffb17 	ldw	r2,-20(fp)
   9e510:	10c00815 	stw	r3,32(r2)
   9e514:	e0bffb17 	ldw	r2,-20(fp)
   9e518:	10800017 	ldw	r2,0(r2)
   9e51c:	11000104 	addi	r4,r2,4
   9e520:	e0bffb17 	ldw	r2,-20(fp)
   9e524:	10800817 	ldw	r2,32(r2)
   9e528:	1007883a 	mov	r3,r2
   9e52c:	2005883a 	mov	r2,r4
   9e530:	10c00035 	stwio	r3,0(r2)
   9e534:	e0bff617 	ldw	r2,-40(fp)
   9e538:	e0bff115 	stw	r2,-60(fp)
   9e53c:	e0bff117 	ldw	r2,-60(fp)
   9e540:	1001703a 	wrctl	status,r2
   9e544:	e0bffd17 	ldw	r2,-12(fp)
   9e548:	10800050 	cmplti	r2,r2,1
   9e54c:	10002d1e 	bne	r2,zero,9e604 <altera_avalon_jtag_uart_write+0x268>
   9e550:	e0bffe17 	ldw	r2,-8(fp)
   9e554:	1090000c 	andi	r2,r2,16384
   9e558:	1004c03a 	cmpne	r2,r2,zero
   9e55c:	10002c1e 	bne	r2,zero,9e610 <altera_avalon_jtag_uart_write+0x274>
   9e560:	008002b4 	movhi	r2,10
   9e564:	1090f744 	addi	r2,r2,17373
   9e568:	10800003 	ldbu	r2,0(r2)
   9e56c:	10803fcc 	andi	r2,r2,255
   9e570:	10800058 	cmpnei	r2,r2,1
   9e574:	1000161e 	bne	r2,zero,9e5d0 <altera_avalon_jtag_uart_write+0x234>
   9e578:	e0bffb17 	ldw	r2,-20(fp)
   9e57c:	10800c17 	ldw	r2,48(r2)
   9e580:	e0bfee15 	stw	r2,-72(fp)
   9e584:	00800184 	movi	r2,6
   9e588:	e0bfef0d 	sth	r2,-68(fp)
   9e58c:	00bfe0c4 	movi	r2,-125
   9e590:	e0bfef85 	stb	r2,-66(fp)
   9e594:	e03ff00d 	sth	zero,-64(fp)
   9e598:	008002b4 	movhi	r2,10
   9e59c:	1090f744 	addi	r2,r2,17373
   9e5a0:	10800003 	ldbu	r2,0(r2)
   9e5a4:	10803fcc 	andi	r2,r2,255
   9e5a8:	1005003a 	cmpeq	r2,r2,zero
   9e5ac:	1000111e 	bne	r2,zero,9e5f4 <altera_avalon_jtag_uart_write+0x258>
   9e5b0:	e17fef0b 	ldhu	r5,-68(fp)
   9e5b4:	e1bfef83 	ldbu	r6,-66(fp)
   9e5b8:	e1fff00b 	ldhu	r7,-64(fp)
   9e5bc:	e0bffa44 	addi	r2,fp,-23
   9e5c0:	d8800015 	stw	r2,0(sp)
   9e5c4:	e13fee17 	ldw	r4,-72(fp)
   9e5c8:	009617c0 	call	9617c <OSFlagPend>
   9e5cc:	00000906 	br	9e5f4 <altera_avalon_jtag_uart_write+0x258>
   9e5d0:	e0bffb17 	ldw	r2,-20(fp)
   9e5d4:	10c01017 	ldw	r3,64(r2)
   9e5d8:	e0bff817 	ldw	r2,-32(fp)
   9e5dc:	1880051e 	bne	r3,r2,9e5f4 <altera_avalon_jtag_uart_write+0x258>
   9e5e0:	e0bffb17 	ldw	r2,-20(fp)
   9e5e4:	10c00917 	ldw	r3,36(r2)
   9e5e8:	e0bffb17 	ldw	r2,-20(fp)
   9e5ec:	10800117 	ldw	r2,4(r2)
   9e5f0:	18bff736 	bltu	r3,r2,9e5d0 <altera_avalon_jtag_uart_write+0x234>
   9e5f4:	e0bffb17 	ldw	r2,-20(fp)
   9e5f8:	10c01017 	ldw	r3,64(r2)
   9e5fc:	e0bff817 	ldw	r2,-32(fp)
   9e600:	18800326 	beq	r3,r2,9e610 <altera_avalon_jtag_uart_write+0x274>
   9e604:	e0bffd17 	ldw	r2,-12(fp)
   9e608:	10800048 	cmpgei	r2,r2,1
   9e60c:	103fb11e 	bne	r2,zero,9e4d4 <altera_avalon_jtag_uart_write+0x138>
   9e610:	e0bffb17 	ldw	r2,-20(fp)
   9e614:	11000b17 	ldw	r4,44(r2)
   9e618:	009b4e80 	call	9b4e8 <OSSemPost>
   9e61c:	e0fffc17 	ldw	r3,-16(fp)
   9e620:	e0bff517 	ldw	r2,-44(fp)
   9e624:	18800526 	beq	r3,r2,9e63c <altera_avalon_jtag_uart_write+0x2a0>
   9e628:	e0fffc17 	ldw	r3,-16(fp)
   9e62c:	e0bff517 	ldw	r2,-44(fp)
   9e630:	1887c83a 	sub	r3,r3,r2
   9e634:	e0ffff15 	stw	r3,-4(fp)
   9e638:	00000906 	br	9e660 <altera_avalon_jtag_uart_write+0x2c4>
   9e63c:	e0bffe17 	ldw	r2,-8(fp)
   9e640:	1090000c 	andi	r2,r2,16384
   9e644:	1005003a 	cmpeq	r2,r2,zero
   9e648:	1000031e 	bne	r2,zero,9e658 <altera_avalon_jtag_uart_write+0x2bc>
   9e64c:	00bffd44 	movi	r2,-11
   9e650:	e0bfff15 	stw	r2,-4(fp)
   9e654:	00000206 	br	9e660 <altera_avalon_jtag_uart_write+0x2c4>
   9e658:	00bffec4 	movi	r2,-5
   9e65c:	e0bfff15 	stw	r2,-4(fp)
   9e660:	e0bfff17 	ldw	r2,-4(fp)
   9e664:	e037883a 	mov	sp,fp
   9e668:	dfc00117 	ldw	ra,4(sp)
   9e66c:	df000017 	ldw	fp,0(sp)
   9e670:	dec00204 	addi	sp,sp,8
   9e674:	f800283a 	ret

0009e678 <alt_avalon_timer_sc_irq>:
   9e678:	defffa04 	addi	sp,sp,-24
   9e67c:	dfc00515 	stw	ra,20(sp)
   9e680:	df000415 	stw	fp,16(sp)
   9e684:	df000404 	addi	fp,sp,16
   9e688:	e13fff15 	stw	r4,-4(fp)
   9e68c:	e0bfff17 	ldw	r2,-4(fp)
   9e690:	10000035 	stwio	zero,0(r2)
   9e694:	e0bfff17 	ldw	r2,-4(fp)
   9e698:	10800104 	addi	r2,r2,4
   9e69c:	10800037 	ldwio	r2,0(r2)
   9e6a0:	0005303a 	rdctl	r2,status
   9e6a4:	e0bffd15 	stw	r2,-12(fp)
   9e6a8:	e0fffd17 	ldw	r3,-12(fp)
   9e6ac:	00bfff84 	movi	r2,-2
   9e6b0:	1884703a 	and	r2,r3,r2
   9e6b4:	1001703a 	wrctl	status,r2
   9e6b8:	e0bffd17 	ldw	r2,-12(fp)
   9e6bc:	e0bffe15 	stw	r2,-8(fp)
   9e6c0:	009f2780 	call	9f278 <alt_tick>
   9e6c4:	e0bffe17 	ldw	r2,-8(fp)
   9e6c8:	e0bffc15 	stw	r2,-16(fp)
   9e6cc:	e0bffc17 	ldw	r2,-16(fp)
   9e6d0:	1001703a 	wrctl	status,r2
   9e6d4:	e037883a 	mov	sp,fp
   9e6d8:	dfc00117 	ldw	ra,4(sp)
   9e6dc:	df000017 	ldw	fp,0(sp)
   9e6e0:	dec00204 	addi	sp,sp,8
   9e6e4:	f800283a 	ret

0009e6e8 <alt_avalon_timer_sc_init>:
   9e6e8:	defff804 	addi	sp,sp,-32
   9e6ec:	dfc00715 	stw	ra,28(sp)
   9e6f0:	df000615 	stw	fp,24(sp)
   9e6f4:	df000604 	addi	fp,sp,24
   9e6f8:	e13ffc15 	stw	r4,-16(fp)
   9e6fc:	e17ffd15 	stw	r5,-12(fp)
   9e700:	e1bffe15 	stw	r6,-8(fp)
   9e704:	e1ffff15 	stw	r7,-4(fp)
   9e708:	e0bfff17 	ldw	r2,-4(fp)
   9e70c:	e0bffb15 	stw	r2,-20(fp)
   9e710:	008002b4 	movhi	r2,10
   9e714:	10910b04 	addi	r2,r2,17452
   9e718:	10800017 	ldw	r2,0(r2)
   9e71c:	1004c03a 	cmpne	r2,r2,zero
   9e720:	1000041e 	bne	r2,zero,9e734 <alt_avalon_timer_sc_init+0x4c>
   9e724:	00c002b4 	movhi	r3,10
   9e728:	18d10b04 	addi	r3,r3,17452
   9e72c:	e0bffb17 	ldw	r2,-20(fp)
   9e730:	18800015 	stw	r2,0(r3)
   9e734:	e0bffc17 	ldw	r2,-16(fp)
   9e738:	10800104 	addi	r2,r2,4
   9e73c:	1007883a 	mov	r3,r2
   9e740:	008001c4 	movi	r2,7
   9e744:	18800035 	stwio	r2,0(r3)
   9e748:	d8000015 	stw	zero,0(sp)
   9e74c:	e13ffd17 	ldw	r4,-12(fp)
   9e750:	e17ffe17 	ldw	r5,-8(fp)
   9e754:	018002b4 	movhi	r6,10
   9e758:	31b99e04 	addi	r6,r6,-6536
   9e75c:	e1fffc17 	ldw	r7,-16(fp)
   9e760:	009eae00 	call	9eae0 <alt_ic_isr_register>
   9e764:	e037883a 	mov	sp,fp
   9e768:	dfc00117 	ldw	ra,4(sp)
   9e76c:	df000017 	ldw	fp,0(sp)
   9e770:	dec00204 	addi	sp,sp,8
   9e774:	f800283a 	ret

0009e778 <alt_alarm_start>:
   9e778:	defff404 	addi	sp,sp,-48
   9e77c:	df000b15 	stw	fp,44(sp)
   9e780:	df000b04 	addi	fp,sp,44
   9e784:	e13ffb15 	stw	r4,-20(fp)
   9e788:	e17ffc15 	stw	r5,-16(fp)
   9e78c:	e1bffd15 	stw	r6,-12(fp)
   9e790:	e1fffe15 	stw	r7,-8(fp)
   9e794:	e03ff915 	stw	zero,-28(fp)
   9e798:	008002b4 	movhi	r2,10
   9e79c:	10910b04 	addi	r2,r2,17452
   9e7a0:	10800017 	ldw	r2,0(r2)
   9e7a4:	1005003a 	cmpeq	r2,r2,zero
   9e7a8:	1000411e 	bne	r2,zero,9e8b0 <alt_alarm_start+0x138>
   9e7ac:	e0bffb17 	ldw	r2,-20(fp)
   9e7b0:	1005003a 	cmpeq	r2,r2,zero
   9e7b4:	10003b1e 	bne	r2,zero,9e8a4 <alt_alarm_start+0x12c>
   9e7b8:	e0fffb17 	ldw	r3,-20(fp)
   9e7bc:	e0bffd17 	ldw	r2,-12(fp)
   9e7c0:	18800315 	stw	r2,12(r3)
   9e7c4:	e0fffb17 	ldw	r3,-20(fp)
   9e7c8:	e0bffe17 	ldw	r2,-8(fp)
   9e7cc:	18800515 	stw	r2,20(r3)
   9e7d0:	0005303a 	rdctl	r2,status
   9e7d4:	e0bff815 	stw	r2,-32(fp)
   9e7d8:	e0fff817 	ldw	r3,-32(fp)
   9e7dc:	00bfff84 	movi	r2,-2
   9e7e0:	1884703a 	and	r2,r3,r2
   9e7e4:	1001703a 	wrctl	status,r2
   9e7e8:	e0bff817 	ldw	r2,-32(fp)
   9e7ec:	e0bffa15 	stw	r2,-24(fp)
   9e7f0:	008002b4 	movhi	r2,10
   9e7f4:	10910c04 	addi	r2,r2,17456
   9e7f8:	10800017 	ldw	r2,0(r2)
   9e7fc:	e0bff915 	stw	r2,-28(fp)
   9e800:	e0fffc17 	ldw	r3,-16(fp)
   9e804:	e0bff917 	ldw	r2,-28(fp)
   9e808:	1885883a 	add	r2,r3,r2
   9e80c:	10c00044 	addi	r3,r2,1
   9e810:	e0bffb17 	ldw	r2,-20(fp)
   9e814:	10c00215 	stw	r3,8(r2)
   9e818:	e0bffb17 	ldw	r2,-20(fp)
   9e81c:	10c00217 	ldw	r3,8(r2)
   9e820:	e0bff917 	ldw	r2,-28(fp)
   9e824:	1880042e 	bgeu	r3,r2,9e838 <alt_alarm_start+0xc0>
   9e828:	e0fffb17 	ldw	r3,-20(fp)
   9e82c:	00800044 	movi	r2,1
   9e830:	18800405 	stb	r2,16(r3)
   9e834:	00000206 	br	9e840 <alt_alarm_start+0xc8>
   9e838:	e0bffb17 	ldw	r2,-20(fp)
   9e83c:	10000405 	stb	zero,16(r2)
   9e840:	e0fffb17 	ldw	r3,-20(fp)
   9e844:	008002b4 	movhi	r2,10
   9e848:	108a0404 	addi	r2,r2,10256
   9e84c:	e0bff615 	stw	r2,-40(fp)
   9e850:	e0fff715 	stw	r3,-36(fp)
   9e854:	e0fff717 	ldw	r3,-36(fp)
   9e858:	e0bff617 	ldw	r2,-40(fp)
   9e85c:	18800115 	stw	r2,4(r3)
   9e860:	e0bff617 	ldw	r2,-40(fp)
   9e864:	10c00017 	ldw	r3,0(r2)
   9e868:	e0bff717 	ldw	r2,-36(fp)
   9e86c:	10c00015 	stw	r3,0(r2)
   9e870:	e0bff617 	ldw	r2,-40(fp)
   9e874:	10c00017 	ldw	r3,0(r2)
   9e878:	e0bff717 	ldw	r2,-36(fp)
   9e87c:	18800115 	stw	r2,4(r3)
   9e880:	e0fff617 	ldw	r3,-40(fp)
   9e884:	e0bff717 	ldw	r2,-36(fp)
   9e888:	18800015 	stw	r2,0(r3)
   9e88c:	e0bffa17 	ldw	r2,-24(fp)
   9e890:	e0bff515 	stw	r2,-44(fp)
   9e894:	e0bff517 	ldw	r2,-44(fp)
   9e898:	1001703a 	wrctl	status,r2
   9e89c:	e03fff15 	stw	zero,-4(fp)
   9e8a0:	00000506 	br	9e8b8 <alt_alarm_start+0x140>
   9e8a4:	00bffa84 	movi	r2,-22
   9e8a8:	e0bfff15 	stw	r2,-4(fp)
   9e8ac:	00000206 	br	9e8b8 <alt_alarm_start+0x140>
   9e8b0:	00bfde84 	movi	r2,-134
   9e8b4:	e0bfff15 	stw	r2,-4(fp)
   9e8b8:	e0bfff17 	ldw	r2,-4(fp)
   9e8bc:	e037883a 	mov	sp,fp
   9e8c0:	df000017 	ldw	fp,0(sp)
   9e8c4:	dec00104 	addi	sp,sp,4
   9e8c8:	f800283a 	ret

0009e8cc <alt_dcache_flush_all>:
   9e8cc:	deffff04 	addi	sp,sp,-4
   9e8d0:	df000015 	stw	fp,0(sp)
   9e8d4:	d839883a 	mov	fp,sp
   9e8d8:	e037883a 	mov	sp,fp
   9e8dc:	df000017 	ldw	fp,0(sp)
   9e8e0:	dec00104 	addi	sp,sp,4
   9e8e4:	f800283a 	ret

0009e8e8 <alt_dev_llist_insert>:
   9e8e8:	defff904 	addi	sp,sp,-28
   9e8ec:	dfc00615 	stw	ra,24(sp)
   9e8f0:	df000515 	stw	fp,20(sp)
   9e8f4:	df000504 	addi	fp,sp,20
   9e8f8:	e13ffd15 	stw	r4,-12(fp)
   9e8fc:	e17ffe15 	stw	r5,-8(fp)
   9e900:	e0bffd17 	ldw	r2,-12(fp)
   9e904:	1005003a 	cmpeq	r2,r2,zero
   9e908:	1000041e 	bne	r2,zero,9e91c <alt_dev_llist_insert+0x34>
   9e90c:	e0bffd17 	ldw	r2,-12(fp)
   9e910:	10800217 	ldw	r2,8(r2)
   9e914:	1004c03a 	cmpne	r2,r2,zero
   9e918:	1000071e 	bne	r2,zero,9e938 <alt_dev_llist_insert+0x50>
   9e91c:	009e99c0 	call	9e99c <alt_get_errno>
   9e920:	1007883a 	mov	r3,r2
   9e924:	00800584 	movi	r2,22
   9e928:	18800015 	stw	r2,0(r3)
   9e92c:	00bffa84 	movi	r2,-22
   9e930:	e0bfff15 	stw	r2,-4(fp)
   9e934:	00001306 	br	9e984 <alt_dev_llist_insert+0x9c>
   9e938:	e0fffd17 	ldw	r3,-12(fp)
   9e93c:	e0bffe17 	ldw	r2,-8(fp)
   9e940:	e0bffb15 	stw	r2,-20(fp)
   9e944:	e0fffc15 	stw	r3,-16(fp)
   9e948:	e0fffc17 	ldw	r3,-16(fp)
   9e94c:	e0bffb17 	ldw	r2,-20(fp)
   9e950:	18800115 	stw	r2,4(r3)
   9e954:	e0bffb17 	ldw	r2,-20(fp)
   9e958:	10c00017 	ldw	r3,0(r2)
   9e95c:	e0bffc17 	ldw	r2,-16(fp)
   9e960:	10c00015 	stw	r3,0(r2)
   9e964:	e0bffb17 	ldw	r2,-20(fp)
   9e968:	10c00017 	ldw	r3,0(r2)
   9e96c:	e0bffc17 	ldw	r2,-16(fp)
   9e970:	18800115 	stw	r2,4(r3)
   9e974:	e0fffb17 	ldw	r3,-20(fp)
   9e978:	e0bffc17 	ldw	r2,-16(fp)
   9e97c:	18800015 	stw	r2,0(r3)
   9e980:	e03fff15 	stw	zero,-4(fp)
   9e984:	e0bfff17 	ldw	r2,-4(fp)
   9e988:	e037883a 	mov	sp,fp
   9e98c:	dfc00117 	ldw	ra,4(sp)
   9e990:	df000017 	ldw	fp,0(sp)
   9e994:	dec00204 	addi	sp,sp,8
   9e998:	f800283a 	ret

0009e99c <alt_get_errno>:
   9e99c:	defffd04 	addi	sp,sp,-12
   9e9a0:	dfc00215 	stw	ra,8(sp)
   9e9a4:	df000115 	stw	fp,4(sp)
   9e9a8:	df000104 	addi	fp,sp,4
   9e9ac:	008002b4 	movhi	r2,10
   9e9b0:	1089e204 	addi	r2,r2,10120
   9e9b4:	10800017 	ldw	r2,0(r2)
   9e9b8:	1005003a 	cmpeq	r2,r2,zero
   9e9bc:	1000061e 	bne	r2,zero,9e9d8 <alt_get_errno+0x3c>
   9e9c0:	008002b4 	movhi	r2,10
   9e9c4:	1089e204 	addi	r2,r2,10120
   9e9c8:	10800017 	ldw	r2,0(r2)
   9e9cc:	103ee83a 	callr	r2
   9e9d0:	e0bfff15 	stw	r2,-4(fp)
   9e9d4:	00000306 	br	9e9e4 <alt_get_errno+0x48>
   9e9d8:	008002b4 	movhi	r2,10
   9e9dc:	1090ed04 	addi	r2,r2,17332
   9e9e0:	e0bfff15 	stw	r2,-4(fp)
   9e9e4:	e0bfff17 	ldw	r2,-4(fp)
   9e9e8:	e037883a 	mov	sp,fp
   9e9ec:	dfc00117 	ldw	ra,4(sp)
   9e9f0:	df000017 	ldw	fp,0(sp)
   9e9f4:	dec00204 	addi	sp,sp,8
   9e9f8:	f800283a 	ret

0009e9fc <_do_ctors>:
   9e9fc:	defffd04 	addi	sp,sp,-12
   9ea00:	dfc00215 	stw	ra,8(sp)
   9ea04:	df000115 	stw	fp,4(sp)
   9ea08:	df000104 	addi	fp,sp,4
   9ea0c:	00bfff04 	movi	r2,-4
   9ea10:	00c002b4 	movhi	r3,10
   9ea14:	18fff304 	addi	r3,r3,-52
   9ea18:	1885883a 	add	r2,r3,r2
   9ea1c:	e0bfff15 	stw	r2,-4(fp)
   9ea20:	00000606 	br	9ea3c <_do_ctors+0x40>
   9ea24:	e0bfff17 	ldw	r2,-4(fp)
   9ea28:	10800017 	ldw	r2,0(r2)
   9ea2c:	103ee83a 	callr	r2
   9ea30:	e0bfff17 	ldw	r2,-4(fp)
   9ea34:	10bfff04 	addi	r2,r2,-4
   9ea38:	e0bfff15 	stw	r2,-4(fp)
   9ea3c:	e0ffff17 	ldw	r3,-4(fp)
   9ea40:	008002b4 	movhi	r2,10
   9ea44:	10bff204 	addi	r2,r2,-56
   9ea48:	18bff62e 	bgeu	r3,r2,9ea24 <_do_ctors+0x28>
   9ea4c:	e037883a 	mov	sp,fp
   9ea50:	dfc00117 	ldw	ra,4(sp)
   9ea54:	df000017 	ldw	fp,0(sp)
   9ea58:	dec00204 	addi	sp,sp,8
   9ea5c:	f800283a 	ret

0009ea60 <_do_dtors>:
   9ea60:	defffd04 	addi	sp,sp,-12
   9ea64:	dfc00215 	stw	ra,8(sp)
   9ea68:	df000115 	stw	fp,4(sp)
   9ea6c:	df000104 	addi	fp,sp,4
   9ea70:	00bfff04 	movi	r2,-4
   9ea74:	00c002b4 	movhi	r3,10
   9ea78:	18fff304 	addi	r3,r3,-52
   9ea7c:	1885883a 	add	r2,r3,r2
   9ea80:	e0bfff15 	stw	r2,-4(fp)
   9ea84:	00000606 	br	9eaa0 <_do_dtors+0x40>
   9ea88:	e0bfff17 	ldw	r2,-4(fp)
   9ea8c:	10800017 	ldw	r2,0(r2)
   9ea90:	103ee83a 	callr	r2
   9ea94:	e0bfff17 	ldw	r2,-4(fp)
   9ea98:	10bfff04 	addi	r2,r2,-4
   9ea9c:	e0bfff15 	stw	r2,-4(fp)
   9eaa0:	e0ffff17 	ldw	r3,-4(fp)
   9eaa4:	008002b4 	movhi	r2,10
   9eaa8:	10bff304 	addi	r2,r2,-52
   9eaac:	18bff62e 	bgeu	r3,r2,9ea88 <_do_dtors+0x28>
   9eab0:	e037883a 	mov	sp,fp
   9eab4:	dfc00117 	ldw	ra,4(sp)
   9eab8:	df000017 	ldw	fp,0(sp)
   9eabc:	dec00204 	addi	sp,sp,8
   9eac0:	f800283a 	ret

0009eac4 <alt_icache_flush_all>:
   9eac4:	deffff04 	addi	sp,sp,-4
   9eac8:	df000015 	stw	fp,0(sp)
   9eacc:	d839883a 	mov	fp,sp
   9ead0:	e037883a 	mov	sp,fp
   9ead4:	df000017 	ldw	fp,0(sp)
   9ead8:	dec00104 	addi	sp,sp,4
   9eadc:	f800283a 	ret

0009eae0 <alt_ic_isr_register>:
   9eae0:	defff904 	addi	sp,sp,-28
   9eae4:	dfc00615 	stw	ra,24(sp)
   9eae8:	df000515 	stw	fp,20(sp)
   9eaec:	df000504 	addi	fp,sp,20
   9eaf0:	e13ffc15 	stw	r4,-16(fp)
   9eaf4:	e17ffd15 	stw	r5,-12(fp)
   9eaf8:	e1bffe15 	stw	r6,-8(fp)
   9eafc:	e1ffff15 	stw	r7,-4(fp)
   9eb00:	e0800217 	ldw	r2,8(fp)
   9eb04:	d8800015 	stw	r2,0(sp)
   9eb08:	e13ffc17 	ldw	r4,-16(fp)
   9eb0c:	e17ffd17 	ldw	r5,-12(fp)
   9eb10:	e1bffe17 	ldw	r6,-8(fp)
   9eb14:	e1ffff17 	ldw	r7,-4(fp)
   9eb18:	009ecb40 	call	9ecb4 <alt_iic_isr_register>
   9eb1c:	e037883a 	mov	sp,fp
   9eb20:	dfc00117 	ldw	ra,4(sp)
   9eb24:	df000017 	ldw	fp,0(sp)
   9eb28:	dec00204 	addi	sp,sp,8
   9eb2c:	f800283a 	ret

0009eb30 <alt_ic_irq_enable>:
   9eb30:	defff904 	addi	sp,sp,-28
   9eb34:	df000615 	stw	fp,24(sp)
   9eb38:	df000604 	addi	fp,sp,24
   9eb3c:	e13ffe15 	stw	r4,-8(fp)
   9eb40:	e17fff15 	stw	r5,-4(fp)
   9eb44:	e0bfff17 	ldw	r2,-4(fp)
   9eb48:	e0bffc15 	stw	r2,-16(fp)
   9eb4c:	0005303a 	rdctl	r2,status
   9eb50:	e0bffb15 	stw	r2,-20(fp)
   9eb54:	e0fffb17 	ldw	r3,-20(fp)
   9eb58:	00bfff84 	movi	r2,-2
   9eb5c:	1884703a 	and	r2,r3,r2
   9eb60:	1001703a 	wrctl	status,r2
   9eb64:	e0bffb17 	ldw	r2,-20(fp)
   9eb68:	e0bffd15 	stw	r2,-12(fp)
   9eb6c:	e0fffc17 	ldw	r3,-16(fp)
   9eb70:	00800044 	movi	r2,1
   9eb74:	10c4983a 	sll	r2,r2,r3
   9eb78:	1007883a 	mov	r3,r2
   9eb7c:	008002b4 	movhi	r2,10
   9eb80:	1090ef04 	addi	r2,r2,17340
   9eb84:	10800017 	ldw	r2,0(r2)
   9eb88:	1886b03a 	or	r3,r3,r2
   9eb8c:	008002b4 	movhi	r2,10
   9eb90:	1090ef04 	addi	r2,r2,17340
   9eb94:	10c00015 	stw	r3,0(r2)
   9eb98:	008002b4 	movhi	r2,10
   9eb9c:	1090ef04 	addi	r2,r2,17340
   9eba0:	10800017 	ldw	r2,0(r2)
   9eba4:	100170fa 	wrctl	ienable,r2
   9eba8:	e0bffd17 	ldw	r2,-12(fp)
   9ebac:	e0bffa15 	stw	r2,-24(fp)
   9ebb0:	e0bffa17 	ldw	r2,-24(fp)
   9ebb4:	1001703a 	wrctl	status,r2
   9ebb8:	0005883a 	mov	r2,zero
   9ebbc:	e037883a 	mov	sp,fp
   9ebc0:	df000017 	ldw	fp,0(sp)
   9ebc4:	dec00104 	addi	sp,sp,4
   9ebc8:	f800283a 	ret

0009ebcc <alt_ic_irq_disable>:
   9ebcc:	defff904 	addi	sp,sp,-28
   9ebd0:	df000615 	stw	fp,24(sp)
   9ebd4:	df000604 	addi	fp,sp,24
   9ebd8:	e13ffe15 	stw	r4,-8(fp)
   9ebdc:	e17fff15 	stw	r5,-4(fp)
   9ebe0:	e0bfff17 	ldw	r2,-4(fp)
   9ebe4:	e0bffc15 	stw	r2,-16(fp)
   9ebe8:	0005303a 	rdctl	r2,status
   9ebec:	e0bffb15 	stw	r2,-20(fp)
   9ebf0:	e0fffb17 	ldw	r3,-20(fp)
   9ebf4:	00bfff84 	movi	r2,-2
   9ebf8:	1884703a 	and	r2,r3,r2
   9ebfc:	1001703a 	wrctl	status,r2
   9ec00:	e0bffb17 	ldw	r2,-20(fp)
   9ec04:	e0bffd15 	stw	r2,-12(fp)
   9ec08:	e0fffc17 	ldw	r3,-16(fp)
   9ec0c:	00800044 	movi	r2,1
   9ec10:	10c4983a 	sll	r2,r2,r3
   9ec14:	0084303a 	nor	r2,zero,r2
   9ec18:	1007883a 	mov	r3,r2
   9ec1c:	008002b4 	movhi	r2,10
   9ec20:	1090ef04 	addi	r2,r2,17340
   9ec24:	10800017 	ldw	r2,0(r2)
   9ec28:	1886703a 	and	r3,r3,r2
   9ec2c:	008002b4 	movhi	r2,10
   9ec30:	1090ef04 	addi	r2,r2,17340
   9ec34:	10c00015 	stw	r3,0(r2)
   9ec38:	008002b4 	movhi	r2,10
   9ec3c:	1090ef04 	addi	r2,r2,17340
   9ec40:	10800017 	ldw	r2,0(r2)
   9ec44:	100170fa 	wrctl	ienable,r2
   9ec48:	e0bffd17 	ldw	r2,-12(fp)
   9ec4c:	e0bffa15 	stw	r2,-24(fp)
   9ec50:	e0bffa17 	ldw	r2,-24(fp)
   9ec54:	1001703a 	wrctl	status,r2
   9ec58:	0005883a 	mov	r2,zero
   9ec5c:	e037883a 	mov	sp,fp
   9ec60:	df000017 	ldw	fp,0(sp)
   9ec64:	dec00104 	addi	sp,sp,4
   9ec68:	f800283a 	ret

0009ec6c <alt_ic_irq_enabled>:
   9ec6c:	defffc04 	addi	sp,sp,-16
   9ec70:	df000315 	stw	fp,12(sp)
   9ec74:	df000304 	addi	fp,sp,12
   9ec78:	e13ffe15 	stw	r4,-8(fp)
   9ec7c:	e17fff15 	stw	r5,-4(fp)
   9ec80:	000530fa 	rdctl	r2,ienable
   9ec84:	e0bffd15 	stw	r2,-12(fp)
   9ec88:	e0ffff17 	ldw	r3,-4(fp)
   9ec8c:	00800044 	movi	r2,1
   9ec90:	10c4983a 	sll	r2,r2,r3
   9ec94:	1007883a 	mov	r3,r2
   9ec98:	e0bffd17 	ldw	r2,-12(fp)
   9ec9c:	1884703a 	and	r2,r3,r2
   9eca0:	1004c03a 	cmpne	r2,r2,zero
   9eca4:	e037883a 	mov	sp,fp
   9eca8:	df000017 	ldw	fp,0(sp)
   9ecac:	dec00104 	addi	sp,sp,4
   9ecb0:	f800283a 	ret

0009ecb4 <alt_iic_isr_register>:
   9ecb4:	defff404 	addi	sp,sp,-48
   9ecb8:	dfc00b15 	stw	ra,44(sp)
   9ecbc:	df000a15 	stw	fp,40(sp)
   9ecc0:	df000a04 	addi	fp,sp,40
   9ecc4:	e13ffb15 	stw	r4,-20(fp)
   9ecc8:	e17ffc15 	stw	r5,-16(fp)
   9eccc:	e1bffd15 	stw	r6,-12(fp)
   9ecd0:	e1fffe15 	stw	r7,-8(fp)
   9ecd4:	00bffa84 	movi	r2,-22
   9ecd8:	e0bffa15 	stw	r2,-24(fp)
   9ecdc:	e0bffc17 	ldw	r2,-16(fp)
   9ece0:	e0bff915 	stw	r2,-28(fp)
   9ece4:	e0bff917 	ldw	r2,-28(fp)
   9ece8:	10800808 	cmpgei	r2,r2,32
   9ecec:	1000291e 	bne	r2,zero,9ed94 <alt_iic_isr_register+0xe0>
   9ecf0:	0005303a 	rdctl	r2,status
   9ecf4:	e0bff715 	stw	r2,-36(fp)
   9ecf8:	e0fff717 	ldw	r3,-36(fp)
   9ecfc:	00bfff84 	movi	r2,-2
   9ed00:	1884703a 	and	r2,r3,r2
   9ed04:	1001703a 	wrctl	status,r2
   9ed08:	e0bff717 	ldw	r2,-36(fp)
   9ed0c:	e0bff815 	stw	r2,-32(fp)
   9ed10:	e0bff917 	ldw	r2,-28(fp)
   9ed14:	00c002f4 	movhi	r3,11
   9ed18:	18dde504 	addi	r3,r3,30612
   9ed1c:	100490fa 	slli	r2,r2,3
   9ed20:	10c7883a 	add	r3,r2,r3
   9ed24:	e0bffd17 	ldw	r2,-12(fp)
   9ed28:	18800015 	stw	r2,0(r3)
   9ed2c:	e0bff917 	ldw	r2,-28(fp)
   9ed30:	00c002f4 	movhi	r3,11
   9ed34:	18dde504 	addi	r3,r3,30612
   9ed38:	100490fa 	slli	r2,r2,3
   9ed3c:	10c5883a 	add	r2,r2,r3
   9ed40:	10c00104 	addi	r3,r2,4
   9ed44:	e0bffe17 	ldw	r2,-8(fp)
   9ed48:	18800015 	stw	r2,0(r3)
   9ed4c:	e0bffd17 	ldw	r2,-12(fp)
   9ed50:	1005003a 	cmpeq	r2,r2,zero
   9ed54:	1000051e 	bne	r2,zero,9ed6c <alt_iic_isr_register+0xb8>
   9ed58:	e17ff917 	ldw	r5,-28(fp)
   9ed5c:	e13ffb17 	ldw	r4,-20(fp)
   9ed60:	009eb300 	call	9eb30 <alt_ic_irq_enable>
   9ed64:	e0bfff15 	stw	r2,-4(fp)
   9ed68:	00000406 	br	9ed7c <alt_iic_isr_register+0xc8>
   9ed6c:	e17ff917 	ldw	r5,-28(fp)
   9ed70:	e13ffb17 	ldw	r4,-20(fp)
   9ed74:	009ebcc0 	call	9ebcc <alt_ic_irq_disable>
   9ed78:	e0bfff15 	stw	r2,-4(fp)
   9ed7c:	e0bfff17 	ldw	r2,-4(fp)
   9ed80:	e0bffa15 	stw	r2,-24(fp)
   9ed84:	e0bff817 	ldw	r2,-32(fp)
   9ed88:	e0bff615 	stw	r2,-40(fp)
   9ed8c:	e0bff617 	ldw	r2,-40(fp)
   9ed90:	1001703a 	wrctl	status,r2
   9ed94:	e0bffa17 	ldw	r2,-24(fp)
   9ed98:	e037883a 	mov	sp,fp
   9ed9c:	dfc00117 	ldw	ra,4(sp)
   9eda0:	df000017 	ldw	fp,0(sp)
   9eda4:	dec00204 	addi	sp,sp,8
   9eda8:	f800283a 	ret

0009edac <alt_open_fd>:
   9edac:	defff804 	addi	sp,sp,-32
   9edb0:	dfc00715 	stw	ra,28(sp)
   9edb4:	df000615 	stw	fp,24(sp)
   9edb8:	dc000515 	stw	r16,20(sp)
   9edbc:	df000504 	addi	fp,sp,20
   9edc0:	e13ffc15 	stw	r4,-16(fp)
   9edc4:	e17ffd15 	stw	r5,-12(fp)
   9edc8:	e1bffe15 	stw	r6,-8(fp)
   9edcc:	e1ffff15 	stw	r7,-4(fp)
   9edd0:	e13ffd17 	ldw	r4,-12(fp)
   9edd4:	e17ffe17 	ldw	r5,-8(fp)
   9edd8:	e1bfff17 	ldw	r6,-4(fp)
   9eddc:	009eff40 	call	9eff4 <open>
   9ede0:	e0bffb15 	stw	r2,-20(fp)
   9ede4:	e0bffb17 	ldw	r2,-20(fp)
   9ede8:	1004803a 	cmplt	r2,r2,zero
   9edec:	10001f1e 	bne	r2,zero,9ee6c <alt_open_fd+0xc0>
   9edf0:	e13ffb17 	ldw	r4,-20(fp)
   9edf4:	040002b4 	movhi	r16,10
   9edf8:	84055004 	addi	r16,r16,5440
   9edfc:	01400304 	movi	r5,12
   9ee00:	00886b00 	call	886b0 <__mulsi3>
   9ee04:	1405883a 	add	r2,r2,r16
   9ee08:	10c00017 	ldw	r3,0(r2)
   9ee0c:	e0bffc17 	ldw	r2,-16(fp)
   9ee10:	10c00015 	stw	r3,0(r2)
   9ee14:	e13ffb17 	ldw	r4,-20(fp)
   9ee18:	040002b4 	movhi	r16,10
   9ee1c:	84055004 	addi	r16,r16,5440
   9ee20:	01400304 	movi	r5,12
   9ee24:	00886b00 	call	886b0 <__mulsi3>
   9ee28:	1405883a 	add	r2,r2,r16
   9ee2c:	10800104 	addi	r2,r2,4
   9ee30:	10c00017 	ldw	r3,0(r2)
   9ee34:	e0bffc17 	ldw	r2,-16(fp)
   9ee38:	10c00115 	stw	r3,4(r2)
   9ee3c:	e13ffb17 	ldw	r4,-20(fp)
   9ee40:	040002b4 	movhi	r16,10
   9ee44:	84055004 	addi	r16,r16,5440
   9ee48:	01400304 	movi	r5,12
   9ee4c:	00886b00 	call	886b0 <__mulsi3>
   9ee50:	1405883a 	add	r2,r2,r16
   9ee54:	10800204 	addi	r2,r2,8
   9ee58:	10c00017 	ldw	r3,0(r2)
   9ee5c:	e0bffc17 	ldw	r2,-16(fp)
   9ee60:	10c00215 	stw	r3,8(r2)
   9ee64:	e13ffb17 	ldw	r4,-20(fp)
   9ee68:	0092f800 	call	92f80 <alt_release_fd>
   9ee6c:	e037883a 	mov	sp,fp
   9ee70:	dfc00217 	ldw	ra,8(sp)
   9ee74:	df000117 	ldw	fp,4(sp)
   9ee78:	dc000017 	ldw	r16,0(sp)
   9ee7c:	dec00304 	addi	sp,sp,12
   9ee80:	f800283a 	ret

0009ee84 <alt_io_redirect>:
   9ee84:	defffb04 	addi	sp,sp,-20
   9ee88:	dfc00415 	stw	ra,16(sp)
   9ee8c:	df000315 	stw	fp,12(sp)
   9ee90:	df000304 	addi	fp,sp,12
   9ee94:	e13ffd15 	stw	r4,-12(fp)
   9ee98:	e17ffe15 	stw	r5,-8(fp)
   9ee9c:	e1bfff15 	stw	r6,-4(fp)
   9eea0:	010002b4 	movhi	r4,10
   9eea4:	21055304 	addi	r4,r4,5452
   9eea8:	e17ffd17 	ldw	r5,-12(fp)
   9eeac:	01800044 	movi	r6,1
   9eeb0:	01c07fc4 	movi	r7,511
   9eeb4:	009edac0 	call	9edac <alt_open_fd>
   9eeb8:	010002b4 	movhi	r4,10
   9eebc:	21055004 	addi	r4,r4,5440
   9eec0:	e17ffe17 	ldw	r5,-8(fp)
   9eec4:	000d883a 	mov	r6,zero
   9eec8:	01c07fc4 	movi	r7,511
   9eecc:	009edac0 	call	9edac <alt_open_fd>
   9eed0:	010002b4 	movhi	r4,10
   9eed4:	21055604 	addi	r4,r4,5464
   9eed8:	e17fff17 	ldw	r5,-4(fp)
   9eedc:	01800044 	movi	r6,1
   9eee0:	01c07fc4 	movi	r7,511
   9eee4:	009edac0 	call	9edac <alt_open_fd>
   9eee8:	e037883a 	mov	sp,fp
   9eeec:	dfc00117 	ldw	ra,4(sp)
   9eef0:	df000017 	ldw	fp,0(sp)
   9eef4:	dec00204 	addi	sp,sp,8
   9eef8:	f800283a 	ret

0009eefc <alt_file_locked>:
   9eefc:	defffa04 	addi	sp,sp,-24
   9ef00:	dfc00515 	stw	ra,20(sp)
   9ef04:	df000415 	stw	fp,16(sp)
   9ef08:	dc000315 	stw	r16,12(sp)
   9ef0c:	df000304 	addi	fp,sp,12
   9ef10:	e13ffe15 	stw	r4,-8(fp)
   9ef14:	e0bffe17 	ldw	r2,-8(fp)
   9ef18:	10800217 	ldw	r2,8(r2)
   9ef1c:	10d00034 	orhi	r3,r2,16384
   9ef20:	e0bffe17 	ldw	r2,-8(fp)
   9ef24:	10c00215 	stw	r3,8(r2)
   9ef28:	e03ffd15 	stw	zero,-12(fp)
   9ef2c:	00002306 	br	9efbc <alt_file_locked+0xc0>
   9ef30:	e13ffd17 	ldw	r4,-12(fp)
   9ef34:	040002b4 	movhi	r16,10
   9ef38:	84055004 	addi	r16,r16,5440
   9ef3c:	01400304 	movi	r5,12
   9ef40:	00886b00 	call	886b0 <__mulsi3>
   9ef44:	1405883a 	add	r2,r2,r16
   9ef48:	10c00017 	ldw	r3,0(r2)
   9ef4c:	e0bffe17 	ldw	r2,-8(fp)
   9ef50:	10800017 	ldw	r2,0(r2)
   9ef54:	1880161e 	bne	r3,r2,9efb0 <alt_file_locked+0xb4>
   9ef58:	e13ffd17 	ldw	r4,-12(fp)
   9ef5c:	040002b4 	movhi	r16,10
   9ef60:	84055004 	addi	r16,r16,5440
   9ef64:	01400304 	movi	r5,12
   9ef68:	00886b00 	call	886b0 <__mulsi3>
   9ef6c:	1405883a 	add	r2,r2,r16
   9ef70:	10800204 	addi	r2,r2,8
   9ef74:	10800017 	ldw	r2,0(r2)
   9ef78:	1004403a 	cmpge	r2,r2,zero
   9ef7c:	10000c1e 	bne	r2,zero,9efb0 <alt_file_locked+0xb4>
   9ef80:	e13ffd17 	ldw	r4,-12(fp)
   9ef84:	01400304 	movi	r5,12
   9ef88:	00886b00 	call	886b0 <__mulsi3>
   9ef8c:	1007883a 	mov	r3,r2
   9ef90:	008002b4 	movhi	r2,10
   9ef94:	10855004 	addi	r2,r2,5440
   9ef98:	1887883a 	add	r3,r3,r2
   9ef9c:	e0bffe17 	ldw	r2,-8(fp)
   9efa0:	18800326 	beq	r3,r2,9efb0 <alt_file_locked+0xb4>
   9efa4:	00bffcc4 	movi	r2,-13
   9efa8:	e0bfff15 	stw	r2,-4(fp)
   9efac:	00000a06 	br	9efd8 <alt_file_locked+0xdc>
   9efb0:	e0bffd17 	ldw	r2,-12(fp)
   9efb4:	10800044 	addi	r2,r2,1
   9efb8:	e0bffd15 	stw	r2,-12(fp)
   9efbc:	008002b4 	movhi	r2,10
   9efc0:	1089e104 	addi	r2,r2,10116
   9efc4:	10800017 	ldw	r2,0(r2)
   9efc8:	1007883a 	mov	r3,r2
   9efcc:	e0bffd17 	ldw	r2,-12(fp)
   9efd0:	18bfd72e 	bgeu	r3,r2,9ef30 <alt_file_locked+0x34>
   9efd4:	e03fff15 	stw	zero,-4(fp)
   9efd8:	e0bfff17 	ldw	r2,-4(fp)
   9efdc:	e037883a 	mov	sp,fp
   9efe0:	dfc00217 	ldw	ra,8(sp)
   9efe4:	df000117 	ldw	fp,4(sp)
   9efe8:	dc000017 	ldw	r16,0(sp)
   9efec:	dec00304 	addi	sp,sp,12
   9eff0:	f800283a 	ret

0009eff4 <open>:
   9eff4:	defff404 	addi	sp,sp,-48
   9eff8:	dfc00b15 	stw	ra,44(sp)
   9effc:	df000a15 	stw	fp,40(sp)
   9f000:	df000a04 	addi	fp,sp,40
   9f004:	e13ffb15 	stw	r4,-20(fp)
   9f008:	e17ffc15 	stw	r5,-16(fp)
   9f00c:	e1bffd15 	stw	r6,-12(fp)
   9f010:	00bfffc4 	movi	r2,-1
   9f014:	e0bff815 	stw	r2,-32(fp)
   9f018:	00bffb44 	movi	r2,-19
   9f01c:	e0bff715 	stw	r2,-36(fp)
   9f020:	e03ff615 	stw	zero,-40(fp)
   9f024:	e13ffb17 	ldw	r4,-20(fp)
   9f028:	014002b4 	movhi	r5,10
   9f02c:	2949df04 	addi	r5,r5,10108
   9f030:	009f8900 	call	9f890 <alt_find_dev>
   9f034:	e0bffa15 	stw	r2,-24(fp)
   9f038:	e0bffa17 	ldw	r2,-24(fp)
   9f03c:	1004c03a 	cmpne	r2,r2,zero
   9f040:	1000051e 	bne	r2,zero,9f058 <open+0x64>
   9f044:	e13ffb17 	ldw	r4,-20(fp)
   9f048:	009f9240 	call	9f924 <alt_find_file>
   9f04c:	e0bffa15 	stw	r2,-24(fp)
   9f050:	00800044 	movi	r2,1
   9f054:	e0bff615 	stw	r2,-40(fp)
   9f058:	e0bffa17 	ldw	r2,-24(fp)
   9f05c:	1005003a 	cmpeq	r2,r2,zero
   9f060:	1000311e 	bne	r2,zero,9f128 <open+0x134>
   9f064:	e13ffa17 	ldw	r4,-24(fp)
   9f068:	009fa440 	call	9fa44 <alt_get_fd>
   9f06c:	e0bff815 	stw	r2,-32(fp)
   9f070:	e0bff817 	ldw	r2,-32(fp)
   9f074:	1004403a 	cmpge	r2,r2,zero
   9f078:	1000031e 	bne	r2,zero,9f088 <open+0x94>
   9f07c:	e0bff817 	ldw	r2,-32(fp)
   9f080:	e0bff715 	stw	r2,-36(fp)
   9f084:	00002a06 	br	9f130 <open+0x13c>
   9f088:	e13ff817 	ldw	r4,-32(fp)
   9f08c:	01400304 	movi	r5,12
   9f090:	00886b00 	call	886b0 <__mulsi3>
   9f094:	1007883a 	mov	r3,r2
   9f098:	008002b4 	movhi	r2,10
   9f09c:	10855004 	addi	r2,r2,5440
   9f0a0:	1885883a 	add	r2,r3,r2
   9f0a4:	e0bff915 	stw	r2,-28(fp)
   9f0a8:	e0fffc17 	ldw	r3,-16(fp)
   9f0ac:	00900034 	movhi	r2,16384
   9f0b0:	10bfffc4 	addi	r2,r2,-1
   9f0b4:	1886703a 	and	r3,r3,r2
   9f0b8:	e0bff917 	ldw	r2,-28(fp)
   9f0bc:	10c00215 	stw	r3,8(r2)
   9f0c0:	e0bff617 	ldw	r2,-40(fp)
   9f0c4:	1004c03a 	cmpne	r2,r2,zero
   9f0c8:	1000061e 	bne	r2,zero,9f0e4 <open+0xf0>
   9f0cc:	e13ff917 	ldw	r4,-28(fp)
   9f0d0:	009eefc0 	call	9eefc <alt_file_locked>
   9f0d4:	e0bff715 	stw	r2,-36(fp)
   9f0d8:	e0bff717 	ldw	r2,-36(fp)
   9f0dc:	1004803a 	cmplt	r2,r2,zero
   9f0e0:	1000131e 	bne	r2,zero,9f130 <open+0x13c>
   9f0e4:	e0bffa17 	ldw	r2,-24(fp)
   9f0e8:	10800317 	ldw	r2,12(r2)
   9f0ec:	1005003a 	cmpeq	r2,r2,zero
   9f0f0:	1000091e 	bne	r2,zero,9f118 <open+0x124>
   9f0f4:	e0bffa17 	ldw	r2,-24(fp)
   9f0f8:	10800317 	ldw	r2,12(r2)
   9f0fc:	e13ff917 	ldw	r4,-28(fp)
   9f100:	e17ffb17 	ldw	r5,-20(fp)
   9f104:	e1bffc17 	ldw	r6,-16(fp)
   9f108:	e1fffd17 	ldw	r7,-12(fp)
   9f10c:	103ee83a 	callr	r2
   9f110:	e0bfff15 	stw	r2,-4(fp)
   9f114:	00000106 	br	9f11c <open+0x128>
   9f118:	e03fff15 	stw	zero,-4(fp)
   9f11c:	e0bfff17 	ldw	r2,-4(fp)
   9f120:	e0bff715 	stw	r2,-36(fp)
   9f124:	00000206 	br	9f130 <open+0x13c>
   9f128:	00bffb44 	movi	r2,-19
   9f12c:	e0bff715 	stw	r2,-36(fp)
   9f130:	e0bff717 	ldw	r2,-36(fp)
   9f134:	1004403a 	cmpge	r2,r2,zero
   9f138:	1000091e 	bne	r2,zero,9f160 <open+0x16c>
   9f13c:	e13ff817 	ldw	r4,-32(fp)
   9f140:	0092f800 	call	92f80 <alt_release_fd>
   9f144:	009f1800 	call	9f180 <alt_get_errno>
   9f148:	e0fff717 	ldw	r3,-36(fp)
   9f14c:	00c7c83a 	sub	r3,zero,r3
   9f150:	10c00015 	stw	r3,0(r2)
   9f154:	00bfffc4 	movi	r2,-1
   9f158:	e0bffe15 	stw	r2,-8(fp)
   9f15c:	00000206 	br	9f168 <open+0x174>
   9f160:	e0bff817 	ldw	r2,-32(fp)
   9f164:	e0bffe15 	stw	r2,-8(fp)
   9f168:	e0bffe17 	ldw	r2,-8(fp)
   9f16c:	e037883a 	mov	sp,fp
   9f170:	dfc00117 	ldw	ra,4(sp)
   9f174:	df000017 	ldw	fp,0(sp)
   9f178:	dec00204 	addi	sp,sp,8
   9f17c:	f800283a 	ret

0009f180 <alt_get_errno>:
   9f180:	defffd04 	addi	sp,sp,-12
   9f184:	dfc00215 	stw	ra,8(sp)
   9f188:	df000115 	stw	fp,4(sp)
   9f18c:	df000104 	addi	fp,sp,4
   9f190:	008002b4 	movhi	r2,10
   9f194:	1089e204 	addi	r2,r2,10120
   9f198:	10800017 	ldw	r2,0(r2)
   9f19c:	1005003a 	cmpeq	r2,r2,zero
   9f1a0:	1000061e 	bne	r2,zero,9f1bc <alt_get_errno+0x3c>
   9f1a4:	008002b4 	movhi	r2,10
   9f1a8:	1089e204 	addi	r2,r2,10120
   9f1ac:	10800017 	ldw	r2,0(r2)
   9f1b0:	103ee83a 	callr	r2
   9f1b4:	e0bfff15 	stw	r2,-4(fp)
   9f1b8:	00000306 	br	9f1c8 <alt_get_errno+0x48>
   9f1bc:	008002b4 	movhi	r2,10
   9f1c0:	1090ed04 	addi	r2,r2,17332
   9f1c4:	e0bfff15 	stw	r2,-4(fp)
   9f1c8:	e0bfff17 	ldw	r2,-4(fp)
   9f1cc:	e037883a 	mov	sp,fp
   9f1d0:	dfc00117 	ldw	ra,4(sp)
   9f1d4:	df000017 	ldw	fp,0(sp)
   9f1d8:	dec00204 	addi	sp,sp,8
   9f1dc:	f800283a 	ret

0009f1e0 <alt_alarm_stop>:
   9f1e0:	defffa04 	addi	sp,sp,-24
   9f1e4:	df000515 	stw	fp,20(sp)
   9f1e8:	df000504 	addi	fp,sp,20
   9f1ec:	e13fff15 	stw	r4,-4(fp)
   9f1f0:	0005303a 	rdctl	r2,status
   9f1f4:	e0bffd15 	stw	r2,-12(fp)
   9f1f8:	e0fffd17 	ldw	r3,-12(fp)
   9f1fc:	00bfff84 	movi	r2,-2
   9f200:	1884703a 	and	r2,r3,r2
   9f204:	1001703a 	wrctl	status,r2
   9f208:	e0bffd17 	ldw	r2,-12(fp)
   9f20c:	e0bffe15 	stw	r2,-8(fp)
   9f210:	e0bfff17 	ldw	r2,-4(fp)
   9f214:	e0bffc15 	stw	r2,-16(fp)
   9f218:	e0bffc17 	ldw	r2,-16(fp)
   9f21c:	10c00017 	ldw	r3,0(r2)
   9f220:	e0bffc17 	ldw	r2,-16(fp)
   9f224:	10800117 	ldw	r2,4(r2)
   9f228:	18800115 	stw	r2,4(r3)
   9f22c:	e0bffc17 	ldw	r2,-16(fp)
   9f230:	10c00117 	ldw	r3,4(r2)
   9f234:	e0bffc17 	ldw	r2,-16(fp)
   9f238:	10800017 	ldw	r2,0(r2)
   9f23c:	18800015 	stw	r2,0(r3)
   9f240:	e0fffc17 	ldw	r3,-16(fp)
   9f244:	e0bffc17 	ldw	r2,-16(fp)
   9f248:	18800115 	stw	r2,4(r3)
   9f24c:	e0fffc17 	ldw	r3,-16(fp)
   9f250:	e0bffc17 	ldw	r2,-16(fp)
   9f254:	18800015 	stw	r2,0(r3)
   9f258:	e0bffe17 	ldw	r2,-8(fp)
   9f25c:	e0bffb15 	stw	r2,-20(fp)
   9f260:	e0bffb17 	ldw	r2,-20(fp)
   9f264:	1001703a 	wrctl	status,r2
   9f268:	e037883a 	mov	sp,fp
   9f26c:	df000017 	ldw	fp,0(sp)
   9f270:	dec00104 	addi	sp,sp,4
   9f274:	f800283a 	ret

0009f278 <alt_tick>:
   9f278:	defffb04 	addi	sp,sp,-20
   9f27c:	dfc00415 	stw	ra,16(sp)
   9f280:	df000315 	stw	fp,12(sp)
   9f284:	df000304 	addi	fp,sp,12
   9f288:	d0a02e17 	ldw	r2,-32584(gp)
   9f28c:	e0bffe15 	stw	r2,-8(fp)
   9f290:	d0a73617 	ldw	r2,-25384(gp)
   9f294:	10800044 	addi	r2,r2,1
   9f298:	d0a73615 	stw	r2,-25384(gp)
   9f29c:	00003106 	br	9f364 <alt_tick+0xec>
   9f2a0:	e0bffe17 	ldw	r2,-8(fp)
   9f2a4:	10800017 	ldw	r2,0(r2)
   9f2a8:	e0bfff15 	stw	r2,-4(fp)
   9f2ac:	e0bffe17 	ldw	r2,-8(fp)
   9f2b0:	10800403 	ldbu	r2,16(r2)
   9f2b4:	10803fcc 	andi	r2,r2,255
   9f2b8:	1005003a 	cmpeq	r2,r2,zero
   9f2bc:	1000051e 	bne	r2,zero,9f2d4 <alt_tick+0x5c>
   9f2c0:	d0a73617 	ldw	r2,-25384(gp)
   9f2c4:	1004c03a 	cmpne	r2,r2,zero
   9f2c8:	1000021e 	bne	r2,zero,9f2d4 <alt_tick+0x5c>
   9f2cc:	e0bffe17 	ldw	r2,-8(fp)
   9f2d0:	10000405 	stb	zero,16(r2)
   9f2d4:	e0bffe17 	ldw	r2,-8(fp)
   9f2d8:	10c00217 	ldw	r3,8(r2)
   9f2dc:	d0a73617 	ldw	r2,-25384(gp)
   9f2e0:	10c01e36 	bltu	r2,r3,9f35c <alt_tick+0xe4>
   9f2e4:	e0bffe17 	ldw	r2,-8(fp)
   9f2e8:	10800403 	ldbu	r2,16(r2)
   9f2ec:	10803fcc 	andi	r2,r2,255
   9f2f0:	1004c03a 	cmpne	r2,r2,zero
   9f2f4:	1000191e 	bne	r2,zero,9f35c <alt_tick+0xe4>
   9f2f8:	e0bffe17 	ldw	r2,-8(fp)
   9f2fc:	10c00317 	ldw	r3,12(r2)
   9f300:	e0bffe17 	ldw	r2,-8(fp)
   9f304:	11000517 	ldw	r4,20(r2)
   9f308:	183ee83a 	callr	r3
   9f30c:	e0bffd15 	stw	r2,-12(fp)
   9f310:	e0bffd17 	ldw	r2,-12(fp)
   9f314:	1004c03a 	cmpne	r2,r2,zero
   9f318:	1000031e 	bne	r2,zero,9f328 <alt_tick+0xb0>
   9f31c:	e13ffe17 	ldw	r4,-8(fp)
   9f320:	009f1e00 	call	9f1e0 <alt_alarm_stop>
   9f324:	00000d06 	br	9f35c <alt_tick+0xe4>
   9f328:	e0bffe17 	ldw	r2,-8(fp)
   9f32c:	10c00217 	ldw	r3,8(r2)
   9f330:	e0bffd17 	ldw	r2,-12(fp)
   9f334:	1887883a 	add	r3,r3,r2
   9f338:	e0bffe17 	ldw	r2,-8(fp)
   9f33c:	10c00215 	stw	r3,8(r2)
   9f340:	e0bffe17 	ldw	r2,-8(fp)
   9f344:	10c00217 	ldw	r3,8(r2)
   9f348:	d0a73617 	ldw	r2,-25384(gp)
   9f34c:	1880032e 	bgeu	r3,r2,9f35c <alt_tick+0xe4>
   9f350:	e0fffe17 	ldw	r3,-8(fp)
   9f354:	00800044 	movi	r2,1
   9f358:	18800405 	stb	r2,16(r3)
   9f35c:	e0bfff17 	ldw	r2,-4(fp)
   9f360:	e0bffe15 	stw	r2,-8(fp)
   9f364:	d0e02e04 	addi	r3,gp,-32584
   9f368:	e0bffe17 	ldw	r2,-8(fp)
   9f36c:	10ffcc1e 	bne	r2,r3,9f2a0 <alt_tick+0x28>
   9f370:	009429c0 	call	9429c <OSTimeTick>
   9f374:	e037883a 	mov	sp,fp
   9f378:	dfc00117 	ldw	ra,4(sp)
   9f37c:	df000017 	ldw	fp,0(sp)
   9f380:	dec00204 	addi	sp,sp,8
   9f384:	f800283a 	ret

0009f388 <altera_nios2_qsys_irq_init>:
   9f388:	deffff04 	addi	sp,sp,-4
   9f38c:	df000015 	stw	fp,0(sp)
   9f390:	d839883a 	mov	fp,sp
   9f394:	000170fa 	wrctl	ienable,zero
   9f398:	e037883a 	mov	sp,fp
   9f39c:	df000017 	ldw	fp,0(sp)
   9f3a0:	dec00104 	addi	sp,sp,4
   9f3a4:	f800283a 	ret

0009f3a8 <OSCtxSw>:
   9f3a8:	defff504 	addi	sp,sp,-44
   9f3ac:	d0e00117 	ldw	r3,-32764(gp)
   9f3b0:	d1273017 	ldw	r4,-25408(gp)
   9f3b4:	dfc00015 	stw	ra,0(sp)
   9f3b8:	df000115 	stw	fp,4(sp)
   9f3bc:	ddc00215 	stw	r23,8(sp)
   9f3c0:	dd800315 	stw	r22,12(sp)
   9f3c4:	dd400415 	stw	r21,16(sp)
   9f3c8:	dd000515 	stw	r20,20(sp)
   9f3cc:	dcc00615 	stw	r19,24(sp)
   9f3d0:	dc800715 	stw	r18,28(sp)
   9f3d4:	dc400815 	stw	r17,32(sp)
   9f3d8:	dc000915 	stw	r16,36(sp)
   9f3dc:	d8c00a15 	stw	r3,40(sp)
   9f3e0:	26c00015 	stw	sp,0(r4)
   9f3e4:	009f7c80 	call	9f7c8 <OSTaskSwHook>
   9f3e8:	d1272b17 	ldw	r4,-25428(gp)
   9f3ec:	d1672307 	ldb	r5,-25460(gp)
   9f3f0:	d1273015 	stw	r4,-25408(gp)
   9f3f4:	d1672345 	stb	r5,-25459(gp)
   9f3f8:	26c00017 	ldw	sp,0(r4)
   9f3fc:	d8c00a17 	ldw	r3,40(sp)
   9f400:	dfc00017 	ldw	ra,0(sp)
   9f404:	df000117 	ldw	fp,4(sp)
   9f408:	ddc00217 	ldw	r23,8(sp)
   9f40c:	dd800317 	ldw	r22,12(sp)
   9f410:	dd400417 	ldw	r21,16(sp)
   9f414:	dd000517 	ldw	r20,20(sp)
   9f418:	dcc00617 	ldw	r19,24(sp)
   9f41c:	dc800717 	ldw	r18,28(sp)
   9f420:	dc400817 	ldw	r17,32(sp)
   9f424:	dc000917 	ldw	r16,36(sp)
   9f428:	d0e00115 	stw	r3,-32764(gp)
   9f42c:	dec00b04 	addi	sp,sp,44
   9f430:	f800283a 	ret

0009f434 <OSStartHighRdy>:
   9f434:	0025303a 	rdctl	r18,status
   9f438:	047fff84 	movi	r17,-2
   9f43c:	9464703a 	and	r18,r18,r17
   9f440:	9001703a 	wrctl	status,r18
   9f444:	009f7c80 	call	9f7c8 <OSTaskSwHook>
   9f448:	04800044 	movi	r18,1
   9f44c:	d4a72145 	stb	r18,-25467(gp)
   9f450:	003fe506 	br	9f3e8 <OSCtxSw+0x40>

0009f454 <OSStartTsk>:
   9f454:	06c00004 	movi	sp,0
   9f458:	0005303a 	rdctl	r2,status
   9f45c:	10800054 	ori	r2,r2,1
   9f460:	1001703a 	wrctl	status,r2
   9f464:	d8800117 	ldw	r2,4(sp)
   9f468:	d9000017 	ldw	r4,0(sp)
   9f46c:	dec00204 	addi	sp,sp,8
   9f470:	103ee83a 	callr	r2
   9f474:	0001883a 	nop

0009f478 <OSTaskStkInit>:
   9f478:	defff704 	addi	sp,sp,-36
   9f47c:	dfc00815 	stw	ra,32(sp)
   9f480:	df000715 	stw	fp,28(sp)
   9f484:	df000704 	addi	fp,sp,28
   9f488:	e13ffc15 	stw	r4,-16(fp)
   9f48c:	e17ffd15 	stw	r5,-12(fp)
   9f490:	e1bffe15 	stw	r6,-8(fp)
   9f494:	e1ffff0d 	sth	r7,-4(fp)
   9f498:	e0bffe17 	ldw	r2,-8(fp)
   9f49c:	1007883a 	mov	r3,r2
   9f4a0:	00bfff04 	movi	r2,-4
   9f4a4:	1884703a 	and	r2,r3,r2
   9f4a8:	10bf0004 	addi	r2,r2,-1024
   9f4ac:	e0bff915 	stw	r2,-28(fp)
   9f4b0:	e0bff917 	ldw	r2,-28(fp)
   9f4b4:	10000015 	stw	zero,0(r2)
   9f4b8:	e0bff917 	ldw	r2,-28(fp)
   9f4bc:	10c0bb04 	addi	r3,r2,748
   9f4c0:	e0bff917 	ldw	r2,-28(fp)
   9f4c4:	10c00115 	stw	r3,4(r2)
   9f4c8:	e0bff917 	ldw	r2,-28(fp)
   9f4cc:	1080bb04 	addi	r2,r2,748
   9f4d0:	10c01704 	addi	r3,r2,92
   9f4d4:	e0bff917 	ldw	r2,-28(fp)
   9f4d8:	10c00215 	stw	r3,8(r2)
   9f4dc:	e0bff917 	ldw	r2,-28(fp)
   9f4e0:	1080bb04 	addi	r2,r2,748
   9f4e4:	10c02e04 	addi	r3,r2,184
   9f4e8:	e0bff917 	ldw	r2,-28(fp)
   9f4ec:	10c00315 	stw	r3,12(r2)
   9f4f0:	e0bff917 	ldw	r2,-28(fp)
   9f4f4:	10000415 	stw	zero,16(r2)
   9f4f8:	e0bff917 	ldw	r2,-28(fp)
   9f4fc:	10800504 	addi	r2,r2,20
   9f500:	1009883a 	mov	r4,r2
   9f504:	01800644 	movi	r6,25
   9f508:	000b883a 	mov	r5,zero
   9f50c:	008debc0 	call	8debc <memset>
   9f510:	e0bff917 	ldw	r2,-28(fp)
   9f514:	10000c15 	stw	zero,48(r2)
   9f518:	e0fff917 	ldw	r3,-28(fp)
   9f51c:	008002b4 	movhi	r2,10
   9f520:	10834004 	addi	r2,r2,3328
   9f524:	18800d15 	stw	r2,52(r3)
   9f528:	e0bff917 	ldw	r2,-28(fp)
   9f52c:	10000e15 	stw	zero,56(r2)
   9f530:	e0bff917 	ldw	r2,-28(fp)
   9f534:	10000f15 	stw	zero,60(r2)
   9f538:	e0bff917 	ldw	r2,-28(fp)
   9f53c:	10001015 	stw	zero,64(r2)
   9f540:	e0bff917 	ldw	r2,-28(fp)
   9f544:	10001115 	stw	zero,68(r2)
   9f548:	e0bff917 	ldw	r2,-28(fp)
   9f54c:	10001215 	stw	zero,72(r2)
   9f550:	e0bff917 	ldw	r2,-28(fp)
   9f554:	10001315 	stw	zero,76(r2)
   9f558:	e0bff917 	ldw	r2,-28(fp)
   9f55c:	10001415 	stw	zero,80(r2)
   9f560:	e0bff917 	ldw	r2,-28(fp)
   9f564:	10001515 	stw	zero,84(r2)
   9f568:	e0bff917 	ldw	r2,-28(fp)
   9f56c:	10001615 	stw	zero,88(r2)
   9f570:	e0bff917 	ldw	r2,-28(fp)
   9f574:	10001715 	stw	zero,92(r2)
   9f578:	e0bff917 	ldw	r2,-28(fp)
   9f57c:	10001805 	stb	zero,96(r2)
   9f580:	e0bff917 	ldw	r2,-28(fp)
   9f584:	10801f04 	addi	r2,r2,124
   9f588:	10000015 	stw	zero,0(r2)
   9f58c:	10000115 	stw	zero,4(r2)
   9f590:	10000215 	stw	zero,8(r2)
   9f594:	10000315 	stw	zero,12(r2)
   9f598:	10000415 	stw	zero,16(r2)
   9f59c:	10000515 	stw	zero,20(r2)
   9f5a0:	10000615 	stw	zero,24(r2)
   9f5a4:	10000715 	stw	zero,28(r2)
   9f5a8:	10000815 	stw	zero,32(r2)
   9f5ac:	e0bff917 	ldw	r2,-28(fp)
   9f5b0:	10002815 	stw	zero,160(r2)
   9f5b4:	e0fff917 	ldw	r3,-28(fp)
   9f5b8:	00800044 	movi	r2,1
   9f5bc:	18802915 	stw	r2,164(r3)
   9f5c0:	18002a15 	stw	zero,168(r3)
   9f5c4:	e0fff917 	ldw	r3,-28(fp)
   9f5c8:	008cc384 	movi	r2,13070
   9f5cc:	18802b0d 	sth	r2,172(r3)
   9f5d0:	e0fff917 	ldw	r3,-28(fp)
   9f5d4:	00aaf344 	movi	r2,-21555
   9f5d8:	18802b8d 	sth	r2,174(r3)
   9f5dc:	e0fff917 	ldw	r3,-28(fp)
   9f5e0:	00848d04 	movi	r2,4660
   9f5e4:	18802c0d 	sth	r2,176(r3)
   9f5e8:	e0fff917 	ldw	r3,-28(fp)
   9f5ec:	00b99b44 	movi	r2,-6547
   9f5f0:	18802c8d 	sth	r2,178(r3)
   9f5f4:	e0fff917 	ldw	r3,-28(fp)
   9f5f8:	00b7bb04 	movi	r2,-8468
   9f5fc:	18802d0d 	sth	r2,180(r3)
   9f600:	e0fff917 	ldw	r3,-28(fp)
   9f604:	00800144 	movi	r2,5
   9f608:	18802d8d 	sth	r2,182(r3)
   9f60c:	e0fff917 	ldw	r3,-28(fp)
   9f610:	008002c4 	movi	r2,11
   9f614:	18802e0d 	sth	r2,184(r3)
   9f618:	e0bff917 	ldw	r2,-28(fp)
   9f61c:	10002f15 	stw	zero,188(r2)
   9f620:	e0bff917 	ldw	r2,-28(fp)
   9f624:	10003015 	stw	zero,192(r2)
   9f628:	e0bff917 	ldw	r2,-28(fp)
   9f62c:	10003115 	stw	zero,196(r2)
   9f630:	e0bff917 	ldw	r2,-28(fp)
   9f634:	10003215 	stw	zero,200(r2)
   9f638:	e0bff917 	ldw	r2,-28(fp)
   9f63c:	10003315 	stw	zero,204(r2)
   9f640:	e0bff917 	ldw	r2,-28(fp)
   9f644:	10003415 	stw	zero,208(r2)
   9f648:	e0bff917 	ldw	r2,-28(fp)
   9f64c:	10003e15 	stw	zero,248(r2)
   9f650:	e0bff917 	ldw	r2,-28(fp)
   9f654:	10003f15 	stw	zero,252(r2)
   9f658:	e0bff917 	ldw	r2,-28(fp)
   9f65c:	10004015 	stw	zero,256(r2)
   9f660:	e0bff917 	ldw	r2,-28(fp)
   9f664:	10004115 	stw	zero,260(r2)
   9f668:	e0bff917 	ldw	r2,-28(fp)
   9f66c:	10004215 	stw	zero,264(r2)
   9f670:	e0bff917 	ldw	r2,-28(fp)
   9f674:	10004315 	stw	zero,268(r2)
   9f678:	e0bff917 	ldw	r2,-28(fp)
   9f67c:	10004415 	stw	zero,272(r2)
   9f680:	e0bff917 	ldw	r2,-28(fp)
   9f684:	10004515 	stw	zero,276(r2)
   9f688:	e0bff917 	ldw	r2,-28(fp)
   9f68c:	10004615 	stw	zero,280(r2)
   9f690:	e0bff917 	ldw	r2,-28(fp)
   9f694:	10004715 	stw	zero,284(r2)
   9f698:	e0bff917 	ldw	r2,-28(fp)
   9f69c:	10003505 	stb	zero,212(r2)
   9f6a0:	e0bff917 	ldw	r2,-28(fp)
   9f6a4:	10003705 	stb	zero,220(r2)
   9f6a8:	e0bff917 	ldw	r2,-28(fp)
   9f6ac:	10003d15 	stw	zero,244(r2)
   9f6b0:	e0bff917 	ldw	r2,-28(fp)
   9f6b4:	10005215 	stw	zero,328(r2)
   9f6b8:	e0bff917 	ldw	r2,-28(fp)
   9f6bc:	10005315 	stw	zero,332(r2)
   9f6c0:	e0bff917 	ldw	r2,-28(fp)
   9f6c4:	10005415 	stw	zero,336(r2)
   9f6c8:	e0bff917 	ldw	r2,-28(fp)
   9f6cc:	10005515 	stw	zero,340(r2)
   9f6d0:	e0bff917 	ldw	r2,-28(fp)
   9f6d4:	1000b515 	stw	zero,724(r2)
   9f6d8:	e0bff917 	ldw	r2,-28(fp)
   9f6dc:	10007515 	stw	zero,468(r2)
   9f6e0:	e0bff917 	ldw	r2,-28(fp)
   9f6e4:	1000b715 	stw	zero,732(r2)
   9f6e8:	e0bff917 	ldw	r2,-28(fp)
   9f6ec:	1000b815 	stw	zero,736(r2)
   9f6f0:	e0bff917 	ldw	r2,-28(fp)
   9f6f4:	1000b915 	stw	zero,740(r2)
   9f6f8:	e0bff917 	ldw	r2,-28(fp)
   9f6fc:	1000ba15 	stw	zero,744(r2)
   9f700:	e0bff917 	ldw	r2,-28(fp)
   9f704:	1080bb04 	addi	r2,r2,748
   9f708:	1009883a 	mov	r4,r2
   9f70c:	01804504 	movi	r6,276
   9f710:	000b883a 	mov	r5,zero
   9f714:	008debc0 	call	8debc <memset>
   9f718:	e0bff917 	ldw	r2,-28(fp)
   9f71c:	e0bffb15 	stw	r2,-20(fp)
   9f720:	e0bffb17 	ldw	r2,-20(fp)
   9f724:	10bff304 	addi	r2,r2,-52
   9f728:	e0bffa15 	stw	r2,-24(fp)
   9f72c:	e0bffa17 	ldw	r2,-24(fp)
   9f730:	10c00c04 	addi	r3,r2,48
   9f734:	e0bffc17 	ldw	r2,-16(fp)
   9f738:	18800015 	stw	r2,0(r3)
   9f73c:	e0bffa17 	ldw	r2,-24(fp)
   9f740:	10c00b04 	addi	r3,r2,44
   9f744:	e0bffd17 	ldw	r2,-12(fp)
   9f748:	18800015 	stw	r2,0(r3)
   9f74c:	e0bffa17 	ldw	r2,-24(fp)
   9f750:	10c00a04 	addi	r3,r2,40
   9f754:	e0bff917 	ldw	r2,-28(fp)
   9f758:	18800015 	stw	r2,0(r3)
   9f75c:	008002b4 	movhi	r2,10
   9f760:	10bd1504 	addi	r2,r2,-2988
   9f764:	10c00104 	addi	r3,r2,4
   9f768:	e0bffa17 	ldw	r2,-24(fp)
   9f76c:	10c00015 	stw	r3,0(r2)
   9f770:	e0bffa17 	ldw	r2,-24(fp)
   9f774:	e037883a 	mov	sp,fp
   9f778:	dfc00117 	ldw	ra,4(sp)
   9f77c:	df000017 	ldw	fp,0(sp)
   9f780:	dec00204 	addi	sp,sp,8
   9f784:	f800283a 	ret

0009f788 <OSTaskCreateHook>:
   9f788:	defffe04 	addi	sp,sp,-8
   9f78c:	df000115 	stw	fp,4(sp)
   9f790:	df000104 	addi	fp,sp,4
   9f794:	e13fff15 	stw	r4,-4(fp)
   9f798:	e037883a 	mov	sp,fp
   9f79c:	df000017 	ldw	fp,0(sp)
   9f7a0:	dec00104 	addi	sp,sp,4
   9f7a4:	f800283a 	ret

0009f7a8 <OSTaskDelHook>:
   9f7a8:	defffe04 	addi	sp,sp,-8
   9f7ac:	df000115 	stw	fp,4(sp)
   9f7b0:	df000104 	addi	fp,sp,4
   9f7b4:	e13fff15 	stw	r4,-4(fp)
   9f7b8:	e037883a 	mov	sp,fp
   9f7bc:	df000017 	ldw	fp,0(sp)
   9f7c0:	dec00104 	addi	sp,sp,4
   9f7c4:	f800283a 	ret

0009f7c8 <OSTaskSwHook>:
   9f7c8:	deffff04 	addi	sp,sp,-4
   9f7cc:	df000015 	stw	fp,0(sp)
   9f7d0:	d839883a 	mov	fp,sp
   9f7d4:	e037883a 	mov	sp,fp
   9f7d8:	df000017 	ldw	fp,0(sp)
   9f7dc:	dec00104 	addi	sp,sp,4
   9f7e0:	f800283a 	ret

0009f7e4 <OSTaskStatHook>:
   9f7e4:	deffff04 	addi	sp,sp,-4
   9f7e8:	df000015 	stw	fp,0(sp)
   9f7ec:	d839883a 	mov	fp,sp
   9f7f0:	e037883a 	mov	sp,fp
   9f7f4:	df000017 	ldw	fp,0(sp)
   9f7f8:	dec00104 	addi	sp,sp,4
   9f7fc:	f800283a 	ret

0009f800 <OSTimeTickHook>:
   9f800:	deffff04 	addi	sp,sp,-4
   9f804:	df000015 	stw	fp,0(sp)
   9f808:	d839883a 	mov	fp,sp
   9f80c:	e037883a 	mov	sp,fp
   9f810:	df000017 	ldw	fp,0(sp)
   9f814:	dec00104 	addi	sp,sp,4
   9f818:	f800283a 	ret

0009f81c <OSInitHookBegin>:
   9f81c:	deffff04 	addi	sp,sp,-4
   9f820:	df000015 	stw	fp,0(sp)
   9f824:	d839883a 	mov	fp,sp
   9f828:	e037883a 	mov	sp,fp
   9f82c:	df000017 	ldw	fp,0(sp)
   9f830:	dec00104 	addi	sp,sp,4
   9f834:	f800283a 	ret

0009f838 <OSInitHookEnd>:
   9f838:	deffff04 	addi	sp,sp,-4
   9f83c:	df000015 	stw	fp,0(sp)
   9f840:	d839883a 	mov	fp,sp
   9f844:	e037883a 	mov	sp,fp
   9f848:	df000017 	ldw	fp,0(sp)
   9f84c:	dec00104 	addi	sp,sp,4
   9f850:	f800283a 	ret

0009f854 <OSTaskIdleHook>:
   9f854:	deffff04 	addi	sp,sp,-4
   9f858:	df000015 	stw	fp,0(sp)
   9f85c:	d839883a 	mov	fp,sp
   9f860:	e037883a 	mov	sp,fp
   9f864:	df000017 	ldw	fp,0(sp)
   9f868:	dec00104 	addi	sp,sp,4
   9f86c:	f800283a 	ret

0009f870 <OSTCBInitHook>:
   9f870:	defffe04 	addi	sp,sp,-8
   9f874:	df000115 	stw	fp,4(sp)
   9f878:	df000104 	addi	fp,sp,4
   9f87c:	e13fff15 	stw	r4,-4(fp)
   9f880:	e037883a 	mov	sp,fp
   9f884:	df000017 	ldw	fp,0(sp)
   9f888:	dec00104 	addi	sp,sp,4
   9f88c:	f800283a 	ret

0009f890 <alt_find_dev>:
   9f890:	defff904 	addi	sp,sp,-28
   9f894:	dfc00615 	stw	ra,24(sp)
   9f898:	df000515 	stw	fp,20(sp)
   9f89c:	df000504 	addi	fp,sp,20
   9f8a0:	e13ffd15 	stw	r4,-12(fp)
   9f8a4:	e17ffe15 	stw	r5,-8(fp)
   9f8a8:	e0bffe17 	ldw	r2,-8(fp)
   9f8ac:	10800017 	ldw	r2,0(r2)
   9f8b0:	e0bffc15 	stw	r2,-16(fp)
   9f8b4:	e13ffd17 	ldw	r4,-12(fp)
   9f8b8:	0088a580 	call	88a58 <strlen>
   9f8bc:	10800044 	addi	r2,r2,1
   9f8c0:	e0bffb15 	stw	r2,-20(fp)
   9f8c4:	00000d06 	br	9f8fc <alt_find_dev+0x6c>
   9f8c8:	e0bffc17 	ldw	r2,-16(fp)
   9f8cc:	11000217 	ldw	r4,8(r2)
   9f8d0:	e1bffb17 	ldw	r6,-20(fp)
   9f8d4:	e17ffd17 	ldw	r5,-12(fp)
   9f8d8:	009fb940 	call	9fb94 <memcmp>
   9f8dc:	1004c03a 	cmpne	r2,r2,zero
   9f8e0:	1000031e 	bne	r2,zero,9f8f0 <alt_find_dev+0x60>
   9f8e4:	e0bffc17 	ldw	r2,-16(fp)
   9f8e8:	e0bfff15 	stw	r2,-4(fp)
   9f8ec:	00000706 	br	9f90c <alt_find_dev+0x7c>
   9f8f0:	e0bffc17 	ldw	r2,-16(fp)
   9f8f4:	10800017 	ldw	r2,0(r2)
   9f8f8:	e0bffc15 	stw	r2,-16(fp)
   9f8fc:	e0fffe17 	ldw	r3,-8(fp)
   9f900:	e0bffc17 	ldw	r2,-16(fp)
   9f904:	10fff01e 	bne	r2,r3,9f8c8 <alt_find_dev+0x38>
   9f908:	e03fff15 	stw	zero,-4(fp)
   9f90c:	e0bfff17 	ldw	r2,-4(fp)
   9f910:	e037883a 	mov	sp,fp
   9f914:	dfc00117 	ldw	ra,4(sp)
   9f918:	df000017 	ldw	fp,0(sp)
   9f91c:	dec00204 	addi	sp,sp,8
   9f920:	f800283a 	ret

0009f924 <alt_find_file>:
   9f924:	defffa04 	addi	sp,sp,-24
   9f928:	dfc00515 	stw	ra,20(sp)
   9f92c:	df000415 	stw	fp,16(sp)
   9f930:	df000404 	addi	fp,sp,16
   9f934:	e13ffe15 	stw	r4,-8(fp)
   9f938:	008002b4 	movhi	r2,10
   9f93c:	1089dd04 	addi	r2,r2,10100
   9f940:	10800017 	ldw	r2,0(r2)
   9f944:	e0bffd15 	stw	r2,-12(fp)
   9f948:	00003306 	br	9fa18 <alt_find_file+0xf4>
   9f94c:	e0bffd17 	ldw	r2,-12(fp)
   9f950:	11000217 	ldw	r4,8(r2)
   9f954:	0088a580 	call	88a58 <strlen>
   9f958:	e0bffc15 	stw	r2,-16(fp)
   9f95c:	e0bffd17 	ldw	r2,-12(fp)
   9f960:	10c00217 	ldw	r3,8(r2)
   9f964:	e0bffc17 	ldw	r2,-16(fp)
   9f968:	1885883a 	add	r2,r3,r2
   9f96c:	10bfffc4 	addi	r2,r2,-1
   9f970:	10800003 	ldbu	r2,0(r2)
   9f974:	10803fcc 	andi	r2,r2,255
   9f978:	1080201c 	xori	r2,r2,128
   9f97c:	10bfe004 	addi	r2,r2,-128
   9f980:	10800bd8 	cmpnei	r2,r2,47
   9f984:	1000031e 	bne	r2,zero,9f994 <alt_find_file+0x70>
   9f988:	e0bffc17 	ldw	r2,-16(fp)
   9f98c:	10bfffc4 	addi	r2,r2,-1
   9f990:	e0bffc15 	stw	r2,-16(fp)
   9f994:	e0bffc17 	ldw	r2,-16(fp)
   9f998:	1007883a 	mov	r3,r2
   9f99c:	e0bffe17 	ldw	r2,-8(fp)
   9f9a0:	1885883a 	add	r2,r3,r2
   9f9a4:	10800003 	ldbu	r2,0(r2)
   9f9a8:	10803fcc 	andi	r2,r2,255
   9f9ac:	1080201c 	xori	r2,r2,128
   9f9b0:	10bfe004 	addi	r2,r2,-128
   9f9b4:	10800be0 	cmpeqi	r2,r2,47
   9f9b8:	10000a1e 	bne	r2,zero,9f9e4 <alt_find_file+0xc0>
   9f9bc:	e0bffc17 	ldw	r2,-16(fp)
   9f9c0:	1007883a 	mov	r3,r2
   9f9c4:	e0bffe17 	ldw	r2,-8(fp)
   9f9c8:	1885883a 	add	r2,r3,r2
   9f9cc:	10800003 	ldbu	r2,0(r2)
   9f9d0:	10803fcc 	andi	r2,r2,255
   9f9d4:	1080201c 	xori	r2,r2,128
   9f9d8:	10bfe004 	addi	r2,r2,-128
   9f9dc:	1004c03a 	cmpne	r2,r2,zero
   9f9e0:	10000a1e 	bne	r2,zero,9fa0c <alt_find_file+0xe8>
   9f9e4:	e0bffd17 	ldw	r2,-12(fp)
   9f9e8:	11000217 	ldw	r4,8(r2)
   9f9ec:	e1bffc17 	ldw	r6,-16(fp)
   9f9f0:	e17ffe17 	ldw	r5,-8(fp)
   9f9f4:	009fb940 	call	9fb94 <memcmp>
   9f9f8:	1004c03a 	cmpne	r2,r2,zero
   9f9fc:	1000031e 	bne	r2,zero,9fa0c <alt_find_file+0xe8>
   9fa00:	e0bffd17 	ldw	r2,-12(fp)
   9fa04:	e0bfff15 	stw	r2,-4(fp)
   9fa08:	00000806 	br	9fa2c <alt_find_file+0x108>
   9fa0c:	e0bffd17 	ldw	r2,-12(fp)
   9fa10:	10800017 	ldw	r2,0(r2)
   9fa14:	e0bffd15 	stw	r2,-12(fp)
   9fa18:	00c002b4 	movhi	r3,10
   9fa1c:	18c9dd04 	addi	r3,r3,10100
   9fa20:	e0bffd17 	ldw	r2,-12(fp)
   9fa24:	10ffc91e 	bne	r2,r3,9f94c <alt_find_file+0x28>
   9fa28:	e03fff15 	stw	zero,-4(fp)
   9fa2c:	e0bfff17 	ldw	r2,-4(fp)
   9fa30:	e037883a 	mov	sp,fp
   9fa34:	dfc00117 	ldw	ra,4(sp)
   9fa38:	df000017 	ldw	fp,0(sp)
   9fa3c:	dec00204 	addi	sp,sp,8
   9fa40:	f800283a 	ret

0009fa44 <alt_get_fd>:
   9fa44:	defff704 	addi	sp,sp,-36
   9fa48:	dfc00815 	stw	ra,32(sp)
   9fa4c:	df000715 	stw	fp,28(sp)
   9fa50:	dc000615 	stw	r16,24(sp)
   9fa54:	df000604 	addi	fp,sp,24
   9fa58:	e13fff15 	stw	r4,-4(fp)
   9fa5c:	00bffa04 	movi	r2,-24
   9fa60:	e0bffc15 	stw	r2,-16(fp)
   9fa64:	008002b4 	movhi	r2,10
   9fa68:	1090ee04 	addi	r2,r2,17336
   9fa6c:	10800017 	ldw	r2,0(r2)
   9fa70:	e0bffa15 	stw	r2,-24(fp)
   9fa74:	e03ffb0d 	sth	zero,-20(fp)
   9fa78:	e17ffb0b 	ldhu	r5,-20(fp)
   9fa7c:	e1bffe04 	addi	r6,fp,-8
   9fa80:	e13ffa17 	ldw	r4,-24(fp)
   9fa84:	009b0f00 	call	9b0f0 <OSSemPend>
   9fa88:	e03ffd15 	stw	zero,-12(fp)
   9fa8c:	00002006 	br	9fb10 <alt_get_fd+0xcc>
   9fa90:	e13ffd17 	ldw	r4,-12(fp)
   9fa94:	040002b4 	movhi	r16,10
   9fa98:	84055004 	addi	r16,r16,5440
   9fa9c:	01400304 	movi	r5,12
   9faa0:	00886b00 	call	886b0 <__mulsi3>
   9faa4:	1405883a 	add	r2,r2,r16
   9faa8:	10800017 	ldw	r2,0(r2)
   9faac:	1004c03a 	cmpne	r2,r2,zero
   9fab0:	1000141e 	bne	r2,zero,9fb04 <alt_get_fd+0xc0>
   9fab4:	e13ffd17 	ldw	r4,-12(fp)
   9fab8:	040002b4 	movhi	r16,10
   9fabc:	84055004 	addi	r16,r16,5440
   9fac0:	01400304 	movi	r5,12
   9fac4:	00886b00 	call	886b0 <__mulsi3>
   9fac8:	1407883a 	add	r3,r2,r16
   9facc:	e0bfff17 	ldw	r2,-4(fp)
   9fad0:	18800015 	stw	r2,0(r3)
   9fad4:	008002b4 	movhi	r2,10
   9fad8:	1089e104 	addi	r2,r2,10116
   9fadc:	10c00017 	ldw	r3,0(r2)
   9fae0:	e0bffd17 	ldw	r2,-12(fp)
   9fae4:	1880040e 	bge	r3,r2,9faf8 <alt_get_fd+0xb4>
   9fae8:	00c002b4 	movhi	r3,10
   9faec:	18c9e104 	addi	r3,r3,10116
   9faf0:	e0bffd17 	ldw	r2,-12(fp)
   9faf4:	18800015 	stw	r2,0(r3)
   9faf8:	e0bffd17 	ldw	r2,-12(fp)
   9fafc:	e0bffc15 	stw	r2,-16(fp)
   9fb00:	00000606 	br	9fb1c <alt_get_fd+0xd8>
   9fb04:	e0bffd17 	ldw	r2,-12(fp)
   9fb08:	10800044 	addi	r2,r2,1
   9fb0c:	e0bffd15 	stw	r2,-12(fp)
   9fb10:	e0bffd17 	ldw	r2,-12(fp)
   9fb14:	10800810 	cmplti	r2,r2,32
   9fb18:	103fdd1e 	bne	r2,zero,9fa90 <alt_get_fd+0x4c>
   9fb1c:	008002b4 	movhi	r2,10
   9fb20:	1090ee04 	addi	r2,r2,17336
   9fb24:	11000017 	ldw	r4,0(r2)
   9fb28:	009b4e80 	call	9b4e8 <OSSemPost>
   9fb2c:	e0bffc17 	ldw	r2,-16(fp)
   9fb30:	e037883a 	mov	sp,fp
   9fb34:	dfc00217 	ldw	ra,8(sp)
   9fb38:	df000117 	ldw	fp,4(sp)
   9fb3c:	dc000017 	ldw	r16,0(sp)
   9fb40:	dec00304 	addi	sp,sp,12
   9fb44:	f800283a 	ret

0009fb48 <atexit>:
   9fb48:	200b883a 	mov	r5,r4
   9fb4c:	000d883a 	mov	r6,zero
   9fb50:	0009883a 	mov	r4,zero
   9fb54:	000f883a 	mov	r7,zero
   9fb58:	009fc081 	jmpi	9fc08 <__register_exitproc>

0009fb5c <exit>:
   9fb5c:	defffe04 	addi	sp,sp,-8
   9fb60:	000b883a 	mov	r5,zero
   9fb64:	dc000015 	stw	r16,0(sp)
   9fb68:	dfc00115 	stw	ra,4(sp)
   9fb6c:	2021883a 	mov	r16,r4
   9fb70:	009fd400 	call	9fd40 <__call_exitprocs>
   9fb74:	008002b4 	movhi	r2,10
   9fb78:	1089d804 	addi	r2,r2,10080
   9fb7c:	11000017 	ldw	r4,0(r2)
   9fb80:	20800f17 	ldw	r2,60(r4)
   9fb84:	10000126 	beq	r2,zero,9fb8c <exit+0x30>
   9fb88:	103ee83a 	callr	r2
   9fb8c:	8009883a 	mov	r4,r16
   9fb90:	009ff300 	call	9ff30 <_exit>

0009fb94 <memcmp>:
   9fb94:	00c000c4 	movi	r3,3
   9fb98:	1980032e 	bgeu	r3,r6,9fba8 <memcmp+0x14>
   9fb9c:	2144b03a 	or	r2,r4,r5
   9fba0:	10c4703a 	and	r2,r2,r3
   9fba4:	10000f26 	beq	r2,zero,9fbe4 <memcmp+0x50>
   9fba8:	31ffffc4 	addi	r7,r6,-1
   9fbac:	3000061e 	bne	r6,zero,9fbc8 <memcmp+0x34>
   9fbb0:	00000a06 	br	9fbdc <memcmp+0x48>
   9fbb4:	39ffffc4 	addi	r7,r7,-1
   9fbb8:	00bfffc4 	movi	r2,-1
   9fbbc:	21000044 	addi	r4,r4,1
   9fbc0:	29400044 	addi	r5,r5,1
   9fbc4:	38800526 	beq	r7,r2,9fbdc <memcmp+0x48>
   9fbc8:	20c00003 	ldbu	r3,0(r4)
   9fbcc:	28800003 	ldbu	r2,0(r5)
   9fbd0:	18bff826 	beq	r3,r2,9fbb4 <memcmp+0x20>
   9fbd4:	1885c83a 	sub	r2,r3,r2
   9fbd8:	f800283a 	ret
   9fbdc:	0005883a 	mov	r2,zero
   9fbe0:	f800283a 	ret
   9fbe4:	180f883a 	mov	r7,r3
   9fbe8:	20c00017 	ldw	r3,0(r4)
   9fbec:	28800017 	ldw	r2,0(r5)
   9fbf0:	18bfed1e 	bne	r3,r2,9fba8 <memcmp+0x14>
   9fbf4:	31bfff04 	addi	r6,r6,-4
   9fbf8:	21000104 	addi	r4,r4,4
   9fbfc:	29400104 	addi	r5,r5,4
   9fc00:	39bff936 	bltu	r7,r6,9fbe8 <memcmp+0x54>
   9fc04:	003fe806 	br	9fba8 <memcmp+0x14>

0009fc08 <__register_exitproc>:
   9fc08:	defffa04 	addi	sp,sp,-24
   9fc0c:	008002b4 	movhi	r2,10
   9fc10:	1089d804 	addi	r2,r2,10080
   9fc14:	dc000015 	stw	r16,0(sp)
   9fc18:	14000017 	ldw	r16,0(r2)
   9fc1c:	dd000415 	stw	r20,16(sp)
   9fc20:	2829883a 	mov	r20,r5
   9fc24:	81405217 	ldw	r5,328(r16)
   9fc28:	dcc00315 	stw	r19,12(sp)
   9fc2c:	dc800215 	stw	r18,8(sp)
   9fc30:	dc400115 	stw	r17,4(sp)
   9fc34:	dfc00515 	stw	ra,20(sp)
   9fc38:	2023883a 	mov	r17,r4
   9fc3c:	3027883a 	mov	r19,r6
   9fc40:	3825883a 	mov	r18,r7
   9fc44:	28002526 	beq	r5,zero,9fcdc <__register_exitproc+0xd4>
   9fc48:	29000117 	ldw	r4,4(r5)
   9fc4c:	008007c4 	movi	r2,31
   9fc50:	11002716 	blt	r2,r4,9fcf0 <__register_exitproc+0xe8>
   9fc54:	8800101e 	bne	r17,zero,9fc98 <__register_exitproc+0x90>
   9fc58:	2105883a 	add	r2,r4,r4
   9fc5c:	1085883a 	add	r2,r2,r2
   9fc60:	20c00044 	addi	r3,r4,1
   9fc64:	1145883a 	add	r2,r2,r5
   9fc68:	0009883a 	mov	r4,zero
   9fc6c:	15000215 	stw	r20,8(r2)
   9fc70:	28c00115 	stw	r3,4(r5)
   9fc74:	2005883a 	mov	r2,r4
   9fc78:	dfc00517 	ldw	ra,20(sp)
   9fc7c:	dd000417 	ldw	r20,16(sp)
   9fc80:	dcc00317 	ldw	r19,12(sp)
   9fc84:	dc800217 	ldw	r18,8(sp)
   9fc88:	dc400117 	ldw	r17,4(sp)
   9fc8c:	dc000017 	ldw	r16,0(sp)
   9fc90:	dec00604 	addi	sp,sp,24
   9fc94:	f800283a 	ret
   9fc98:	29802204 	addi	r6,r5,136
   9fc9c:	00800044 	movi	r2,1
   9fca0:	110e983a 	sll	r7,r2,r4
   9fca4:	30c04017 	ldw	r3,256(r6)
   9fca8:	2105883a 	add	r2,r4,r4
   9fcac:	1085883a 	add	r2,r2,r2
   9fcb0:	1185883a 	add	r2,r2,r6
   9fcb4:	19c6b03a 	or	r3,r3,r7
   9fcb8:	14802015 	stw	r18,128(r2)
   9fcbc:	14c00015 	stw	r19,0(r2)
   9fcc0:	00800084 	movi	r2,2
   9fcc4:	30c04015 	stw	r3,256(r6)
   9fcc8:	88bfe31e 	bne	r17,r2,9fc58 <__register_exitproc+0x50>
   9fccc:	30804117 	ldw	r2,260(r6)
   9fcd0:	11c4b03a 	or	r2,r2,r7
   9fcd4:	30804115 	stw	r2,260(r6)
   9fcd8:	003fdf06 	br	9fc58 <__register_exitproc+0x50>
   9fcdc:	008002f4 	movhi	r2,11
   9fce0:	109e2504 	addi	r2,r2,30868
   9fce4:	100b883a 	mov	r5,r2
   9fce8:	80805215 	stw	r2,328(r16)
   9fcec:	003fd606 	br	9fc48 <__register_exitproc+0x40>
   9fcf0:	00800034 	movhi	r2,0
   9fcf4:	10800004 	addi	r2,r2,0
   9fcf8:	1000021e 	bne	r2,zero,9fd04 <__register_exitproc+0xfc>
   9fcfc:	013fffc4 	movi	r4,-1
   9fd00:	003fdc06 	br	9fc74 <__register_exitproc+0x6c>
   9fd04:	01006404 	movi	r4,400
   9fd08:	103ee83a 	callr	r2
   9fd0c:	1007883a 	mov	r3,r2
   9fd10:	103ffa26 	beq	r2,zero,9fcfc <__register_exitproc+0xf4>
   9fd14:	80805217 	ldw	r2,328(r16)
   9fd18:	180b883a 	mov	r5,r3
   9fd1c:	18000115 	stw	zero,4(r3)
   9fd20:	18800015 	stw	r2,0(r3)
   9fd24:	80c05215 	stw	r3,328(r16)
   9fd28:	18006215 	stw	zero,392(r3)
   9fd2c:	18006315 	stw	zero,396(r3)
   9fd30:	0009883a 	mov	r4,zero
   9fd34:	883fc826 	beq	r17,zero,9fc58 <__register_exitproc+0x50>
   9fd38:	003fd706 	br	9fc98 <__register_exitproc+0x90>

0009fd3c <register_fini>:
   9fd3c:	f800283a 	ret

0009fd40 <__call_exitprocs>:
   9fd40:	008002b4 	movhi	r2,10
   9fd44:	1089d804 	addi	r2,r2,10080
   9fd48:	10800017 	ldw	r2,0(r2)
   9fd4c:	defff304 	addi	sp,sp,-52
   9fd50:	df000b15 	stw	fp,44(sp)
   9fd54:	d8800115 	stw	r2,4(sp)
   9fd58:	00800034 	movhi	r2,0
   9fd5c:	10800004 	addi	r2,r2,0
   9fd60:	1005003a 	cmpeq	r2,r2,zero
   9fd64:	d8800215 	stw	r2,8(sp)
   9fd68:	d8800117 	ldw	r2,4(sp)
   9fd6c:	dd400815 	stw	r21,32(sp)
   9fd70:	dd000715 	stw	r20,28(sp)
   9fd74:	10805204 	addi	r2,r2,328
   9fd78:	dfc00c15 	stw	ra,48(sp)
   9fd7c:	ddc00a15 	stw	r23,40(sp)
   9fd80:	dd800915 	stw	r22,36(sp)
   9fd84:	dcc00615 	stw	r19,24(sp)
   9fd88:	dc800515 	stw	r18,20(sp)
   9fd8c:	dc400415 	stw	r17,16(sp)
   9fd90:	dc000315 	stw	r16,12(sp)
   9fd94:	282b883a 	mov	r21,r5
   9fd98:	2039883a 	mov	fp,r4
   9fd9c:	d8800015 	stw	r2,0(sp)
   9fda0:	2829003a 	cmpeq	r20,r5,zero
   9fda4:	d8800117 	ldw	r2,4(sp)
   9fda8:	14405217 	ldw	r17,328(r2)
   9fdac:	88001026 	beq	r17,zero,9fdf0 <__call_exitprocs+0xb0>
   9fdb0:	ddc00017 	ldw	r23,0(sp)
   9fdb4:	88800117 	ldw	r2,4(r17)
   9fdb8:	8c802204 	addi	r18,r17,136
   9fdbc:	143fffc4 	addi	r16,r2,-1
   9fdc0:	80000916 	blt	r16,zero,9fde8 <__call_exitprocs+0xa8>
   9fdc4:	05bfffc4 	movi	r22,-1
   9fdc8:	a000151e 	bne	r20,zero,9fe20 <__call_exitprocs+0xe0>
   9fdcc:	8409883a 	add	r4,r16,r16
   9fdd0:	2105883a 	add	r2,r4,r4
   9fdd4:	1485883a 	add	r2,r2,r18
   9fdd8:	10c02017 	ldw	r3,128(r2)
   9fddc:	a8c01126 	beq	r21,r3,9fe24 <__call_exitprocs+0xe4>
   9fde0:	843fffc4 	addi	r16,r16,-1
   9fde4:	85bff81e 	bne	r16,r22,9fdc8 <__call_exitprocs+0x88>
   9fde8:	d8800217 	ldw	r2,8(sp)
   9fdec:	10003126 	beq	r2,zero,9feb4 <__call_exitprocs+0x174>
   9fdf0:	dfc00c17 	ldw	ra,48(sp)
   9fdf4:	df000b17 	ldw	fp,44(sp)
   9fdf8:	ddc00a17 	ldw	r23,40(sp)
   9fdfc:	dd800917 	ldw	r22,36(sp)
   9fe00:	dd400817 	ldw	r21,32(sp)
   9fe04:	dd000717 	ldw	r20,28(sp)
   9fe08:	dcc00617 	ldw	r19,24(sp)
   9fe0c:	dc800517 	ldw	r18,20(sp)
   9fe10:	dc400417 	ldw	r17,16(sp)
   9fe14:	dc000317 	ldw	r16,12(sp)
   9fe18:	dec00d04 	addi	sp,sp,52
   9fe1c:	f800283a 	ret
   9fe20:	8409883a 	add	r4,r16,r16
   9fe24:	88c00117 	ldw	r3,4(r17)
   9fe28:	2105883a 	add	r2,r4,r4
   9fe2c:	1445883a 	add	r2,r2,r17
   9fe30:	18ffffc4 	addi	r3,r3,-1
   9fe34:	11800217 	ldw	r6,8(r2)
   9fe38:	1c001526 	beq	r3,r16,9fe90 <__call_exitprocs+0x150>
   9fe3c:	10000215 	stw	zero,8(r2)
   9fe40:	303fe726 	beq	r6,zero,9fde0 <__call_exitprocs+0xa0>
   9fe44:	00c00044 	movi	r3,1
   9fe48:	1c06983a 	sll	r3,r3,r16
   9fe4c:	90804017 	ldw	r2,256(r18)
   9fe50:	8cc00117 	ldw	r19,4(r17)
   9fe54:	1884703a 	and	r2,r3,r2
   9fe58:	10001426 	beq	r2,zero,9feac <__call_exitprocs+0x16c>
   9fe5c:	90804117 	ldw	r2,260(r18)
   9fe60:	1884703a 	and	r2,r3,r2
   9fe64:	10000c1e 	bne	r2,zero,9fe98 <__call_exitprocs+0x158>
   9fe68:	2105883a 	add	r2,r4,r4
   9fe6c:	1485883a 	add	r2,r2,r18
   9fe70:	11400017 	ldw	r5,0(r2)
   9fe74:	e009883a 	mov	r4,fp
   9fe78:	303ee83a 	callr	r6
   9fe7c:	88800117 	ldw	r2,4(r17)
   9fe80:	98bfc81e 	bne	r19,r2,9fda4 <__call_exitprocs+0x64>
   9fe84:	b8800017 	ldw	r2,0(r23)
   9fe88:	147fd526 	beq	r2,r17,9fde0 <__call_exitprocs+0xa0>
   9fe8c:	003fc506 	br	9fda4 <__call_exitprocs+0x64>
   9fe90:	8c000115 	stw	r16,4(r17)
   9fe94:	003fea06 	br	9fe40 <__call_exitprocs+0x100>
   9fe98:	2105883a 	add	r2,r4,r4
   9fe9c:	1485883a 	add	r2,r2,r18
   9fea0:	11000017 	ldw	r4,0(r2)
   9fea4:	303ee83a 	callr	r6
   9fea8:	003ff406 	br	9fe7c <__call_exitprocs+0x13c>
   9feac:	303ee83a 	callr	r6
   9feb0:	003ff206 	br	9fe7c <__call_exitprocs+0x13c>
   9feb4:	88800117 	ldw	r2,4(r17)
   9feb8:	1000081e 	bne	r2,zero,9fedc <__call_exitprocs+0x19c>
   9febc:	89000017 	ldw	r4,0(r17)
   9fec0:	20000726 	beq	r4,zero,9fee0 <__call_exitprocs+0x1a0>
   9fec4:	b9000015 	stw	r4,0(r23)
   9fec8:	8809883a 	mov	r4,r17
   9fecc:	00000000 	call	0 <OSTCBStkPtr_OFFSET>
   9fed0:	bc400017 	ldw	r17,0(r23)
   9fed4:	883fb71e 	bne	r17,zero,9fdb4 <__call_exitprocs+0x74>
   9fed8:	003fc506 	br	9fdf0 <__call_exitprocs+0xb0>
   9fedc:	89000017 	ldw	r4,0(r17)
   9fee0:	882f883a 	mov	r23,r17
   9fee4:	2023883a 	mov	r17,r4
   9fee8:	883fb21e 	bne	r17,zero,9fdb4 <__call_exitprocs+0x74>
   9feec:	003fc006 	br	9fdf0 <__call_exitprocs+0xb0>

0009fef0 <alt_sim_halt>:
   9fef0:	defffd04 	addi	sp,sp,-12
   9fef4:	df000215 	stw	fp,8(sp)
   9fef8:	df000204 	addi	fp,sp,8
   9fefc:	e13fff15 	stw	r4,-4(fp)
   9ff00:	e0bfff17 	ldw	r2,-4(fp)
   9ff04:	e0bffe15 	stw	r2,-8(fp)
   9ff08:	e0bffe17 	ldw	r2,-8(fp)
   9ff0c:	1005003a 	cmpeq	r2,r2,zero
   9ff10:	1000021e 	bne	r2,zero,9ff1c <alt_sim_halt+0x2c>
   9ff14:	002af070 	cmpltui	zero,zero,43969
   9ff18:	00000106 	br	9ff20 <alt_sim_halt+0x30>
   9ff1c:	002af0b0 	cmpltui	zero,zero,43970
   9ff20:	e037883a 	mov	sp,fp
   9ff24:	df000017 	ldw	fp,0(sp)
   9ff28:	dec00104 	addi	sp,sp,4
   9ff2c:	f800283a 	ret

0009ff30 <_exit>:
   9ff30:	defffd04 	addi	sp,sp,-12
   9ff34:	dfc00215 	stw	ra,8(sp)
   9ff38:	df000115 	stw	fp,4(sp)
   9ff3c:	df000104 	addi	fp,sp,4
   9ff40:	e13fff15 	stw	r4,-4(fp)
   9ff44:	008002b4 	movhi	r2,10
   9ff48:	1090f744 	addi	r2,r2,17373
   9ff4c:	10000005 	stb	zero,0(r2)
   9ff50:	e13fff17 	ldw	r4,-4(fp)
   9ff54:	009fef00 	call	9fef0 <alt_sim_halt>
   9ff58:	003fff06 	br	9ff58 <_exit+0x28>
   9ff5c:	00000010 	cmplti	zero,zero,0
   9ff60:	00000000 	call	0 <OSTCBStkPtr_OFFSET>
   9ff64:	00527a01 	jmpi	527a0 <OSCtxSw_SWITCH_PC+0x52760>
   9ff68:	011f7c01 	jmpi	11f7c0 <__alt_data_end+0x1f7c0>
   9ff6c:	001b0c0b 	ldhu	zero,27696(zero)
   9ff70:	00000028 	cmpgeui	zero,zero,0
   9ff74:	00000018 	cmpnei	zero,zero,0
   9ff78:	0009009c 	xori	zero,zero,9218
   9ff7c:	0000066c 	andhi	zero,zero,25
   9ff80:	3c0e4400 	call	3c0e440 <__alt_data_end+0x3b0e440>
   9ff84:	910a9074 	orhi	r4,r18,10817
   9ff88:	94089209 	0x94089209
   9ff8c:	97049606 	br	a11e8 <__malloc_av_+0xd8>
   9ff90:	93019f03 	ldbu	r12,1660(r18)
   9ff94:	9c059507 	ldb	r16,5716(r19)
   9ff98:	00000002 	0x2
   9ff9c:	00000028 	cmpgeui	zero,zero,0
   9ffa0:	00000044 	movi	zero,1
   9ffa4:	00090708 	cmpgei	zero,zero,9244
   9ffa8:	00000660 	cmpeqi	zero,zero,25
   9ffac:	400e4400 	call	400e440 <__alt_data_end+0x3f0e440>
   9ffb0:	92099170 	cmpltui	r8,r18,9797
   9ffb4:	96069408 	cmpgei	et,r18,6736
   9ffb8:	9c039704 	addi	r16,r19,3676
   9ffbc:	90019f02 	0x90019f02
   9ffc0:	9507930a 	0x9507930a
   9ffc4:	00000005 	stb	zero,0(zero)
   9ffc8:	0009fd3c 	xorhi	zero,zero,10228
